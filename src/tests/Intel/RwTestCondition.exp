// fn0C00_0000
// Return size: 2
// Mem0:Mem
// fp:fp
// sp:sp
// ecx:ecx
// SZO:SZO
// C:C
// ax:ax
// bx:bx
// SCZO:SCZO
// cl:cl
// Z:Z
// ds:ds
// SO:SO
// Top:Top
// return address size: 2
define fn0C00_0000
fn0C00_0000_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l0C00_0000
l0C00_0000:
	ecx = ecx ^ ecx
	SZO = cond(ecx)
	C = false
	ax = ax - bx
	SCZO = cond(ax)
	cl = CONVERT(Test(EQ,Z), bool, int8)
	Mem0[ds:0x300<16>:word32] = ecx
	SCZO = cond(ax - 0x30<16>)
	branch Test(LT,SO) l0C00_0016
	// succ:  l0C00_0012 l0C00_0016
l0C00_0012:
	Mem0[ds:0x302<16>:word16] = ax
	// succ:  l0C00_0016
l0C00_0016:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
