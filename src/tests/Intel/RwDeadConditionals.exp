// fn0C00_0000
// Return size: 2
// Mem0:Mem
// fp:fp
// sp:sp
// ax:ax
// SZO:SZO
// C:C
// cx:cx
// bx:bx
// ds:ds
// SCZO:SCZO
// Top:Top
// return address size: 2
define fn0C00_0000
fn0C00_0000_entry:
	sp = fp
	Top = 0<i8>
	// succ:  l0C00_0000
l0C00_0000:
	ax = ax ^ ax
	SZO = cond(ax)
	C = false
	cx = Mem0[ds:bx:word16]
	// succ:  l0C00_0004
l0C00_0004:
	ax = ax + cx
	SCZO = cond(ax)
	ax = ax + cx
	SCZO = cond(ax)
	cx = cx - 1<16>
	branch cx != 0<16> l0C00_0004
	// succ:  l0C00_000A l0C00_0004
l0C00_000A:
	Mem0[ds:0x300<16>:word16] = ax
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
