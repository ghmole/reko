// fn0C00_0000
// Return size: 2
// Mem0:Mem
// fp:fp
// sp:sp
// Top:Top
// ds:ds
// return address size: 2
define fn0C00_0000
fn0C00_0000_entry:
	sp = fp
	Top = 0
	// succ:  l0C00_0000
l0C00_0000:
	Top = Top - 1
	ST[Top:real64] = Mem0[ds:0x0300:real64]
	Top = Top - 1
	ST[Top:real64] = Mem0[ds:0x0310:real64]
	ST[Top + 1:real64] = ST[Top + 1:real64] - ST[Top:real64]
	Top = Top + 1
	Mem0[ds:0x0400:real64] = ST[Top:real64]
	Top = Top + 1
	Top = Top - 1
	ST[Top:real64] = Mem0[ds:0x0320:real64]
	Top = Top - 1
	ST[Top:real64] = Mem0[ds:0x0330:real64]
	ST[Top + 1:real64] = ST[Top + 1:real64] / ST[Top:real64]
	Top = Top + 1
	Mem0[ds:0x0338:real64] = ST[Top:real64]
	Top = Top + 1
	Top = Top - 1
	ST[Top:real64] = Mem0[ds:0x0328:real64]
	Top = Top - 1
	ST[Top:real64] = Mem0[ds:0x0320:real64]
	ST[Top + 1:real64] = ST[Top + 1:real64] / ST[Top:real64]
	Top = Top + 1
	Mem0[ds:0x0408:real64] = ST[Top:real64]
	Top = Top + 1
	Top = Top - 1
	ST[Top:real64] = Mem0[ds:0x0320:real64]
	Top = Top - 1
	ST[Top:real64] = Mem0[ds:0x0330:real64]
	ST[Top + 1:real64] = ST[Top:real64] - ST[Top + 1:real64]
	Top = Top + 1
	Mem0[ds:0x0338:real64] = ST[Top:real64]
	Top = Top + 1
	Top = Top - 1
	ST[Top:real64] = Mem0[ds:0x0320:real64]
	Top = Top - 1
	ST[Top:real64] = Mem0[ds:0x0330:real64]
	ST[Top + 1:real64] = ST[Top:real64] / ST[Top + 1:real64]
	Top = Top + 1
	Mem0[ds:0x0340:real64] = ST[Top:real64]
	Top = Top + 1
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

