// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 ax, selector ds)
fn0C00_0000_entry:
	byte cl_11
	branch ax < 0<16> l0C00_0012
	goto l0C00_0005
	// succ:  l0C00_0005 l0C00_0012
l0C00_0000:
l0C00_0005:
	cl_11 = 0<8>
	branch ax <= 0xC<16> l0C00_000F
	// succ:  l0C00_000C l0C00_000F
l0C00_000C:
	ax = 0xC<16>
	// succ:  l0C00_000F
l0C00_000F:
	goto l0C00_001C
	// succ:  l0C00_001C
l0C00_0012:
	cl_11 = 1<8>
	branch ax >= 0xFFF4<16> l0C00_001C
	// succ:  l0C00_0019 l0C00_001C
l0C00_0019:
	ax = 0xFFF4<16>
	// succ:  l0C00_001C
l0C00_001C:
	Mem20[ds:0x300<16>:word16] = ax
	Mem23[ds:0x302<16>:byte] = cl_11
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

void fn0C00_0000(word16 ax, selector ds)
{
	byte cl_11;
	if (ax >= 0<16>)
	{
		cl_11 = 0<8>;
		if (ax > 0xC<16>)
			ax = 0xC<16>;
	}
	else
	{
		cl_11 = 1<8>;
		if (ax < 0xFFF4<16>)
			ax = 0xFFF4<16>;
	}
	Mem20[ds:0x300<16>:word16] = ax;
	Mem23[ds:0x302<16>:byte] = cl_11;
}
===========================
