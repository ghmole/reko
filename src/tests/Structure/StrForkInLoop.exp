// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:
	word16 ax_19 = 0<16>
	goto l0C00_0019
	// succ:  l0C00_0019
l0C00_0000:
l0C00_0005:
	word16 si_13 = Mem0[ds:0x300<16>:word16]
	branch si_13 == 0<16> l0C00_0012
	// succ:  l0C00_000D l0C00_0012
l0C00_000D:
	ax_19 = ax_19 + Mem0[ds:si_13:word16]
	goto l0C00_0019
	// succ:  l0C00_0019
l0C00_0012:
	ax_19 = ax_19 + Mem0[ds:Mem0[ds:0x302<16>:word16] + 4<16>:word16]
	// succ:  l0C00_0019
l0C00_0019:
	branch ax_19 < bx l0C00_0005
	// succ:  l0C00_001D l0C00_0005
l0C00_001D:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

void fn0C00_0000(word16 bx, selector ds)
{
	word16 ax_19 = 0<16>;
	while (ax_19 < bx)
	{
		word16 si_13 = Mem0[ds:0x300<16>:word16];
		if (si_13 != 0<16>)
			ax_19 += Mem0[ds:si_13:word16];
		else
			ax_19 += Mem0[ds:Mem0[ds:0x302<16>:word16] + 4<16>:word16];
	}
}
===========================
