// ManyIncrements
// Return size: 0
define ManyIncrements
ManyIncrements_entry:
	r63 = fp
	goto loopTop
	// succ:  loopTop
done:
	return
	// succ:  ManyIncrements_exit
l1:
l2:
	r1 = Mem0[r0:byte]
	r0 = r0 + 0x00000001
	Mem0[0x33333330:word32] = r1
	r1 = Mem0[r0:byte]
	r0 = r0 + 0x00000001
	Mem0[0x33333331:word32] = r1
	goto loopTop
	// succ:  loopTop
l3:
	r1 = Mem0[r0:byte]
	r0 = r0 + 0x00000001
	Mem0[0x33333330:word32] = r1
	// succ:  loopTop
loopTop:
	r1 = Mem0[r0:byte]
	r0 = r0 + 0x00000001
	branch r1 != 1 not1
	goto l2
	// succ:  l2 not1
not1:
	branch r1 != 2 done
	goto l3
	// succ:  l3 done
ManyIncrements_exit:

define ManyIncrements
{
	r63 = fp;
	while (true)
	{
		while (true)
		{
			r1 = Mem0[r0:byte];
			++r0;
			if (r1 != 1)
				break;
			r1 = Mem0[r0:byte];
			++r0;
			Mem0[0x33333330:word32] = r1;
			r1 = Mem0[r0:byte];
			++r0;
			Mem0[0x33333331:word32] = r1;
		}
		if (r1 != 2)
			break;
		r1 = Mem0[r0:byte];
		++r0;
		Mem0[0x33333330:word32] = r1;
	}
}
===========================
