// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 ax, selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	word16 ax_11
	branch ax != 1<16> l0C00_0015
	// succ:  l0C00_0005 l0C00_0015
l0C00_0005:
	branch ax != 2<16> l0C00_0015
	// succ:  l0C00_000A l0C00_0015
l0C00_000A:
	branch ax != 3<16> l0C00_0015
	// succ:  l0C00_000F l0C00_0015
l0C00_000F:
	ax_11 = 1<16>
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0015:
	ax_11 = 0<16>
	// succ:  l0C00_001A
l0C00_001A:
	word16 ax_24
	Mem19[ds:0x300<16>:word16] = ax_11
	branch ax_11 != 0xA<16> l0C00_002E
	// succ:  l0C00_0023 l0C00_002E
l0C00_0023:
	branch ax_11 != 0xB<16> l0C00_002E
	// succ:  l0C00_0028 l0C00_002E
l0C00_0028:
	ax_24 = 1<16>
	goto l0C00_0030
	// succ:  l0C00_0030
l0C00_002E:
	ax_24 = 0<16>
	// succ:  l0C00_0030
l0C00_0030:
	Mem31[ds:0x302<16>:word16] = ax_24
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 ax, selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	word16 ax_11
	branch ax != 1<16> || (ax != 2<16> || ax != 3<16>) l0C00_0015
	goto l0C00_000F
	// succ:  l0C00_000F l0C00_0015
l0C00_0005:
l0C00_000A:
l0C00_000F:
	ax_11 = 1<16>
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0015:
	ax_11 = 0<16>
	// succ:  l0C00_001A
l0C00_001A:
	word16 ax_24
	Mem19[ds:0x300<16>:word16] = ax_11
	branch ax_11 != 0xA<16> || ax_11 != 0xB<16> l0C00_002E
	goto l0C00_0028
	// succ:  l0C00_0028 l0C00_002E
l0C00_0023:
l0C00_0028:
	ax_24 = 1<16>
	goto l0C00_0030
	// succ:  l0C00_0030
l0C00_002E:
	ax_24 = 0<16>
	// succ:  l0C00_0030
l0C00_0030:
	Mem31[ds:0x302<16>:word16] = ax_24
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
================
