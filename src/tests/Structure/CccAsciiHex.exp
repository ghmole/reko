// fn0C00_0000
// Return size: 0
void fn0C00_0000(byte al, selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	byte al_5
	branch fn0C00_000A(al, out al_5) l0C00_0009
	// succ:  l0C00_0005 l0C00_0009
l0C00_0005:
	Mem11[ds:0x300<16>:byte] = al_5
	// succ:  l0C00_0009
l0C00_0009:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

// fn0C00_0000
// Return size: 0
void fn0C00_0000(byte al, selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	byte al_5
	branch fn0C00_000A(al, out al_5) l0C00_0009
	// succ:  l0C00_0005 l0C00_0009
l0C00_0005:
	Mem11[ds:0x300<16>:byte] = al_5
	// succ:  l0C00_0009
l0C00_0009:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
================
// fn0C00_000A
// Return size: 0
bool fn0C00_000A(byte al, ptr16 & alOut)
fn0C00_000A_entry:
	// succ:  l0C00_000A
l0C00_000A:
	branch al <u 0x30<8> l0C00_0032
	// succ:  l0C00_000E l0C00_0032
l0C00_000E:
	branch al <=u 0x39<8> l0C00_0022
	// succ:  l0C00_0012 l0C00_0022
l0C00_0012:
	branch al <u 0x41<8> l0C00_0032
	// succ:  l0C00_0016 l0C00_0032
l0C00_0016:
	branch al <=u 0x46<8> l0C00_0022
	// succ:  l0C00_001A l0C00_0022
l0C00_001A:
	branch al <u 0x61<8> l0C00_0032
	// succ:  l0C00_001E l0C00_0032
l0C00_001E:
	branch al >u 0x66<8> l0C00_0032
	// succ:  l0C00_0022 l0C00_0032
l0C00_0022:
	byte al_19 = al - 0x30<8>
	branch al <u 0x3A<8> l0C00_0030
	// succ:  l0C00_0028 l0C00_0030
l0C00_0028:
	al_19 = al - 0x37<8>
	branch al <u 0x47<8> l0C00_0030
	// succ:  l0C00_002E l0C00_0030
l0C00_002E:
	al_19 = al - 0x57<8>
	// succ:  l0C00_0030
l0C00_0030:
	alOut = al_19
	return false
	// succ:  fn0C00_000A_exit
l0C00_0032:
	alOut = al
	return true
	// succ:  fn0C00_000A_exit
fn0C00_000A_exit:

// fn0C00_000A
// Return size: 0
bool fn0C00_000A(byte al, ptr16 & alOut)
fn0C00_000A_entry:
	// succ:  l0C00_000A
l0C00_000A:
	branch al <u 0x30<8> || al >u 0x39<8> && (al <u 0x41<8> || al >u 0x46<8> && (al <u 0x61<8> || al >u 0x66<8>)) l0C00_0032
	goto l0C00_0022
	// succ:  l0C00_0022 l0C00_0032
l0C00_000E:
l0C00_0012:
l0C00_0016:
l0C00_001A:
l0C00_001E:
l0C00_0022:
	byte al_19 = al - 0x30<8>
	branch al <u 0x3A<8> l0C00_0030
	// succ:  l0C00_0028 l0C00_0030
l0C00_0028:
	al_19 = al - 0x37<8>
	branch al <u 0x47<8> l0C00_0030
	// succ:  l0C00_002E l0C00_0030
l0C00_002E:
	al_19 = al - 0x57<8>
	// succ:  l0C00_0030
l0C00_0030:
	alOut = al_19
	return false
	// succ:  fn0C00_000A_exit
l0C00_0032:
	alOut = al
	return true
	// succ:  fn0C00_000A_exit
fn0C00_000A_exit:
================
