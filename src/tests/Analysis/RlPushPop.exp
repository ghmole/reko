// fn0C00_0000 /////////////////////
	LiveOut:  
	BitsUsed:  di:[0..15] Sequence ds:si:[0..31]
	Trashed:   SCZO ax cx Top
	Preserved: sp
// fn0C00_0000
define fn0C00_0000
fn0C00_0000_entry:
	def ds_si
	def di
	ds = SLICE(ds_si, selector, 16)
l0C00_0000:
	call fn0C00_0008 (retsize: 2;)
		uses: cx:0x14<16>,di:di,ds:ds
		defs: ax:ax_7
	Mem13[ds_si:word16] = ax_7
l0C00_0006_thunk_fn0C00_0008:
	call fn0C00_0008 (retsize: 0;)
		uses: cx:0x14<16>,di:di,ds:ds
	return
fn0C00_0000_exit:
// fn0C00_0008 /////////////////////
	LiveOut:   ax:[0..15]
	BitsUsed:  cx:[0..15] di:[0..15] ds:[0..15]
	Trashed:   SCZO ax Top
	Preserved: di si sp
// fn0C00_0008
define fn0C00_0008
fn0C00_0008_entry:
	def di
	def cx
	def ds
l0C00_0008:
	si_11 = 0<16>
l0C00_000D:
	di_25 = PHI((di, l0C00_0008), (di_27, l0C00_0012))
	si_15 = PHI((si_11, l0C00_0008), (si_26, l0C00_0012))
	branch cx == 0<16> l0C00_001A
l0C00_0012:
	si_26 = si_15 + Mem10[ds:di_25:word16]
	di_27 = di_25 + 2<16>
l0C00_001A:
	ax_16 = si_15
	return
fn0C00_0008_exit:
	use ax_16
