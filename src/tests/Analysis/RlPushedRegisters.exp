// fn0C00_0000 /////////////////////
	LiveOut:  
	BitsUsed:  ds:[0..15]
	Trashed:   SCZO ax cx Top
	Preserved: sp
// fn0C00_0000
define fn0C00_0000
fn0C00_0000_entry:
	def ds
l0C00_0000:
	call fn0C00_0023 (retsize: 2;)
		uses: Stack +0002:2<16>,Stack +0004:1<16>
	call fn0C00_0034 (retsize: 2;)
		uses: ds:ds
	call fn0C00_005D (retsize: 2;)
		uses: cx:0x2A<16>,Stack +0004:1<16>
	return
fn0C00_0000_exit:
// fn0C00_0023 /////////////////////
	LiveOut:  
	BitsUsed: 
	Trashed:   SCZO ax Top
	Preserved: bp cx sp
// fn0C00_0023
define fn0C00_0023
fn0C00_0023_entry:
l0C00_0023:
	return
fn0C00_0023_exit:
// fn0C00_0034 /////////////////////
	LiveOut:  
	BitsUsed:  ds:[0..15]
	Trashed:   SCZO ax Top
	Preserved: bp bx cx dx sp
// fn0C00_0034
define fn0C00_0034
fn0C00_0034_entry:
	def fp
	def ds
l0C00_0034:
	bx_18 = fp + 6<16>
l0C00_003D:
	bx_20 = PHI((bx_18, l0C00_0034), (bx_23, l0C00_003D))
	ax_22 = Mem16[ds:bx_20:word16]
	bx_23 = bx_20 + 2<16>
	branch ax_22 != 0<16> l0C00_003D
l0C00_0046:
	cx_33 = Mem16[ds:bx_23:word16]
	call fn0C00_0069 (retsize: 2;)
		uses: bx:fp + 6<16>,cx:cx_33,ds:ds
	return
fn0C00_0034_exit:
// fn0C00_005D /////////////////////
	LiveOut:  
	BitsUsed: 
	Trashed:   SCZO ax Top
	Preserved: bp cx sp
// fn0C00_005D
define fn0C00_005D
fn0C00_005D_entry:
l0C00_005D:
	return
fn0C00_005D_exit:
// fn0C00_0069 /////////////////////
	LiveOut:  
	BitsUsed:  bx:[0..15] cx:[0..15] ds:[0..15]
	Trashed:   Top
	Preserved: sp
// fn0C00_0069
define fn0C00_0069
fn0C00_0069_entry:
	def bx
	def ds
	def cx
l0C00_0069:
	Mem6[ds:0x200<16>:word16] = bx
	Mem8[ds:0x300<16>:word16] = cx
	return
fn0C00_0069_exit:
