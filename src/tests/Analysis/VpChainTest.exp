= fn0C00_0000 ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_4,sp:sp_2,Top:Top_3	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
Top_3: orig: Top
    def:  Top_3 = 0
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_4,sp:sp_2,Top:Top_3	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
dx_4: orig: dx
    def:  dx_4 = 0x001E
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_4,sp:sp_2,Top:Top_3	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
sp_5: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_4,sp:sp_2,Top:Top_3	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
dx_6: orig: dx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_4,sp:sp_2,Top:Top_3	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_4,sp:sp_2,Top:Top_3	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
ax_8: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_4,sp:sp_2,Top:Top_3	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
    uses: Mem11[ds:0x012C:word16] = ax_8
Top_9: orig: Top
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:dx_4,sp:sp_2,Top:Top_3	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
ds:ds
    def:  def ds
    uses: Mem11[ds:0x012C:word16] = ax_8
Mem11: orig: Mem0
    def:  Mem11[ds:0x012C:word16] = ax_8
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	Top_3 = 0
	dx_4 = 0x001E
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,dx:dx_4,sp:sp_2,Top:Top_3
		defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
	Mem11[ds:0x012C:word16] = ax_8
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
          call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp,Top:0	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
sp_2: orig: sp
    def:  sp_2 = fp
Top_3: orig: Top
    def:  Top_3 = 0
dx_4: orig: dx
    def:  dx_4 = 0x001E
sp_5: orig: sp
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp,Top:0	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
dx_6: orig: dx
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp,Top:0	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
ax:ax
    def:  def ax
    uses: call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp,Top:0	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
ax_8: orig: ax
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp,Top:0	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
    uses: Mem11[ds:0x012C:word16] = ax_8
Top_9: orig: Top
    def:  call fn0C00_000B (retsize: 2;)	uses: ax:ax,dx:0x001E,sp:fp,Top:0	defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
ds:ds
    def:  def ds
    uses: Mem11[ds:0x012C:word16] = ax_8
Mem11: orig: Mem0
    def:  Mem11[ds:0x012C:word16] = ax_8
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ax
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	Top_3 = 0
	dx_4 = 0x001E
	call fn0C00_000B (retsize: 2;)
		uses: ax:ax,dx:0x001E,sp:fp,Top:0
		defs: ax:ax_8,dx:dx_6,sp:sp_5,Top:Top_9
	Mem11[ds:0x012C:word16] = ax_8
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
= fn0C00_000B ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: call fn0C00_000F (retsize: 2;)	uses: sp:sp_2,Top:Top_3	defs: sp:sp_4,Top:Top_5
Top_3: orig: Top
    def:  Top_3 = 0
    uses: call fn0C00_000F (retsize: 2;)	uses: sp:sp_2,Top:Top_3	defs: sp:sp_4,Top:Top_5
sp_4: orig: sp
    def:  call fn0C00_000F (retsize: 2;)	uses: sp:sp_2,Top:Top_3	defs: sp:sp_4,Top:Top_5
Top_5: orig: Top
    def:  call fn0C00_000F (retsize: 2;)	uses: sp:sp_2,Top:Top_3	defs: sp:sp_4,Top:Top_5
// fn0C00_000B
// Return size: 2
define fn0C00_000B
fn0C00_000B_entry:
	def fp
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	Top_3 = 0
	call fn0C00_000F (retsize: 2;)
		uses: sp:sp_2,Top:Top_3
		defs: sp:sp_4,Top:Top_5
	return
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
          call fn0C00_000F (retsize: 2;)	uses: sp:fp,Top:0	defs: sp:sp_4,Top:Top_5
sp_2: orig: sp
    def:  sp_2 = fp
Top_3: orig: Top
    def:  Top_3 = 0
sp_4: orig: sp
    def:  call fn0C00_000F (retsize: 2;)	uses: sp:fp,Top:0	defs: sp:sp_4,Top:Top_5
Top_5: orig: Top
    def:  call fn0C00_000F (retsize: 2;)	uses: sp:fp,Top:0	defs: sp:sp_4,Top:Top_5
// fn0C00_000B
// Return size: 2
define fn0C00_000B
fn0C00_000B_entry:
	def fp
	// succ:  l0C00_000B
l0C00_000B:
	sp_2 = fp
	Top_3 = 0
	call fn0C00_000F (retsize: 2;)
		uses: sp:fp,Top:0
		defs: sp:sp_4,Top:Top_5
	return
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:
= fn0C00_000F ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: sp_4 = sp_2 - 0x0002
Top_3: orig: Top
    def:  Top_3 = 0
sp_4: orig: sp
    def:  sp_4 = sp_2 - 0x0002
    uses: Mem7[ss:sp_4:word16] = si
          si_23 = Mem7[ss:sp_4:word16]
          sp_24 = sp_4 + 0x0002
si:si
    def:  def si
    uses: Mem7[ss:sp_4:word16] = si
ss:ss
    def:  def ss
    uses: Mem7[ss:sp_4:word16] = si
          si_23 = Mem7[ss:sp_4:word16]
Mem7: orig: Mem0
    def:  Mem7[ss:sp_4:word16] = si
    uses: si_23 = Mem7[ss:sp_4:word16]
si_8: orig: si
    def:  si_8 = 0x0000
    uses: SZO_9 = cond(si_8)
          si_14 = PHI(si_8, si_15)
SZO_9: orig: SZO
    def:  SZO_9 = cond(si_8)
C_10: orig: C
    def:  C_10 = false
dx_11: orig: dx
    def:  dx_11 = PHI(dx, dx_17)
    uses: SCZO_12 = cond(dx_11 - 0x0000)
          si_15 = si_14 + dx_11
          dx_17 = dx_11 - 0x0001
          branch dx_11 >= 0x0000 l0C00_0015
SCZO_12: orig: SCZO
    def:  SCZO_12 = cond(dx_11 - 0x0000)
    uses: SO_13 = SLICE(SCZO_12, bool, 4) (alias)
SO_13: orig: SO
    def:  SO_13 = SLICE(SCZO_12, bool, 4) (alias)
si_14: orig: si
    def:  si_14 = PHI(si_8, si_15)
    uses: si_15 = si_14 + dx_11
          ax_19 = si_14
si_15: orig: si
    def:  si_15 = si_14 + dx_11
    uses: SCZO_16 = cond(si_15)
          si_14 = PHI(si_8, si_15)
SCZO_16: orig: SCZO
    def:  SCZO_16 = cond(si_15)
dx_17: orig: dx
    def:  dx_17 = dx_11 - 0x0001
    uses: SZO_18 = cond(dx_17)
          dx_11 = PHI(dx, dx_17)
SZO_18: orig: SZO
    def:  SZO_18 = cond(dx_17)
ax_19: orig: ax
    def:  ax_19 = si_14
si_23: orig: si
    def:  si_23 = Mem7[ss:sp_4:word16]
sp_24: orig: sp
    def:  sp_24 = sp_4 + 0x0002
dx:dx
    def:  def dx
    uses: dx_11 = PHI(dx, dx_17)
// fn0C00_000F
// Return size: 2
define fn0C00_000F
fn0C00_000F_entry:
	def fp
	def si
	def ss
	def dx
	// succ:  l0C00_000F
l0C00_000F:
	sp_2 = fp
	Top_3 = 0
	sp_4 = sp_2 - 0x0002
	Mem7[ss:sp_4:word16] = si
	si_8 = 0x0000
	SZO_9 = cond(si_8)
	C_10 = false
	goto l0C00_0018
	// succ:  l0C00_0018
l0C00_0015:
	si_15 = si_14 + dx_11
	SCZO_16 = cond(si_15)
	dx_17 = dx_11 - 0x0001
	SZO_18 = cond(dx_17)
	// succ:  l0C00_0018
l0C00_0018:
	si_14 = PHI(si_8, si_15)
	dx_11 = PHI(dx, dx_17)
	SCZO_12 = cond(dx_11 - 0x0000)
	SO_13 = SLICE(SCZO_12, bool, 4) (alias)
	branch dx_11 >= 0x0000 l0C00_0015
	// succ:  l0C00_001D l0C00_0015
l0C00_001D:
	ax_19 = si_14
	si_23 = Mem7[ss:sp_4:word16]
	sp_24 = sp_4 + 0x0002
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
          sp_4 = fp - 0x0002
          sp_24 = fp
sp_2: orig: sp
    def:  sp_2 = fp
Top_3: orig: Top
    def:  Top_3 = 0
sp_4: orig: sp
    def:  sp_4 = fp - 0x0002
si:si
    def:  def si
    uses: wLoc02_26 = si
ss:ss
    def:  def ss
Mem7: orig: Mem0
si_8: orig: si
    def:  si_8 = 0x0000
    uses: si_14 = PHI(si_8, si_15)
SZO_9: orig: SZO
    def:  SZO_9 = cond(0x0000)
C_10: orig: C
    def:  C_10 = false
dx_11: orig: dx
    def:  dx_11 = PHI(dx, dx_17)
    uses: SCZO_12 = cond(dx_11)
          si_15 = si_14 + dx_11
          dx_17 = dx_11 - 0x0001
          branch dx_11 >= 0x0000 l0C00_0015
SCZO_12: orig: SCZO
    def:  SCZO_12 = cond(dx_11)
    uses: SO_13 = SLICE(SCZO_12, bool, 4) (alias)
SO_13: orig: SO
    def:  SO_13 = SLICE(SCZO_12, bool, 4) (alias)
si_14: orig: si
    def:  si_14 = PHI(si_8, si_15)
    uses: si_15 = si_14 + dx_11
          ax_19 = si_14
si_15: orig: si
    def:  si_15 = si_14 + dx_11
    uses: SCZO_16 = cond(si_15)
          si_14 = PHI(si_8, si_15)
SCZO_16: orig: SCZO
    def:  SCZO_16 = cond(si_15)
dx_17: orig: dx
    def:  dx_17 = dx_11 - 0x0001
    uses: SZO_18 = cond(dx_17)
          dx_11 = PHI(dx, dx_17)
SZO_18: orig: SZO
    def:  SZO_18 = cond(dx_17)
ax_19: orig: ax
    def:  ax_19 = si_14
wLoc02_26: orig: wLoc02
    def:  wLoc02_26 = si
    uses: si_23 = wLoc02_26
si_23: orig: si
    def:  si_23 = wLoc02_26
sp_24: orig: sp
    def:  sp_24 = fp
dx:dx
    def:  def dx
    uses: dx_11 = PHI(dx, dx_17)
// fn0C00_000F
// Return size: 2
define fn0C00_000F
fn0C00_000F_entry:
	def fp
	def si
	def ss
	def dx
	// succ:  l0C00_000F
l0C00_000F:
	sp_2 = fp
	Top_3 = 0
	sp_4 = fp - 0x0002
	wLoc02_26 = si
	si_8 = 0x0000
	SZO_9 = cond(0x0000)
	C_10 = false
	goto l0C00_0018
	// succ:  l0C00_0018
l0C00_0015:
	si_15 = si_14 + dx_11
	SCZO_16 = cond(si_15)
	dx_17 = dx_11 - 0x0001
	SZO_18 = cond(dx_17)
	// succ:  l0C00_0018
l0C00_0018:
	si_14 = PHI(si_8, si_15)
	dx_11 = PHI(dx, dx_17)
	SCZO_12 = cond(dx_11)
	SO_13 = SLICE(SCZO_12, bool, 4) (alias)
	branch dx_11 >= 0x0000 l0C00_0015
	// succ:  l0C00_001D l0C00_0015
l0C00_001D:
	ax_19 = si_14
	si_23 = wLoc02_26
	sp_24 = fp
	return
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:
