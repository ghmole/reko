// fn10000000
// Return size: 4
define fn10000000
fn10000000_entry:
	def fp
	def Mem0
	// succ:  l10000000
l10000000:
	eax_5 = Mem0[0x10003420<p32>:word32]
	dwLoc04_16 = eax_5
	call fn10000017 (retsize: 4;)
		uses: eax:eax_5,esp:fp - 4<i32>,Stack +0004:dwLoc04_16,Top:0<i8>
		defs: eax:eax_9
	ax_14 = SLICE(eax_9, word16, 0) (alias)
	Mem15[0x10003428<p32>:word16] = ax_14
	return
	// succ:  fn10000000_exit
fn10000000_exit:

// fn10000017
// Return size: 4
define fn10000017
fn10000017_entry:
	def dwArg04
	// succ:  l10000017
l10000017:
	wLoc08_42 = 0<16>
	branch dwArg04 != 0<32> l1000002F
	// succ:  l10000027 l1000002F
l10000027:
	goto l1000005E
	// succ:  l1000005E
l1000002F:
	wLoc08_44 = PHI((wLoc08_42, l10000017), (wLoc08_47, l10000049))
	Mem15 = PHI((Mem11, l10000017), (Mem31, l10000049))
	eax_16 = CONVERT(wLoc08_44, word16, int32)
	ecx_17 = dwArg04
	edx_18 = CONVERT(Mem15[ecx_17 + eax_16:byte], byte, int32)
	branch edx_18 == 0<32> l1000005A
	// succ:  l1000003E l1000005A
l1000003E:
	eax_22 = CONVERT(wLoc08_44, word16, int32)
	branch eax_22 >= 0x7FFF<32> l1000005A
	// succ:  l10000049 l1000005A
l10000049:
	cx_28 = wLoc08_44
	wLoc08_47 = cx_28 + 1<16>
	goto l1000002F
	// succ:  l1000002F
l1000005A:
	// succ:  l1000005E
l1000005E:
	return
	// succ:  fn10000017_exit
fn10000017_exit:

