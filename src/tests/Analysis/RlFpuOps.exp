// fn0C00_0000 /////////////////////
	LiveOut:  
	BitsUsed:  ds:[0..15]
	Trashed:   SCZO bx Top
	Preserved: sp
// fn0C00_0000
define fn0C00_0000
fn0C00_0000_entry:
	def ds
l0C00_0000:
	call fn0C00_0010 (retsize: 2;)
		uses: ds:ds,Stack +0002:0x300<16>,Stack +0004:0x320<16>
	call fn0C00_0037 (retsize: 2;)
		uses: ds:ds
	return
fn0C00_0000_exit:
// fn0C00_0010 /////////////////////
	LiveOut:  
	BitsUsed:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
	Trashed:   bx FPU -1 FPU -2 Top
	Preserved: bp sp
// fn0C00_0010
define fn0C00_0010
fn0C00_0010_entry:
	def ds
	def wArg02
	def wArg04
l0C00_0010:
	rLoc1_36 = Mem7[ds:wArg02:real64]
	rLoc1_37 = rLoc1_36 * rLoc1_36
	rLoc2_38 = Mem7[ds:wArg02 + 8<16>:real64]
	rLoc2_39 = rLoc2_38 * rLoc2_38
	rLoc1_40 = rLoc1_37 + rLoc2_39
	rLoc2_41 = Mem7[ds:wArg02 + 0x10<16>:real64]
	rLoc2_42 = rLoc2_41 * rLoc2_41
	rLoc1_43 = rLoc1_40 + rLoc2_42
	Mem25[ds:wArg04:real64] = rLoc1_43
	rLoc1_45 = CONVERT(Mem25[ds:wArg04 + 0x20<16>:int16], int16, real64)
	Mem29[ds:wArg04 + 0x28<16>:real64] = rLoc1_45
	return
fn0C00_0010_exit:
// fn0C00_0037 /////////////////////
	LiveOut:  
	BitsUsed:  ds:[0..15]
	Trashed:   FPU -1 Top
	Preserved: sp
// fn0C00_0037
define fn0C00_0037
fn0C00_0037_entry:
	def ds
l0C00_0037:
	Mem7[ds:0x400<16>:real64] = 0.0
	Mem11[ds:0x408<16>:int32] = CONVERT(1.0, real64, int32)
	return
fn0C00_0037_exit:
