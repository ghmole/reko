// fn0C00_0000 /////////////////////
	LiveOut:  
	BitsUsed:  bp:[0..15] ds:[0..15] si:[0..15]
	Trashed:   SCZO ax bp bx cx dx si Top
	Preserved: sp
// fn0C00_0000
define fn0C00_0000
fn0C00_0000_entry:
	def ds
	def si
	def bp
l0C00_0000:
	call fn0C00_0004 (retsize: 2;)
		uses: bp:bp,ds:ds,si:si
	return
fn0C00_0000_exit:
// fn0C00_0004 /////////////////////
	LiveOut:  
	BitsUsed:  bp:[0..15] ds:[0..15] si:[0..15]
	Trashed:   SCZO ax bp bx cx dx si Top
	Preserved: sp
// fn0C00_0004
define fn0C00_0004
fn0C00_0004_entry:
	def ds
	def si
	def Mem0
	def bp
l0C00_0004:
	bp_44 = PHI((bp, fn0C00_0004_entry), (bp_45, l0C00_0026))
	Mem6 = PHI((Mem0, fn0C00_0004_entry), (Mem32, l0C00_0026))
	si_5 = PHI((si, fn0C00_0004_entry), (si_41, l0C00_0026))
	al_7 = Mem6[ds:si_5:byte]
	al_12 = (al_7 >>u 4<8>) + 0x30<8>
	branch al_12 <= 0x39<8> l0C00_0016
l0C00_0014:
	al_15 = al_12 + 7<8>
l0C00_0016:
	al_28 = PHI((al_12, l0C00_0004), (al_15, l0C00_0014))
	ah_20 = Mem6[ds:si_5:byte]
	ah_22 = (ah_20 & 0xF<8>) + 0x30<8>
	ax_29 = SEQ(ah_22, al_28) (alias)
	branch ah_22 <= 0x39<8> l0C00_0026
l0C00_0023:
	ax_30 = SEQ(ah_22 + 7<8>, al_28) (alias)
l0C00_0026:
	ax_27 = PHI((ax_29, l0C00_0016), (ax_30, l0C00_0023))
	Mem32[ds:0x5427<16>:word16] = ax_27
	bx_34 = Mem32[ds:0x5424<16>:word16]
	ds_dx_37 = SEQ(ds, 0x5427<16>) (alias)
	msdos_write_file(bx_34, 4<16>, ds_dx_37, out ax_38)
	si_41 = si_5 + 1<16>
	bp_45 = bp_44 - 1<16>
	branch bp_45 != 0<16> l0C00_0004
l0C00_003C:
	return
fn0C00_0004_exit:
