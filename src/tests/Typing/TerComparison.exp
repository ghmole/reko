// Before ///////
// proc1
// Return size: 0
define proc1
proc1_entry:
	// succ:  l1
l1:
	f = Mem0[p + 4<32>:(ptr32 (struct "foo" 0008))] < 0x1028<32>
proc1_exit:

// After ///////
// proc1
// Return size: 0
define proc1
proc1_entry:
	// succ:  l1
l1:
	f = p->ptr0004 < &g_t1028
proc1_exit:

// Equivalence classes ////////////
Eq_1: (struct "Globals" (1028 Eq_5 t1028))
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_2: (struct "Eq_2" (4 (ptr32 Eq_5) ptr0004))
	T_2 (in p : word32)
Eq_5: (struct "foo" 0008)
	T_5 (in Mem0[p + 4<32>:(ptr32 (struct "foo" 0008))] : (ptr32 (struct "foo" 0008)))
	T_6 (in 0x1028<32> : word32)
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 Eq_1)
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in p : word32)
  Class: Eq_2
  DataType: (ptr32 Eq_2)
  OrigDataType: (ptr32 (struct (4 T_5 t0004)))
T_3: (in 4<32> : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_4: (in p + 4<32> : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_5: (in Mem0[p + 4<32>:(ptr32 (struct "foo" 0008))] : (ptr32 (struct "foo" 0008)))
  Class: Eq_5
  DataType: (ptr32 Eq_5)
  OrigDataType: (ptr32 (struct "foo" 0008))
T_6: (in 0x1028<32> : word32)
  Class: Eq_5
  DataType: (ptr32 Eq_5)
  OrigDataType: int32
T_7: (in p->ptr0004 < &g_t1028 : bool)
  Class: Eq_7
  DataType: bool
  OrigDataType: bool
T_8: (in f : bool)
  Class: Eq_7
  DataType: bool
  OrigDataType: bool
