// GlobalVariablesMock
// Return size: 0
void GlobalVariablesMock()
GlobalVariablesMock_entry:
	// succ:  l1
l1:
	Mem4[ptr + 0<32>:real32] = 0.75F
	Mem5[0x10000000<32>:real32] = 0.5F
GlobalVariablesMock_exit:

// Equivalence classes ////////////
Eq_1: (ptr32 (struct "Globals"))
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_2: real32
	T_2 (in 0.75F : real32)
	T_6 (in Mem4[ptr + 0<32>:real32] : real32)
Eq_3: (ptr32 (struct (0 T_6 t0000)))
	T_3 (in ptr : word32)
Eq_4: word32
	T_4 (in 0<32> : word32)
Eq_5: word32
	T_5 (in ptr + 0<32> : word32)
Eq_7: real32
	T_7 (in 0.5F : real32)
	T_9 (in Mem5[0x10000000<32>:real32] : real32)
Eq_8: (ptr32 (struct (0 T_9 t0000)))
	T_8 (in 0x10000000<32> : word32)
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 (struct "Globals"))
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in 0.75F : real32)
  Class: Eq_2
  DataType: real32
  OrigDataType: real32
T_3: (in ptr : word32)
  Class: Eq_3
  DataType: (ptr32 (struct (0 T_6 t0000)))
  OrigDataType: (ptr32 (struct (0 T_6 t0000)))
T_4: (in 0<32> : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_5: (in ptr + 0<32> : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_6: (in Mem4[ptr + 0<32>:real32] : real32)
  Class: Eq_2
  DataType: real32
  OrigDataType: real32
T_7: (in 0.5F : real32)
  Class: Eq_7
  DataType: real32
  OrigDataType: real32
T_8: (in 0x10000000<32> : word32)
  Class: Eq_8
  DataType: (ptr32 (struct (0 T_9 t0000)))
  OrigDataType: (ptr32 (struct (0 T_9 t0000)))
T_9: (in Mem5[0x10000000<32>:real32] : real32)
  Class: Eq_7
  DataType: real32
  OrigDataType: real32
