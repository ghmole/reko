// Before ///////
// ConstantUnionMock
// Return size: 0
define ConstantUnionMock
ConstantUnionMock_entry:
	// succ:  l1
l1:
	x = 3<i32>
	x = 3.0F
ConstantUnionMock_exit:

// After ///////
// ConstantUnionMock
// Return size: 0
define ConstantUnionMock
ConstantUnionMock_entry:
	// succ:  l1
l1:
	x.u0 = 3<i32>
	x.u1 = 3.0F
ConstantUnionMock_exit:

// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_2: (union "Eq_2" (int32 u0) (real32 u1))
	T_2 (in 3<i32> : int32)
	T_3 (in x : word32)
	T_4 (in 3.0F : real32)
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 Eq_1)
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in 3<i32> : int32)
  Class: Eq_2
  DataType: int32
  OrigDataType: int32
T_3: (in x : word32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: real32
T_4: (in 3.0F : real32)
  Class: Eq_2
  DataType: real32
  OrigDataType: real32
