// Before ///////
// proc1
// Return size: 0
define proc1
proc1_entry:
	// succ:  l1
l1:
	word32 eax = Mem0[ptrArg04:word32]
	word32 ecx = Mem0[eax:word32]
proc1_exit:

// After ///////
// proc1
// Return size: 0
define proc1
proc1_entry:
	// succ:  l1
l1:
	struct strInner * eax = ptrArg04->strAttr00
	real32 ecx = eax->innerAttr00
proc1_exit:

// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_2: (struct "strInner" 0008 (0 real32 innerAttr00) (4 int32 innerAttr04))
	T_2 (in eax : (ptr32 Eq_2))
	T_6 (in Mem0[ptrArg04 + 0<32>:word32] : word32)
Eq_3: (struct "str" 0008 (0 (ptr32 (struct "strInner" 0008)) strAttr00) (4 int32 strAttr04))
	T_3 (in ptrArg04 : (ptr32 (struct "str" 0008)))
Eq_5: (struct "strInner" 0008 (0 real32 innerAttr00) (4 int32 innerAttr04))
	T_5 (in ptrArg04 + 0<32> : word32)
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 Eq_1)
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in eax : (ptr32 Eq_2))
  Class: Eq_2
  DataType: (ptr32 Eq_2)
  OrigDataType: (ptr32 (struct "strInner" 0008))
T_3: (in ptrArg04 : (ptr32 (struct "str" 0008)))
  Class: Eq_3
  DataType: (ptr32 Eq_3)
  OrigDataType: (ptr32 (struct "str" 0008))
T_4: (in 0<32> : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_5: (in ptrArg04 + 0<32> : word32)
  Class: Eq_5
  DataType: (ptr32 (ptr32 Eq_5))
  OrigDataType: (ptr32 (ptr32 (struct "strInner" 0008)))
T_6: (in Mem0[ptrArg04 + 0<32>:word32] : word32)
  Class: Eq_2
  DataType: (ptr32 Eq_2)
  OrigDataType: (ptr32 (struct "strInner" 0008))
T_7: (in ecx : real32)
  Class: Eq_7
  DataType: real32
  OrigDataType: real32
T_8: (in 0<32> : word32)
  Class: Eq_8
  DataType: word32
  OrigDataType: word32
T_9: (in eax + 0<32> : word32)
  Class: Eq_9
  DataType: (ptr32 real32)
  OrigDataType: (ptr32 real32)
T_10: (in Mem0[eax + 0<32>:word32] : word32)
  Class: Eq_7
  DataType: real32
  OrigDataType: real32
