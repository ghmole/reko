// SegmentedCallFragment
// Return size: 0
define SegmentedCallFragment
SegmentedCallFragment_entry:
	// succ:  l1
l1:
	bx = Mem0[ds:0x2040<16>:word16]
	call SEQ(0x2700<16>, bx) (retsize: 4;)
	return
	// succ:  SegmentedCallFragment_exit
SegmentedCallFragment_exit:

// Equivalence classes ////////////
Eq_1: (struct "Globals" (27000 (ptr16 Eq_6) ptr27000))
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_2: (segment (2040 (memptr (ptr16 Eq_6) code) ptr2040))
	T_2 (in ds : selector)
Eq_6: (segment)
	T_6 (in 0x2700<16> : selector)
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 Eq_1)
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in ds : selector)
  Class: Eq_2
  DataType: (ptr16 Eq_2)
  OrigDataType: (ptr16 (segment (2040 T_4 t2040)))
T_3: (in 0x2040<16> : word16)
  Class: Eq_3
  DataType: (memptr (ptr16 Eq_2) (memptr (ptr16 Eq_6) code))
  OrigDataType: (memptr T_2 (struct (0 T_4 t0000)))
T_4: (in Mem0[ds:0x2040<16>:word16] : word16)
  Class: Eq_4
  DataType: (memptr (ptr16 Eq_6) code)
  OrigDataType: word16
T_5: (in bx : word16)
  Class: Eq_4
  DataType: (memptr (ptr16 Eq_6) code)
  OrigDataType: (memptr T_6 code)
T_6: (in 0x2700<16> : selector)
  Class: Eq_6
  DataType: (ptr16 Eq_6)
  OrigDataType: (ptr16 (segment))
T_7: (in SEQ(0x2700<16>, bx) : ptr32)
  Class: Eq_7
  DataType: (ptr32 code)
  OrigDataType: (ptr32 code)
