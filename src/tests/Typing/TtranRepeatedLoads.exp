// RepeatedLoadsFragment
// Return size: 0
define RepeatedLoadsFragment
RepeatedLoadsFragment_entry:
	// succ:  l1
l1:
	x = Mem0[pfoo + 4<32>:word32]
	x = Mem0[pfoo + 4<32>:word32]
RepeatedLoadsFragment_exit:

// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_2: (struct (4 word32 dw0004))
	T_2 (in pfoo : word32)
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 Eq_1)
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in pfoo : word32)
  Class: Eq_2
  DataType: (ptr32 Eq_2)
  OrigDataType: (ptr32 (struct (4 T_5 t0004)))
T_3: (in 4<32> : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_4: (in pfoo + 4<32> : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_5: (in Mem0[pfoo + 4<32>:word32] : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_6: (in x : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_7: (in 4<32> : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_8: (in pfoo + 4<32> : word32)
  Class: Eq_8
  DataType: (ptr32 word32)
  OrigDataType: (ptr32 word32)
T_9: (in Mem0[pfoo + 4<32>:word32] : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
