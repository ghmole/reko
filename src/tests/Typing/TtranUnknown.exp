// fn0C00_0000
// Return size: 0
void fn0C00_0000(word32 ds_bx)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	Mem8[ds_bx + 0<32>:word32] = Mem0[ds_bx + 4<16>:word32]
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_2: (struct (0 word32 dw0000) (4 word32 dw0004))
	T_2 (in ds_bx : word32)
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 Eq_1)
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in ds_bx : word32)
  Class: Eq_2
  DataType: (ptr32 Eq_2)
  OrigDataType: (ptr32 (struct (0 T_8 t0000) (4 T_5 t0004)))
T_3: (in 4<16> : word16)
  Class: Eq_3
  DataType: word16
  OrigDataType: word16
T_4: (in ds_bx + 4<16> : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_5: (in Mem0[ds_bx + 4<16>:word32] : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_6: (in 0<32> : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in ds_bx + 0<32> : word32)
  Class: Eq_7
  DataType: ptr32
  OrigDataType: ptr32
T_8: (in Mem8[ds_bx + 0<32>:word32] : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
