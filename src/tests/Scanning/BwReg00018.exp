// fn10000000
// Return size: 4
define fn10000000
fn10000000_entry:
	esp = fp
	// succ:  l10000000
l10000000:
	ecx = Mem0[esi + 0x6C<32>:word32]
	SZO = cond(ecx & ecx)
	C = false
	branch Test(NE,Z) l10000012
	// succ:  l10000007 l10000012
l10000007:
	SZO = cond(ebp & ebp)
	C = false
	branch Test(EQ,Z) l10000021
	// succ:  l1000000B l10000021
l1000000B:
	SCZO = cond(eax - 0x29A<32>)
	branch Test(EQ,Z) l10000021
	// succ:  l10000012 l10000021
l10000012:
	eax = Mem0[esi + 0x7C<32>:word32]
	esp = esp - 4<i32>
	Mem0[esp:word32] = ebp
	ecx = eax + eax * 2<32>
	esp = esp - 4<i32>
	Mem0[esp:word32] = esi
	call Mem0[0x10000022<32> + ecx * 4<32>:word32] (retsize: 4;)
	// succ:  l10000021
l10000021:
	return
	// succ:  fn10000000_exit
fn10000000_exit:
// fn1000006E
// Return size: 4
define fn1000006E
fn1000006E_entry:
	esp = fp
	// succ:  l1000006E
l1000006E:
	return
	// succ:  fn1000006E_exit
fn1000006E_exit:
// fn1000006F
// Return size: 4
define fn1000006F
fn1000006F_entry:
	esp = fp
	// succ:  l1000006F
l1000006F:
	return
	// succ:  fn1000006F_exit
fn1000006F_exit:
