// fn00000000
// Return size: 0
define fn00000000
fn00000000_entry:
	r1 = fp
	// succ:  l00000000
l00000000:
	r5 = 0xFFFFD644
	r3 = 0xFFFFD644
	r3 = r3 ^ r5
	branch Test(EQ,r3) l00000040
	// succ:  l00000018 l00000040
l00000018:
	r3 = 0x00000000
	branch Test(EQ,r3) l00000040
	// succ:  l00000024 l00000040
l00000024:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x0000002C
	call 0x0000002C + r3 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn00000000_exit
l00000040:
	return
	// succ:  fn00000000_exit
fn00000000_exit:


// fn00000048
// Return size: 0
define fn00000048
fn00000048_entry:
	r1 = fp
	// succ:  l00000048
l00000048:
	r5 = 0xFFFFD644
	r3 = 0xFFFFD644
	r3 = r3 - r5
	r4 = r3
	r4 = r3 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r6 = r4
	r6 = r4 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 + r4
	r6 = r6 >> 1
	C = cond(r6)
	branch Test(EQ,r6) l0000011C
	// succ:  l000000F4 l0000011C
l000000F4:
	r3 = 0x00000000
	branch Test(EQ,r3) l0000011C
	// succ:  l00000100 l0000011C
l00000100:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x00000108
	call 0x00000108 + r3 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn00000048_exit
l0000011C:
	return
	// succ:  fn00000048_exit
fn00000048_exit:


// fn000001F0
// Return size: 0
define fn000001F0
fn000001F0_entry:
	r1 = fp
	// succ:  l000001F0
l000001F0:
	v4 = SLICE(r3, byte, 0)
	Mem0[0xFFFFD644:byte] = v4
	r1 = r1 + 0x00000024
	return
	// succ:  fn000001F0_exit
fn000001F0_exit:


// fn0000022C
// Return size: 0
define fn0000022C
fn0000022C_entry:
	r1 = fp
	// succ:  l0000022C
l0000022C:
	r15 = 0x0000022C
	call fn00000000 (retsize: 0;)
	r15 = 0x00000234
	call fn00000048 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0000022C_exit
fn0000022C_exit:


// fn00000248
// Return size: 0
define fn00000248
fn00000248_entry:
	r1 = fp
	// succ:  l00000248
l00000248:
	r8 = r5
	r7 = Mem0[0x0000D664:word32]
	r5 = Mem0[0x0000D678:word32]
	r6 = 0xFFFF99D8
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x00000270
	call fn00018150 (retsize: 0;)
	r15 = 0x0000027C
	r5 = 0x00000001
	call fn0000889C (retsize: 0;)
	r1 = r1 + 0xFFFFBFCC
	Mem0[r1 + 16420:word32] = r21
	Mem0[r1 + 16424:word32] = r22
	Mem0[r1 + 16428:word32] = r23
	Mem0[r1 + 16432:word32] = r24
	Mem0[r1:word32] = r15
	Mem0[r1 + 16416:word32] = r19
	r21 = r5
	r22 = r6
	r24 = 0x00004000
	r23 = 0x00000001
	// succ:  l000002AC_thunk_fn000002CC
l000002AC_thunk_fn000002CC:
	call fn000002CC (retsize: 0;)
	return
	// succ:  fn00000248_exit
fn00000248_exit:


// fn00000284
// Return size: 0
define fn00000284
fn00000284_entry:
	r1 = fp
	// succ:  l00000284
l00000284:
	r1 = r1 + 0xFFFFBFCC
	Mem0[r1 + 16420:word32] = r21
	Mem0[r1 + 16424:word32] = r22
	Mem0[r1 + 16428:word32] = r23
	Mem0[r1 + 16432:word32] = r24
	Mem0[r1:word32] = r15
	Mem0[r1 + 16416:word32] = r19
	r21 = r5
	r22 = r6
	r24 = 0x00004000
	r23 = 0x00000001
	// succ:  l000002AC_thunk_fn000002CC
l000002AC_thunk_fn000002CC:
	call fn000002CC (retsize: 0;)
	return
	// succ:  fn00000284_exit
fn00000284_exit:


// fn000002CC
// Return size: 0
define fn000002CC
fn000002CC_entry:
	r1 = fp
	goto l000002CC
	// succ:  l000002CC
l000002B4:
	r5 = r22
	r15 = 0x000002B8
	r6 = r1 + 0x0000001C
	call fn000041BC (retsize: 0;)
	r3 = r3 ^ r19
	branch Test(NE,r3) l000002B4_ds_t
	// succ:  l000002B4_ds_f l000002B4_ds_t
l000002B4_ds_f:
	r5 = r22
	goto l000002CC
	// succ:  l000002CC
l000002B4_ds_t:
	r5 = r22
	goto l00000358
	// succ:  l00000358
l000002CC:
	r8 = r21
	r7 = r24
	r6 = r23
	r15 = 0x000002DC
	r5 = r1 + 0x0000001C
	call fn0000871C (retsize: 0;)
	r5 = r21
	r15 = 0x000002EC
	r19 = r3
	call fn00008824 (retsize: 0;)
	branch Test(NE,r3) l00000338
	// succ:  l000002F8 l00000338
l000002F8:
	branch Test(NE,r19) l000002F8_ds_t
	// succ:  l000002F8_ds_f l000002F8_ds_t
l000002F8_ds_f:
	r7 = r19
	goto l00000300
	// succ:  l00000300
l000002F8_ds_t:
	r7 = r19
	goto l000002B4
	// succ:  l000002B4
l00000300:
	r15 = 0x00000304
	r5 = r21
	call fn000086F4 (retsize: 0;)
	r15 = 0x0000030C
	r5 = r22
	call fn00000728 (retsize: 0;)
	branch Test(NE,r3) l00000300_ds_t
	// succ:  l00000300_ds_f l00000300_ds_t
l00000300_ds_f:
	r15 = Mem0[r1:word32]
	goto l0000031C
	// succ:  l0000031C
l00000300_ds_t:
	r15 = Mem0[r1:word32]
	goto l00000368
	// succ:  l00000368
l0000031C:
	r19 = Mem0[r1 + 16416:word32]
	r21 = Mem0[r1 + 16420:word32]
	r22 = Mem0[r1 + 16424:word32]
	r23 = Mem0[r1 + 16428:word32]
	r24 = Mem0[r1 + 16432:word32]
	r1 = r1 + 0x00004034
	return
	// succ:  fn000002CC_exit
l00000338:
	r5 = 0xFFFF99E0
	r15 = 0x00000344
	call fn00008874 (retsize: 0;)
	r15 = 0x00000350
	r5 = 0x00000001
	call fn0000889C (retsize: 0;)
	// succ:  l00000358
l00000358:
	r15 = 0x00000358
	r6 = r1 + 0x0000401C
	call fn0000186C (retsize: 0;)
	r15 = 0x00000360
	r5 = r3
	call fn00000248 (retsize: 0;)
l00000368:
	r5 = 0xFFFF99E8
	r15 = 0x00000370
	call fn00000248 (retsize: 0;)
fn000002CC_exit:


// fn00000320
// Return size: 0
define fn00000320
fn00000320_entry:
	r1 = fp
	// succ:  l00000320
l00000320:
	r21 = Mem0[r1 + 16420:word32]
	r22 = Mem0[r1 + 16424:word32]
	r23 = Mem0[r1 + 16428:word32]
	r24 = Mem0[r1 + 16432:word32]
	r1 = r1 + 0x00004034
	return
	// succ:  fn00000320_exit
fn00000320_exit:


// fn00000378
// Return size: 0
define fn00000378
fn00000378_entry:
	r1 = fp
	// succ:  l00000378
l00000378:
	r1 = r1 + 0xFFFFBFCC
	Mem0[r1 + 16420:word32] = r21
	Mem0[r1 + 16424:word32] = r22
	Mem0[r1 + 16428:word32] = r23
	Mem0[r1 + 16432:word32] = r24
	Mem0[r1:word32] = r15
	Mem0[r1 + 16416:word32] = r19
	r21 = r5
	r23 = r6
	r22 = 0x00004000
	r24 = 0x00000001
	goto l000003C4
	// succ:  l000003C4
l000003A8:
	r7 = r3
	r6 = r24
	r15 = 0x000003B4
	r5 = r1 + 0x0000001C
	call fn00008750 (retsize: 0;)
	r3 = r3 ^ r19
	branch Test(NE,r3) l00000434
	// succ:  l000003C4 l00000434
l000003C4:
	r7 = r22
	r5 = r21
	r15 = 0x000003CC
	r6 = r1 + 0x0000001C
	call fn000023C8 (retsize: 0;)
	branch Test(LT,r3) l000003C4_ds_t
	// succ:  l000003C4_ds_f l000003C4_ds_t
l000003C4_ds_f:
	r19 = r3
	goto l000003DC
	// succ:  l000003DC
l000003C4_ds_t:
	r19 = r3
	goto l00000420
	// succ:  l00000420
l000003DC:
	branch Test(NE,r3) l000003DC_ds_t
	// succ:  l000003DC_ds_f l000003DC_ds_t
l000003DC_ds_f:
	r8 = r23
	goto l000003E4
	// succ:  l000003E4
l000003DC_ds_t:
	r8 = r23
	goto l000003A8
	// succ:  l000003A8
l000003E4:
	r15 = 0x000003E8
	r5 = r23
	call fn000086F4 (retsize: 0;)
	branch Test(NE,r3) l00000454
	// succ:  l000003F4 l00000454
l000003F4:
	r15 = 0x000003F4
	r5 = r21
	call fn00000728 (retsize: 0;)
	branch Test(NE,r3) l000003F4_ds_t
	// succ:  l000003F4_ds_f l000003F4_ds_t
l000003F4_ds_f:
	r15 = Mem0[r1:word32]
	goto l00000404
	// succ:  l00000404
l000003F4_ds_t:
	r15 = Mem0[r1:word32]
	goto l00000444
	// succ:  l00000444
l00000404:
	r19 = Mem0[r1 + 16416:word32]
	r21 = Mem0[r1 + 16420:word32]
	r22 = Mem0[r1 + 16424:word32]
	r23 = Mem0[r1 + 16428:word32]
	r24 = Mem0[r1 + 16432:word32]
	r1 = r1 + 0x00004034
	return
	// succ:  fn00000378_exit
l00000420:
	r5 = r21
	r15 = 0x00000424
	r6 = r1 + 0x0000401C
	call fn0000186C (retsize: 0;)
	r15 = 0x0000042C
	r5 = r3
	call fn00000248 (retsize: 0;)
	// succ:  l00000434
l00000434:
	r5 = 0xFFFF99F8
	r15 = 0x0000043C
	call fn00000248 (retsize: 0;)
l00000444:
	r5 = 0xFFFF99E8
	r15 = 0x0000044C
	call fn00000248 (retsize: 0;)
l00000454:
	r5 = 0xFFFF9A08
	r15 = 0x0000045C
	call fn00000248 (retsize: 0;)
	r1 = r1 + 0xFFFFFBD8
	Mem0[r1 + 1052:word32] = r19
	Mem0[r1 + 1060:word32] = r22
	Mem0[r1:word32] = r15
	Mem0[r1 + 1056:word32] = r21
	r19 = r5
	r15 = 0x00000480
	r22 = r6
	call fn00008CC4 (retsize: 0;)
	r3 = r3 + 0x00000003
	r4 = 0x000003FF
	r18 = cond(r4 -u r3)
	branch Test(LT,r18) l00000454_ds_t
	// succ:  l00000454_ds_f l00000454_ds_t
l00000454_ds_f:
	r8 = r19
	goto l0000049C
	// succ:  l0000049C
l00000454_ds_t:
	r8 = r19
	goto l00000518
	// succ:  l00000518
l0000049C:
	r9 = 0xFFFF9A30
	r7 = 0xFFFF9A34
	r5 = r1 + 0x0000001C
	r15 = 0x000004B4
	r6 = 0x00000400
	call fn000181D0 (retsize: 0;)
	r6 = 0xFFFF9A3C
	r15 = 0x000004C8
	r5 = r19
	call fn000086C8 (retsize: 0;)
	branch Test(EQ,r3) l0000049C_ds_t
	// succ:  l0000049C_ds_f l0000049C_ds_t
l0000049C_ds_f:
	r21 = r3
	goto l000004D8
	// succ:  l000004D8
l0000049C_ds_t:
	r21 = r3
	goto l00000578
	// succ:  l00000578
l000004D8:
	r6 = r22
	r15 = 0x000004DC
	r5 = r1 + 0x0000001C
	call fn00000A7C (retsize: 0;)
	branch Test(EQ,r3) l000004D8_ds_t
	// succ:  l000004D8_ds_f l000004D8_ds_t
l000004D8_ds_f:
	r6 = r3
	goto l000004EC
	// succ:  l000004EC
l000004D8_ds_t:
	r6 = r3
	goto l00000548
	// succ:  l00000548
l000004EC:
	r15 = 0x000004EC
	r5 = r21
	call fn00000284 (retsize: 0;)
	r15 = 0x000004F8
	r5 = r19
	call fn00009178 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 1052:word32]
	r21 = Mem0[r1 + 1056:word32]
	r22 = Mem0[r1 + 1060:word32]
	r1 = r1 + 0x00000428
	return
	// succ:  fn00000378_exit
l00000518:
	r5 = Mem0[0x0000D678:word32]
	r7 = Mem0[0x0000D664:word32]
	r6 = 0xFFFF9A18
	r15 = 0x00000534
	call fn00018150 (retsize: 0;)
	r15 = 0x00000540
	r5 = 0x00000001
	call fn0000889C (retsize: 0;)
l00000548:
	r5 = Mem0[0x0000D678:word32]
	r7 = Mem0[0x0000D664:word32]
	r6 = 0xFFFF9A40
	r15 = 0x00000564
	r8 = r1 + 0x0000001C
	call fn00018150 (retsize: 0;)
	r15 = 0x00000570
	r5 = 0x00000001
	call fn0000889C (retsize: 0;)
l00000578:
	r15 = 0x0000057C
	r5 = r19
	call fn00008874 (retsize: 0;)
	r15 = 0x00000588
	r5 = 0x00000001
	call fn0000889C (retsize: 0;)
	r1 = r1 + 0xFFFFFBD4
	Mem0[r1 + 1052:word32] = r19
	Mem0[r1 + 1056:word32] = r21
	Mem0[r1:word32] = r15
	Mem0[r1 + 1060:word32] = r22
	Mem0[r1 + 1064:word32] = r23
	r15 = 0x000005AC
	r21 = r5
	call fn00008CC4 (retsize: 0;)
	r19 = r3
	r3 = 0x000003FF
	r4 = r19 + 0x00000003
	r18 = cond(r3 -u r4)
	branch Test(LT,r18) l00000578_ds_t
	// succ:  l00000578_ds_f l00000578_ds_t
l00000578_ds_f:
	r8 = r21
	goto l000005CC
	// succ:  l000005CC
l00000578_ds_t:
	r8 = r21
	goto l000006B0
	// succ:  l000006B0
l000005CC:
	r7 = 0xFFFF9A58
	r5 = r1 + 0x0000001C
	r15 = 0x000005DC
	r6 = 0x00000400
	call fn000181D0 (retsize: 0;)
	r3 = 0x00000003
	r18 = cond(r3 -u r19)
	branch Test(GE,r18) l000005CC_ds_t
	// succ:  l000005CC_ds_f l000005CC_ds_t
l000005CC_ds_f:
	r22 = r19 + 0xFFFFFFFD
	goto l000005F4
	// succ:  l000005F4
l000005CC_ds_t:
	r22 = r19 + 0xFFFFFFFD
	goto l00000610
	// succ:  l00000610
l000005F4:
	r6 = 0xFFFF9A30
	r15 = 0x00000600
	r5 = r21 + r22
	call fn00008E58 (retsize: 0;)
	branch Test(EQ,r3) l000005F4_ds_t
	// succ:  l000005F4_ds_f l000005F4_ds_t
l000005F4_ds_f:
	r22 = r1 + r22
	goto l00000610
	// succ:  l00000610
l000005F4_ds_t:
	r22 = r1 + r22
	goto l000006A0
	// succ:  l000006A0
l00000610:
	r8 = 0xFFFF9A30
	r7 = 0xFFFF9A58
	r22 = r1 + 0x0000001C
	r3 = 0x00000400
	r6 = r3 - r19
	r5 = r22 + r19
	r15 = 0x00000634
	r23 = r21
	call fn000181D0 (retsize: 0;)
	goto l0000063C
	// succ:  l0000063C
l00000610_ds_f:
	r19 = r3
	goto l00000654
	// succ:  l00000654
l00000610_ds_t:
	r19 = r3
	goto l000006F8
	// succ:  l000006F8
l0000063C:
	r6 = 0xFFFF9A3C
	r15 = 0x00000644
	r5 = r22
	call fn00000A7C (retsize: 0;)
	branch Test(EQ,r3) l00000610_ds_t
	goto l00000610_ds_f
	// succ:  l00000610_ds_f l00000610_ds_t
l00000654:
	r6 = 0xFFFF9A5C
	r15 = 0x00000660
	r5 = r23
	call fn000086C8 (retsize: 0;)
	branch Test(EQ,r3) l00000654_ds_t
	// succ:  l00000654_ds_f l00000654_ds_t
l00000654_ds_f:
	r6 = r3
	goto l00000670
	// succ:  l00000670
l00000654_ds_t:
	r6 = r3
	goto l000006E0
	// succ:  l000006E0
l00000670:
	r15 = 0x00000670
	r5 = r19
	call fn00000378 (retsize: 0;)
	r15 = 0x0000067C
	r5 = r22
	call fn00009178 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 1052:word32]
	r21 = Mem0[r1 + 1056:word32]
	r22 = Mem0[r1 + 1060:word32]
	r23 = Mem0[r1 + 1064:word32]
	r1 = r1 + 0x0000042C
	return
	// succ:  fn00000378_exit
l000006A0:
	v17 = SLICE(r3, byte, 0)
	Mem0[r22 + 28:byte] = v17
	r23 = r1 + 0x0000001C
	r22 = r21
	goto l0000063C
	// succ:  l0000063C
l000006B0:
	r5 = Mem0[0x0000D678:word32]
	r7 = Mem0[0x0000D664:word32]
	r6 = 0xFFFF9A18
	r15 = 0x000006CC
	call fn00018150 (retsize: 0;)
	r15 = 0x000006D8
	r5 = 0x00000001
	call fn0000889C (retsize: 0;)
l000006E0:
	r15 = 0x000006E4
	r5 = r21
	call fn00008874 (retsize: 0;)
	r15 = 0x000006F0
	r5 = 0x00000001
	call fn0000889C (retsize: 0;)
l000006F8:
	r5 = Mem0[0x0000D678:word32]
	r7 = Mem0[0x0000D664:word32]
	r6 = 0xFFFF9A40
	r15 = 0x00000714
	r8 = r22
	call fn00018150 (retsize: 0;)
	r15 = 0x00000720
	r5 = 0x00000001
	call fn0000889C (retsize: 0;)
fn00000378_exit:


// fn0000040C
// Return size: 0
define fn0000040C
fn0000040C_entry:
	r1 = fp
	// succ:  l0000040C
l0000040C:
	r22 = Mem0[r1 + 16424:word32]
	r23 = Mem0[r1 + 16428:word32]
	r24 = Mem0[r1 + 16432:word32]
	r1 = r1 + 0x00004034
	return
	// succ:  fn0000040C_exit
fn0000040C_exit:


// fn00000538
// Return size: 0
define fn00000538
fn00000538_entry:
	r1 = fp
	// succ:  l00000538
l00000538:
	r15 = 0x00000540
	r5 = 0x00000001
	call fn0000889C (retsize: 0;)
fn00000538_exit:


// fn00000728
// Return size: 0
define fn00000728
fn00000728_entry:
	r1 = fp
	// succ:  l00000728
l00000728:
	branch Test(EQ,r5) l00000768
	// succ:  l0000072C l00000768
l0000072C:
	r3 = Mem0[r5 + 12:word32]
	r1 = r1 + 0xFFFFFFE4
	r3 = r3 ^ 0x00001C4F
	branch Test(EQ,r3) l0000072C_ds_t
	// succ:  l0000072C_ds_f l0000072C_ds_t
l0000072C_ds_f:
	Mem0[r1:word32] = r15
	goto l00000740
	// succ:  l00000740
l0000072C_ds_t:
	Mem0[r1:word32] = r15
	goto l00000754
	// succ:  l00000754
l00000740:
	r15 = 0x00000740
	call fn00005538 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn00000728_exit
l00000754:
	r15 = 0x00000754
	call fn00003894 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn00000728_exit
l00000768:
	r3 = 0xFFFFFFFE
	return
	// succ:  fn00000728_exit
fn00000728_exit:


// fn00000770
// Return size: 0
define fn00000770
fn00000770_entry:
	r1 = fp
	// succ:  l00000770
l00000770:
	r1 = r1 + 0xFFFFFFCC
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r20
	Mem0[r1 + 36:word32] = r21
	Mem0[r1 + 40:word32] = r22
	Mem0[r1 + 44:word32] = r23
	branch Test(EQ,r5) l00000770_ds_t
	// succ:  l00000770_ds_f l00000770_ds_t
l00000770_ds_f:
	Mem0[r1 + 48:word32] = r24
	goto l00000794
	// succ:  l00000794
l00000770_ds_t:
	Mem0[r1 + 48:word32] = r24
	goto l00000A50
	// succ:  l00000A50
l00000794:
	r22 = r5
	r5 = 0x0000008C
	r23 = r6
	r15 = 0x000007A4
	r21 = r7
	call fn00008918 (retsize: 0;)
	branch Test(EQ,r3) l00000794_ds_t
	// succ:  l00000794_ds_f l00000794_ds_t
l00000794_ds_f:
	r19 = r3
	goto l000007B4
	// succ:  l000007B4
l00000794_ds_t:
	r19 = r3
	goto l00000A50
	// succ:  l00000A50
l000007B4:
	v14 = Mem0[r21:byte]
	r3 = (word32) v14
	r4 = 0x00002000
	Mem0[r19 + 28:word32] = r4
	r4 = 0xFFFFFFFF
	Mem0[r19 + 60:word32] = r4
	Mem0[r19 + 24:word32] = r0
	Mem0[r19 + 80:word32] = r0
	Mem0[r19 + 12:word32] = r0
	Mem0[r19 + 64:word32] = r0
	Mem0[r19 + 40:word32] = r0
	v17 = SLICE(r3, int8, 0)
	r3 = (int32) v17
	branch Test(EQ,r3) l000007B4_ds_t
	// succ:  l000007B4_ds_f l000007B4_ds_t
l000007B4_ds_f:
	r24 = 0x00000000
	goto l000007E8
	// succ:  l000007E8
l000007B4_ds_t:
	r24 = 0x00000000
	goto l00000938
	// succ:  l00000938
l000007E8:
	r6 = 0x00000009
	r7 = 0x0000004D
	r8 = 0x00000001
	r20 = 0x00000004
	r12 = 0x00000003
	r11 = 0x00000002
	r10 = 0x000079B1
	r9 = 0x00001C4F
	goto l00000820
	// succ:  l00000820
l0000080C:
	Mem0[r19 + 60:word32] = r4
	// succ:  l00000810
l00000810:
	r21 = r21 + 0x00000001
	v24 = Mem0[r21:byte]
	r3 = (word32) v24
	v25 = SLICE(r3, int8, 0)
	r3 = (int32) v25
	branch Test(EQ,r3) l0000085C
	// succ:  l00000820 l0000085C
l00000820:
	r4 = r3 + 0xFFFFFFD0
	r5 = r4 & 0x000000FF
	r18 = cond(r6 -u r5)
	branch Test(GE,r18) l00000820_ds_t
	// succ:  l00000820_ds_f l00000820_ds_t
l00000820_ds_f:
	r3 = r3 + 0xFFFFFFD5
	goto l00000834
	// succ:  l00000834
l00000820_ds_t:
	r3 = r3 + 0xFFFFFFD5
	goto l0000080C
	// succ:  l0000080C
l00000834:
	r3 = r3 & 0x000000FF
	r18 = cond(r7 -u r3)
	branch Test(LT,r18) l00000810
	// succ:  l00000840 l00000810
l00000840:
	r4 = r3
	r4 = r3 + r3
	r4 = r4 + r4
	r3 = r4 + 0xFFFF9ABC
	r3 = Mem0[r3:word32]
	call r3 (retsize: 0;)
	return
	// succ:  fn00000770_exit
l0000085C:
	r3 = Mem0[r19 + 12:word32]
	branch Test(EQ,r3) l0000085C_ds_t
	// succ:  l0000085C_ds_f l0000085C_ds_t
l0000085C_ds_f:
	r3 = r3 ^ 0x00001C4F
	goto l00000868
	// succ:  l00000868
l0000085C_ds_t:
	r3 = r3 ^ 0x00001C4F
	goto l00000938
	// succ:  l00000938
l00000868:
	branch Test(EQ,r3) l0000092C
	// succ:  l0000086C l0000092C
l0000086C:
	r15 = 0x00000870
	r5 = r22
	call fn00008CC4 (retsize: 0;)
	r21 = r3 + 0x00000001
	r15 = 0x00000880
	r5 = r21
	call fn00008918 (retsize: 0;)
	branch Test(EQ,r3) l0000086C_ds_t
	// succ:  l0000086C_ds_f l0000086C_ds_t
l0000086C_ds_f:
	Mem0[r19 + 20:word32] = r3
	goto l00000890
	// succ:  l00000890
l0000086C_ds_t:
	Mem0[r19 + 20:word32] = r3
	goto l00000938
	// succ:  l00000938
l00000890:
	r6 = r21
	r8 = r22
	r7 = 0xFFFF9AB8
	r15 = 0x000008A4
	r5 = r3
	call fn000181D0 (retsize: 0;)
	r3 = Mem0[r19 + 12:word32]
	r6 = r3 ^ 0x00001C4F
	branch Test(EQ,r6) l000008D4
	// succ:  l000008B8 l000008D4
l000008B8:
	branch Test(NE,r24) l000008B8_ds_t
	// succ:  l000008B8_ds_f l000008B8_ds_t
l000008B8_ds_f:
	r6 = 0x00000E01
	goto l000008C0
	// succ:  l000008C0
l000008B8_ds_t:
	r6 = 0x00000E01
	goto l000009BC
	// succ:  l000009BC
l000008C0:
	r6 = 0x00000601
	r5 = 0x00000209
	// succ:  l000008C8
l000008C8:
	r4 = r3 ^ 0x000079B1
	branch Test(EQ,r4) l000008D4
	// succ:  l000008D0 l000008D4
l000008D0:
	r6 = r5
	// succ:  l000008D4
l000008D4:
	branch Test(LT,r23) l000008D4_ds_t
	// succ:  l000008D4_ds_f l000008D4_ds_t
l000008D4_ds_f:
	r21 = r3 ^ 0x00000001
	goto l000008DC
	// succ:  l000008DC
l000008D4_ds_t:
	r21 = r3 ^ 0x00000001
	goto l000009C4
	// succ:  l000009C4
l000008DC:
	branch Test(EQ,r21) l000008DC_ds_t
	// succ:  l000008DC_ds_f l000008DC_ds_t
l000008DC_ds_f:
	Mem0[r19 + 16:word32] = r23
	goto l000008E4
	// succ:  l000008E4
l000008DC_ds_t:
	Mem0[r19 + 16:word32] = r23
	goto l000009F0
	// succ:  l000009F0
l000008E4:
	r6 = r3 ^ 0x00001C4F
	branch Test(EQ,r6) l000008E4_ds_t
	// succ:  l000008E4_ds_f l000008E4_ds_t
l000008E4_ds_f:
	r5 = r23
	goto l000008F0
	// succ:  l000008F0
l000008E4_ds_t:
	r5 = r23
	goto l00000A14
	// succ:  l00000A14
l000008F0:
	Mem0[r19:word32] = r0
	// succ:  l000008F0_thunk_fn00000A34
l000008F0_thunk_fn00000A34:
	call fn00000A34 (retsize: 0;)
	return
	// succ:  fn00000770_exit
l0000092C:
	r4 = Mem0[r19 + 40:word32]
	branch Test(EQ,r4) l0000092C_ds_t
	// succ:  l0000092C_ds_f l0000092C_ds_t
l0000092C_ds_f:
	r3 = 0x00000001
	goto l00000938
	// succ:  l00000938
l0000092C_ds_t:
	r3 = 0x00000001
	goto l000009B4
	// succ:  l000009B4
l00000938:
	r5 = r19
	r15 = 0x00000940
	r19 = 0x00000000
	call fn000188F0 (retsize: 0;)
l000009B4:
	Mem0[r19 + 40:word32] = r3
	goto l0000086C
	// succ:  l0000086C
l000009BC:
	r5 = 0x00000A09
	goto l000008C8
	// succ:  l000008C8
l000009C4:
	r5 = r22
	r15 = 0x000009CC
	r7 = 0x000001B6
	call fn00008BB4 (retsize: 0;)
	Mem0[r19 + 16:word32] = r3
	r21 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r21) l000009C4_ds_t
	// succ:  l000009C4_ds_f l000009C4_ds_t
l000009C4_ds_f:
	r23 = r3
	goto l000009E4
	// succ:  l000009E4
l000009C4_ds_t:
	r23 = r3
	goto l00000A58
	// succ:  l00000A58
l000009E4:
	r3 = Mem0[r19 + 12:word32]
	r21 = r3 ^ 0x00000001
	branch Test(NE,r21) l000008E4
	// succ:  l000009F0 l000008E4
l000009F0:
	r6 = r21
	r5 = r23
	r15 = 0x000009FC
	r7 = 0x00000002
	call fn00009120 (retsize: 0;)
	r4 = 0x000079B1
	Mem0[r19 + 12:word32] = r4
	Mem0[r19:word32] = r21
	// succ:  l00000A0C_thunk_fn00000A34
l00000A0C_thunk_fn00000A34:
	call fn00000A34 (retsize: 0;)
	return
	// succ:  fn00000770_exit
l00000A14:
	r15 = 0x00000A18
	r7 = 0x00000001
	call fn00009120 (retsize: 0;)
	Mem0[r19 + 48:word32] = r3
	r4 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r4) l00000A14_ds_t
	// succ:  l00000A14_ds_f l00000A14_ds_t
l00000A14_ds_f:
	r3 = Mem0[r19 + 12:word32]
	goto l00000A2C_thunk_fn00000A30
	// succ:  l00000A2C_thunk_fn00000A30
l00000A14_ds_t:
	r3 = Mem0[r19 + 12:word32]
	goto l00000A2C_thunk_fn00000A34
	// succ:  l00000A2C_thunk_fn00000A34
l00000A2C_thunk_fn00000A30:
	call fn00000A30 (retsize: 0;)
	return
	// succ:  fn00000770_exit
l00000A2C_thunk_fn00000A34:
	call fn00000A34 (retsize: 0;)
	return
	// succ:  fn00000770_exit
l00000A50:
	r19 = 0x00000000
	// succ:  l00000A50_thunk_fn00000A34
l00000A50_thunk_fn00000A34:
	call fn00000A34 (retsize: 0;)
	return
	// succ:  fn00000770_exit
l00000A58:
	r15 = 0x00000A5C
	r5 = Mem0[r19 + 20:word32]
	call fn000188F0 (retsize: 0;)
	r5 = r19
	r15 = 0x00000A6C
	r19 = r21
	call fn000188F0 (retsize: 0;)
	r3 = r19
	// succ:  l00000A74_thunk_fn00000A34
l00000A74_thunk_fn00000A34:
	call fn00000A34 (retsize: 0;)
	return
	// succ:  fn00000770_exit
fn00000770_exit:


// fn00000A24
// Return size: 0
define fn00000A24
fn00000A24_entry:
	r1 = fp
	// succ:  l00000A24
l00000A24:
	r4 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r4) l00000A24_ds_t
	// succ:  l00000A24_ds_f l00000A24_ds_t
l00000A24_ds_f:
	r3 = Mem0[r19 + 12:word32]
	goto l00000A2C_thunk_fn00000A30
	// succ:  l00000A2C_thunk_fn00000A30
l00000A24_ds_t:
	r3 = Mem0[r19 + 12:word32]
	goto l00000A2C_thunk_fn00000A34
	// succ:  l00000A2C_thunk_fn00000A34
l00000A2C_thunk_fn00000A30:
	call fn00000A30 (retsize: 0;)
	return
	// succ:  fn00000A24_exit
l00000A2C_thunk_fn00000A34:
	call fn00000A34 (retsize: 0;)
	return
	// succ:  fn00000A24_exit
fn00000A24_exit:


// fn00000A30
// Return size: 0
define fn00000A30
fn00000A30_entry:
	r1 = fp
	// succ:  l00000A30
l00000A30:
	Mem0[r19 + 48:word32] = r4
	// succ:  l00000A30_thunk_fn00000A34
l00000A30_thunk_fn00000A34:
	call fn00000A34 (retsize: 0;)
	return
	// succ:  fn00000A30_exit
fn00000A30_exit:


// fn00000A34
// Return size: 0
define fn00000A34
fn00000A34_entry:
	r1 = fp
	goto l00000A34
	// succ:  l00000A34
l000008F0_ds_f:
	Mem0[r19 + 72:word32] = r0
	goto l00000900
	// succ:  l00000900
l000008F0_ds_t:
	Mem0[r19 + 72:word32] = r0
	goto l0000091C
	// succ:  l0000091C
l000008F4:
	r5 = Mem0[r19 + 80:word32]
	branch Test(EQ,r5) l000008F0_ds_t
	goto l000008F0_ds_f
	// succ:  l000008F0_ds_f l000008F0_ds_t
l00000900:
	r3 = Mem0[r19 + 76:word32]
	r3 = r3 ^ 0xFFFFFFFC
	branch Test(EQ,r3) l00000918
	// succ:  l0000090C l00000918
l0000090C:
	r15 = 0x00000910
	call fn000188F0 (retsize: 0;)
l00000918:
	Mem0[r19 + 80:word32] = r0
	// succ:  l0000091C
l0000091C:
	Mem0[r19 + 76:word32] = r0
	Mem0[r19 + 8:word32] = r0
	Mem0[r19 + 88:word32] = r0
	// succ:  l00000948
l00000948:
	r3 = r19
	// succ:  l0000094C
l0000094C:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r24 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn00000A34_exit
l00000A34:
	r3 = r3 ^ 0x00001C4F
	branch Test(NE,r3) l00000A34_ds_t
	// succ:  l00000A34_ds_f l00000A34_ds_t
l00000A34_ds_f:
	Mem0[r19:word32] = r0
	goto l00000A40
	// succ:  l00000A40
l00000A34_ds_t:
	Mem0[r19:word32] = r0
	goto l000008F4
	// succ:  l000008F4
l00000A40:
	Mem0[r19 + 52:word32] = r3
	Mem0[r19 + 56:word32] = r3
	Mem0[r19 + 44:word32] = r3
	goto l000008F4
	// succ:  l000008F4
fn00000A34_exit:


// fn00000A64
// Return size: 0
define fn00000A64
fn00000A64_entry:
	r1 = fp
	goto l00000A64
	// succ:  l00000A64
l0000094C_in_fn00000A64:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r24 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn00000A64_exit
l00000A64:
	r5 = r19
	r15 = 0x00000A6C
	r19 = r21
	call fn000188F0 (retsize: 0;)
	r3 = r19
	goto l0000094C_in_fn00000A64
	// succ:  l0000094C_in_fn00000A64
fn00000A64_exit:


// fn00000A7C
// Return size: 0
define fn00000A7C
fn00000A7C_entry:
	r1 = fp
	// succ:  l00000A7C
l00000A7C:
	r7 = r6
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x00000A88
	r6 = 0xFFFFFFFF
	call fn00000770 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn00000A7C_exit
fn00000A7C_exit:


// fn0000186C
// Return size: 0
define fn0000186C
fn0000186C_entry:
	r1 = fp
	// succ:  l0000186C
l0000186C:
	branch Test(EQ,r5) l0000195C
	// succ:  l00001870 l0000195C
l00001870:
	r3 = Mem0[r5 + 12:word32]
	r7 = r3 ^ 0x00001C4F
	r4 = -r7
	r4 = r4 | r7
	branch Test(GE,r4) l00001914
	// succ:  l00001884 l00001914
l00001884:
	r3 = r3 ^ 0x000079B1
	r4 = -r3
	r3 = r4 | r3
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l0000195C
	// succ:  l00001914 l0000195C
l00001914:
	branch Test(EQ,r6) l00001914_ds_t
	// succ:  l00001914_ds_f l00001914_ds_t
l00001914_ds_f:
	r3 = Mem0[r5 + 76:word32]
	goto l0000191C
	// succ:  l0000191C
l00001914_ds_t:
	r3 = Mem0[r5 + 76:word32]
	goto l00001924
	// succ:  l00001924
l0000191C:
	Mem0[r6:word32] = r3
	r3 = Mem0[r5 + 76:word32]
	// succ:  l00001924
l00001924:
	r3 = r3 ^ 0xFFFFFFFC
	branch Test(EQ,r3) l0000193C
	// succ:  l0000192C l0000193C
l0000192C:
	r3 = Mem0[r5 + 80:word32]
	branch Test(EQ,r3) l0000194C
	// succ:  l00001934 l0000194C
l00001934:
	return
	// succ:  fn0000186C_exit
l0000193C:
	r3 = 0xFFFF9BFC
	return
	// succ:  fn0000186C_exit
l0000194C:
	r3 = 0xFFFF9C0C
	return
	// succ:  fn0000186C_exit
l0000195C:
	r3 = 0x00000000
	return
	// succ:  fn0000186C_exit
fn0000186C_exit:


// fn00001A68
// Return size: 0
define fn00001A68
fn00001A68_entry:
	r1 = fp
	// succ:  l00001A68
l00001A68:
	r1 = r1 + 0xFFFFFFD0
	Mem0[r1 + 32:word32] = r19
	Mem0[r1 + 36:word32] = r21
	Mem0[r1:word32] = r15
	Mem0[r1 + 40:word32] = r22
	Mem0[r1 + 44:word32] = r23
	r19 = r5
	r5 = Mem0[r5 + 80:word32]
	branch Test(EQ,r5) l00001A68_ds_t
	// succ:  l00001A68_ds_f l00001A68_ds_t
l00001A68_ds_f:
	r21 = r7
	goto l00001A90
	// succ:  l00001A90
l00001A68_ds_t:
	r21 = r7
	goto l00001AB0
	// succ:  l00001AB0
l00001A90:
	r3 = Mem0[r19 + 76:word32]
	r3 = r3 ^ 0xFFFFFFFC
	branch Test(EQ,r3) l00001AAC
	// succ:  l00001A9C l00001AAC
l00001A9C:
	r15 = 0x00001AA0
	Mem0[r1 + 28:word32] = r6
	call fn000188F0 (retsize: 0;)
	r6 = Mem0[r1 + 28:word32]
	// succ:  l00001AAC
l00001AAC:
	Mem0[r19 + 80:word32] = r0
	// succ:  l00001AB0
l00001AB0:
	r3 = -r6
	r3 = r3 | r6
	branch Test(GE,r3) l00001AB0_ds_t
	// succ:  l00001AB0_ds_f l00001AB0_ds_t
l00001AB0_ds_f:
	r4 = r6 ^ 0xFFFFFFFB
	goto l00001AC0
	// succ:  l00001AC0
l00001AB0_ds_t:
	r4 = r6 ^ 0xFFFFFFFB
	goto l00001AD4
	// succ:  l00001AD4
l00001AC0:
	r3 = -r4
	r3 = r3 | r4
	branch Test(GE,r3) l00001AC0_ds_t
	// succ:  l00001AC0_ds_f l00001AC0_ds_t
l00001AC0_ds_f:
	r3 = -r21
	goto l00001AD0
	// succ:  l00001AD0
l00001AC0_ds_t:
	r3 = -r21
	goto l00001AD8
	// succ:  l00001AD8
l00001AD0:
	Mem0[r19:word32] = r0
	// succ:  l00001AD4
l00001AD4:
	r3 = -r21
	// succ:  l00001AD8
l00001AD8:
	r3 = r21 | r3
	branch Test(GE,r3) l00001AD8_ds_t
	// succ:  l00001AD8_ds_f l00001AD8_ds_t
l00001AD8_ds_f:
	Mem0[r19 + 76:word32] = r6
	goto l00001AE4
	// succ:  l00001AE4
l00001AD8_ds_t:
	Mem0[r19 + 76:word32] = r6
	goto l00001B7C
	// succ:  l00001B7C
l00001AE4:
	r6 = r6 ^ 0xFFFFFFFC
	r3 = -r6
	r6 = r3 | r6
	branch Test(GE,r6) l00001AE4_ds_t
	// succ:  l00001AE4_ds_f l00001AE4_ds_t
l00001AE4_ds_f:
	r15 = Mem0[r1:word32]
	goto l00001AF8
	// succ:  l00001AF8
l00001AE4_ds_t:
	r15 = Mem0[r1:word32]
	goto l00001B80
	// succ:  l00001B80
l00001AF8:
	r23 = Mem0[r19 + 20:word32]
	r15 = 0x00001B00
	r5 = r23
	call fn00018CC4 (retsize: 0;)
	r5 = r21
	r15 = 0x00001B10
	r22 = r3
	call fn00018CC4 (retsize: 0;)
	r3 = r22 + r3
	r15 = 0x00001B20
	r5 = r3 + 0x00000003
	call fn00018918 (retsize: 0;)
	Mem0[r19 + 80:word32] = r3
	branch Test(EQ,r3) l00001AF8_ds_t
	// succ:  l00001AF8_ds_f l00001AF8_ds_t
l00001AF8_ds_f:
	r22 = r3
	goto l00001B34
	// succ:  l00001B34
l00001AF8_ds_t:
	r22 = r3
	goto l00001B98
	// succ:  l00001B98
l00001B34:
	r15 = 0x00001B38
	r5 = r23
	call fn00018CC4 (retsize: 0;)
	r5 = r21
	r15 = 0x00001B48
	r19 = r3
	call fn00018CC4 (retsize: 0;)
	r10 = r21
	r9 = 0xFFFF9C10
	r8 = r23
	r7 = 0xFFFF9C14
	r5 = r22
	r3 = r19 + r3
	r15 = 0x00001B74
	r6 = r3 + 0x00000003
	call fn000181D0 (retsize: 0;)
l00001B7C:
	r15 = Mem0[r1:word32]
	// succ:  l00001B80
l00001B80:
	r19 = Mem0[r1 + 32:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r1 = r1 + 0x00000030
	return
	// succ:  fn00001A68_exit
l00001B98:
	r3 = 0xFFFFFFFC
	Mem0[r19 + 76:word32] = r3
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 32:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r1 = r1 + 0x00000030
	return
	// succ:  fn00001A68_exit
fn00001A68_exit:


// fn00001BBC
// Return size: 0
define fn00001BBC
fn00001BBC_entry:
	r1 = fp
	// succ:  l00001BBC
l00001BBC:
	r1 = r1 + 0xFFFFFFC0
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 52:word32] = r26
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 56:word32] = r27
	Mem0[r1 + 60:word32] = r28
	r21 = r5
	r22 = 0x00000000
	r26 = 0x00000001
	r25 = Mem0[r5 + 100:word32]
	r24 = r5 + 0x00000054
	r23 = 0x00000000
	goto l00001C44
	// succ:  l00001C44
l00001C08:
	r6 = r23
	// succ:  l00001C0C
l00001C0C:
	r15 = 0x00001C10
	r5 = r24
	call fnFFFFCC80 (retsize: 0;)
	r4 = r3 + 0x00000002
	r4 = r4 & 0xFFFFFFFB
	branch Test(EQ,r4) l00001C0C_ds_t
	// succ:  l00001C0C_ds_f l00001C0C_ds_t
l00001C0C_ds_f:
	r4 = r3 ^ 0xFFFFFFFC
	goto l00001C28
	// succ:  l00001C28
l00001C0C_ds_t:
	r4 = r3 ^ 0xFFFFFFFC
	goto l00001DC4
	// succ:  l00001DC4
l00001C28:
	branch Test(EQ,r4) l00001C28_ds_t
	// succ:  l00001C28_ds_f l00001C28_ds_t
l00001C28_ds_f:
	r4 = r3 ^ 0xFFFFFFFD
	goto l00001C30
	// succ:  l00001C30
l00001C28_ds_t:
	r4 = r3 ^ 0xFFFFFFFD
	goto l00001DE0
	// succ:  l00001DE0
l00001C30:
	branch Test(EQ,r4) l00001DFC
	// succ:  l00001C34 l00001DFC
l00001C34:
	r5 = Mem0[r21 + 100:word32]
	branch Test(EQ,r5) l00001E18
	// succ:  l00001C3C l00001E18
l00001C3C:
	r3 = r3 ^ 0x00000001
	branch Test(EQ,r3) l00001E40
	// succ:  l00001C44 l00001E40
l00001C44:
	r3 = Mem0[r21 + 88:word32]
	branch Test(NE,r3) l00001C44_ds_t
	// succ:  l00001C44_ds_f l00001C44_ds_t
l00001C44_ds_f:
	r6 = r23
	goto l00001C50
	// succ:  l00001C50
l00001C44_ds_t:
	r6 = r23
	goto l00001C0C
	// succ:  l00001C0C
l00001C50:
	r3 = Mem0[r21 + 76:word32]
	r4 = -r3
	r4 = r4 | r3
	branch Test(GE,r4) l00001C50_ds_t
	// succ:  l00001C50_ds_f l00001C50_ds_t
l00001C50_ds_f:
	r3 = r3 ^ 0xFFFFFFFB
	goto l00001C64
	// succ:  l00001C64
l00001C50_ds_t:
	r3 = r3 ^ 0xFFFFFFFB
	goto l00001CF4
	// succ:  l00001CF4
l00001C64:
	r4 = -r3
	r3 = r4 | r3
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l00001C64_ds_t
	// succ:  l00001C64_ds_f l00001C64_ds_t
l00001C64_ds_f:
	r3 = 0xFFFFFFFF
	goto l00001CF4
	// succ:  l00001CF4
l00001C64_ds_t:
	r3 = 0xFFFFFFFF
	goto l00001D94
	// succ:  l00001D94
l00001CF4:
	r19 = Mem0[r21 + 52:word32]
	branch Test(NE,r19) l00001CF4_ds_t
	// succ:  l00001CF4_ds_f l00001CF4_ds_t
l00001CF4_ds_f:
	r5 = r21
	goto l00001D00
	// succ:  l00001D00
l00001CF4_ds_t:
	r5 = r21
	goto l00001D68
	// succ:  l00001D68
l00001D00:
	r28 = Mem0[r21 + 32:word32]
	r27 = Mem0[r21 + 24:word32]
	goto l00001D14
	// succ:  l00001D14
l00001D0C:
	r18 = cond(r19 -u r27)
	branch Test(GE,r18) l00001D4C
	// succ:  l00001D14 l00001D4C
l00001D14:
	r7 = r27 - r19
	r18 = cond(r22 -u r7)
	branch Test(GE,r18) l00001D14_ds_t
	// succ:  l00001D14_ds_f l00001D14_ds_t
l00001D14_ds_f:
	r6 = r28 + r19
	goto l00001D24
	// succ:  l00001D24
l00001D14_ds_t:
	r6 = r28 + r19
	goto l00001D28
	// succ:  l00001D28
l00001D24:
	r7 = r22
	// succ:  l00001D28
l00001D28:
	r15 = 0x00001D2C
	r5 = Mem0[r21 + 16:word32]
	call fn000190F0 (retsize: 0;)
	branch Test(GT,r3) l00001D28_ds_t
	// succ:  l00001D28_ds_f l00001D28_ds_t
l00001D28_ds_f:
	r19 = r19 + r3
	goto l00001D3C
	// succ:  l00001D3C
l00001D28_ds_t:
	r19 = r19 + r3
	goto l00001D0C
	// succ:  l00001D0C
l00001D3C:
	r19 = r19 - r3
	branch Test(NE,r3) l00001D3C_ds_t
	// succ:  l00001D3C_ds_f l00001D3C_ds_t
l00001D3C_ds_f:
	r5 = r21
	goto l00001D48
	// succ:  l00001D48
l00001D3C_ds_t:
	r5 = r21
	goto l00001E70
	// succ:  l00001E70
l00001D48:
	Mem0[r21 + 52:word32] = r26
	goto l00001D4C
	// succ:  l00001D4C
l00001D48_ds_f:
	Mem0[r21 + 88:word32] = r19
	goto l00001D64
	// succ:  l00001D64
l00001D48_ds_t:
	Mem0[r21 + 88:word32] = r19
	goto l00001C08
	// succ:  l00001C08
l00001D4C:
	r3 = Mem0[r21 + 88:word32]
	r4 = Mem0[r21 + 32:word32]
	r19 = r19 + r3
	Mem0[r21 + 84:word32] = r4
	branch Test(NE,r19) l00001D48_ds_t
	goto l00001D48_ds_f
	// succ:  l00001D48_ds_f l00001D48_ds_t
l00001D64:
	r5 = r21
	// succ:  l00001D68
l00001D68:
	r7 = 0xFFFF9C34
	r15 = 0x00001D70
	r6 = 0xFFFFFFFB
	call fn00001A68 (retsize: 0;)
	r4 = Mem0[r21 + 100:word32]
	r5 = Mem0[r21 + 96:word32]
	r3 = 0x00000000
	r25 = r25 - r4
	r4 = r5 - r25
	Mem0[r21:word32] = r25
	Mem0[r21 + 4:word32] = r4
	// succ:  l00001D94
l00001D94:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r28 = Mem0[r1 + 60:word32]
	r1 = r1 + 0x00000040
	return
	// succ:  fn00001BBC_exit
l00001DC4:
	r7 = 0xFFFF9C68
	r5 = r21
	r15 = 0x00001DD0
	r6 = 0xFFFFFFFE
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l00001D94
	// succ:  l00001D94
l00001DE0:
	r7 = 0xFFFF9C90
	r5 = r21
	r15 = 0x00001DEC
	r6 = 0xFFFFFFFC
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l00001D94
	// succ:  l00001D94
l00001DFC:
	r7 = Mem0[r21 + 108:word32]
	branch Test(EQ,r7) l00001E60
	// succ:  l00001E04 l00001E60
l00001E04:
	r5 = r21
	// succ:  l00001E08
l00001E08:
	r15 = 0x00001E08
	r6 = 0xFFFFFFFD
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l00001D94
	// succ:  l00001D94
l00001E18:
	r6 = Mem0[r21 + 96:word32]
	Mem0[r21:word32] = r25
	r4 = r3 ^ 0x00000001
	r25 = r6 - r25
	Mem0[r21 + 4:word32] = r25
	branch Test(NE,r4) l00001E18_ds_t
	// succ:  l00001E18_ds_f l00001E18_ds_t
l00001E18_ds_f:
	r3 = r5
	goto l00001E34
	// succ:  l00001E34
l00001E18_ds_t:
	r3 = r5
	goto l00001D94
	// succ:  l00001D94
l00001E34:
	Mem0[r21 + 44:word32] = r0
	r3 = 0x00000000
	goto l00001D94
	// succ:  l00001D94
l00001E40:
	r3 = Mem0[r21 + 96:word32]
	r5 = r25 - r5
	Mem0[r21:word32] = r5
	r5 = r3 - r5
	Mem0[r21 + 4:word32] = r5
	Mem0[r21 + 44:word32] = r0
	r3 = 0x00000000
	goto l00001D94
	// succ:  l00001D94
l00001E60:
	r7 = 0xFFFF9C1C
	r5 = r21
	goto l00001E08
	// succ:  l00001E08
l00001E70:
	r7 = 0xFFFF9C4C
	r15 = 0x00001E78
	r6 = 0xFFFFFFFF
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l00001D94
	// succ:  l00001D94
fn00001BBC_exit:


// fn00001E88
// Return size: 0
define fn00001E88
fn00001E88_entry:
	r1 = fp
	// succ:  l00001E88
l00001E88:
	r1 = r1 + 0xFFFFFFC8
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 40:word32] = r23
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	r3 = Mem0[r5 + 24:word32]
	r19 = r5
	branch Test(EQ,r3) l00001E88_ds_t
	// succ:  l00001E88_ds_f l00001E88_ds_t
l00001E88_ds_f:
	r23 = r5 + 0x00000054
	goto l00001EBC
	// succ:  l00001EBC
l00001E88_ds_t:
	r23 = r5 + 0x00000054
	goto l00001F20
	// succ:  l00001F20
l00001EBC:
	r22 = Mem0[r19 + 88:word32]
	r3 = 0x00000001
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l00002054
	// succ:  l00001ECC l00002054
l00001ECC:
	r6 = Mem0[r19 + 84:word32]
	// succ:  l00001ED0
l00001ED0:
	v15 = Mem0[r6:byte]
	r3 = (word32) v15
	r3 = r3 ^ 0x0000001F
	branch Test(EQ,r3) l000021A0
	// succ:  l00001EDC l000021A0
l00001EDC:
	r3 = Mem0[r19 + 40:word32]
	branch Test(NE,r3) l00002218
	// succ:  l00001EE4 l00002218
l00001EE4:
	r4 = 0x00000001
	Mem0[r19 + 88:word32] = r0
	Mem0[r19 + 52:word32] = r4
	Mem0[r19:word32] = r0
	r3 = 0x00000000
	// succ:  l00001EF8
l00001EF8:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r1 = r1 + 0x00000038
	return
	// succ:  fn00001E88_exit
l00001F20:
	r24 = Mem0[r5 + 28:word32]
	r15 = 0x00001F28
	r5 = r24
	call fn00018918 (retsize: 0;)
	r5 = r24 + r24
	Mem0[r19 + 32:word32] = r3
	r15 = 0x00001F3C
	r22 = r3
	call fn00018918 (retsize: 0;)
	r4 = -r3
	r4 = r3 | r4
	branch Test(GE,r4) l00001F20_ds_t
	// succ:  l00001F20_ds_f l00001F20_ds_t
l00001F20_ds_f:
	Mem0[r19 + 36:word32] = r3
	goto l00001F54
	// succ:  l00001F54
l00001F20_ds_t:
	Mem0[r19 + 36:word32] = r3
	goto l00002224
	// succ:  l00002224
l00001F54:
	r4 = -r22
	r4 = r22 | r4
	r4 = r4 ^ 0xFFFFFFFF
	r21 = r4
	r21 = r4 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	r21 = r21 >>u 1
	C = cond(r21)
	branch Test(NE,r21) l00001F54_ds_t
	// succ:  l00001F54_ds_f l00001F54_ds_t
l00001F54_ds_f:
	r8 = 0x00000038
	goto l00001FE8
	// succ:  l00001FE8
l00001F54_ds_t:
	r8 = 0x00000038
	goto l00002224
	// succ:  l00002224
l00001FE8:
	r7 = 0xFFFF9CA0
	r5 = r23
	Mem0[r19 + 24:word32] = r24
	Mem0[r19 + 116:word32] = r21
	Mem0[r19 + 120:word32] = r21
	Mem0[r19 + 124:word32] = r21
	Mem0[r19 + 88:word32] = r21
	Mem0[r19 + 84:word32] = r21
	r15 = 0x00002010
	r6 = 0x0000001F
	call fnFFFFC654 (retsize: 0;)
	branch Test(EQ,r3) l00001EBC
	// succ:  l0000201C l00001EBC
l0000201C:
	r15 = 0x00002020
	r5 = Mem0[r19 + 36:word32]
	call fn000188F0 (retsize: 0;)
	r15 = 0x0000202C
	r5 = Mem0[r19 + 32:word32]
	call fn000188F0 (retsize: 0;)
	r7 = 0xFFFF9C90
	r5 = r19
	Mem0[r19 + 24:word32] = r21
	r15 = 0x00002044
	r6 = 0xFFFFFFFC
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l00001EF8
	// succ:  l00001EF8
l00002054:
	r3 = Mem0[r19 + 76:word32]
	r4 = -r3
	r4 = r4 | r3
	branch Test(GE,r4) l00002054_ds_t
	// succ:  l00002054_ds_f l00002054_ds_t
l00002054_ds_f:
	r3 = r3 ^ 0xFFFFFFFB
	goto l00002068
	// succ:  l00002068
l00002054_ds_t:
	r3 = r3 ^ 0xFFFFFFFB
	goto l000020F8
	// succ:  l000020F8
l00002068:
	r4 = -r3
	r3 = r4 | r3
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l00002068_ds_t
	// succ:  l00002068_ds_f l00002068_ds_t
l00002068_ds_f:
	r3 = 0xFFFFFFFF
	goto l000020F8
	// succ:  l000020F8
l00002068_ds_t:
	r3 = 0xFFFFFFFF
	goto l00001EF8
	// succ:  l00001EF8
l000020F8:
	r3 = Mem0[r19 + 52:word32]
	branch Test(NE,r3) l000021CC
	// succ:  l00002100 l000021CC
l00002100:
	branch Test(EQ,r22) l00002100_ds_t
	// succ:  l00002100_ds_f l00002100_ds_t
l00002100_ds_f:
	r26 = Mem0[r19 + 32:word32]
	goto l00002108
	// succ:  l00002108
l00002100_ds_t:
	r26 = Mem0[r19 + 32:word32]
	goto l0000211C
	// succ:  l0000211C
l00002108:
	r3 = Mem0[r19 + 84:word32]
	v22 = Mem0[r3:byte]
	r3 = (word32) v22
	v23 = SLICE(r3, byte, 0)
	Mem0[r26:byte] = v23
	r26 = Mem0[r19 + 32:word32]
	r22 = Mem0[r19 + 88:word32]
	// succ:  l0000211C
l0000211C:
	r24 = Mem0[r19 + 24:word32]
	r25 = 0x00000000
	r21 = 0x00000000
	r24 = r24 - r22
	goto l0000213C
	// succ:  l0000213C
l00002134:
	r18 = cond(r21 -u r24)
	branch Test(GE,r18) l00002178
	// succ:  l0000213C l00002178
l0000213C:
	r6 = r22 + r21
	r7 = r24 - r21
	r18 = cond(r25 -u r7)
	branch Test(GE,r18) l0000213C_ds_t
	// succ:  l0000213C_ds_f l0000213C_ds_t
l0000213C_ds_f:
	r6 = r26 + r6
	goto l00002150
	// succ:  l00002150
l0000213C_ds_t:
	r6 = r26 + r6
	goto l00002154
	// succ:  l00002154
l00002150:
	r7 = r25
	// succ:  l00002154
l00002154:
	r15 = 0x00002158
	r5 = Mem0[r19 + 16:word32]
	call fn000190F0 (retsize: 0;)
	branch Test(GT,r3) l00002154_ds_t
	// succ:  l00002154_ds_f l00002154_ds_t
l00002154_ds_f:
	r21 = r21 + r3
	goto l00002168
	// succ:  l00002168
l00002154_ds_t:
	r21 = r21 + r3
	goto l00002134
	// succ:  l00002134
l00002168:
	branch Test(NE,r3) l00002168_ds_t
	// succ:  l00002168_ds_f l00002168_ds_t
l00002168_ds_f:
	r21 = r21 - r3
	goto l00002170
	// succ:  l00002170
l00002168_ds_t:
	r21 = r21 - r3
	goto l00002258
	// succ:  l00002258
l00002170:
	r3 = 0x00000001
	Mem0[r19 + 52:word32] = r3
	goto l00002178
	// succ:  l00002178
l00002170_ds_f:
	Mem0[r19 + 88:word32] = r22
	goto l00002190
	// succ:  l00002190
l00002170_ds_t:
	Mem0[r19 + 88:word32] = r22
	goto l00002210
	// succ:  l00002210
l00002178:
	r22 = Mem0[r19 + 88:word32]
	r4 = Mem0[r19 + 32:word32]
	r22 = r21 + r22
	Mem0[r19 + 84:word32] = r4
	branch Test(EQ,r22) l00002170_ds_t
	goto l00002170_ds_f
	// succ:  l00002170_ds_f l00002170_ds_t
l00002190:
	r3 = r22 ^ 0x00000001
	branch Test(EQ,r3) l000021D4
	// succ:  l00002198 l000021D4
l00002198:
	r6 = Mem0[r19 + 84:word32]
	goto l00001ED0
	// succ:  l00001ED0
l000021A0:
	v21 = Mem0[r6 + 1:byte]
	r3 = (word32) v21
	r21 = r3 ^ 0x0000008B
	branch Test(NE,r21) l00001EDC
	// succ:  l000021AC l00001EDC
l000021AC:
	r15 = 0x000021B0
	r5 = r23
	call fnFFFFC324 (retsize: 0;)
	r3 = 0x00000002
	Mem0[r19 + 44:word32] = r3
	Mem0[r19 + 40:word32] = r21
	r3 = r21
	goto l00001EF8
	// succ:  l00001EF8
l000021CC:
	branch Test(EQ,r22) l000021CC_ds_t
	// succ:  l000021CC_ds_f l000021CC_ds_t
l000021CC_ds_f:
	r3 = 0x00000000
	goto l000021D4
	// succ:  l000021D4
l000021CC_ds_t:
	r3 = 0x00000000
	goto l00001EF8
	// succ:  l00001EF8
l000021D4:
	r3 = Mem0[r19 + 40:word32]
	branch Test(EQ,r3) l000021D4_ds_t
	// succ:  l000021D4_ds_f l000021D4_ds_t
l000021D4_ds_f:
	r22 = 0x00000001
	goto l000021E0
	// succ:  l000021E0
l000021D4_ds_t:
	r22 = 0x00000001
	goto l00001EE4
	// succ:  l00001EE4
l000021E0:
	r5 = Mem0[r19 + 36:word32]
	r6 = Mem0[r19 + 84:word32]
	Mem0[r19 + 4:word32] = r5
	// succ:  l000021EC
l000021EC:
	r15 = 0x000021F0
	r7 = r22
	call fn00018C34 (retsize: 0;)
	r4 = Mem0[r19 + 88:word32]
	r3 = 0x00000001
	Mem0[r19 + 44:word32] = r3
	Mem0[r19:word32] = r4
	Mem0[r19 + 88:word32] = r0
	Mem0[r19 + 40:word32] = r3
	// succ:  l00002210
l00002210:
	r3 = 0x00000000
	goto l00001EF8
	// succ:  l00001EF8
l00002218:
	r5 = Mem0[r19 + 36:word32]
	Mem0[r19 + 4:word32] = r5
	goto l000021EC
	// succ:  l000021EC
l00002224:
	r15 = 0x00002228
	r5 = r3
	call fn000188F0 (retsize: 0;)
	r15 = 0x00002234
	r5 = r22
	call fn000188F0 (retsize: 0;)
	r7 = 0xFFFF9C90
	r5 = r19
	r15 = 0x00002248
	r6 = 0xFFFFFFFC
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l00001EF8
	// succ:  l00001EF8
l00002258:
	r7 = 0xFFFF9C4C
	r5 = r19
	r15 = 0x00002264
	r6 = 0xFFFFFFFF
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l00001EF8
	// succ:  l00001EF8
fn00001E88_exit:


// fn00002274
// Return size: 0
define fn00002274
fn00002274_entry:
	r1 = fp
	// succ:  l00002274
l00002274:
	r1 = r1 + 0xFFFFFFD4
	Mem0[r1 + 28:word32] = r19
	r19 = r5
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	goto l00002290
	// succ:  l00002290
l00002274_ds_f:
	r5 = r3 ^ 0x00000002
	goto l000022A0
	// succ:  l000022A0
l00002274_ds_t:
	r5 = r3 ^ 0x00000002
	goto l0000233C
	// succ:  l0000233C
l00002290:
	r3 = Mem0[r19 + 44:word32]
	r4 = r3 ^ 0x00000001
	branch Test(EQ,r4) l00002274_ds_t
	goto l00002274_ds_f
	// succ:  l00002274_ds_f l00002274_ds_t
l000022A0:
	branch Test(EQ,r5) l0000230C
	// succ:  l000022A4 l0000230C
l000022A4:
	branch Test(EQ,r3) l000022E4
	// succ:  l000022A8 l000022E4
l000022A8:
	r3 = Mem0[r19:word32]
	branch Test(NE,r3) l000022A8_ds_t
	// succ:  l000022A8_ds_f l000022A8_ds_t
l000022A8_ds_f:
	r3 = 0x00000000
	goto l000022B4
	// succ:  l000022B4
l000022A8_ds_t:
	r3 = 0x00000000
	goto l000022C8
	// succ:  l000022C8
l000022B4:
	r3 = Mem0[r19 + 52:word32]
	branch Test(EQ,r3) l00002290
	// succ:  l000022BC l00002290
l000022BC:
	r3 = Mem0[r19 + 88:word32]
	branch Test(NE,r3) l00002290
	// succ:  l000022C4 l00002290
l000022C4:
	r3 = 0x00000000
	// succ:  l000022C8
l000022C8:
	r15 = Mem0[r1:word32]
	// succ:  l000022CC
l000022CC:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r1 = r1 + 0x0000002C
	return
	// succ:  fn00002274_exit
l000022E4:
	r15 = 0x000022E4
	r5 = r19
	call fn00001E88 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r3) l000022E4_ds_t
	// succ:  l000022E4_ds_f l000022E4_ds_t
l000022E4_ds_f:
	r3 = 0xFFFFFFFF
	goto l000022F8
	// succ:  l000022F8
l000022E4_ds_t:
	r3 = 0xFFFFFFFF
	goto l000022C8
	// succ:  l000022C8
l000022F8:
	r3 = Mem0[r19 + 44:word32]
	branch Test(NE,r3) l000022F8_ds_t
	// succ:  l000022F8_ds_f l000022F8_ds_t
l000022F8_ds_f:
	r3 = 0x00000000
	goto l00002304
	// succ:  l00002304
l000022F8_ds_t:
	r3 = 0x00000000
	goto l000022A8
	// succ:  l000022A8
l00002304:
	r15 = Mem0[r1:word32]
	goto l000022CC
	// succ:  l000022CC
l0000230C:
	r3 = Mem0[r19 + 24:word32]
	r4 = Mem0[r19 + 36:word32]
	r5 = r19
	r3 = r3 + r3
	Mem0[r19 + 96:word32] = r4
	r15 = 0x00002320
	Mem0[r19 + 100:word32] = r3
	call fn00001BBC (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l0000230C_ds_t
	// succ:  l0000230C_ds_f l0000230C_ds_t
l0000230C_ds_f:
	r3 = 0xFFFFFFFF
	goto l00002334
	// succ:  l00002334
l0000230C_ds_t:
	r3 = 0xFFFFFFFF
	goto l000022A8
	// succ:  l000022A8
l00002334:
	r15 = Mem0[r1:word32]
	goto l000022CC
	// succ:  l000022CC
l0000233C:
	r21 = Mem0[r19 + 24:word32]
	r23 = Mem0[r19 + 36:word32]
	r7 = r4
	r22 = 0x00000000
	r21 = r21 + r21
	Mem0[r19:word32] = r4
	goto l00002370
	// succ:  l00002370
l0000235C:
	r7 = Mem0[r19:word32]
	r7 = r3 + r7
	r18 = cond(r7 -u r21)
	branch Test(GE,r18) l0000235C_ds_t
	// succ:  l0000235C_ds_f l0000235C_ds_t
l0000235C_ds_f:
	Mem0[r19:word32] = r7
	goto l00002370
	// succ:  l00002370
l0000235C_ds_t:
	Mem0[r19:word32] = r7
	goto l000023A0
	// succ:  l000023A0
l00002370:
	r6 = r23 + r7
	r7 = r21 - r7
	r18 = cond(r22 -u r7)
	branch Test(GE,r18) l00002384
	// succ:  l00002380 l00002384
l00002380:
	r7 = r22
	// succ:  l00002384
l00002384:
	r15 = 0x00002388
	r5 = Mem0[r19 + 16:word32]
	call fn000190F0 (retsize: 0;)
	branch Test(GT,r3) l0000235C
	// succ:  l00002394 l0000235C
l00002394:
	branch Test(NE,r3) l000023AC
	// succ:  l00002398 l000023AC
l00002398:
	r3 = 0x00000001
	Mem0[r19 + 52:word32] = r3
	// succ:  l000023A0
l000023A0:
	r4 = Mem0[r19 + 36:word32]
	Mem0[r19 + 4:word32] = r4
	goto l000022C4
	// succ:  l000022C4
l000023AC:
	r7 = 0xFFFF9C4C
	r5 = r19
	r15 = 0x000023B8
	r6 = 0xFFFFFFFF
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l000022C8
	// succ:  l000022C8
fn00002274_exit:


// fn000023C8
// Return size: 0
define fn000023C8
fn000023C8_entry:
	r1 = fp
	// succ:  l000023C8
l000023C8:
	branch Test(EQ,r5) l000027B0
	// succ:  l000023CC l000027B0
l000023CC:
	r1 = r1 + 0xFFFFFFC0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	Mem0[r1 + 60:word32] = r28
	r3 = Mem0[r5 + 12:word32]
	r3 = r3 ^ 0x00001C4F
	branch Test(NE,r3) l000023CC_ds_t
	// succ:  l000023CC_ds_f l000023CC_ds_t
l000023CC_ds_f:
	r19 = r5
	goto l00002408
	// succ:  l00002408
l000023CC_ds_t:
	r19 = r5
	goto l0000278C
	// succ:  l0000278C
l00002408:
	r3 = Mem0[r5 + 76:word32]
	r24 = r6
	r4 = -r3
	r4 = r4 | r3
	branch Test(GE,r4) l00002408_ds_t
	// succ:  l00002408_ds_f l00002408_ds_t
l00002408_ds_f:
	r22 = r7
	goto l00002420
	// succ:  l00002420
l00002408_ds_t:
	r22 = r7
	goto l000024B4
	// succ:  l000024B4
l00002420:
	r3 = r3 ^ 0xFFFFFFFB
	r4 = -r3
	r3 = r4 | r3
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l00002420_ds_t
	// succ:  l00002420_ds_f l00002420_ds_t
l00002420_ds_f:
	r3 = 0xFFFFFFFF
	goto l000024B4
	// succ:  l000024B4
l00002420_ds_t:
	r3 = 0xFFFFFFFF
	goto l00002658
	// succ:  l00002658
l000024B4:
	branch Test(LT,r22) l000024B4_ds_t
	// succ:  l000024B4_ds_f l000024B4_ds_t
l000024B4_ds_f:
	r5 = r19
	goto l000024BC
	// succ:  l000024BC
l000024B4_ds_t:
	r5 = r19
	goto l0000277C
	// succ:  l0000277C
l000024BC:
	branch Test(EQ,r22) l000024BC_ds_t
	// succ:  l000024BC_ds_f l000024BC_ds_t
l000024BC_ds_f:
	r3 = 0x00000000
	goto l000024C4
	// succ:  l000024C4
l000024BC_ds_t:
	r3 = 0x00000000
	goto l00002658
	// succ:  l00002658
l000024C4:
	r3 = Mem0[r19 + 72:word32]
	branch Test(NE,r3) l000026D8
	// succ:  l000024CC l000026D8
l000024CC:
	r21 = Mem0[r19:word32]
	goto l000024D0
	// succ:  l000024D0
l000024CC_ds_f:
	r26 = 0x00000001
	goto l000024E4
	// succ:  l000024E4
l000024CC_ds_t:
	r26 = 0x00000001
	goto l00002540
	// succ:  l00002540
l000024D0:
	r23 = 0x00000000
	r25 = 0x00000000
	branch Test(EQ,r21) l000024CC_ds_t
	goto l000024CC_ds_f
	// succ:  l000024CC_ds_f l000024CC_ds_t
l000024E4:
	r18 = cond(r22 -u r21)
	branch Test(GE,r18) l000024E4_ds_t
	// succ:  l000024E4_ds_f l000024E4_ds_t
l000024E4_ds_f:
	r5 = r24
	goto l000024F0
	// succ:  l000024F0
l000024E4_ds_t:
	r5 = r24
	goto l000024F4
	// succ:  l000024F4
l000024F0:
	r21 = r22
	// succ:  l000024F4
l000024F4:
	r7 = r21
	r6 = Mem0[r19 + 4:word32]
	r22 = r22 - r21
	r15 = 0x00002504
	r24 = r24 + r21
	call fn00018C34 (retsize: 0;)
	r4 = Mem0[r19 + 4:word32]
	r3 = Mem0[r19:word32]
	r4 = r4 + r21
	r3 = r3 - r21
	Mem0[r19 + 4:word32] = r4
	Mem0[r19:word32] = r3
	goto l00002524
	// succ:  l00002524
l000024F4_ds_f:
	Mem0[r19 + 8:word32] = r21
	goto l00002538
	// succ:  l00002538
l000024F4_ds_t:
	Mem0[r19 + 8:word32] = r21
	goto l0000276C
	// succ:  l0000276C
l00002524:
	r4 = Mem0[r19 + 8:word32]
	r23 = r23 + r21
	r21 = r4 + r21
	branch Test(EQ,r22) l000024F4_ds_t
	goto l000024F4_ds_f
	// succ:  l000024F4_ds_f l000024F4_ds_t
l00002538:
	r21 = Mem0[r19:word32]
	branch Test(NE,r21) l000024E4
	// succ:  l00002540 l000024E4
l00002540:
	r3 = Mem0[r19 + 52:word32]
	branch Test(EQ,r3) l00002554
	// succ:  l00002548 l00002554
l00002548:
	r3 = Mem0[r19 + 88:word32]
	branch Test(EQ,r3) l00002548_ds_t
	// succ:  l00002548_ds_f l00002548_ds_t
l00002548_ds_f:
	r3 = 0x00000001
	goto l00002554
	// succ:  l00002554
l00002548_ds_t:
	r3 = 0x00000001
	goto l00002768
	// succ:  l00002768
l00002554:
	r3 = Mem0[r19 + 44:word32]
	branch Test(EQ,r3) l000025A0
	// succ:  l0000255C l000025A0
l0000255C:
	r4 = Mem0[r19 + 24:word32]
	r4 = r4 + r4
	r18 = cond(r22 -u r4)
	branch Test(LT,r18) l0000255C_ds_t
	// succ:  l0000255C_ds_f l0000255C_ds_t
l0000255C_ds_f:
	r3 = r3 ^ 0x00000001
	goto l00002570
	// succ:  l00002570
l0000255C_ds_t:
	r3 = r3 ^ 0x00000001
	goto l000025A0
	// succ:  l000025A0
l00002570:
	branch Test(EQ,r3) l00002570_ds_t
	// succ:  l00002570_ds_f l00002570_ds_t
l00002570_ds_f:
	r5 = r19
	goto l00002578
	// succ:  l00002578
l00002570_ds_t:
	r5 = r19
	goto l00002690
	// succ:  l00002690
l00002578:
	Mem0[r19 + 100:word32] = r22
	r15 = 0x0000257C
	Mem0[r19 + 96:word32] = r24
	call fn00001BBC (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r3) l000025B0
	// succ:  l0000258C l000025B0
l0000258C:
	r21 = Mem0[r19:word32]
	Mem0[r19:word32] = r0
	// succ:  l00002594
l00002594:
	r22 = r22 - r21
	r24 = r24 + r21
	goto l00002524
	// succ:  l00002524
l000025A0:
	r15 = 0x000025A0
	r5 = r19
	call fn00002274 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l00002538
	// succ:  l000025B0 l00002538
l000025B0:
	r4 = Mem0[r19 + 76:word32]
	goto l000025B4
	// succ:  l000025B4
l000025B0_ds_f:
	r3 = -r4
	goto l000025C8
	// succ:  l000025C8
l000025B0_ds_t:
	r3 = -r4
	goto l00002654
	// succ:  l00002654
l000025B4:
	r5 = r4 ^ 0xFFFFFFFB
	r3 = -r5
	r3 = r3 | r5
	branch Test(GE,r3) l000025B0_ds_t
	goto l000025B0_ds_f
	// succ:  l000025B0_ds_f l000025B0_ds_t
l000025C8:
	r4 = r3 | r4
	r3 = r4
	r3 = r4 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	branch Test(NE,r3) l000025C8_ds_t
	// succ:  l000025C8_ds_f l000025C8_ds_t
l000025C8_ds_f:
	r3 = 0xFFFFFFFF
	goto l00002654
	// succ:  l00002654
l000025C8_ds_t:
	r3 = 0xFFFFFFFF
	goto l00002658
	// succ:  l00002658
l00002654:
	r3 = 0x00000000
	// succ:  l00002658
l00002658:
	r15 = Mem0[r1:word32]
	// succ:  l0000265C
l0000265C:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r28 = Mem0[r1 + 60:word32]
	r1 = r1 + 0x00000040
	return
	// succ:  fn000023C8_exit
l00002688:
	r18 = cond(r21 -u r22)
	branch Test(GE,r18) l00002594
	// succ:  l00002690 l00002594
l00002690:
	r27 = r22 - r21
	r28 = r24 + r21
	r6 = r28
	r18 = cond(r25 -u r27)
	branch Test(GE,r18) l00002690_ds_t
	// succ:  l00002690_ds_f l00002690_ds_t
l00002690_ds_f:
	r7 = r27
	goto l000026A8
	// succ:  l000026A8
l00002690_ds_t:
	r7 = r27
	goto l000026AC
	// succ:  l000026AC
l000026A8:
	r7 = r25
	// succ:  l000026AC
l000026AC:
	r15 = 0x000026B0
	r5 = Mem0[r19 + 16:word32]
	call fn000190F0 (retsize: 0;)
	branch Test(GT,r3) l000026AC_ds_t
	// succ:  l000026AC_ds_f l000026AC_ds_t
l000026AC_ds_f:
	r21 = r21 + r3
	goto l000026C0
	// succ:  l000026C0
l000026AC_ds_t:
	r21 = r21 + r3
	goto l00002688
	// succ:  l00002688
l000026C0:
	branch Test(NE,r3) l000026C0_ds_t
	// succ:  l000026C0_ds_f l000026C0_ds_t
l000026C0_ds_f:
	r21 = r21 - r3
	goto l000026C8
	// succ:  l000026C8
l000026C0_ds_t:
	r21 = r21 - r3
	goto l00002794
	// succ:  l00002794
l000026C8:
	Mem0[r19 + 52:word32] = r26
	r24 = r28
	r22 = r27
	goto l00002524
	// succ:  l00002524
l000026D8:
	r23 = Mem0[r19 + 68:word32]
	Mem0[r19 + 72:word32] = r0
	branch Test(EQ,r23) l000026D8_ds_t
	// succ:  l000026D8_ds_f l000026D8_ds_t
l000026D8_ds_f:
	r21 = Mem0[r19:word32]
	goto l000026E8
	// succ:  l000026E8
l000026D8_ds_t:
	r21 = Mem0[r19:word32]
	goto l000024D0
	// succ:  l000024D0
l000026E8:
	branch Test(EQ,r21) l000026E8_ds_t
	// succ:  l000026E8_ds_f l000026E8_ds_t
l000026E8_ds_f:
	r5 = r19
	goto l000026F0
	// succ:  l000026F0
l000026E8_ds_t:
	r5 = r19
	goto l00002734
	// succ:  l00002734
l000026F0:
	r18 = cond(r23 - r21)
	branch Test(LT,r18) l000026F0_ds_t
	// succ:  l000026F0_ds_f l000026F0_ds_t
l000026F0_ds_f:
	r5 = r23
	goto l000026FC
	// succ:  l000026FC
l000026F0_ds_t:
	r5 = r23
	goto l0000275C
	// succ:  l0000275C
l000026FC:
	branch Test(LT,r21) l0000275C
	// succ:  l00002700 l0000275C
l00002700:
	r23 = r23 - r21
	r5 = r21
	r21 = 0x00000000
	goto l0000270C
	// succ:  l0000270C
l00002700_ds_f:
	Mem0[r19 + 8:word32] = r3
	goto l0000272C
	// succ:  l0000272C
l00002700_ds_t:
	Mem0[r19 + 8:word32] = r3
	goto l000024D0
	// succ:  l000024D0
l0000270C:
	r4 = Mem0[r19 + 4:word32]
	r3 = Mem0[r19 + 8:word32]
	Mem0[r19:word32] = r21
	r4 = r4 + r5
	r3 = r3 + r5
	Mem0[r19 + 4:word32] = r4
	branch Test(EQ,r23) l00002700_ds_t
	goto l00002700_ds_f
	// succ:  l00002700_ds_f l00002700_ds_t
l0000272C:
	branch Test(NE,r21) l0000272C_ds_t
	// succ:  l0000272C_ds_f l0000272C_ds_t
l0000272C_ds_f:
	r5 = r19
	goto l00002734
	// succ:  l00002734
l0000272C_ds_t:
	r5 = r19
	goto l000026F0
	// succ:  l000026F0
l00002734:
	r3 = Mem0[r19 + 52:word32]
	branch Test(EQ,r3) l00002744
	// succ:  l0000273C l00002744
l0000273C:
	r3 = Mem0[r19 + 88:word32]
	branch Test(EQ,r3) l000024D0
	// succ:  l00002744 l000024D0
l00002744:
	r15 = 0x00002744
	call fn00002274 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r3) l000025B0
	// succ:  l00002754 l000025B0
l00002754:
	r21 = Mem0[r19:word32]
	goto l000026E8
	// succ:  l000026E8
l0000275C:
	r21 = r21 - r23
	r23 = 0x00000000
	goto l0000270C
	// succ:  l0000270C
l00002768:
	Mem0[r19 + 56:word32] = r3
	// succ:  l0000276C
l0000276C:
	branch Test(EQ,r23) l0000276C_ds_t
	// succ:  l0000276C_ds_f l0000276C_ds_t
l0000276C_ds_f:
	r3 = r23
	goto l00002774
	// succ:  l00002774
l0000276C_ds_t:
	r3 = r23
	goto l000025B0
	// succ:  l000025B0
l00002774:
	r15 = Mem0[r1:word32]
	goto l0000265C
	// succ:  l0000265C
l0000277C:
	r7 = 0xFFFF9CA8
	r15 = 0x00002784
	r6 = 0xFFFFFFFE
	call fn00001A68 (retsize: 0;)
l0000278C:
	r3 = 0xFFFFFFFF
	goto l00002658
	// succ:  l00002658
l00002794:
	r7 = 0xFFFF9C4C
	r5 = r19
	r15 = 0x000027A0
	r6 = 0xFFFFFFFF
	call fn00001A68 (retsize: 0;)
	r4 = Mem0[r19 + 76:word32]
	goto l000025B4
	// succ:  l000025B4
l000027B0:
	r3 = 0xFFFFFFFF
	return
	// succ:  fn000023C8_exit
fn000023C8_exit:


// fn00003674
// Return size: 0
define fn00003674
fn00003674_entry:
	r1 = fp
	// succ:  l00003674
l00003674:
	branch Test(NE,r3) l00003674_ds_t
	// succ:  l00003674_ds_f l00003674_ds_t
l00003674_ds_f:
	r25 = r6
	goto l0000367C
	// succ:  l0000367C
l00003674_ds_t:
	r25 = r6
	goto l000037BC
	// succ:  l000037BC
l0000367C:
	branch Test(EQ,r23) l0000367C_ds_t
	// succ:  l0000367C_ds_f l0000367C_ds_t
l0000367C_ds_f:
	r3 = 0x00000000
	goto l00003684
	// succ:  l00003684
l0000367C_ds_t:
	r3 = 0x00000000
	// succ:  l00003680_thunk_fn00003720
l00003680_thunk_fn00003720:
	call fn00003720 (retsize: 0;)
	return
	// succ:  fn00003674_exit
l00003684:
	r4 = Mem0[r19:word32]
	// succ:  l00003688
l00003688:
	r26 = r25
	r27 = 0x0000000A
	// succ:  l0000368C_thunk_fn00003720
l0000368C_thunk_fn00003720:
	call fn00003720 (retsize: 0;)
	return
	// succ:  fn00003674_exit
l0000376C:
	r3 = Mem0[r19 + 52:word32]
	branch Test(EQ,r3) l0000377C
	// succ:  l00003774 l0000377C
l00003774:
	r3 = Mem0[r19 + 88:word32]
	branch Test(EQ,r3) l0000367C
	// succ:  l0000377C l0000367C
l0000377C:
	r15 = 0x0000377C
	call fn00002274 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l000037CC
	// succ:  l00003788_thunk_fn00003720 l000037CC
l00003788_thunk_fn00003720:
	call fn00003720 (retsize: 0;)
	return
	// succ:  fn00003674_exit
l000037BC:
	r21 = Mem0[r5 + 68:word32]
	Mem0[r5 + 72:word32] = r0
	branch Test(EQ,r21) l000037BC_ds_t
	// succ:  l000037BC_ds_f l000037BC_ds_t
l000037BC_ds_f:
	r22 = 0x00000000
	goto l000037CC
	// succ:  l000037CC
l000037BC_ds_t:
	r22 = 0x00000000
	goto l0000367C
	// succ:  l0000367C
l000037CC:
	r4 = Mem0[r19:word32]
	r5 = r19
	branch Test(EQ,r4) l000037CC_ds_t
	// succ:  l000037CC_ds_f l000037CC_ds_t
l000037CC_ds_f:
	r3 = r21
	goto l000037DC
	// succ:  l000037DC
l000037CC_ds_t:
	r3 = r21
	goto l0000376C
	// succ:  l0000376C
l000037DC:
	branch Test(LT,r4) l00003820
	// succ:  l000037E0 l00003820
l000037E0:
	r18 = cond(r21 - r4)
	branch Test(LT,r18) l00003820
	// succ:  l000037E8 l00003820
l000037E8:
	r21 = r21 - r4
	r3 = r4
	r4 = r22
	goto l000037F4
	// succ:  l000037F4
l000037E8_ds_f:
	Mem0[r19 + 8:word32] = r3
	goto l00003814
	// succ:  l00003814
l000037E8_ds_t:
	Mem0[r19 + 8:word32] = r3
	goto l000037CC
	// succ:  l000037CC
l000037F4:
	r6 = Mem0[r19 + 4:word32]
	r5 = Mem0[r19 + 8:word32]
	Mem0[r19:word32] = r4
	r4 = r6 + r3
	r3 = r5 + r3
	Mem0[r19 + 4:word32] = r4
	branch Test(NE,r21) l000037E8_ds_t
	goto l000037E8_ds_f
	// succ:  l000037E8_ds_f l000037E8_ds_t
l00003814:
	branch Test(EQ,r23) l0000378C
	goto l00003818
	// succ:  l00003818 l00003814_thunk_fn00003720
l00003814_thunk_fn00003720:
	call fn00003720 (retsize: 0;)
	return
	// succ:  fn00003674_exit
l00003818:
	r4 = Mem0[r19:word32]
	goto l00003688
	// succ:  l00003688
l00003820:
	r4 = r4 - r21
	r21 = 0x00000000
	goto l000037F4
	// succ:  l000037F4
fn00003674_exit:


// fn0000371C
// Return size: 0
define fn0000371C
fn0000371C_entry:
	r1 = fp
	// succ:  l0000371C
l0000371C:
	r22 = r22 | r6
	// succ:  l0000371C_thunk_fn00003720
l0000371C_thunk_fn00003720:
	call fn00003720 (retsize: 0;)
	return
	// succ:  fn0000371C_exit
fn0000371C_exit:


// fn00003720
// Return size: 0
define fn00003720
fn00003720_entry:
	r1 = fp
	goto l00003720
	// succ:  l00003720
l00003694:
	r6 = r27
	// succ:  l00003698
l00003698:
	r18 = cond(r4 -u r23)
	branch Test(GE,r18) l00003698_ds_t
	// succ:  l00003698_ds_f l00003698_ds_t
l00003698_ds_f:
	r21 = r23
	goto l000036A4
	// succ:  l000036A4
l00003698_ds_t:
	r21 = r23
	goto l000036A8
	// succ:  l000036A8
l000036A4:
	r21 = r4
	// succ:  l000036A8
l000036A8:
	r24 = Mem0[r19 + 4:word32]
	r7 = r21
	r15 = 0x000036B4
	r5 = r24
	call fn00018C94 (retsize: 0;)
	r6 = r24
	r22 = r3
	r5 = r26
	branch Test(EQ,r3) l000036A8_ds_t
	// succ:  l000036A8_ds_f l000036A8_ds_t
l000036A8_ds_f:
	r24 = r3 - r24
	goto l000036D0
	// succ:  l000036D0
l000036A8_ds_t:
	r24 = r3 - r24
	goto l000036D4
	// succ:  l000036D4
l000036D0:
	r21 = r24 + 0x00000001
	// succ:  l000036D4
l000036D4:
	r7 = r21
	r23 = r23 - r21
	r15 = 0x000036E0
	r26 = r26 + r21
	call fn00018C34 (retsize: 0;)
	r3 = Mem0[r19 + 8:word32]
	r4 = Mem0[r19:word32]
	r5 = Mem0[r19 + 4:word32]
	r6 = -r22
	r4 = r4 - r21
	r5 = r5 + r21
	r21 = r3 + r21
	r3 = -r23
	Mem0[r19:word32] = r4
	Mem0[r19 + 4:word32] = r5
	Mem0[r19 + 8:word32] = r21
	r3 = r3 | r23
	branch Test(GE,r3) l000036D4_ds_t
	// succ:  l000036D4_ds_f l000036D4_ds_t
l000036D4_ds_f:
	r22 = r22 | r6
	goto l00003720
	// succ:  l00003720
l000036D4_ds_t:
	r22 = r22 | r6
	goto l00003758
	// succ:  l00003758
l00003720:
	branch Test(LT,r22) l00003720_ds_t
	// succ:  l00003720_ds_f l00003720_ds_t
l00003720_ds_f:
	r3 = r26 ^ r25
	goto l00003728
	// succ:  l00003728
l00003720_ds_t:
	r3 = r26 ^ r25
	goto l0000375C
	// succ:  l0000375C
l00003728:
	branch Test(NE,r4) l00003728_ds_t
	// succ:  l00003728_ds_f l00003728_ds_t
l00003728_ds_f:
	r5 = r19
	goto l00003730
	// succ:  l00003730
l00003728_ds_t:
	r5 = r19
	goto l00003694
	// succ:  l00003694
l00003730:
	r15 = 0x00003730
	call fn00002274 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r3) l00003730_ds_t
	// succ:  l00003730_ds_f l00003730_ds_t
l00003730_ds_f:
	r3 = 0x00000000
	goto l00003744
	// succ:  l00003744
l00003730_ds_t:
	r3 = 0x00000000
	goto l00003790
	// succ:  l00003790
l00003744:
	r4 = Mem0[r19:word32]
	branch Test(NE,r4) l00003744_ds_t
	// succ:  l00003744_ds_f l00003744_ds_t
l00003744_ds_f:
	r6 = r27
	goto l00003750
	// succ:  l00003750
l00003744_ds_t:
	r6 = r27
	goto l00003698
	// succ:  l00003698
l00003750:
	r3 = 0x00000001
	Mem0[r19 + 56:word32] = r3
	goto l00003758
	// succ:  l00003758
l00003750_ds_f:
	r3 = r25
	goto l00003764
	// succ:  l00003764
l00003750_ds_t:
	r3 = r25
	goto l0000378C
	// succ:  l0000378C
l00003758:
	r3 = r26 ^ r25
	// succ:  l0000375C
l0000375C:
	branch Test(EQ,r3) l00003750_ds_t
	goto l00003750_ds_f
	// succ:  l00003750_ds_f l00003750_ds_t
l00003764:
	v14 = SLICE(r0, byte, 0)
	Mem0[r26:byte] = v14
	goto l00003790
	// succ:  l00003790
l0000378C:
	r3 = 0x00000000
	// succ:  l00003790
l00003790:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r1 = r1 + 0x0000003C
	return
	// succ:  fn00003720_exit
fn00003720_exit:


// fn00003894
// Return size: 0
define fn00003894
fn00003894_entry:
	r1 = fp
	// succ:  l00003894
l00003894:
	r1 = r1 + 0xFFFFFFD8
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	branch Test(EQ,r5) l00003894_ds_t
	// succ:  l00003894_ds_f l00003894_ds_t
l00003894_ds_f:
	Mem0[r1 + 36:word32] = r22
	goto l000038AC
	// succ:  l000038AC
l00003894_ds_t:
	Mem0[r1 + 36:word32] = r22
	goto l00003954
	// succ:  l00003954
l000038AC:
	r3 = Mem0[r5 + 12:word32]
	r3 = r3 ^ 0x00001C4F
	branch Test(NE,r3) l000038AC_ds_t
	// succ:  l000038AC_ds_f l000038AC_ds_t
l000038AC_ds_f:
	r21 = 0xFFFFFFFE
	goto l000038BC
	// succ:  l000038BC
l000038AC_ds_t:
	r21 = 0xFFFFFFFE
	goto l00003938
	// succ:  l00003938
l000038BC:
	r3 = Mem0[r5 + 24:word32]
	branch Test(EQ,r3) l000038BC_ds_t
	// succ:  l000038BC_ds_f l000038BC_ds_t
l000038BC_ds_f:
	r19 = r5
	goto l000038C8
	// succ:  l000038C8
l000038BC_ds_t:
	r19 = r5
	goto l000038EC
	// succ:  l000038EC
l000038C8:
	r15 = 0x000038CC
	r5 = r5 + 0x00000054
	call fnFFFFFAFC (retsize: 0;)
	r15 = 0x000038D8
	r5 = Mem0[r19 + 36:word32]
	call fn000188F0 (retsize: 0;)
	r15 = 0x000038E4
	r5 = Mem0[r19 + 32:word32]
	call fn000188F0 (retsize: 0;)
l000038EC:
	r21 = Mem0[r19 + 76:word32]
	r3 = r21 ^ 0xFFFFFFFB
	branch Test(EQ,r3) l000038EC_ds_t
	// succ:  l000038EC_ds_f l000038EC_ds_t
l000038EC_ds_f:
	r7 = 0x00000000
	goto l000038FC
	// succ:  l000038FC
l000038EC_ds_t:
	r7 = 0x00000000
	goto l00003900
	// succ:  l00003900
l000038FC:
	r21 = 0x00000000
	// succ:  l00003900
l00003900:
	r6 = r7
	r15 = 0x00003904
	r5 = r19
	call fn00001A68 (retsize: 0;)
	r15 = 0x00003910
	r5 = Mem0[r19 + 20:word32]
	call fn000188F0 (retsize: 0;)
	r15 = 0x0000391C
	r5 = Mem0[r19 + 16:word32]
	call fn00019150 (retsize: 0;)
	r22 = r3
	r15 = 0x0000392C
	r5 = r19
	call fn000188F0 (retsize: 0;)
	branch Test(NE,r22) l0000395C
	// succ:  l00003938 l0000395C
l00003938:
	r3 = r21
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r1 = r1 + 0x00000028
	return
	// succ:  fn00003894_exit
l00003954:
	r21 = 0xFFFFFFFE
	goto l00003938
	// succ:  l00003938
l0000395C:
	r21 = 0xFFFFFFFF
	goto l00003938
	// succ:  l00003938
fn00003894_exit:


// fn00003964
// Return size: 0
define fn00003964
fn00003964_entry:
	r1 = fp
	// succ:  l00003964
l00003964:
	r1 = r1 + 0xFFFFFFCC
	Mem0[r1 + 36:word32] = r19
	Mem0[r1:word32] = r15
	Mem0[r1 + 40:word32] = r21
	Mem0[r1 + 44:word32] = r22
	Mem0[r1 + 48:word32] = r23
	r23 = Mem0[r5 + 28:word32]
	r19 = r5
	r15 = 0x00003988
	r5 = r23 + r23
	call fn00018918 (retsize: 0;)
fn00003964_exit:


// fn00003990
// Return size: 0
define fn00003990
fn00003990_entry:
	r1 = fp
	// succ:  l00003990
l00003990:
	branch Test(EQ,r3) l00003990_ds_t
	// succ:  l00003990_ds_f l00003990_ds_t
l00003990_ds_f:
	Mem0[r19 + 32:word32] = r3
	goto l00003998
	// succ:  l00003998
l00003990_ds_t:
	Mem0[r19 + 32:word32] = r3
	goto l00003A6C
	// succ:  l00003A6C
l00003998:
	r21 = Mem0[r19 + 40:word32]
	branch Test(EQ,r21) l000039C4
	// succ:  l000039A0 l000039C4
l000039A0:
	Mem0[r19 + 24:word32] = r23
	// succ:  l000039A4
l000039A4:
	r3 = 0x00000000
	// succ:  l000039A8
l000039A8:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 36:word32]
	r21 = Mem0[r1 + 40:word32]
	r22 = Mem0[r1 + 44:word32]
	r23 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn00003990_exit
l000039C4:
	r5 = r23
	r15 = 0x000039CC
	r22 = r3
	call fn00018918 (retsize: 0;)
	branch Test(EQ,r3) l000039C4_ds_t
	// succ:  l000039C4_ds_f l000039C4_ds_t
l000039C4_ds_f:
	Mem0[r19 + 36:word32] = r3
	goto l000039DC
	// succ:  l000039DC
l000039C4_ds_t:
	Mem0[r19 + 36:word32] = r3
	// succ:  l000039D8_thunk_fn00003A60
l000039D8_thunk_fn00003A60:
	call fn00003A60 (retsize: 0;)
	return
	// succ:  fn00003990_exit
l000039DC:
	r3 = 0x00000038
	r10 = Mem0[r19 + 64:word32]
	r6 = Mem0[r19 + 60:word32]
	Mem0[r1 + 32:word32] = r3
	r3 = 0xFFFF9D1C
	r9 = 0x00000008
	r7 = r9
	Mem0[r1 + 28:word32] = r3
	Mem0[r19 + 116:word32] = r21
	Mem0[r19 + 120:word32] = r21
	Mem0[r19 + 124:word32] = r21
	r8 = 0x0000001F
	r15 = 0x00003A10
	r5 = r19 + 0x00000054
	call fn0000B514 (retsize: 0;)
	branch Test(NE,r3) l000039DC_ds_t
	// succ:  l000039DC_ds_f l000039DC_ds_t
l000039DC_ds_f:
	r4 = r3
	goto l00003A20
	// succ:  l00003A20
l000039DC_ds_t:
	r4 = r3
	goto l00003A88
	// succ:  l00003A88
l00003A20:
	r5 = Mem0[r19 + 28:word32]
	r3 = Mem0[r19 + 40:word32]
	Mem0[r19 + 84:word32] = r4
	branch Test(NE,r3) l00003A20_ds_t
	// succ:  l00003A20_ds_f l00003A20_ds_t
l00003A20_ds_f:
	Mem0[r19 + 24:word32] = r5
	goto l00003A34
	// succ:  l00003A34
l00003A20_ds_t:
	Mem0[r19 + 24:word32] = r5
	goto l000039A4
	// succ:  l000039A4
l00003A34:
	r4 = Mem0[r19 + 36:word32]
	Mem0[r19 + 100:word32] = r5
	Mem0[r19 + 96:word32] = r4
	Mem0[r19 + 4:word32] = r4
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 36:word32]
	r21 = Mem0[r1 + 40:word32]
	r22 = Mem0[r1 + 44:word32]
	r23 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn00003990_exit
l00003A6C:
	r7 = 0xFFFF9D0C
	r5 = r19
	r15 = 0x00003A78
	r6 = 0xFFFFFFFC
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l000039A8
	// succ:  l000039A8
l00003A88:
	r15 = 0x00003A8C
	r5 = Mem0[r19 + 36:word32]
	call fn000188F0 (retsize: 0;)
	r15 = 0x00003A98
	r5 = Mem0[r19 + 32:word32]
	call fn000188F0 (retsize: 0;)
	goto l00003A6C
	// succ:  l00003A6C
fn00003990_exit:


// fn00003A60
// Return size: 0
define fn00003A60
fn00003A60_entry:
	r1 = fp
	// succ:  l00003A60
l00003A60:
	r15 = 0x00003A64
	r5 = r22
	call fn000188F0 (retsize: 0;)
fn00003A60_exit:


// fn00003AA4
// Return size: 0
define fn00003AA4
fn00003AA4_entry:
	r1 = fp
	// succ:  l00003AA4
l00003AA4:
	r1 = r1 + 0xFFFFFFD0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	r3 = Mem0[r5 + 24:word32]
	branch Test(EQ,r3) l00003AA4_ds_t
	// succ:  l00003AA4_ds_f l00003AA4_ds_t
l00003AA4_ds_f:
	r19 = r5
	goto l00003ACC
	// succ:  l00003ACC
l00003AA4_ds_t:
	r19 = r5
	goto l00003C18
	// succ:  l00003C18
l00003ACC:
	r23 = Mem0[r19 + 40:word32]
	branch Test(EQ,r23) l00003ACC_ds_t
	// succ:  l00003ACC_ds_f l00003ACC_ds_t
l00003ACC_ds_f:
	r24 = r19 + 0x00000054
	goto l00003AD8
	// succ:  l00003AD8
l00003ACC_ds_t:
	r24 = r19 + 0x00000054
	goto l00003B64
	// succ:  l00003B64
l00003AD8:
	r7 = Mem0[r19 + 88:word32]
	branch Test(EQ,r7) l00003AD8_ds_t
	// succ:  l00003AD8_ds_f l00003AD8_ds_t
l00003AD8_ds_f:
	r15 = Mem0[r1:word32]
	goto l00003AE4
	// succ:  l00003AE4
l00003AD8_ds_t:
	r15 = Mem0[r1:word32]
	goto l00003B9C
	// succ:  l00003B9C
l00003AE4:
	r21 = 0x00000000
	r6 = Mem0[r19 + 84:word32]
	goto l00003B10
	// succ:  l00003B10
l00003AF4:
	r7 = Mem0[r19 + 88:word32]
	r6 = Mem0[r19 + 84:word32]
	r7 = r7 - r3
	r6 = r6 + r3
	Mem0[r19 + 88:word32] = r7
	branch Test(EQ,r7) l00003AF4_ds_t
	// succ:  l00003AF4_ds_f l00003AF4_ds_t
l00003AF4_ds_f:
	Mem0[r19 + 84:word32] = r6
	goto l00003B10
	// succ:  l00003B10
l00003AF4_ds_t:
	Mem0[r19 + 84:word32] = r6
	goto l00003B98
	// succ:  l00003B98
l00003B10:
	r18 = cond(r21 -u r7)
	branch Test(GE,r18) l00003B1C
	// succ:  l00003B18 l00003B1C
l00003B18:
	r7 = r21
	// succ:  l00003B1C
l00003B1C:
	r15 = 0x00003B20
	r5 = Mem0[r19 + 16:word32]
	call fn0001908C (retsize: 0;)
	branch Test(GE,r3) l00003AF4
	// succ:  l00003B2C l00003AF4
l00003B2C:
	r7 = 0xFFFF9D24
	r5 = r19
	r15 = 0x00003B38
	r6 = 0xFFFFFFFF
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	// succ:  l00003B44
l00003B44:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	// succ:  l00003B4C
l00003B4C:
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r1 = r1 + 0x00000030
	return
	// succ:  fn00003AA4_exit
l00003B64:
	r3 = Mem0[r19 + 100:word32]
	r22 = 0x00000000
	goto l00003B70
	// succ:  l00003B70
l00003B64_ds_f:
	r21 = r3
	goto l00003B78
	// succ:  l00003B78
l00003B64_ds_t:
	r21 = r3
	goto l00003BBC
	// succ:  l00003BBC
l00003B70:
	branch Test(EQ,r3) l00003B64_ds_t
	goto l00003B64_ds_f
	// succ:  l00003B64_ds_f l00003B64_ds_t
l00003B78:
	r6 = r23
	// succ:  l00003B7C
l00003B7C:
	r15 = 0x00003B7C
	r5 = r24
	call fn00008E80 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFE
	branch Test(EQ,r3) l00003C58
	// succ:  l00003B8C l00003C58
l00003B8C:
	r3 = Mem0[r19 + 100:word32]
	r21 = r3 ^ r21
	branch Test(NE,r21) l00003B70
	// succ:  l00003B98 l00003B70
l00003B98:
	r15 = Mem0[r1:word32]
	// succ:  l00003B9C
l00003B9C:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r3 = 0x00000000
	r1 = r1 + 0x00000030
	return
	// succ:  fn00003AA4_exit
l00003BBC:
	r7 = Mem0[r19 + 96:word32]
	r3 = Mem0[r19 + 4:word32]
	r18 = cond(r3 -u r7)
	branch Test(LT,r18) l00003BBC_ds_t
	// succ:  l00003BBC_ds_f l00003BBC_ds_t
l00003BBC_ds_f:
	r7 = r7 - r3
	goto l00003BD0
	// succ:  l00003BD0
l00003BBC_ds_t:
	r7 = r7 - r3
	goto l00003BF4
	// succ:  l00003BF4
l00003BD0:
	r3 = Mem0[r19 + 36:word32]
	goto l00003C44
	// succ:  l00003C44
l00003BD8:
	r4 = Mem0[r19 + 4:word32]
	r7 = Mem0[r19 + 96:word32]
	r3 = r4 + r3
	r18 = cond(r3 -u r7)
	branch Test(GE,r18) l00003BD8_ds_t
	// succ:  l00003BD8_ds_f l00003BD8_ds_t
l00003BD8_ds_f:
	Mem0[r19 + 4:word32] = r3
	goto l00003BF0
	// succ:  l00003BF0
l00003BD8_ds_t:
	Mem0[r19 + 4:word32] = r3
	goto l00003C34
	// succ:  l00003C34
l00003BF0:
	r7 = r7 - r3
	// succ:  l00003BF4
l00003BF4:
	r18 = cond(r22 - r7)
	branch Test(GE,r18) l00003BF4_ds_t
	// succ:  l00003BF4_ds_f l00003BF4_ds_t
l00003BF4_ds_f:
	r6 = r3
	goto l00003C00
	// succ:  l00003C00
l00003BF4_ds_t:
	r6 = r3
	goto l00003C04
	// succ:  l00003C04
l00003C00:
	r7 = r22
	// succ:  l00003C04
l00003C04:
	r15 = 0x00003C08
	r5 = Mem0[r19 + 16:word32]
	call fn0001908C (retsize: 0;)
	branch Test(GE,r3) l00003BD8
	// succ:  l00003C14 l00003BD8
l00003C14:
	goto l00003B2C
	// succ:  l00003B2C
l00003C18:
	r15 = 0x00003C18
	call fn00003964 (retsize: 0;)
	r4 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r4) l00003C18_ds_t
	// succ:  l00003C18_ds_f l00003C18_ds_t
l00003C18_ds_f:
	r15 = Mem0[r1:word32]
	goto l00003C2C
	// succ:  l00003C2C
l00003C18_ds_t:
	r15 = Mem0[r1:word32]
	goto l00003ACC
	// succ:  l00003ACC
l00003C2C:
	r19 = Mem0[r1 + 28:word32]
	goto l00003B4C
	// succ:  l00003B4C
l00003C34:
	r21 = Mem0[r19 + 100:word32]
	branch Test(NE,r21) l00003C34_ds_t
	// succ:  l00003C34_ds_f l00003C34_ds_t
l00003C34_ds_f:
	r6 = r23
	goto l00003C40
	// succ:  l00003C40
l00003C34_ds_t:
	r6 = r23
	goto l00003B7C
	// succ:  l00003B7C
l00003C40:
	r3 = Mem0[r19 + 36:word32]
	// succ:  l00003C44
l00003C44:
	r21 = Mem0[r19 + 24:word32]
	Mem0[r19 + 96:word32] = r3
	Mem0[r19 + 100:word32] = r21
	Mem0[r19 + 4:word32] = r3
	goto l00003B78
	// succ:  l00003B78
l00003C58:
	r7 = 0xFFFF9D40
	r5 = r19
	r15 = 0x00003C64
	r6 = 0xFFFFFFFE
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l00003B44
	// succ:  l00003B44
fn00003AA4_exit:


// fn00003C74
// Return size: 0
define fn00003C74
fn00003C74_entry:
	r1 = fp
	// succ:  l00003C74
l00003C74:
	r1 = r1 + 0xFFFFFFC8
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 40:word32] = r23
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	r3 = Mem0[r5 + 88:word32]
	r19 = r5
	branch Test(NE,r3) l00003C74_ds_t
	// succ:  l00003C74_ds_f l00003C74_ds_t
l00003C74_ds_f:
	r23 = r6
	goto l00003CA4_thunk_fn00003CA8
	// succ:  l00003CA4_thunk_fn00003CA8
l00003C74_ds_t:
	r23 = r6
	goto l00003CA4_thunk_fn00003EAC
	// succ:  l00003CA4_thunk_fn00003EAC
l00003CA4_thunk_fn00003CA8:
	call fn00003CA8 (retsize: 0;)
	return
	// succ:  fn00003C74_exit
l00003CA4_thunk_fn00003EAC:
	call fn00003EAC (retsize: 0;)
	return
	// succ:  fn00003C74_exit
fn00003C74_exit:


// fn00003C90
// Return size: 0
define fn00003C90
fn00003C90_entry:
	r1 = fp
	// succ:  l00003C90
l00003C90:
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	r3 = Mem0[r5 + 88:word32]
	r19 = r5
	branch Test(NE,r3) l00003C90_ds_t
	// succ:  l00003C90_ds_f l00003C90_ds_t
l00003C90_ds_f:
	r23 = r6
	goto l00003CA4_thunk_fn00003CA8
	// succ:  l00003CA4_thunk_fn00003CA8
l00003C90_ds_t:
	r23 = r6
	goto l00003CA4_thunk_fn00003EAC
	// succ:  l00003CA4_thunk_fn00003EAC
l00003CA4_thunk_fn00003CA8:
	call fn00003CA8 (retsize: 0;)
	return
	// succ:  fn00003C90_exit
l00003CA4_thunk_fn00003EAC:
	call fn00003EAC (retsize: 0;)
	return
	// succ:  fn00003C90_exit
fn00003C90_exit:


// fn00003CA8
// Return size: 0
define fn00003CA8
fn00003CA8_entry:
	r1 = fp
	// succ:  l00003CA8
l00003CA8:
	r25 = r19 + 0x00000054
	// succ:  l00003CA8_thunk_fn00003EAC
l00003CA8_thunk_fn00003EAC:
	call fn00003EAC (retsize: 0;)
	return
	// succ:  fn00003CA8_exit
fn00003CA8_exit:


// fn00003EAC
// Return size: 0
define fn00003EAC
fn00003EAC_entry:
	r1 = fp
	goto l00003EAC
	// succ:  l00003EAC
l00003CA8_ds_f:
	r24 = 0x00000000
	goto l00003CC0
	// succ:  l00003CC0
l00003CA8_ds_t:
	r24 = 0x00000000
	goto l00003DD4
	// succ:  l00003DD4
l00003CAC:
	r4 = 0x00000001
	r21 = 0x00000000
	branch Test(EQ,r23) l00003CA8_ds_t
	goto l00003CA8_ds_f
	// succ:  l00003CA8_ds_f l00003CA8_ds_t
l00003CC0:
	r3 = Mem0[r19 + 24:word32]
	r18 = cond(r23 - r3)
	branch Test(LT,r18) l00003DDC
	// succ:  l00003CCC l00003DDC
l00003CCC:
	branch Test(LT,r3) l00003CCC_ds_t
	// succ:  l00003CCC_ds_f l00003CCC_ds_t
l00003CCC_ds_f:
	r22 = r3
	goto l00003CD4
	// succ:  l00003CD4
l00003CCC_ds_t:
	r22 = r3
	goto l00003DDC
	// succ:  l00003DDC
l00003CD4:
	branch Test(EQ,r4) l00003CD4_ds_t
	// succ:  l00003CD4_ds_f l00003CD4_ds_t
l00003CD4_ds_f:
	r5 = Mem0[r19 + 32:word32]
	goto l00003CDC
	// succ:  l00003CDC
l00003CD4_ds_t:
	r5 = Mem0[r19 + 32:word32]
	goto l00003CF4
	// succ:  l00003CF4
l00003CDC:
	r7 = r22
	r15 = 0x00003CE4
	r6 = r24
	call fn00018C64 (retsize: 0;)
	r5 = Mem0[r19 + 32:word32]
	r3 = Mem0[r19 + 24:word32]
	// succ:  l00003CF4
l00003CF4:
	r4 = Mem0[r19 + 8:word32]
	Mem0[r19 + 88:word32] = r22
	Mem0[r19 + 84:word32] = r5
	r4 = r4 + r22
	branch Test(EQ,r3) l00003CF4_ds_t
	// succ:  l00003CF4_ds_f l00003CF4_ds_t
l00003CF4_ds_f:
	Mem0[r19 + 8:word32] = r4
	goto l00003D0C
	// succ:  l00003D0C
l00003CF4_ds_t:
	Mem0[r19 + 8:word32] = r4
	goto l00003E40
	// succ:  l00003E40
l00003D0C:
	r3 = Mem0[r19 + 40:word32]
	branch Test(EQ,r3) l00003D9C
	// succ:  l00003D14 l00003D9C
l00003D14:
	r7 = Mem0[r19 + 88:word32]
	branch Test(EQ,r7) l00003DC8
	// succ:  l00003D1C l00003DC8
l00003D1C:
	r6 = Mem0[r19 + 84:word32]
	goto l00003D40
	// succ:  l00003D40
l00003D24:
	r7 = Mem0[r19 + 88:word32]
	r6 = Mem0[r19 + 84:word32]
	r7 = r7 - r3
	r6 = r6 + r3
	Mem0[r19 + 88:word32] = r7
	branch Test(EQ,r7) l00003D24_ds_t
	// succ:  l00003D24_ds_f l00003D24_ds_t
l00003D24_ds_f:
	Mem0[r19 + 84:word32] = r6
	goto l00003D40
	// succ:  l00003D40
l00003D24_ds_t:
	Mem0[r19 + 84:word32] = r6
	goto l00003DC8
	// succ:  l00003DC8
l00003D40:
	r18 = cond(r21 -u r7)
	branch Test(GE,r18) l00003D4C
	// succ:  l00003D48 l00003D4C
l00003D48:
	r7 = r21
	// succ:  l00003D4C
l00003D4C:
	r15 = 0x00003D50
	r5 = Mem0[r19 + 16:word32]
	call fn0001908C (retsize: 0;)
	branch Test(GE,r3) l00003D24
	// succ:  l00003D5C l00003D24
l00003D5C:
	r7 = 0xFFFF9D24
	r5 = r19
	r15 = 0x00003D68
	r6 = 0xFFFFFFFF
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	// succ:  l00003D74
l00003D74:
	r15 = Mem0[r1:word32]
	// succ:  l00003D78
l00003D78:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r1 = r1 + 0x00000038
	return
	// succ:  fn00003EAC_exit
l00003D9C:
	r3 = Mem0[r19 + 100:word32]
	goto l00003DA0
	// succ:  l00003DA0
l00003D9C_ds_f:
	r26 = r3
	goto l00003DA8
	// succ:  l00003DA8
l00003D9C_ds_t:
	r26 = r3
	goto l00003DE4
	// succ:  l00003DE4
l00003DA0:
	branch Test(EQ,r3) l00003D9C_ds_t
	goto l00003D9C_ds_f
	// succ:  l00003D9C_ds_f l00003D9C_ds_t
l00003DA8:
	r6 = r24
	// succ:  l00003DAC
l00003DAC:
	r15 = 0x00003DAC
	r5 = r25
	call fn00008E80 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFE
	branch Test(EQ,r3) l00003E90
	// succ:  l00003DBC l00003E90
l00003DBC:
	r3 = Mem0[r19 + 100:word32]
	r26 = r3 ^ r26
	branch Test(NE,r26) l00003DA0
	// succ:  l00003DC8 l00003DA0
l00003DC8:
	r23 = r23 - r22
	branch Test(NE,r23) l00003DC8_ds_t
	// succ:  l00003DC8_ds_f l00003DC8_ds_t
l00003DC8_ds_f:
	r4 = r24
	goto l00003DD4
	// succ:  l00003DD4
l00003DC8_ds_t:
	r4 = r24
	goto l00003CC0
	// succ:  l00003CC0
l00003DD4:
	r3 = 0x00000000
	goto l00003D74
	// succ:  l00003D74
l00003DDC:
	r22 = r23
	goto l00003CD4
	// succ:  l00003CD4
l00003DE4:
	r7 = Mem0[r19 + 96:word32]
	r3 = Mem0[r19 + 4:word32]
	r18 = cond(r3 -u r7)
	branch Test(LT,r18) l00003DE4_ds_t
	// succ:  l00003DE4_ds_f l00003DE4_ds_t
l00003DE4_ds_f:
	r7 = r7 - r3
	goto l00003DF8
	// succ:  l00003DF8
l00003DE4_ds_t:
	r7 = r7 - r3
	goto l00003E1C
	// succ:  l00003E1C
l00003DF8:
	r3 = Mem0[r19 + 36:word32]
	goto l00003E6C
	// succ:  l00003E6C
l00003E00:
	r4 = Mem0[r19 + 4:word32]
	r7 = Mem0[r19 + 96:word32]
	r3 = r4 + r3
	r18 = cond(r3 -u r7)
	branch Test(GE,r18) l00003E00_ds_t
	// succ:  l00003E00_ds_f l00003E00_ds_t
l00003E00_ds_f:
	Mem0[r19 + 4:word32] = r3
	goto l00003E18
	// succ:  l00003E18
l00003E00_ds_t:
	Mem0[r19 + 4:word32] = r3
	goto l00003E5C
	// succ:  l00003E5C
l00003E18:
	r7 = r7 - r3
	// succ:  l00003E1C
l00003E1C:
	r18 = cond(r21 - r7)
	branch Test(GE,r18) l00003E1C_ds_t
	// succ:  l00003E1C_ds_f l00003E1C_ds_t
l00003E1C_ds_f:
	r6 = r3
	goto l00003E28
	// succ:  l00003E28
l00003E1C_ds_t:
	r6 = r3
	goto l00003E2C
	// succ:  l00003E2C
l00003E28:
	r7 = r21
	// succ:  l00003E2C
l00003E2C:
	r15 = 0x00003E30
	r5 = Mem0[r19 + 16:word32]
	call fn0001908C (retsize: 0;)
	branch Test(GE,r3) l00003E00
	// succ:  l00003E3C l00003E00
l00003E3C:
	goto l00003D5C
	// succ:  l00003D5C
l00003E40:
	r15 = 0x00003E40
	r5 = r19
	call fn00003964 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l00003E40_ds_t
	// succ:  l00003E40_ds_f l00003E40_ds_t
l00003E40_ds_f:
	r3 = 0xFFFFFFFF
	goto l00003E54
	// succ:  l00003E54
l00003E40_ds_t:
	r3 = 0xFFFFFFFF
	goto l00003D0C
	// succ:  l00003D0C
l00003E54:
	r15 = Mem0[r1:word32]
	goto l00003D78
	// succ:  l00003D78
l00003E5C:
	r26 = Mem0[r19 + 100:word32]
	branch Test(NE,r26) l00003E5C_ds_t
	// succ:  l00003E5C_ds_f l00003E5C_ds_t
l00003E5C_ds_f:
	r6 = r24
	goto l00003E68
	// succ:  l00003E68
l00003E5C_ds_t:
	r6 = r24
	goto l00003DAC
	// succ:  l00003DAC
l00003E68:
	r3 = Mem0[r19 + 36:word32]
	// succ:  l00003E6C
l00003E6C:
	r26 = Mem0[r19 + 24:word32]
	r6 = r24
	r5 = r25
	Mem0[r19 + 96:word32] = r3
	Mem0[r19 + 100:word32] = r26
	r15 = 0x00003E80
	Mem0[r19 + 4:word32] = r3
	call fn00008E80 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFE
	branch Test(NE,r3) l00003DBC
	// succ:  l00003E90 l00003DBC
l00003E90:
	r7 = 0xFFFF9D40
	r5 = r19
	r15 = 0x00003E9C
	r6 = 0xFFFFFFFE
	call fn00001A68 (retsize: 0;)
	r3 = 0xFFFFFFFF
	goto l00003D74
	// succ:  l00003D74
l00003EAC:
	r15 = 0x00003EAC
	call fn00003AA4 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l00003EAC_ds_t
	// succ:  l00003EAC_ds_f l00003EAC_ds_t
l00003EAC_ds_f:
	r25 = r19 + 0x00000054
	goto l00003EC0
	// succ:  l00003EC0
l00003EAC_ds_t:
	r25 = r19 + 0x00000054
	goto l00003CAC
	// succ:  l00003CAC
l00003EC0:
	r3 = 0xFFFFFFFF
	goto l00003D74
	// succ:  l00003D74
fn00003EAC_exit:


// fn00003EC8
// Return size: 0
define fn00003EC8
fn00003EC8_entry:
	r1 = fp
	// succ:  l00003EC8
l00003EC8:
	r1 = r1 + 0xFFFFFFCC
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	branch Test(EQ,r7) l00003EC8_ds_t
	// succ:  l00003EC8_ds_f l00003EC8_ds_t
l00003EC8_ds_f:
	Mem0[r1 + 48:word32] = r25
	goto l00003EEC
	// succ:  l00003EEC
l00003EC8_ds_t:
	Mem0[r1 + 48:word32] = r25
	goto l00003FC0
	// succ:  l00003FC0
l00003EEC:
	r3 = Mem0[r5 + 24:word32]
	r21 = r7
	r19 = r5
	branch Test(EQ,r3) l00003EEC_ds_t
	// succ:  l00003EEC_ds_f l00003EEC_ds_t
l00003EEC_ds_f:
	r24 = r6
	goto l00003F00
	// succ:  l00003F00
l00003EEC_ds_t:
	r24 = r6
	goto l00003FEC
	// succ:  l00003FEC
l00003F00:
	r3 = Mem0[r19 + 72:word32]
	branch Test(NE,r3) l00003FA8
	// succ:  l00003F08 l00003FA8
l00003F08:
	r22 = Mem0[r19 + 24:word32]
	r18 = cond(r21 -u r22)
	branch Test(GE,r18) l00003F08_ds_t
	// succ:  l00003F08_ds_f l00003F08_ds_t
l00003F08_ds_f:
	r5 = Mem0[r19 + 88:word32]
	goto l00003F18
	// succ:  l00003F18
l00003F08_ds_t:
	r5 = Mem0[r19 + 88:word32]
	goto l00004004
	// succ:  l00004004
l00003F18:
	r23 = r21
	branch Test(EQ,r5) l00003F18_ds_t
	// succ:  l00003F18_ds_f l00003F18_ds_t
l00003F18_ds_f:
	r4 = Mem0[r19 + 32:word32]
	goto l00003F24
	// succ:  l00003F24
l00003F18_ds_t:
	r4 = Mem0[r19 + 32:word32]
	goto l00003F9C
	// succ:  l00003F9C
l00003F24:
	r3 = Mem0[r19 + 84:word32]
	goto l00003F28
	// succ:  l00003F28
l00003F24_ds_f:
	r6 = r24
	goto l00003F44
	// succ:  l00003F44
l00003F24_ds_t:
	r6 = r24
	goto l00003F48
	// succ:  l00003F48
l00003F28:
	r3 = r3 + r5
	r5 = r3
	r3 = r3 - r4
	r22 = r22 - r3
	r18 = cond(r23 -u r22)
	branch Test(GE,r18) l00003F24_ds_t
	goto l00003F24_ds_f
	// succ:  l00003F24_ds_f l00003F24_ds_t
l00003F44:
	r22 = r23
	// succ:  l00003F48
l00003F48:
	r7 = r22
	r23 = r23 - r22
	r15 = 0x00003F54
	r24 = r24 + r22
	call fn00018C34 (retsize: 0;)
	r4 = Mem0[r19 + 88:word32]
	r3 = Mem0[r19 + 8:word32]
	r5 = r19
	r4 = r4 + r22
	r22 = r3 + r22
	Mem0[r19 + 88:word32] = r4
	branch Test(EQ,r23) l00003F48_ds_t
	// succ:  l00003F48_ds_f l00003F48_ds_t
l00003F48_ds_f:
	Mem0[r19 + 8:word32] = r22
	goto l00003F7C
	// succ:  l00003F7C
l00003F48_ds_t:
	Mem0[r19 + 8:word32] = r22
	goto l00003FC4
	// succ:  l00003FC4
l00003F7C:
	r15 = 0x00003F7C
	call fn00003AA4 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r3) l00003FC0
	// succ:  l00003F8C l00003FC0
l00003F8C:
	r5 = Mem0[r19 + 88:word32]
	r22 = Mem0[r19 + 24:word32]
	branch Test(NE,r5) l00003F8C_ds_t
	// succ:  l00003F8C_ds_f l00003F8C_ds_t
l00003F8C_ds_f:
	r4 = Mem0[r19 + 32:word32]
	goto l00003F9C
	// succ:  l00003F9C
l00003F8C_ds_t:
	r4 = Mem0[r19 + 32:word32]
	goto l00003F24
	// succ:  l00003F24
l00003F9C:
	r3 = r4
	Mem0[r19 + 84:word32] = r4
	goto l00003F28
	// succ:  l00003F28
l00003FA8:
	r6 = Mem0[r19 + 68:word32]
	r5 = r19
	r15 = 0x00003FB0
	Mem0[r19 + 72:word32] = r0
	call fn00003C74 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l00003F08
	// succ:  l00003FC0 l00003F08
l00003FC0:
	r21 = 0x00000000
	// succ:  l00003FC4
l00003FC4:
	r3 = r21
	// succ:  l00003FC8
l00003FC8:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn00003EC8_exit
l00003FEC:
	r15 = 0x00003FEC
	call fn00003964 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l00003F00
	// succ:  l00003FFC l00003F00
l00003FFC:
	r21 = 0x00000000
	goto l00003FC4
	// succ:  l00003FC4
l00004004:
	branch Test(NE,r5) l000040A0
	// succ:  l00004008 l000040A0
l00004008:
	r3 = Mem0[r19 + 8:word32]
	Mem0[r19 + 84:word32] = r24
	Mem0[r19 + 88:word32] = r21
	r3 = r3 + r21
	Mem0[r19 + 8:word32] = r3
	branch Test(EQ,r22) l00004008_ds_t
	// succ:  l00004008_ds_f l00004008_ds_t
l00004008_ds_f:
	r24 = r19 + 0x00000054
	goto l00004024
	// succ:  l00004024
l00004008_ds_t:
	r24 = r19 + 0x00000054
	goto l00004150
	// succ:  l00004150
l00004024:
	r25 = Mem0[r19 + 40:word32]
	branch Test(EQ,r25) l000040B8
	// succ:  l0000402C l000040B8
l0000402C:
	r7 = Mem0[r19 + 88:word32]
	branch Test(EQ,r7) l0000402C_ds_t
	// succ:  l0000402C_ds_f l0000402C_ds_t
l0000402C_ds_f:
	r3 = r21
	goto l00004038
	// succ:  l00004038
l0000402C_ds_t:
	r3 = r21
	goto l00003FC8
	// succ:  l00003FC8
l00004038:
	r22 = 0x00000000
	r6 = Mem0[r19 + 84:word32]
	goto l00004064
	// succ:  l00004064
l00004048:
	r7 = Mem0[r19 + 88:word32]
	r6 = Mem0[r19 + 84:word32]
	r7 = r7 - r3
	r6 = r6 + r3
	Mem0[r19 + 88:word32] = r7
	branch Test(EQ,r7) l00004048_ds_t
	// succ:  l00004048_ds_f l00004048_ds_t
l00004048_ds_f:
	Mem0[r19 + 84:word32] = r6
	goto l00004064
	// succ:  l00004064
l00004048_ds_t:
	Mem0[r19 + 84:word32] = r6
	goto l00003FC4
	// succ:  l00003FC4
l00004064:
	r18 = cond(r22 -u r7)
	branch Test(GE,r18) l00004070
	// succ:  l0000406C l00004070
l0000406C:
	r7 = r22
	// succ:  l00004070
l00004070:
	r15 = 0x00004074
	r5 = Mem0[r19 + 16:word32]
	call fn0001908C (retsize: 0;)
	branch Test(GE,r3) l00004048
	// succ:  l00004080 l00004048
l00004080:
	r7 = 0xFFFF9D24
	r5 = r19
	r6 = 0xFFFFFFFF
	r15 = 0x00004090
	r21 = 0x00000000
	call fn00001A68 (retsize: 0;)
	r3 = r21
	goto l00003FC8
	// succ:  l00003FC8
l000040A0:
	r15 = 0x000040A0
	r5 = r19
	call fn00003AA4 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r3) l00003FC0
	// succ:  l000040B0 l00003FC0
l000040B0:
	r22 = Mem0[r19 + 24:word32]
	goto l00004008
	// succ:  l00004008
l000040B8:
	r3 = Mem0[r19 + 100:word32]
	r23 = 0x00000000
	branch Test(EQ,r3) l000040B8_ds_t
	// succ:  l000040B8_ds_f l000040B8_ds_t
l000040B8_ds_f:
	r22 = r3
	goto l000040CC
	// succ:  l000040CC
l000040B8_ds_t:
	r22 = r3
	goto l000040F4
	// succ:  l000040F4
l000040CC:
	r6 = r25
	// succ:  l000040D0
l000040D0:
	r15 = 0x000040D0
	r5 = r24
	call fn00008E80 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFE
	branch Test(EQ,r3) l0000419C
	// succ:  l000040E0 l0000419C
l000040E0:
	r3 = Mem0[r19 + 100:word32]
	r22 = r3 ^ r22
	branch Test(EQ,r22) l00003FC4
	// succ:  l000040EC l00003FC4
l000040EC:
	branch Test(NE,r3) l000040EC_ds_t
	// succ:  l000040EC_ds_f l000040EC_ds_t
l000040EC_ds_f:
	r22 = r3
	goto l000040F4
	// succ:  l000040F4
l000040EC_ds_t:
	r22 = r3
	goto l000040CC
	// succ:  l000040CC
l000040F4:
	r7 = Mem0[r19 + 96:word32]
	r3 = Mem0[r19 + 4:word32]
	r18 = cond(r3 -u r7)
	branch Test(LT,r18) l000040F4_ds_t
	// succ:  l000040F4_ds_f l000040F4_ds_t
l000040F4_ds_f:
	r7 = r7 - r3
	goto l00004108
	// succ:  l00004108
l000040F4_ds_t:
	r7 = r7 - r3
	goto l0000412C
	// succ:  l0000412C
l00004108:
	r3 = Mem0[r19 + 36:word32]
	goto l00004178
	// succ:  l00004178
l00004110:
	r4 = Mem0[r19 + 4:word32]
	r7 = Mem0[r19 + 96:word32]
	r3 = r4 + r3
	r18 = cond(r3 -u r7)
	branch Test(GE,r18) l00004110_ds_t
	// succ:  l00004110_ds_f l00004110_ds_t
l00004110_ds_f:
	Mem0[r19 + 4:word32] = r3
	goto l00004128
	// succ:  l00004128
l00004110_ds_t:
	Mem0[r19 + 4:word32] = r3
	goto l00004168
	// succ:  l00004168
l00004128:
	r7 = r7 - r3
	// succ:  l0000412C
l0000412C:
	r18 = cond(r23 - r7)
	branch Test(GE,r18) l0000412C_ds_t
	// succ:  l0000412C_ds_f l0000412C_ds_t
l0000412C_ds_f:
	r6 = r3
	goto l00004138
	// succ:  l00004138
l0000412C_ds_t:
	r6 = r3
	goto l0000413C
	// succ:  l0000413C
l00004138:
	r7 = r23
	// succ:  l0000413C
l0000413C:
	r15 = 0x00004140
	r5 = Mem0[r19 + 16:word32]
	call fn0001908C (retsize: 0;)
	branch Test(GE,r3) l00004110
	// succ:  l0000414C l00004110
l0000414C:
	goto l00004080
	// succ:  l00004080
l00004150:
	r15 = 0x00004150
	r5 = r19
	call fn00003964 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l00004024
	// succ:  l00004160 l00004024
l00004160:
	r21 = 0x00000000
	goto l00003FC4
	// succ:  l00003FC4
l00004168:
	r22 = Mem0[r19 + 100:word32]
	branch Test(NE,r22) l00004168_ds_t
	// succ:  l00004168_ds_f l00004168_ds_t
l00004168_ds_f:
	r6 = r25
	goto l00004174
	// succ:  l00004174
l00004168_ds_t:
	r6 = r25
	goto l000040D0
	// succ:  l000040D0
l00004174:
	r3 = Mem0[r19 + 36:word32]
	// succ:  l00004178
l00004178:
	r22 = Mem0[r19 + 24:word32]
	r6 = r25
	r5 = r24
	Mem0[r19 + 96:word32] = r3
	Mem0[r19 + 100:word32] = r22
	r15 = 0x0000418C
	Mem0[r19 + 4:word32] = r3
	call fn00008E80 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFE
	branch Test(NE,r3) l000040E0
	// succ:  l0000419C l000040E0
l0000419C:
	r7 = 0xFFFF9D40
	r5 = r19
	r6 = 0xFFFFFFFE
	r15 = 0x000041AC
	r21 = r3
	call fn00001A68 (retsize: 0;)
	r3 = r21
	goto l00003FC8
	// succ:  l00003FC8
fn00003EC8_exit:


// fn000041BC
// Return size: 0
define fn000041BC
fn000041BC_entry:
	r1 = fp
	// succ:  l000041BC
l000041BC:
	branch Test(EQ,r5) l00004200
	// succ:  l000041C0 l00004200
l000041C0:
	r8 = Mem0[r5 + 12:word32]
	r8 = r8 ^ 0x000079B1
	branch Test(EQ,r8) l000041C0_ds_t
	// succ:  l000041C0_ds_f l000041C0_ds_t
l000041C0_ds_f:
	r3 = 0x00000000
	goto l000041D0
	// succ:  l000041D0
l000041C0_ds_t:
	r3 = 0x00000000
	goto l000041D8
	// succ:  l000041D8
l000041D0:
	return
	// succ:  fn000041BC_exit
l000041D8:
	r3 = Mem0[r5 + 76:word32]
	branch Test(NE,r3) l00004208
	// succ:  l000041E0 l00004208
l000041E0:
	r1 = r1 + 0xFFFFFFE0
	branch Test(LT,r7) l000041E0_ds_t
	// succ:  l000041E0_ds_f l000041E0_ds_t
l000041E0_ds_f:
	Mem0[r1:word32] = r15
	goto l000041EC
	// succ:  l000041EC
l000041E0_ds_t:
	Mem0[r1:word32] = r15
	goto l00004210
	// succ:  l00004210
l000041EC:
	r15 = 0x000041EC
	call fn00003EC8 (retsize: 0;)
	// succ:  l000041F4
l000041F4:
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn000041BC_exit
l00004200:
	r3 = r5
	return
	// succ:  fn000041BC_exit
l00004208:
	r3 = r8
	return
	// succ:  fn000041BC_exit
l00004210:
	r7 = 0xFFFF9D68
	r6 = 0xFFFFFFFD
	r15 = 0x0000421C
	Mem0[r1 + 28:word32] = r3
	call fn00001A68 (retsize: 0;)
	r3 = Mem0[r1 + 28:word32]
	goto l000041F4
	// succ:  l000041F4
fn000041BC_exit:


// fn00005318
// Return size: 0
define fn00005318
fn00005318_entry:
	r1 = fp
	// succ:  l00005318
l00005318:
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	branch Test(EQ,r5) l00005318_ds_t
	// succ:  l00005318_ds_f l00005318_ds_t
l00005318_ds_f:
	Mem0[r1 + 56:word32] = r27
	goto l00005334
	// succ:  l00005334
l00005318_ds_t:
	Mem0[r1 + 56:word32] = r27
	goto l00005518
	// succ:  l00005518
l00005334:
	r3 = Mem0[r5 + 12:word32]
	r3 = r3 ^ 0x000079B1
	branch Test(NE,r3) l00005334_ds_t
	// succ:  l00005334_ds_f l00005334_ds_t
l00005334_ds_f:
	r23 = 0xFFFFFFFE
	goto l00005344
	// succ:  l00005344
l00005334_ds_t:
	r23 = 0xFFFFFFFE
	goto l0000537C
	// succ:  l0000537C
l00005344:
	r23 = Mem0[r5 + 76:word32]
	branch Test(NE,r23) l00005518
	// succ:  l0000534C l00005518
l0000534C:
	r3 = Mem0[r5 + 60:word32]
	r3 = r3 ^ r6
	branch Test(EQ,r3) l000054B4
	// succ:  l00005358 l000054B4
l00005358:
	r3 = Mem0[r5 + 72:word32]
	r22 = r7
	r21 = r6
	branch Test(NE,r3) l00005358_ds_t
	// succ:  l00005358_ds_f l00005358_ds_t
l00005358_ds_f:
	r19 = r5
	goto l0000536C
	// succ:  l0000536C
l00005358_ds_t:
	r19 = r5
	goto l000053AC
	// succ:  l000053AC
l0000536C:
	r3 = Mem0[r19 + 24:word32]
	branch Test(NE,r3) l000053C8
	// succ:  l00005374 l000053C8
l00005374:
	Mem0[r19 + 60:word32] = r21
	// succ:  l00005378
l00005378:
	Mem0[r19 + 64:word32] = r22
	// succ:  l0000537C
l0000537C:
	r3 = r23
	r15 = Mem0[r1:word32]
	// succ:  l00005384
l00005384:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r1 = r1 + 0x0000003C
	return
	// succ:  fn00005318_exit
l000053AC:
	r6 = Mem0[r5 + 68:word32]
	r15 = 0x000053B0
	Mem0[r5 + 72:word32] = r0
	call fn00003C74 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l0000536C
	// succ:  l000053C0 l0000536C
l000053C0:
	r23 = Mem0[r19 + 76:word32]
	goto l0000537C
	// succ:  l0000537C
l000053C8:
	r7 = Mem0[r19 + 88:word32]
	branch Test(EQ,r7) l000053C8_ds_t
	// succ:  l000053C8_ds_f l000053C8_ds_t
l000053C8_ds_f:
	r24 = r19 + 0x00000054
	goto l000053D4
	// succ:  l000053D4
l000053C8_ds_t:
	r24 = r19 + 0x00000054
	goto l0000549C
	// succ:  l0000549C
l000053D4:
	r3 = Mem0[r19 + 40:word32]
	branch Test(NE,r3) l000053D4_ds_t
	// succ:  l000053D4_ds_f l000053D4_ds_t
l000053D4_ds_f:
	r26 = 0x00000005
	goto l000053E0
	// succ:  l000053E0
l000053D4_ds_t:
	r26 = 0x00000005
	goto l000054CC
	// succ:  l000054CC
l000053E0:
	r25 = 0x00000000
	goto l000053E8
	// succ:  l000053E8
l000053E0_ds_f:
	r6 = r7
	goto l000053FC
	// succ:  l000053FC
l000053E0_ds_t:
	r6 = r7
	goto l00005420
	// succ:  l00005420
l000053E8:
	r5 = Mem0[r19 + 96:word32]
	r7 = Mem0[r19 + 4:word32]
	r18 = cond(r7 -u r5)
	branch Test(LT,r18) l000053E0_ds_t
	goto l000053E0_ds_f
	// succ:  l000053E0_ds_f l000053E0_ds_t
l000053FC:
	r27 = Mem0[r19 + 100:word32]
	goto l00005460
	// succ:  l00005460
l00005404:
	r4 = Mem0[r19 + 4:word32]
	r5 = Mem0[r19 + 96:word32]
	r7 = r4 + r3
	r18 = cond(r7 -u r5)
	branch Test(GE,r18) l00005404_ds_t
	// succ:  l00005404_ds_f l00005404_ds_t
l00005404_ds_f:
	Mem0[r19 + 4:word32] = r7
	goto l0000541C
	// succ:  l0000541C
l00005404_ds_t:
	Mem0[r19 + 4:word32] = r7
	goto l0000545C
	// succ:  l0000545C
l0000541C:
	r6 = r7
	// succ:  l00005420
l00005420:
	r7 = r5 - r7
	r18 = cond(r25 - r7)
	branch Test(GE,r18) l00005430
	// succ:  l0000542C l00005430
l0000542C:
	r7 = r25
	// succ:  l00005430
l00005430:
	r15 = 0x00005434
	r5 = Mem0[r19 + 16:word32]
	call fn0001908C (retsize: 0;)
	branch Test(GE,r3) l00005404
	// succ:  l00005440 l00005404
l00005440:
	r7 = 0xFFFF9D24
	r5 = r19
	r15 = 0x0000544C
	r6 = 0xFFFFFFFF
	call fn00001A68 (retsize: 0;)
	r23 = Mem0[r19 + 76:word32]
	goto l0000537C
	// succ:  l0000537C
l0000545C:
	r27 = Mem0[r19 + 100:word32]
	// succ:  l00005460
l00005460:
	branch Test(NE,r27) l00005460_ds_t
	// succ:  l00005460_ds_f l00005460_ds_t
l00005460_ds_f:
	r6 = r26
	goto l00005468
	// succ:  l00005468
l00005460_ds_t:
	r6 = r26
	goto l0000547C
	// succ:  l0000547C
l00005468:
	r3 = Mem0[r19 + 36:word32]
	r27 = Mem0[r19 + 24:word32]
	Mem0[r19 + 96:word32] = r3
	Mem0[r19 + 100:word32] = r27
	Mem0[r19 + 4:word32] = r3
	// succ:  l0000547C
l0000547C:
	r15 = 0x0000547C
	r5 = r24
	call fn00008E80 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFE
	branch Test(EQ,r3) l0000547C_ds_t
	// succ:  l0000547C_ds_f l0000547C_ds_t
l0000547C_ds_f:
	r5 = r19
	goto l00005490
	// succ:  l00005490
l0000547C_ds_t:
	r5 = r19
	goto l00005520
	// succ:  l00005520
l00005490:
	r3 = Mem0[r19 + 100:word32]
	r3 = r3 ^ r27
	branch Test(NE,r3) l000053E8
	// succ:  l0000549C l000053E8
l0000549C:
	r7 = r22
	r6 = r21
	r15 = 0x000054A4
	r5 = r24
	call fn0000AFBC (retsize: 0;)
	Mem0[r19 + 60:word32] = r21
	goto l00005378
	// succ:  l00005378
l000054B4:
	r3 = Mem0[r5 + 64:word32]
	r3 = r3 ^ r7
	branch Test(NE,r3) l000054B4_ds_t
	// succ:  l000054B4_ds_f l000054B4_ds_t
l000054B4_ds_f:
	r3 = r23
	goto l000054C4
	// succ:  l000054C4
l000054B4_ds_t:
	r3 = r23
	goto l00005358
	// succ:  l00005358
l000054C4:
	r15 = Mem0[r1:word32]
	goto l00005384
	// succ:  l00005384
l000054CC:
	r25 = 0x00000000
	r6 = Mem0[r19 + 84:word32]
	goto l000054F8
	// succ:  l000054F8
l000054DC:
	r4 = Mem0[r19 + 88:word32]
	r6 = Mem0[r19 + 84:word32]
	r7 = r4 - r3
	r6 = r6 + r3
	Mem0[r19 + 88:word32] = r7
	branch Test(EQ,r7) l000054DC_ds_t
	// succ:  l000054DC_ds_f l000054DC_ds_t
l000054DC_ds_f:
	Mem0[r19 + 84:word32] = r6
	goto l000054F8
	// succ:  l000054F8
l000054DC_ds_t:
	Mem0[r19 + 84:word32] = r6
	goto l0000549C
	// succ:  l0000549C
l000054F8:
	r18 = cond(r25 -u r7)
	branch Test(GE,r18) l00005504
	// succ:  l00005500 l00005504
l00005500:
	r7 = r25
	// succ:  l00005504
l00005504:
	r15 = 0x00005508
	r5 = Mem0[r19 + 16:word32]
	call fn0001908C (retsize: 0;)
	branch Test(GE,r3) l000054DC
	// succ:  l00005514 l000054DC
l00005514:
	goto l00005440
	// succ:  l00005440
l00005518:
	r23 = 0xFFFFFFFE
	goto l0000537C
	// succ:  l0000537C
l00005520:
	r7 = 0xFFFF9D40
	r15 = 0x00005528
	r6 = 0xFFFFFFFE
	call fn00001A68 (retsize: 0;)
	r23 = Mem0[r19 + 76:word32]
	goto l0000537C
	// succ:  l0000537C
fn00005318_exit:


// fn00005538
// Return size: 0
define fn00005538
fn00005538_entry:
	r1 = fp
	// succ:  l00005538
l00005538:
	branch Test(EQ,r5) l00005808
	// succ:  l0000553C l00005808
l0000553C:
	r1 = r1 + 0xFFFFFFC8
	Mem0[r1 + 32:word32] = r19
	Mem0[r1:word32] = r15
	Mem0[r1 + 36:word32] = r21
	Mem0[r1 + 40:word32] = r22
	Mem0[r1 + 44:word32] = r23
	Mem0[r1 + 48:word32] = r24
	Mem0[r1 + 52:word32] = r25
	r3 = Mem0[r5 + 12:word32]
	r3 = r3 ^ 0x000079B1
	branch Test(NE,r3) l0000553C_ds_t
	// succ:  l0000553C_ds_f l0000553C_ds_t
l0000553C_ds_f:
	r19 = r5
	goto l0000556C
	// succ:  l0000556C
l0000553C_ds_t:
	r19 = r5
	goto l000057F0
	// succ:  l000057F0
l0000556C:
	r4 = Mem0[r5 + 72:word32]
	branch Test(NE,r4) l00005764
	// succ:  l00005574 l00005764
l00005574:
	r3 = Mem0[r19 + 24:word32]
	r22 = 0x00000000
	branch Test(EQ,r3) l00005574_ds_t
	// succ:  l00005574_ds_f l00005574_ds_t
l00005574_ds_f:
	r21 = r19 + 0x00000054
	goto l00005584
	// succ:  l00005584
l00005574_ds_t:
	r21 = r19 + 0x00000054
	goto l00005788
	// succ:  l00005788
l00005584:
	r3 = Mem0[r19 + 40:word32]
	branch Test(NE,r3) l000056F8
	// succ:  l0000558C l000056F8
l0000558C:
	r25 = Mem0[r19 + 100:word32]
	r23 = 0x00000000
	r4 = -r25
	r4 = r4 | r25
	branch Test(GE,r4) l0000558C_ds_t
	// succ:  l0000558C_ds_f l0000558C_ds_t
l0000558C_ds_f:
	r24 = 0x00000004
	goto l000055A8
	// succ:  l000055A8
l0000558C_ds_t:
	r24 = 0x00000004
	goto l000055EC
	// succ:  l000055EC
l000055A8:
	r3 = r3 ^ 0x00000001
	goto l000055AC
	// succ:  l000055AC
l000055A8_ds_f:
	r6 = r24
	goto l000055BC
	// succ:  l000055BC
l000055A8_ds_t:
	r6 = r24
	goto l000055EC
	// succ:  l000055EC
l000055AC:
	r4 = -r3
	r3 = r4 | r3
	branch Test(GE,r3) l000055A8_ds_t
	goto l000055A8_ds_f
	// succ:  l000055A8_ds_f l000055A8_ds_t
l000055BC:
	r15 = 0x000055BC
	r5 = r21
	call fn00008E80 (retsize: 0;)
	r4 = r3 ^ 0xFFFFFFFE
	branch Test(EQ,r4) l000057C4
	// succ:  l000055CC l000057C4
l000055CC:
	r4 = Mem0[r19 + 100:word32]
	r25 = r4 ^ r25
	branch Test(EQ,r25) l000055CC_ds_t
	// succ:  l000055CC_ds_f l000055CC_ds_t
l000055CC_ds_f:
	r25 = r4
	goto l000055DC
	// succ:  l000055DC
l000055CC_ds_t:
	r25 = r4
	goto l000057E0
	// succ:  l000057E0
l000055DC:
	r4 = -r25
	r4 = r4 | r25
	branch Test(LT,r4) l000055DC_ds_t
	// succ:  l000055DC_ds_f l000055DC_ds_t
l000055DC_ds_f:
	r3 = r3 ^ 0x00000001
	goto l000055EC
	// succ:  l000055EC
l000055DC_ds_t:
	r3 = r3 ^ 0x00000001
	goto l000055AC
	// succ:  l000055AC
l000055EC:
	r7 = Mem0[r19 + 96:word32]
	r3 = Mem0[r19 + 4:word32]
	r18 = cond(r3 -u r7)
	branch Test(LT,r18) l000055EC_ds_t
	// succ:  l000055EC_ds_f l000055EC_ds_t
l000055EC_ds_f:
	r7 = r7 - r3
	goto l00005600
	// succ:  l00005600
l000055EC_ds_t:
	r7 = r7 - r3
	goto l00005620
	// succ:  l00005620
l00005600:
	goto l000057A4
	// succ:  l000057A4
l00005604:
	r4 = Mem0[r19 + 4:word32]
	r7 = Mem0[r19 + 96:word32]
	r3 = r4 + r3
	r18 = cond(r3 -u r7)
	branch Test(GE,r18) l00005604_ds_t
	// succ:  l00005604_ds_f l00005604_ds_t
l00005604_ds_f:
	Mem0[r19 + 4:word32] = r3
	goto l0000561C
	// succ:  l0000561C
l00005604_ds_t:
	Mem0[r19 + 4:word32] = r3
	goto l000057A0
	// succ:  l000057A0
l0000561C:
	r7 = r7 - r3
	// succ:  l00005620
l00005620:
	r18 = cond(r23 - r7)
	branch Test(GE,r18) l00005620_ds_t
	// succ:  l00005620_ds_f l00005620_ds_t
l00005620_ds_f:
	r6 = r3
	goto l0000562C
	// succ:  l0000562C
l00005620_ds_t:
	r6 = r3
	goto l00005630
	// succ:  l00005630
l0000562C:
	r7 = r23
	// succ:  l00005630
l00005630:
	r15 = 0x00005634
	r5 = Mem0[r19 + 16:word32]
	call fn0001908C (retsize: 0;)
	branch Test(GE,r3) l00005630_ds_t
	// succ:  l00005630_ds_f l00005630_ds_t
l00005630_ds_f:
	r5 = r19
	goto l00005644
	// succ:  l00005644
l00005630_ds_t:
	r5 = r19
	goto l00005604
	// succ:  l00005604
l00005644:
	r7 = 0xFFFF9D24
	r15 = 0x0000564C
	r6 = 0xFFFFFFFF
	call fn00001A68 (retsize: 0;)
	r22 = Mem0[r19 + 76:word32]
	// succ:  l00005658
l00005658:
	r3 = Mem0[r19 + 24:word32]
	// succ:  l0000565C
l0000565C:
	branch Test(EQ,r3) l0000565C_ds_t
	// succ:  l0000565C_ds_f l0000565C_ds_t
l0000565C_ds_f:
	r7 = 0x00000000
	goto l00005664
	// succ:  l00005664
l0000565C_ds_t:
	r7 = 0x00000000
	goto l00005690
	// succ:  l00005690
l00005664:
	r3 = Mem0[r19 + 40:word32]
	branch Test(NE,r3) l00005680
	// succ:  l0000566C l00005680
l0000566C:
	r15 = 0x0000566C
	r5 = r21
	call fn0000B324 (retsize: 0;)
	r15 = 0x00005678
	r5 = Mem0[r19 + 36:word32]
	call fn000188F0 (retsize: 0;)
l00005680:
	r15 = 0x00005684
	r5 = Mem0[r19 + 32:word32]
	call fn000188F0 (retsize: 0;)
	r7 = 0x00000000
	// succ:  l00005690
l00005690:
	r6 = r7
	r15 = 0x00005694
	r5 = r19
	call fn00001A68 (retsize: 0;)
	r15 = 0x000056A0
	r5 = Mem0[r19 + 20:word32]
	call fn000188F0 (retsize: 0;)
	r15 = 0x000056AC
	r5 = Mem0[r19 + 16:word32]
	call fn00019150 (retsize: 0;)
	r4 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r4) l00005690_ds_t
	// succ:  l00005690_ds_f l00005690_ds_t
l00005690_ds_f:
	r5 = r19
	goto l000056C0
	// succ:  l000056C0
l00005690_ds_t:
	r5 = r19
	goto l000056C4
	// succ:  l000056C4
l000056C0:
	r3 = r22
	// succ:  l000056C4
l000056C4:
	r15 = 0x000056C8
	Mem0[r1 + 28:word32] = r3
	call fn000188F0 (retsize: 0;)
	r3 = Mem0[r1 + 28:word32]
	// succ:  l000056D4
l000056D4:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 32:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r24 = Mem0[r1 + 48:word32]
	r25 = Mem0[r1 + 52:word32]
	r1 = r1 + 0x00000038
	return
	// succ:  fn00005538_exit
l000056F8:
	r7 = Mem0[r19 + 88:word32]
	branch Test(EQ,r7) l000057F8
	// succ:  l00005700 l000057F8
l00005700:
	r23 = 0x00000000
	r6 = Mem0[r19 + 84:word32]
	goto l0000572C
	// succ:  l0000572C
l00005710:
	r7 = Mem0[r19 + 88:word32]
	r6 = Mem0[r19 + 84:word32]
	r7 = r7 - r3
	r6 = r6 + r3
	Mem0[r19 + 88:word32] = r7
	branch Test(EQ,r7) l00005710_ds_t
	// succ:  l00005710_ds_f l00005710_ds_t
l00005710_ds_f:
	Mem0[r19 + 84:word32] = r6
	goto l0000572C
	// succ:  l0000572C
l00005710_ds_t:
	Mem0[r19 + 84:word32] = r6
	goto l00005658
	// succ:  l00005658
l0000572C:
	r18 = cond(r23 -u r7)
	branch Test(GE,r18) l00005738
	// succ:  l00005734 l00005738
l00005734:
	r7 = r23
	// succ:  l00005738
l00005738:
	r15 = 0x0000573C
	r5 = Mem0[r19 + 16:word32]
	call fn0001908C (retsize: 0;)
	branch Test(GE,r3) l00005738_ds_t
	// succ:  l00005738_ds_f l00005738_ds_t
l00005738_ds_f:
	r5 = r19
	goto l0000574C
	// succ:  l0000574C
l00005738_ds_t:
	r5 = r19
	goto l00005710
	// succ:  l00005710
l0000574C:
	r7 = 0xFFFF9D24
	r15 = 0x00005754
	r6 = 0xFFFFFFFF
	call fn00001A68 (retsize: 0;)
	r22 = Mem0[r19 + 76:word32]
	goto l00005658
	// succ:  l00005658
l00005764:
	r6 = Mem0[r5 + 68:word32]
	r15 = 0x00005768
	Mem0[r5 + 72:word32] = r3
	call fn00003C74 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l00005574
	// succ:  l00005778 l00005574
l00005778:
	r3 = Mem0[r19 + 24:word32]
	r22 = Mem0[r19 + 76:word32]
	branch Test(NE,r3) l00005778_ds_t
	// succ:  l00005778_ds_f l00005778_ds_t
l00005778_ds_f:
	r21 = r19 + 0x00000054
	goto l00005788
	// succ:  l00005788
l00005778_ds_t:
	r21 = r19 + 0x00000054
	goto l00005584
	// succ:  l00005584
l00005788:
	r15 = 0x00005788
	r5 = r19
	call fn00003964 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l00005584
	// succ:  l00005798 l00005584
l00005798:
	r22 = Mem0[r19 + 76:word32]
	goto l00005658
	// succ:  l00005658
l000057A0:
	r25 = Mem0[r19 + 100:word32]
	// succ:  l000057A4
l000057A4:
	branch Test(NE,r25) l000057A4_ds_t
	// succ:  l000057A4_ds_f l000057A4_ds_t
l000057A4_ds_f:
	r6 = r24
	goto l000057AC
	// succ:  l000057AC
l000057A4_ds_t:
	r6 = r24
	goto l000055BC
	// succ:  l000055BC
l000057AC:
	r3 = Mem0[r19 + 36:word32]
	r25 = Mem0[r19 + 24:word32]
	Mem0[r19 + 96:word32] = r3
	Mem0[r19 + 100:word32] = r25
	Mem0[r19 + 4:word32] = r3
	goto l000055BC
	// succ:  l000055BC
l000057C4:
	r7 = 0xFFFF9D40
	r5 = r19
	r15 = 0x000057D0
	r6 = 0xFFFFFFFE
	call fn00001A68 (retsize: 0;)
	r22 = Mem0[r19 + 76:word32]
	goto l00005658
	// succ:  l00005658
l000057E0:
	r15 = 0x000057E0
	r5 = r21
	call fn00008234 (retsize: 0;)
	r3 = Mem0[r19 + 24:word32]
	goto l0000565C
	// succ:  l0000565C
l000057F0:
	r3 = 0xFFFFFFFE
	goto l000056D4
	// succ:  l000056D4
l000057F8:
	r3 = Mem0[r19 + 24:word32]
	branch Test(EQ,r3) l000057F8_ds_t
	// succ:  l000057F8_ds_f l000057F8_ds_t
l000057F8_ds_f:
	r7 = 0x00000000
	goto l00005804
	// succ:  l00005804
l000057F8_ds_t:
	r7 = 0x00000000
	goto l00005690
	// succ:  l00005690
l00005804:
	goto l00005680
	// succ:  l00005680
l00005808:
	r3 = 0xFFFFFFFE
	return
	// succ:  fn00005538_exit
fn00005538_exit:


// fn00005810
// Return size: 0
define fn00005810
fn00005810_entry:
	r1 = fp
	// succ:  l00005810
l00005810:
	r1 = r1 + 0xFFFFFFCC
	r4 = Mem0[r5 + 44:word32]
	Mem0[r1 + 16:word32] = r22
	r10 = Mem0[r5 + 56:word32]
	r22 = Mem0[r5 + 108:word32]
	r3 = Mem0[r5 + 120:word32]
	Mem0[r1 + 20:word32] = r23
	Mem0[r1 + 32:word32] = r26
	Mem0[r1 + 4:word32] = r19
	Mem0[r1 + 8:word32] = r20
	Mem0[r1 + 12:word32] = r21
	Mem0[r1 + 24:word32] = r24
	Mem0[r1 + 28:word32] = r25
	Mem0[r1 + 36:word32] = r27
	Mem0[r1 + 40:word32] = r28
	Mem0[r1 + 44:word32] = r29
	Mem0[r1 + 48:word32] = r30
	r7 = r4 + 0xFFFFFEFA
	r8 = Mem0[r5 + 124:word32]
	r23 = r10 + r22
	r9 = r3
	r26 = Mem0[r5 + 144:word32]
	r18 = cond(r7 -u r22)
	branch Test(GE,r18) l00005810_ds_t
	// succ:  l00005810_ds_f l00005810_ds_t
l00005810_ds_f:
	r11 = 0x00000000
	goto l00005874
	// succ:  l00005874
l00005810_ds_t:
	r11 = 0x00000000
	goto l0000587C
	// succ:  l0000587C
l00005874:
	r11 = r22 + 0x00000106
	r11 = r11 - r4
	// succ:  l0000587C
l0000587C:
	r4 = Mem0[r5 + 140:word32]
	r22 = r22 + 0x00000102
	r7 = r23 + r3
	r19 = Mem0[r5 + 64:word32]
	r21 = Mem0[r5 + 52:word32]
	r22 = r10 + r22
	v24 = Mem0[r7 - 1:byte]
	r24 = (word32) v24
	r18 = cond(r3 -u r4)
	branch Test(LT,r18) l0000587C_ds_t
	// succ:  l0000587C_ds_f l0000587C_ds_t
l0000587C_ds_f:
	v25 = Mem0[r3 + r23:byte]
	r20 = (word32) v25
	goto l000058A4
	// succ:  l000058A4
l0000587C_ds_t:
	v25 = Mem0[r3 + r23:byte]
	r20 = (word32) v25
	goto l000058B4
	// succ:  l000058B4
l000058A4:
	r3 = r8
	r3 = r8 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r8 = r3
	// succ:  l000058B4
l000058B4:
	r3 = Mem0[r5 + 116:word32]
	r18 = cond(r3 -u r26)
	branch Test(GE,r18) l000058C4
	// succ:  l000058C0 l000058C4
l000058C0:
	r26 = r3
	// succ:  l000058C4
l000058C4:
	r25 = 0x00000001
	goto l000058D0
	// succ:  l000058D0
l000058CC:
	branch Test(EQ,r8) l00005934
	// succ:  l000058D0 l00005934
l000058D0:
	r7 = r10 + r6
	v28 = Mem0[r9 + r7:byte]
	r4 = (word32) v28
	r4 = r4 ^ r20
	branch Test(NE,r4) l000058D0_ds_t
	// succ:  l000058D0_ds_f l000058D0_ds_t
l000058D0_ds_f:
	r12 = r9
	goto l000058E4
	// succ:  l000058E4
l000058D0_ds_t:
	r12 = r9
	goto l00005918
	// succ:  l00005918
l000058E4:
	r4 = r7 + r9
	v30 = Mem0[r4 - 1:byte]
	r4 = (word32) v30
	r4 = r4 ^ r24
	branch Test(NE,r4) l00005918
	// succ:  l000058F4 l00005918
l000058F4:
	v31 = Mem0[r7:byte]
	r4 = (word32) v31
	v32 = Mem0[r23:byte]
	r27 = (word32) v32
	r4 = r4 ^ r27
	branch Test(NE,r4) l00005918
	// succ:  l00005904 l00005918
l00005904:
	v33 = Mem0[r7 + 1:byte]
	r4 = (word32) v33
	v34 = Mem0[r23 + 1:byte]
	r27 = (word32) v34
	r4 = r4 ^ r27
	branch Test(EQ,r4) l00005904_ds_t
	// succ:  l00005904_ds_f l00005904_ds_t
l00005904_ds_f:
	r4 = r23 + 0x00000002
	goto l00005918
	// succ:  l00005918
l00005904_ds_t:
	r4 = r23 + 0x00000002
	goto l00005974
	// succ:  l00005974
l00005918:
	r6 = r6 & r21
	r6 = r6 + r6
	v35 = Mem0[r6 + r19:word16]
	r6 = (word32) v35
	r18 = cond(r11 -u r6)
	branch Test(LT,r18) l00005918_ds_t
	// succ:  l00005918_ds_f l00005918_ds_t
l00005918_ds_f:
	r8 = r8 + 0xFFFFFFFF
	goto l00005930
	// succ:  l00005930
l00005918_ds_t:
	r8 = r8 + 0xFFFFFFFF
	goto l000058CC
	// succ:  l000058CC
l00005930:
	r8 = r8 + 0x00000001
	goto l00005934
	// succ:  l00005934
l00005930_ds_f:
	r19 = Mem0[r1 + 4:word32]
	goto l00005940
	// succ:  l00005940
l00005930_ds_t:
	r19 = Mem0[r1 + 4:word32]
	goto l00005944
	// succ:  l00005944
l00005934:
	r18 = cond(r12 -u r3)
	branch Test(GE,r18) l00005930_ds_t
	goto l00005930_ds_f
	// succ:  l00005930_ds_f l00005930_ds_t
l00005940:
	r3 = r12
	// succ:  l00005944
l00005944:
	r21 = Mem0[r1 + 12:word32]
	r22 = Mem0[r1 + 16:word32]
	r23 = Mem0[r1 + 20:word32]
	r24 = Mem0[r1 + 24:word32]
	r25 = Mem0[r1 + 28:word32]
	r26 = Mem0[r1 + 32:word32]
	r27 = Mem0[r1 + 36:word32]
	r28 = Mem0[r1 + 40:word32]
	r29 = Mem0[r1 + 44:word32]
	r30 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn00005810_exit
l00005974:
	r7 = r7 + 0x00000002
	goto l00005A8C
	// succ:  l00005A8C
l0000597C:
	v41 = Mem0[r4 + 2:byte]
	r27 = (word32) v41
	v42 = Mem0[r7 + 2:byte]
	r29 = (word32) v42
	r27 = r27 ^ r29
	branch Test(NE,r27) l00005ADC
	// succ:  l0000598C l00005ADC
l0000598C:
	v43 = Mem0[r4 + 3:byte]
	r27 = (word32) v43
	v44 = Mem0[r7 + 3:byte]
	r29 = (word32) v44
	r27 = r27 ^ r29
	branch Test(NE,r27) l00005AE4
	// succ:  l0000599C l00005AE4
l0000599C:
	v45 = Mem0[r4 + 4:byte]
	r27 = (word32) v45
	v46 = Mem0[r7 + 4:byte]
	r29 = (word32) v46
	r27 = r27 ^ r29
	branch Test(NE,r27) l00005AEC
	// succ:  l000059AC l00005AEC
l000059AC:
	v47 = Mem0[r4 + 5:byte]
	r27 = (word32) v47
	v48 = Mem0[r7 + 5:byte]
	r29 = (word32) v48
	r27 = r27 ^ r29
	branch Test(NE,r27) l00005AF4
	// succ:  l000059BC l00005AF4
l000059BC:
	v49 = Mem0[r4 + 6:byte]
	r27 = (word32) v49
	v50 = Mem0[r7 + 6:byte]
	r29 = (word32) v50
	r27 = r27 ^ r29
	branch Test(NE,r27) l000059BC_ds_t
	// succ:  l000059BC_ds_f l000059BC_ds_t
l000059BC_ds_f:
	r7 = r7 + 0x00000008
	goto l000059D0
	// succ:  l000059D0
l000059BC_ds_t:
	r7 = r7 + 0x00000008
	goto l00005AFC
	// succ:  l00005AFC
l000059D0:
	v51 = Mem0[r4 + 7:byte]
	r29 = (word32) v51
	v52 = Mem0[r7 - 1:byte]
	r27 = (word32) v52
	r29 = r29 ^ r27
	branch Test(NE,r29) l00005B04
	// succ:  l000059E0 l00005B04
l000059E0:
	r4 = r4 + 0x00000008
	v53 = Mem0[r7:byte]
	r30 = (word32) v53
	v54 = Mem0[r4:byte]
	r27 = (word32) v54
	r27 = r27 ^ r30
	r27 = r27 + 0xFFFFFFFF
	r30 = r27
	r30 = r27 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r18 = cond(r4 -u r22)
	branch Test(LT,r18) l000059E0_ds_t
	// succ:  l000059E0_ds_f l000059E0_ds_t
l000059E0_ds_f:
	r28 = r30 & r28
	goto l00005A80
	// succ:  l00005A80
l000059E0_ds_t:
	r28 = r30 & r28
	goto l00005A88
	// succ:  l00005A88
l00005A80:
	r28 = r29
	r28 = r30 & r28
	// succ:  l00005A88
l00005A88:
	branch Test(EQ,r28) l00005AA4
	// succ:  l00005A8C l00005AA4
l00005A8C:
	v37 = Mem0[r4 + 1:byte]
	r27 = (word32) v37
	v38 = Mem0[r7 + 1:byte]
	r29 = (word32) v38
	r27 = r27 ^ r29
	branch Test(EQ,r27) l00005A8C_ds_t
	// succ:  l00005A8C_ds_f l00005A8C_ds_t
l00005A8C_ds_f:
	r28 = r25
	goto l00005AA0
	// succ:  l00005AA0
l00005A8C_ds_t:
	r28 = r25
	goto l0000597C
	// succ:  l0000597C
l00005AA0:
	r4 = r4 + 0x00000001
	// succ:  l00005AA4
l00005AA4:
	r4 = r22 - r4
	r7 = 0x00000102
	r4 = r7 - r4
	r18 = cond(r9 - r4)
	branch Test(GE,r18) l00005918
	// succ:  l00005AB8 l00005918
l00005AB8:
	Mem0[r5 + 112:word32] = r6
	r18 = cond(r4 - r26)
	branch Test(GE,r18) l00005AB8_ds_t
	// succ:  l00005AB8_ds_f l00005AB8_ds_t
l00005AB8_ds_f:
	r12 = r4
	goto l00005AC8
	// succ:  l00005AC8
l00005AB8_ds_t:
	r12 = r4
	goto l00005934
	// succ:  l00005934
l00005AC8:
	r7 = r23 + r4
	v39 = Mem0[r7 - 1:byte]
	r24 = (word32) v39
	v40 = Mem0[r4 + r23:byte]
	r20 = (word32) v40
	r9 = r4
	goto l00005918
	// succ:  l00005918
l00005ADC:
	r4 = r4 + 0x00000002
	goto l00005AA4
	// succ:  l00005AA4
l00005AE4:
	r4 = r4 + 0x00000003
	goto l00005AA4
	// succ:  l00005AA4
l00005AEC:
	r4 = r4 + 0x00000004
	goto l00005AA4
	// succ:  l00005AA4
l00005AF4:
	r4 = r4 + 0x00000005
	goto l00005AA4
	// succ:  l00005AA4
l00005AFC:
	r4 = r4 + 0x00000006
	goto l00005AA4
	// succ:  l00005AA4
l00005B04:
	r4 = r4 + 0x00000007
	goto l00005AA4
	// succ:  l00005AA4
fn00005810_exit:


// fn00005B0C
// Return size: 0
define fn00005B0C
fn00005B0C_entry:
	r1 = fp
	// succ:  l00005B0C
l00005B0C:
	r1 = r1 + 0xFFFFFFBC
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 36:word32] = r21
	Mem0[r1 + 40:word32] = r22
	Mem0[r1 + 44:word32] = r23
	Mem0[r1 + 48:word32] = r24
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r20
	Mem0[r1 + 52:word32] = r25
	Mem0[r1 + 56:word32] = r26
	Mem0[r1 + 60:word32] = r27
	Mem0[r1 + 64:word32] = r28
	r25 = Mem0[r5 + 44:word32]
	r19 = r5
	r23 = 0x00000000
	r24 = 0x00000002
	r6 = Mem0[r5 + 116:word32]
	r22 = 0x00000105
	r3 = r25
	r21 = r25 + 0xFFFFFEFA
	goto l00005B98
	// succ:  l00005B98
l00005B60:
	branch Test(NE,r26) l00005B60_ds_t
	// succ:  l00005B60_ds_f l00005B60_ds_t
l00005B60_ds_f:
	r3 = r28 - r26
	goto l00005B68
	// succ:  l00005B68
l00005B60_ds_t:
	r3 = r28 - r26
	goto l00005F18
	// succ:  l00005F18
l00005B68:
	r4 = Mem0[r19 + 5812:word32]
	r6 = r26 + r6
	r3 = r6 + r4
	r18 = cond(r24 -u r3)
	branch Test(LT,r18) l00005B68_ds_t
	// succ:  l00005B68_ds_f l00005B68_ds_t
l00005B68_ds_f:
	Mem0[r19 + 116:word32] = r6
	goto l00005B80
	// succ:  l00005B80
l00005B68_ds_t:
	Mem0[r19 + 116:word32] = r6
	goto l00005C4C
	// succ:  l00005C4C
l00005B80:
	r18 = cond(r22 -u r6)
	branch Test(LT,r18) l00005D1C
	// succ:  l00005B88 l00005D1C
l00005B88:
	r3 = Mem0[r19:word32]
	r3 = Mem0[r3 + 4:word32]
	branch Test(EQ,r3) l00005D1C
	// succ:  l00005B94 l00005D1C
l00005B94:
	r3 = Mem0[r19 + 44:word32]
	// succ:  l00005B98
l00005B98:
	r26 = Mem0[r19 + 60:word32]
	r7 = Mem0[r19 + 108:word32]
	r3 = r21 + r3
	r6 = r26 - r6
	r18 = cond(r7 -u r3)
	branch Test(GE,r18) l00005B98_ds_t
	// succ:  l00005B98_ds_f l00005B98_ds_t
l00005B98_ds_f:
	r26 = r6 - r7
	goto l00005BB4
	// succ:  l00005BB4
l00005B98_ds_t:
	r26 = r6 - r7
	goto l00005DA8
	// succ:  l00005DA8
l00005BB4:
	r27 = Mem0[r19:word32]
	r28 = Mem0[r27 + 4:word32]
	branch Test(EQ,r28) l00005D1C
	// succ:  l00005BC0 l00005D1C
l00005BC0:
	r18 = cond(r26 -u r28)
	branch Test(LT,r18) l00005BC0_ds_t
	// succ:  l00005BC0_ds_f l00005BC0_ds_t
l00005BC0_ds_f:
	r6 = Mem0[r19 + 116:word32]
	goto l00005BCC
	// succ:  l00005BCC
l00005BC0_ds_t:
	r6 = Mem0[r19 + 116:word32]
	goto l00005B60
	// succ:  l00005B60
l00005BCC:
	r3 = r23
	goto l00005BD0
	// succ:  l00005BD0
l00005BCC_ds_f:
	r3 = r3 ^ 0x00000002
	goto l00005C0C
	// succ:  l00005C0C
l00005BCC_ds_t:
	r3 = r3 ^ 0x00000002
	goto l00005E78
	// succ:  l00005E78
l00005BD0:
	r4 = Mem0[r19 + 56:word32]
	r6 = r6 + r7
	r7 = r28
	r4 = r4 + r6
	r5 = r4
	r6 = Mem0[r27:word32]
	r15 = 0x00005BEC
	Mem0[r27 + 4:word32] = r3
	call fn00018C34 (retsize: 0;)
	r4 = r3
	r3 = Mem0[r27 + 28:word32]
	r3 = Mem0[r3 + 24:word32]
	r5 = r3 ^ 0x00000001
	branch Test(EQ,r5) l00005BCC_ds_t
	goto l00005BCC_ds_f
	// succ:  l00005BCC_ds_f l00005BCC_ds_t
l00005C0C:
	branch Test(EQ,r3) l00005C0C_ds_t
	// succ:  l00005C0C_ds_f l00005C0C_ds_t
l00005C0C_ds_f:
	r7 = r28
	goto l00005C14
	// succ:  l00005C14
l00005C0C_ds_t:
	r7 = r28
	goto l00005E94
	// succ:  l00005E94
l00005C14:
	r4 = Mem0[r27:word32]
	r3 = Mem0[r27 + 8:word32]
	r6 = Mem0[r19 + 116:word32]
	r4 = r4 + r28
	r26 = r28
	Mem0[r27:word32] = r4
	r4 = Mem0[r19 + 5812:word32]
	r28 = r3 + r28
	r6 = r26 + r6
	Mem0[r27 + 8:word32] = r28
	r3 = r6 + r4
	r18 = cond(r24 -u r3)
	branch Test(GE,r18) l00005C14_ds_t
	// succ:  l00005C14_ds_f l00005C14_ds_t
l00005C14_ds_f:
	Mem0[r19 + 116:word32] = r6
	goto l00005C4C
	// succ:  l00005C4C
l00005C14_ds_t:
	Mem0[r19 + 116:word32] = r6
	goto l00005B80
	// succ:  l00005B80
l00005C4C:
	r7 = Mem0[r19 + 108:word32]
	r9 = Mem0[r19 + 56:word32]
	r11 = Mem0[r19 + 88:word32]
	r7 = r7 - r4
	v22 = Mem0[r7 + r9:byte]
	r3 = (word32) v22
	r5 = r9 + r7
	r12 = Mem0[r19 + 84:word32]
	Mem0[r19 + 72:word32] = r3
	v24 = Mem0[r5 + 1:byte]
	r5 = (word32) v24
	r18 = r11 & 0x0000001F
	r8 = r3
	branch Test(EQ,r18) l00005C4C_ds_t
	// succ:  l00005C4C_ds_f l00005C4C_ds_t
l00005C4C_ds_f:
	r8 = r8
	goto l00005C80
	// succ:  l00005C80
l00005C4C_ds_t:
	r8 = r8
	goto l00005C8C
	// succ:  l00005C8C
l00005C80:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00005C80_ds_t
	// succ:  l00005C80_ds_f l00005C80_ds_t
l00005C80_ds_f:
	r8 = r8 + r8
	goto l00005C8C
	// succ:  l00005C8C
l00005C80_ds_t:
	r8 = r8 + r8
	goto l00005C80
	// succ:  l00005C80
l00005C8C:
	r3 = r7 + 0x00000002
	r5 = r5 ^ r8
	r5 = r5 & r12
	Mem0[r19 + 72:word32] = r5
	r9 = r9 + r3
	goto l00005CF4
	// succ:  l00005CF4
l00005CA4:
	v32 = Mem0[r9:byte]
	r5 = (word32) v32
	r10 = Mem0[r19 + 68:word32]
	r3 = Mem0[r19 + 52:word32]
	r5 = r8 ^ r5
	r5 = r5 & r12
	r8 = r5 + r5
	v34 = Mem0[r8 + r10:word16]
	r26 = (word32) v34
	r20 = Mem0[r19 + 64:word32]
	r3 = r7 & r3
	Mem0[r19 + 72:word32] = r5
	r3 = r3 + r3
	v35 = SLICE(r26, word16, 0)
	Mem0[r3 + r20:word16] = v35
	v36 = SLICE(r7, word16, 0)
	Mem0[r8 + r10:word16] = v36
	r4 = r4 + 0xFFFFFFFF
	Mem0[r19 + 5812:word32] = r4
	r3 = r6 + r4
	r7 = r7 + 0x00000001
	r18 = cond(r24 -u r3)
	branch Test(GE,r18) l00005CA4_ds_t
	// succ:  l00005CA4_ds_f l00005CA4_ds_t
l00005CA4_ds_f:
	r9 = r9 + 0x00000001
	goto l00005CF4
	// succ:  l00005CF4
l00005CA4_ds_t:
	r9 = r9 + 0x00000001
	goto l00005B80
	// succ:  l00005B80
l00005CF4:
	r18 = r11 & 0x0000001F
	r8 = r5
	branch Test(EQ,r18) l00005CF4_ds_t
	// succ:  l00005CF4_ds_f l00005CF4_ds_t
l00005CF4_ds_f:
	r8 = r8
	goto l00005D04
	// succ:  l00005D04
l00005CF4_ds_t:
	r8 = r8
	goto l00005D10
	// succ:  l00005D10
l00005D04:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00005D04_ds_t
	// succ:  l00005D04_ds_f l00005D04_ds_t
l00005D04_ds_f:
	r8 = r8 + r8
	goto l00005D10
	// succ:  l00005D10
l00005D04_ds_t:
	r8 = r8 + r8
	goto l00005D04
	// succ:  l00005D04
l00005D10:
	branch Test(NE,r4) l00005CA4
	// succ:  l00005D14 l00005CA4
l00005D14:
	r18 = cond(r22 -u r6)
	branch Test(GE,r18) l00005B88
	// succ:  l00005D1C l00005B88
l00005D1C:
	r5 = Mem0[r19 + 5824:word32]
	r4 = Mem0[r19 + 60:word32]
	r18 = cond(r5 -u r4)
	branch Test(GE,r18) l00005D1C_ds_t
	// succ:  l00005D1C_ds_f l00005D1C_ds_t
l00005D1C_ds_f:
	r15 = Mem0[r1:word32]
	goto l00005D30
	// succ:  l00005D30
l00005D1C_ds_t:
	r15 = Mem0[r1:word32]
	goto l00005D7C
	// succ:  l00005D7C
l00005D30:
	r21 = Mem0[r19 + 108:word32]
	r3 = Mem0[r19 + 116:word32]
	r21 = r21 + r3
	r18 = cond(r5 -u r21)
	branch Test(GE,r18) l00005D30_ds_t
	// succ:  l00005D30_ds_f l00005D30_ds_t
l00005D30_ds_f:
	r3 = r21 + 0x00000102
	goto l00005D48
	// succ:  l00005D48
l00005D30_ds_t:
	r3 = r21 + 0x00000102
	goto l00005EAC
	// succ:  l00005EAC
l00005D48:
	r22 = r4 - r21
	r3 = 0x00000102
	r18 = cond(r3 -u r22)
	branch Test(LT,r18) l00005D48_ds_t
	// succ:  l00005D48_ds_f l00005D48_ds_t
l00005D48_ds_f:
	r6 = 0x00000000
	goto l00005D5C
	// succ:  l00005D5C
l00005D48_ds_t:
	r6 = 0x00000000
	goto l00005EF4
	// succ:  l00005EF4
l00005D5C:
	r5 = Mem0[r19 + 56:word32]
	r7 = r22
	r5 = r5 + r21
	r15 = 0x00005D6C
	r21 = r21 + r22
	call fn00018C64 (retsize: 0;)
	Mem0[r19 + 5824:word32] = r21
	// succ:  l00005D78
l00005D78:
	r15 = Mem0[r1:word32]
	// succ:  l00005D7C
l00005D7C:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r24 = Mem0[r1 + 48:word32]
	r25 = Mem0[r1 + 52:word32]
	r26 = Mem0[r1 + 56:word32]
	r27 = Mem0[r1 + 60:word32]
	r28 = Mem0[r1 + 64:word32]
	r1 = r1 + 0x00000044
	return
	// succ:  fn00005B0C_exit
l00005DA8:
	r6 = Mem0[r19 + 56:word32]
	r7 = r25 - r26
	r5 = r6
	r15 = 0x00005DB8
	r6 = r6 + r25
	call fn00018C34 (retsize: 0;)
	r8 = Mem0[r19 + 112:word32]
	r7 = Mem0[r19 + 108:word32]
	r6 = Mem0[r19 + 92:word32]
	r5 = Mem0[r19 + 76:word32]
	r4 = Mem0[r19 + 68:word32]
	r3 = Mem0[r19 + 44:word32]
	r8 = r8 - r25
	r7 = r7 - r25
	r6 = r6 - r25
	r9 = r5 + r5
	Mem0[r19 + 112:word32] = r8
	Mem0[r19 + 108:word32] = r7
	Mem0[r19 + 92:word32] = r6
	r4 = r4 + r9
	goto l00005DF8
	// succ:  l00005DF8
l00005DA8_ds_f:
	r8 = r6 - r3
	goto l00005E0C
	// succ:  l00005E0C
l00005DA8_ds_t:
	r8 = r6 - r3
	goto l00005E64
	// succ:  l00005E64
l00005DF8:
	r4 = r4 + 0xFFFFFFFE
	v26 = Mem0[r4:word16]
	r6 = (word32) v26
	r18 = cond(r6 -u r3)
	branch Test(LT,r18) l00005DA8_ds_t
	goto l00005DA8_ds_f
	// succ:  l00005DA8_ds_f l00005DA8_ds_t
l00005E0C:
	r5 = r5 + 0xFFFFFFFF
	branch Test(NE,r5) l00005E0C_ds_t
	// succ:  l00005E0C_ds_f l00005E0C_ds_t
l00005E0C_ds_f:
	v27 = SLICE(r8, word16, 0)
	Mem0[r4:word16] = v27
	goto l00005E18
	// succ:  l00005E18
l00005E0C_ds_t:
	v27 = SLICE(r8, word16, 0)
	Mem0[r4:word16] = v27
	goto l00005DF8
	// succ:  l00005DF8
l00005E18:
	r4 = Mem0[r19 + 64:word32]
	goto l00005E1C
	// succ:  l00005E1C
l00005E18_ds_f:
	r8 = r6 - r3
	goto l00005E3C
	// succ:  l00005E3C
l00005E18_ds_t:
	r8 = r6 - r3
	goto l00005E50
	// succ:  l00005E50
l00005E1C:
	r5 = r3
	r6 = r3 + r3
	r4 = r4 + r6
	// succ:  l00005E28
l00005E28:
	r4 = r4 + 0xFFFFFFFE
	v28 = Mem0[r4:word16]
	r6 = (word32) v28
	r18 = cond(r6 -u r3)
	branch Test(LT,r18) l00005E18_ds_t
	goto l00005E18_ds_f
	// succ:  l00005E18_ds_f l00005E18_ds_t
l00005E3C:
	r5 = r5 + 0xFFFFFFFF
	branch Test(NE,r5) l00005E3C_ds_t
	// succ:  l00005E3C_ds_f l00005E3C_ds_t
l00005E3C_ds_f:
	v29 = SLICE(r8, word16, 0)
	Mem0[r4:word16] = v29
	goto l00005E48
	// succ:  l00005E48
l00005E3C_ds_t:
	v29 = SLICE(r8, word16, 0)
	Mem0[r4:word16] = v29
	goto l00005E28
	// succ:  l00005E28
l00005E48:
	r26 = r26 + r25
	goto l00005BB4
	// succ:  l00005BB4
l00005E50:
	r5 = r5 + 0xFFFFFFFF
	branch Test(NE,r5) l00005E50_ds_t
	// succ:  l00005E50_ds_f l00005E50_ds_t
l00005E50_ds_f:
	v31 = SLICE(r0, word16, 0)
	Mem0[r4:word16] = v31
	goto l00005E5C
	// succ:  l00005E5C
l00005E50_ds_t:
	v31 = SLICE(r0, word16, 0)
	Mem0[r4:word16] = v31
	goto l00005E28
	// succ:  l00005E28
l00005E5C:
	r26 = r26 + r25
	goto l00005BB4
	// succ:  l00005BB4
l00005E64:
	r5 = r5 + 0xFFFFFFFF
	branch Test(NE,r5) l00005E64_ds_t
	// succ:  l00005E64_ds_f l00005E64_ds_t
l00005E64_ds_f:
	v37 = SLICE(r0, word16, 0)
	Mem0[r4:word16] = v37
	goto l00005E70
	// succ:  l00005E70
l00005E64_ds_t:
	v37 = SLICE(r0, word16, 0)
	Mem0[r4:word16] = v37
	goto l00005DF8
	// succ:  l00005DF8
l00005E70:
	r4 = Mem0[r19 + 64:word32]
	goto l00005E1C
	// succ:  l00005E1C
l00005E78:
	r7 = r28
	r6 = r4
	r15 = 0x00005E84
	r5 = Mem0[r27 + 48:word32]
	call fn00005318 (retsize: 0;)
	Mem0[r27 + 48:word32] = r3
	goto l00005C14
	// succ:  l00005C14
l00005E94:
	r6 = r4
	r15 = 0x00005E9C
	r5 = Mem0[r27 + 48:word32]
	call fn00017044 (retsize: 0;)
	Mem0[r27 + 48:word32] = r3
	goto l00005C14
	// succ:  l00005C14
l00005EAC:
	r18 = cond(r5 -u r3)
	branch Test(GE,r18) l00005EAC_ds_t
	// succ:  l00005EAC_ds_f l00005EAC_ds_t
l00005EAC_ds_f:
	r3 = r21 - r5
	goto l00005EB8
	// succ:  l00005EB8
l00005EAC_ds_t:
	r3 = r21 - r5
	goto l00005D78
	// succ:  l00005D78
l00005EB8:
	r3 = r3 + 0x00000102
	r21 = r4 - r5
	r18 = cond(r3 -u r21)
	branch Test(GE,r18) l00005ECC
	// succ:  l00005EC8 l00005ECC
l00005EC8:
	r21 = r3
	// succ:  l00005ECC
l00005ECC:
	r3 = Mem0[r19 + 56:word32]
	r7 = r21
	r6 = 0x00000000
	r15 = 0x00005EDC
	r5 = r3 + r5
	call fn00018C64 (retsize: 0;)
	r4 = Mem0[r19 + 5824:word32]
	r4 = r4 + r21
	Mem0[r19 + 5824:word32] = r4
	goto l00005D78
	// succ:  l00005D78
l00005EF4:
	r22 = r3
	r5 = Mem0[r19 + 56:word32]
	r7 = r22
	r5 = r5 + r21
	r15 = 0x00005F08
	r21 = r21 + r22
	call fn00018C64 (retsize: 0;)
	Mem0[r19 + 5824:word32] = r21
	goto l00005D78
	// succ:  l00005D78
l00005F18:
	r28 = r26
	goto l00005BD0
	// succ:  l00005BD0
fn00005B0C_exit:


// fn00005F20
// Return size: 0
define fn00005F20
fn00005F20_entry:
	r1 = fp
	// succ:  l00005F20
l00005F20:
	r1 = r1 + 0xFFFFFFA8
	Mem0[r1 + 40:word32] = r19
	Mem0[r1 + 72:word32] = r28
	Mem0[r1:word32] = r15
	Mem0[r1 + 44:word32] = r21
	Mem0[r1 + 48:word32] = r22
	Mem0[r1 + 52:word32] = r23
	Mem0[r1 + 56:word32] = r24
	Mem0[r1 + 60:word32] = r25
	Mem0[r1 + 64:word32] = r26
	Mem0[r1 + 68:word32] = r27
	Mem0[r1 + 76:word32] = r29
	Mem0[r1 + 80:word32] = r30
	Mem0[r1 + 84:word32] = r31
	r25 = Mem0[r5 + 12:word32]
	r3 = Mem0[r5 + 44:word32]
	r19 = r5
	r25 = r25 + 0xFFFFFFFB
	r18 = cond(r3 -u r25)
	branch Test(GE,r18) l00005F20_ds_t
	// succ:  l00005F20_ds_f l00005F20_ds_t
l00005F20_ds_f:
	r28 = r6
	goto l00005F74
	// succ:  l00005F74
l00005F20_ds_t:
	r28 = r6
	goto l00005F78
	// succ:  l00005F78
l00005F74:
	r25 = r3
	// succ:  l00005F78
l00005F78:
	r22 = Mem0[r19:word32]
	r26 = r28 ^ 0x00000004
	r5 = -r26
	r4 = Mem0[r22 + 4:word32]
	r3 = -r28
	r5 = r5 | r26
	r3 = r3 | r28
	r3 = r3 ^ 0xFFFFFFFF
	r6 = r5 ^ 0xFFFFFFFF
	r30 = r3
	r30 = r3 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	Mem0[r1 + 32:word32] = r4
	r3 = r6
	r3 = r6 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	Mem0[r1 + 28:word32] = r3
	r29 = r5
	r29 = r5 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	r29 = r29 >>u 1
	C = cond(r29)
	// succ:  l00006124
l00006124:
	r5 = Mem0[r19 + 5820:word32]
	r3 = Mem0[r22 + 16:word32]
	r5 = r5 + 0x0000002A
	r7 = r5
	r7 = r5 >> 1
	C = cond(r7)
	r7 = r7 >> 1
	C = cond(r7)
	r7 = r7 >> 1
	C = cond(r7)
	r18 = cond(r3 -u r7)
	branch Test(LT,r18) l000065EC
	// succ:  l00006148 l000065EC
l00006148:
	r23 = Mem0[r19 + 108:word32]
	r6 = Mem0[r19 + 92:word32]
	r5 = 0xFFFFFFFE
	r23 = r23 - r6
	r21 = r23 + r4
	r18 = cond(r5 -u r21)
	branch Test(GE,r18) l00006148_ds_t
	// succ:  l00006148_ds_f l00006148_ds_t
l00006148_ds_f:
	r3 = r3 - r7
	goto l0000616C
	// succ:  l0000616C
l00006148_ds_t:
	r3 = r3 - r7
	goto l00006174
	// succ:  l00006174
l0000616C:
	r21 = 0xFFFFFFFF
	// succ:  l00006174
l00006174:
	r18 = cond(r3 -u r21)
	branch Test(GE,r18) l00006180
	// succ:  l0000617C l00006180
l0000617C:
	r21 = r3
	// succ:  l00006180
l00006180:
	r18 = cond(r21 -u r23)
	branch Test(GE,r18) l0000618C
	// succ:  l00006188 l0000618C
l00006188:
	r23 = r21
	// succ:  l0000618C
l0000618C:
	r18 = cond(r21 -u r25)
	branch Test(GE,r18) l0000618C_ds_t
	// succ:  l0000618C_ds_f l0000618C_ds_t
l0000618C_ds_f:
	r3 = -r21
	goto l00006198
	// succ:  l00006198
l0000618C_ds_t:
	r3 = -r21
	goto l000064E0
	// succ:  l000064E0
l00006198:
	r3 = r3 | r21
	r3 = r3 ^ 0xFFFFFFFF
	r5 = r3
	r5 = r3 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r3 = r5 & r29
	branch Test(NE,r3) l00006198_ds_t
	// succ:  l00006198_ds_f l00006198_ds_t
l00006198_ds_f:
	r3 = Mem0[r1 + 32:word32]
	goto l0000622C
	// succ:  l0000622C
l00006198_ds_t:
	r3 = Mem0[r1 + 32:word32]
	goto l000065F0
	// succ:  l000065F0
l0000622C:
	branch Test(NE,r30) l0000622C_ds_t
	// succ:  l0000622C_ds_f l0000622C_ds_t
l0000622C_ds_f:
	r3 = r21 - r23
	goto l00006234
	// succ:  l00006234
l0000622C_ds_t:
	r3 = r21 - r23
	goto l000065EC
	// succ:  l000065EC
l00006234:
	r3 = r3 ^ r4
	branch Test(NE,r3) l00006234_ds_t
	// succ:  l00006234_ds_f l00006234_ds_t
l00006234_ds_f:
	r24 = Mem0[r1 + 28:word32]
	goto l00006240
	// succ:  l00006240
l00006234_ds_t:
	r24 = Mem0[r1 + 28:word32]
	goto l000065EC
	// succ:  l000065EC
l00006240:
	r7 = 0x00000000
	// succ:  l00006244
l00006244:
	r6 = r7
	r8 = r24
	r15 = 0x00006250
	r5 = r19
	call fn0000371C (retsize: 0;)
	r5 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r3 = r21 & 0x000000FF
	r6 = r21
	r6 = r21 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r4 = r4 + r5
	v24 = SLICE(r3, byte, 0)
	Mem0[r4 - 4:byte] = v24
	r7 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r3 = r3 ^ 0xFFFFFFFF
	r5 = r21 ^ 0xFFFFFFFF
	r4 = r4 + r7
	v25 = SLICE(r6, byte, 0)
	Mem0[r4 - 3:byte] = v25
	r4 = Mem0[r19 + 8:word32]
	r7 = Mem0[r19 + 20:word32]
	r6 = r5
	r6 = r5 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r4 = r4 + r7
	v26 = SLICE(r3, byte, 0)
	Mem0[r4 - 2:byte] = v26
	r3 = Mem0[r19 + 8:word32]
	r4 = Mem0[r19 + 20:word32]
	r3 = r3 + r4
	v27 = SLICE(r6, byte, 0)
	Mem0[r3 - 1:byte] = v27
	r31 = Mem0[r19:word32]
	r27 = Mem0[r31 + 28:word32]
	r15 = 0x000062F8
	r5 = r27
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r27 + 20:word32]
	r22 = Mem0[r31 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l00006314
	// succ:  l00006310 l00006314
l00006310:
	r22 = r3
	// succ:  l00006314
l00006314:
	branch Test(EQ,r22) l00006314_ds_t
	// succ:  l00006314_ds_f l00006314_ds_t
l00006314_ds_f:
	r7 = r22
	goto l0000631C
	// succ:  l0000631C
l00006314_ds_t:
	r7 = r22
	goto l00006374
	// succ:  l00006374
l0000631C:
	r6 = Mem0[r27 + 16:word32]
	r15 = 0x00006324
	r5 = Mem0[r31 + 12:word32]
	call fn00018C34 (retsize: 0;)
	r9 = Mem0[r31 + 12:word32]
	r7 = Mem0[r27 + 16:word32]
	r6 = Mem0[r31 + 20:word32]
	r5 = Mem0[r31 + 16:word32]
	r3 = Mem0[r27 + 20:word32]
	r9 = r9 + r22
	Mem0[r31 + 12:word32] = r9
	r7 = r7 + r22
	Mem0[r27 + 16:word32] = r7
	r6 = r6 + r22
	r5 = r5 - r22
	Mem0[r31 + 20:word32] = r6
	Mem0[r31 + 16:word32] = r5
	r22 = r3 - r22
	branch Test(NE,r22) l0000631C_ds_t
	// succ:  l0000631C_ds_f l0000631C_ds_t
l0000631C_ds_f:
	Mem0[r27 + 20:word32] = r22
	goto l0000636C
	// succ:  l0000636C
l0000631C_ds_t:
	Mem0[r27 + 20:word32] = r22
	goto l00006374
	// succ:  l00006374
l0000636C:
	r4 = Mem0[r27 + 8:word32]
	Mem0[r27 + 16:word32] = r4
	// succ:  l00006374
l00006374:
	branch Test(EQ,r23) l00006374_ds_t
	// succ:  l00006374_ds_f l00006374_ds_t
l00006374_ds_f:
	r22 = Mem0[r19:word32]
	goto l0000637C
	// succ:  l0000637C
l00006374_ds_t:
	r22 = Mem0[r19:word32]
	goto l000063D0
	// succ:  l000063D0
l0000637C:
	r6 = Mem0[r19 + 56:word32]
	r3 = Mem0[r19 + 92:word32]
	r5 = Mem0[r22 + 12:word32]
	r7 = r23
	r6 = r6 + r3
	r15 = 0x00006394
	r21 = r21 - r23
	call fn00018C34 (retsize: 0;)
	r22 = Mem0[r19:word32]
	r6 = Mem0[r19 + 92:word32]
	r5 = Mem0[r22 + 12:word32]
	r4 = Mem0[r22 + 16:word32]
	r3 = Mem0[r22 + 20:word32]
	r5 = r5 + r23
	r4 = r4 - r23
	r3 = r3 + r23
	Mem0[r22 + 12:word32] = r5
	Mem0[r22 + 16:word32] = r4
	Mem0[r22 + 20:word32] = r3
	r23 = r6 + r23
	Mem0[r19 + 92:word32] = r23
	// succ:  l000063D0
l000063D0:
	branch Test(NE,r21) l000063D0_ds_t
	// succ:  l000063D0_ds_f l000063D0_ds_t
l000063D0_ds_f:
	r4 = Mem0[r22 + 4:word32]
	goto l000063D8
	// succ:  l000063D8
l000063D0_ds_t:
	r4 = Mem0[r22 + 4:word32]
	goto l000064A0
	// succ:  l000064A0
l000063D8:
	branch Test(EQ,r24) l000063D8_ds_t
	// succ:  l000063D8_ds_f l000063D8_ds_t
l000063D8_ds_f:
	r3 = Mem0[r1 + 32:word32]
	goto l000063E0
	// succ:  l000063E0
l000063D8_ds_t:
	r3 = Mem0[r1 + 32:word32]
	goto l00006124
	// succ:  l00006124
l000063E0:
	r27 = r3 - r4
	branch Test(EQ,r27) l000063E0_ds_t
	// succ:  l000063E0_ds_f l000063E0_ds_t
l000063E0_ds_f:
	r21 = 0x00000001
	goto l000063EC
	// succ:  l000063EC
l000063E0_ds_t:
	r21 = 0x00000001
	goto l00006460
	// succ:  l00006460
l000063EC:
	r3 = Mem0[r19 + 44:word32]
	r18 = cond(r27 -u r3)
	branch Test(GE,r18) l000063EC_ds_t
	// succ:  l000063EC_ds_f l000063EC_ds_t
l000063EC_ds_f:
	r8 = Mem0[r19 + 56:word32]
	goto l000063FC
	// succ:  l000063FC
l000063EC_ds_t:
	r8 = Mem0[r19 + 56:word32]
	goto l000068B4
	// succ:  l000068B4
l000063FC:
	r5 = Mem0[r19 + 108:word32]
	r4 = Mem0[r19 + 60:word32]
	r4 = r4 - r5
	r18 = cond(r27 -u r4)
	branch Test(GE,r18) l000063FC_ds_t
	// succ:  l000063FC_ds_f l000063FC_ds_t
l000063FC_ds_f:
	r4 = r5 - r3
	goto l00006414
	// succ:  l00006414
l000063FC_ds_t:
	r4 = r5 - r3
	goto l00006950
	// succ:  l00006950
l00006414:
	r6 = Mem0[r22:word32]
	r7 = r27
	r5 = r8 + r5
	r15 = 0x00006424
	r6 = r6 - r27
	call fn00018C34 (retsize: 0;)
	r3 = Mem0[r19 + 108:word32]
	r4 = Mem0[r19 + 44:word32]
	r3 = r27 + r3
	Mem0[r19 + 108:word32] = r3
	goto l0000643C
	// succ:  l0000643C
l00006414_ds_f:
	Mem0[r19 + 92:word32] = r3
	goto l00006450
	// succ:  l00006450
l00006414_ds_t:
	Mem0[r19 + 92:word32] = r3
	goto l00006454
	// succ:  l00006454
l0000643C:
	r5 = Mem0[r19 + 5812:word32]
	r4 = r4 - r5
	r18 = cond(r27 -u r4)
	branch Test(GE,r18) l00006414_ds_t
	goto l00006414_ds_f
	// succ:  l00006414_ds_f l00006414_ds_t
l00006450:
	r4 = r27
	// succ:  l00006454
l00006454:
	r4 = r4 + r5
	branch Test(EQ,r21) l00006454_ds_t
	// succ:  l00006454_ds_f l00006454_ds_t
l00006454_ds_f:
	Mem0[r19 + 5812:word32] = r4
	goto l00006460
	// succ:  l00006460
l00006454_ds_t:
	Mem0[r19 + 5812:word32] = r4
	goto l000068E4
	// succ:  l000068E4
l00006460:
	r3 = 0x00000003
	// succ:  l00006464
l00006464:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 40:word32]
	r21 = Mem0[r1 + 44:word32]
	r22 = Mem0[r1 + 48:word32]
	r23 = Mem0[r1 + 52:word32]
	r24 = Mem0[r1 + 56:word32]
	r25 = Mem0[r1 + 60:word32]
	r26 = Mem0[r1 + 64:word32]
	r27 = Mem0[r1 + 68:word32]
	r28 = Mem0[r1 + 72:word32]
	r29 = Mem0[r1 + 76:word32]
	r30 = Mem0[r1 + 80:word32]
	r31 = Mem0[r1 + 84:word32]
	r1 = r1 + 0x00000058
	return
	// succ:  fn00005F20_exit
l000064A0:
	r18 = cond(r21 -u r4)
	branch Test(LT,r18) l000064A0_ds_t
	// succ:  l000064A0_ds_f l000064A0_ds_t
l000064A0_ds_f:
	r8 = Mem0[r22 + 12:word32]
	goto l000064AC
	// succ:  l000064AC
l000064A0_ds_t:
	r8 = Mem0[r22 + 12:word32]
	goto l00006584
	// succ:  l00006584
l000064AC:
	branch Test(NE,r4) l000064AC_ds_t
	// succ:  l000064AC_ds_f l000064AC_ds_t
l000064AC_ds_f:
	r23 = r4
	goto l000064B4
	// succ:  l000064B4
l000064AC_ds_t:
	r23 = r4
	goto l00006588
	// succ:  l00006588
l000064B4:
	r5 = Mem0[r22 + 16:word32]
	r3 = Mem0[r22 + 20:word32]
	r8 = r8 + r21
	r5 = r5 - r21
	r21 = r3 + r21
	Mem0[r22 + 12:word32] = r8
	Mem0[r22 + 16:word32] = r5
	branch Test(EQ,r24) l000064B4_ds_t
	// succ:  l000064B4_ds_f l000064B4_ds_t
l000064B4_ds_f:
	Mem0[r22 + 20:word32] = r21
	goto l000064D8
	// succ:  l000064D8
l000064B4_ds_t:
	Mem0[r22 + 20:word32] = r21
	goto l00006124
	// succ:  l00006124
l000064D8:
	r3 = Mem0[r1 + 32:word32]
	goto l000063E0
	// succ:  l000063E0
l000064E0:
	branch Test(NE,r26) l000064E0_ds_t
	// succ:  l000064E0_ds_f l000064E0_ds_t
l000064E0_ds_f:
	r24 = 0x00000000
	goto l000064E8
	// succ:  l000064E8
l000064E0_ds_t:
	r24 = 0x00000000
	goto l00006240
	// succ:  l00006240
l000064E8:
	r3 = r21 - r23
	r3 = r3 ^ r4
	r4 = -r3
	r4 = r4 | r3
	r4 = r4 ^ 0xFFFFFFFF
	r24 = r4
	r24 = r4 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r24 = r24 >>u 1
	C = cond(r24)
	r7 = 0x00000000
	goto l00006244
	// succ:  l00006244
l00006584:
	r23 = r21
	// succ:  l00006588
l00006588:
	r5 = r8
	r7 = r23
	r6 = Mem0[r22:word32]
	r4 = r4 - r23
	r15 = 0x0000659C
	Mem0[r22 + 4:word32] = r4
	call fn00018C34 (retsize: 0;)
	r8 = r3
	r3 = Mem0[r22 + 28:word32]
	r3 = Mem0[r3 + 24:word32]
	r4 = r3 ^ 0x00000001
	branch Test(EQ,r4) l00006588_ds_t
	// succ:  l00006588_ds_f l00006588_ds_t
l00006588_ds_f:
	r3 = r3 ^ 0x00000002
	goto l000065BC
	// succ:  l000065BC
l00006588_ds_t:
	r3 = r3 ^ 0x00000002
	goto l00006664
	// succ:  l00006664
l000065BC:
	branch Test(EQ,r3) l000065BC_ds_t
	// succ:  l000065BC_ds_f l000065BC_ds_t
l000065BC_ds_f:
	r7 = r23
	goto l000065C4
	// succ:  l000065C4
l000065BC_ds_t:
	r7 = r23
	goto l0000689C
	// succ:  l0000689C
l000065C4:
	r4 = Mem0[r22:word32]
	r3 = Mem0[r22 + 8:word32]
	r4 = r4 + r23
	r23 = r3 + r23
	Mem0[r22:word32] = r4
	Mem0[r22 + 8:word32] = r23
	r22 = Mem0[r19:word32]
	r8 = Mem0[r22 + 12:word32]
	r4 = Mem0[r22 + 4:word32]
	goto l000064B4
	// succ:  l000064B4
l000065EC:
	r3 = Mem0[r1 + 32:word32]
	goto l000065F0
	// succ:  l000065F0
l000065EC_ds_f:
	r21 = 0x00000000
	goto l000065FC
	// succ:  l000065FC
l000065EC_ds_t:
	r21 = 0x00000000
	goto l000063EC
	// succ:  l000063EC
l000065F0:
	r27 = r3 - r4
	branch Test(NE,r27) l000065EC_ds_t
	goto l000065EC_ds_f
	// succ:  l000065EC_ds_f l000065EC_ds_t
l000065FC:
	r3 = Mem0[r19 + 108:word32]
	// succ:  l00006600
l00006600:
	r5 = r28 & 0xFFFFFFFB
	branch Test(EQ,r5) l00006620
	// succ:  l00006608 l00006620
l00006608:
	branch Test(NE,r4) l00006620
	// succ:  l0000660C l00006620
l0000660C:
	r6 = Mem0[r19 + 92:word32]
	r4 = r3 ^ r6
	branch Test(NE,r4) l0000670C
	// succ:  l00006618 l0000670C
l00006618:
	r3 = 0x00000001
	goto l00006464
	// succ:  l00006464
l00006620:
	r21 = Mem0[r19 + 60:word32]
	r21 = r21 + 0xFFFFFFFF
	r21 = r21 - r3
	r18 = cond(r21 -u r4)
	branch Test(GE,r18) l00006644
	// succ:  l00006634 l00006644
l00006634:
	r6 = Mem0[r19 + 92:word32]
	r8 = Mem0[r19 + 44:word32]
	r18 = cond(r6 - r8)
	branch Test(GE,r18) l000068F0
	// succ:  l00006644 l000068F0
l00006644:
	r18 = cond(r4 -u r21)
	branch Test(GE,r18) l00006680
	// succ:  l0000664C l00006680
l0000664C:
	branch Test(EQ,r4) l0000664C_ds_t
	// succ:  l0000664C_ds_f l0000664C_ds_t
l0000664C_ds_f:
	r21 = r4
	goto l00006654
	// succ:  l00006654
l0000664C_ds_t:
	r21 = r4
	goto l00006708
	// succ:  l00006708
l00006654:
	r8 = Mem0[r19 + 56:word32]
	r9 = 0x00000000
	r8 = r8 + r3
	goto l0000669C
	// succ:  l0000669C
l00006664:
	r7 = r23
	r6 = r8
	r15 = 0x00006670
	r5 = Mem0[r22 + 48:word32]
	call fn00005318 (retsize: 0;)
	Mem0[r22 + 48:word32] = r3
	goto l000065C4
	// succ:  l000065C4
l00006680:
	branch Test(EQ,r21) l00006708
	// succ:  l00006684 l00006708
l00006684:
	r8 = Mem0[r19 + 56:word32]
	r18 = cond(r21 -u r4)
	branch Test(GE,r18) l00006684_ds_t
	// succ:  l00006684_ds_f l00006684_ds_t
l00006684_ds_f:
	r8 = r8 + r3
	goto l00006694
	// succ:  l00006694
l00006684_ds_t:
	r8 = r8 + r3
	goto l00006A00
	// succ:  l00006A00
l00006694:
	r9 = r4 - r21
	r4 = r21
	// succ:  l0000669C
l0000669C:
	r5 = r8
	goto l000066A0
	// succ:  l000066A0
l0000669C_ds_f:
	r4 = Mem0[r1 + 36:word32]
	goto l000066D0
	// succ:  l000066D0
l0000669C_ds_t:
	r4 = Mem0[r1 + 36:word32]
	goto l000069C0
	// succ:  l000069C0
l000066A0:
	r7 = r4
	r6 = Mem0[r22:word32]
	Mem0[r22 + 4:word32] = r9
	r15 = 0x000066B0
	Mem0[r1 + 36:word32] = r4
	call fn00018C34 (retsize: 0;)
	r8 = r3
	r3 = Mem0[r22 + 28:word32]
	r3 = Mem0[r3 + 24:word32]
	r5 = r3 ^ 0x00000001
	branch Test(EQ,r5) l0000669C_ds_t
	goto l0000669C_ds_f
	// succ:  l0000669C_ds_f l0000669C_ds_t
l000066D0:
	r3 = r3 ^ 0x00000002
	branch Test(EQ,r3) l000066D0_ds_t
	// succ:  l000066D0_ds_f l000066D0_ds_t
l000066D0_ds_f:
	r7 = r4
	goto l000066DC
	// succ:  l000066DC
l000066D0_ds_t:
	r7 = r4
	goto l000069E0
	// succ:  l000069E0
l000066DC:
	r5 = Mem0[r22:word32]
	r3 = Mem0[r22 + 8:word32]
	r5 = r5 + r4
	r4 = r3 + r4
	Mem0[r22:word32] = r5
	Mem0[r22 + 8:word32] = r4
	// succ:  l000066F4
l000066F4:
	r3 = Mem0[r19 + 108:word32]
	r6 = Mem0[r19 + 92:word32]
	r3 = r21 + r3
	Mem0[r19 + 108:word32] = r3
	goto l0000670C
	// succ:  l0000670C
l00006708:
	r6 = Mem0[r19 + 92:word32]
	// succ:  l0000670C
l0000670C:
	r5 = Mem0[r19 + 5820:word32]
	r8 = Mem0[r19 + 12:word32]
	r7 = 0xFFFFFFFF
	r5 = r5 + 0x0000002A
	r4 = r5
	r4 = r5 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r8 - r4
	r18 = cond(r7 -u r4)
	branch Test(GE,r18) l00006740
	// succ:  l0000673C l00006740
l0000673C:
	r4 = r7
	// succ:  l00006740
l00006740:
	r5 = Mem0[r19 + 44:word32]
	r18 = cond(r4 -u r5)
	branch Test(GE,r18) l00006740_ds_t
	// succ:  l00006740_ds_f l00006740_ds_t
l00006740_ds_f:
	r3 = r3 - r6
	goto l00006750
	// succ:  l00006750
l00006740_ds_t:
	r3 = r3 - r6
	goto l00006754
	// succ:  l00006754
l00006750:
	r5 = r4
	// succ:  l00006754
l00006754:
	r18 = cond(r3 -u r5)
	branch Test(GE,r18) l00006754_ds_t
	// succ:  l00006754_ds_f l00006754_ds_t
l00006754_ds_f:
	r8 = r28 ^ 0x00000004
	goto l00006760
	// succ:  l00006760
l00006754_ds_t:
	r8 = r28 ^ 0x00000004
	goto l000067C4
	// succ:  l000067C4
l00006760:
	r5 = -r8
	r7 = -r3
	r5 = r5 | r8
	r7 = r7 | r3
	r5 = r5 ^ 0xFFFFFFFF
	r5 = r5 | r7
	branch Test(GE,r5) l00006760_ds_t
	// succ:  l00006760_ds_f l00006760_ds_t
l00006760_ds_f:
	r5 = -r28
	goto l00006780
	// succ:  l00006780
l00006760_ds_t:
	r5 = -r28
	goto l00006894
	// succ:  l00006894
l00006780:
	r28 = r5 | r28
	branch Test(GE,r28) l00006894
	// succ:  l00006788 l00006894
l00006788:
	r5 = Mem0[r19:word32]
	r7 = Mem0[r5 + 4:word32]
	r5 = -r7
	r5 = r5 | r7
	branch Test(LT,r5) l00006894
	// succ:  l0000679C l00006894
l0000679C:
	r18 = cond(r4 -u r3)
	branch Test(LT,r18) l00006894
	// succ:  l000067A4 l00006894
l000067A4:
	r18 = cond(r3 -u r4)
	branch Test(GE,r18) l000067A4_ds_t
	// succ:  l000067A4_ds_f l000067A4_ds_t
l000067A4_ds_f:
	r23 = r4
	goto l000067B0
	// succ:  l000067B0
l000067A4_ds_t:
	r23 = r4
	goto l000067B4
	// succ:  l000067B4
l000067B0:
	r23 = r3
	// succ:  l000067B4
l000067B4:
	branch Test(NE,r8) l000067B4_ds_t
	// succ:  l000067B4_ds_f l000067B4_ds_t
l000067B4_ds_f:
	r24 = 0x00000001
	goto l000067BC
	// succ:  l000067BC
l000067B4_ds_t:
	r24 = 0x00000001
	goto l000067DC
	// succ:  l000067DC
l000067BC:
	r3 = Mem0[r19 + 56:word32]
	goto l000067E4
	// succ:  l000067E4
l000067C4:
	r18 = cond(r3 -u r4)
	branch Test(GE,r18) l000067C4_ds_t
	// succ:  l000067C4_ds_f l000067C4_ds_t
l000067C4_ds_f:
	r23 = r4
	goto l000067D0
	// succ:  l000067D0
l000067C4_ds_t:
	r23 = r4
	goto l000067D4
	// succ:  l000067D4
l000067D0:
	r23 = r3
	// succ:  l000067D4
l000067D4:
	r28 = r28 ^ 0x00000004
	branch Test(EQ,r28) l00006998
	// succ:  l000067DC l00006998
l000067DC:
	r24 = 0x00000000
	// succ:  l000067E0
l000067E0:
	r3 = Mem0[r19 + 56:word32]
	// succ:  l000067E4
l000067E4:
	r5 = r19
	r8 = r24
	r7 = r23
	r15 = 0x000067F4
	r6 = r3 + r6
	call fn0000371C (retsize: 0;)
	r21 = Mem0[r19:word32]
	r3 = Mem0[r19 + 92:word32]
	r22 = Mem0[r21 + 28:word32]
	r3 = r3 + r23
	Mem0[r19 + 92:word32] = r3
	r15 = 0x00006814
	r5 = r22
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r22 + 20:word32]
	r19 = Mem0[r21 + 16:word32]
	r18 = cond(r3 -u r19)
	branch Test(GE,r18) l00006830
	// succ:  l0000682C l00006830
l0000682C:
	r19 = r3
	// succ:  l00006830
l00006830:
	branch Test(EQ,r19) l00006830_ds_t
	// succ:  l00006830_ds_f l00006830_ds_t
l00006830_ds_f:
	r7 = r19
	goto l00006838
	// succ:  l00006838
l00006830_ds_t:
	r7 = r19
	goto l00006890
	// succ:  l00006890
l00006838:
	r6 = Mem0[r22 + 16:word32]
	r15 = 0x00006840
	r5 = Mem0[r21 + 12:word32]
	call fn00018C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r22 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r4 = Mem0[r21 + 16:word32]
	r3 = Mem0[r22 + 20:word32]
	r7 = r7 + r19
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r19
	Mem0[r22 + 16:word32] = r6
	r5 = r5 + r19
	r4 = r4 - r19
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r4
	r19 = r3 - r19
	branch Test(NE,r19) l00006838_ds_t
	// succ:  l00006838_ds_f l00006838_ds_t
l00006838_ds_f:
	Mem0[r22 + 20:word32] = r19
	goto l00006888
	// succ:  l00006888
l00006838_ds_t:
	Mem0[r22 + 20:word32] = r19
	goto l00006890
	// succ:  l00006890
l00006888:
	r3 = Mem0[r22 + 8:word32]
	Mem0[r22 + 16:word32] = r3
	// succ:  l00006890
l00006890:
	branch Test(NE,r24) l00006990
	// succ:  l00006894 l00006990
l00006894:
	r3 = 0x00000000
	goto l00006464
	// succ:  l00006464
l0000689C:
	r6 = r8
	r15 = 0x000068A4
	r5 = Mem0[r22 + 48:word32]
	call fn00017044 (retsize: 0;)
	Mem0[r22 + 48:word32] = r3
	goto l000065C4
	// succ:  l000065C4
l000068B4:
	r6 = Mem0[r22:word32]
	r7 = r3
	r5 = r8
	r4 = 0x00000002
	Mem0[r19 + 5808:word32] = r4
	r15 = 0x000068CC
	r6 = r6 - r3
	call fn00018C34 (retsize: 0;)
	r3 = Mem0[r19 + 44:word32]
	Mem0[r19 + 108:word32] = r3
	r4 = r3
	goto l0000643C
	// succ:  l0000643C
l000068E4:
	r22 = Mem0[r19:word32]
	r4 = Mem0[r22 + 4:word32]
	goto l00006600
	// succ:  l00006600
l000068F0:
	r4 = Mem0[r19 + 56:word32]
	r3 = r3 - r8
	r7 = r3
	r5 = r4
	r6 = r6 - r8
	Mem0[r19 + 92:word32] = r6
	Mem0[r19 + 108:word32] = r3
	r15 = 0x00006910
	r6 = r4 + r8
	call fn00018C34 (retsize: 0;)
	r3 = Mem0[r19 + 5808:word32]
	r4 = 0x00000001
	r18 = cond(r4 -u r3)
	branch Test(LT,r18) l00006930
	// succ:  l00006928 l00006930
l00006928:
	r3 = r3 + r4
	Mem0[r19 + 5808:word32] = r3
	// succ:  l00006930
l00006930:
	r22 = Mem0[r19:word32]
	r5 = Mem0[r19 + 44:word32]
	r4 = Mem0[r22 + 4:word32]
	r21 = r21 + r5
	r18 = cond(r4 -u r21)
	branch Test(LT,r18) l00006930_ds_t
	// succ:  l00006930_ds_f l00006930_ds_t
l00006930_ds_f:
	r3 = Mem0[r19 + 108:word32]
	goto l0000694C
	// succ:  l0000694C
l00006930_ds_t:
	r3 = Mem0[r19 + 108:word32]
	goto l0000664C
	// succ:  l0000664C
l0000694C:
	goto l00006680
	// succ:  l00006680
l00006950:
	r7 = r4
	r5 = r8
	Mem0[r19 + 108:word32] = r4
	r15 = 0x00006960
	r6 = r8 + r3
	call fn00018C34 (retsize: 0;)
	r3 = Mem0[r19 + 5808:word32]
	r4 = 0x00000001
	r8 = Mem0[r19 + 56:word32]
	r5 = Mem0[r19 + 108:word32]
	r18 = cond(r4 -u r3)
	branch Test(LT,r18) l00006950_ds_t
	// succ:  l00006950_ds_f l00006950_ds_t
l00006950_ds_f:
	r22 = Mem0[r19:word32]
	goto l00006984
	// succ:  l00006984
l00006950_ds_t:
	r22 = Mem0[r19:word32]
	goto l00006414
	// succ:  l00006414
l00006984:
	r3 = r3 + 0x00000001
	Mem0[r19 + 5808:word32] = r3
	goto l00006414
	// succ:  l00006414
l00006990:
	r3 = 0x00000002
	goto l00006464
	// succ:  l00006464
l00006998:
	r5 = Mem0[r19:word32]
	r7 = Mem0[r5 + 4:word32]
	r5 = -r7
	r5 = r5 | r7
	branch Test(LT,r5) l000067DC
	// succ:  l000069AC l000067DC
l000069AC:
	r18 = cond(r4 -u r3)
	branch Test(GE,r18) l000069AC_ds_t
	// succ:  l000069AC_ds_f l000069AC_ds_t
l000069AC_ds_f:
	r24 = 0x00000001
	goto l000069B8
	// succ:  l000069B8
l000069AC_ds_t:
	r24 = 0x00000001
	goto l000067E0
	// succ:  l000067E0
l000069B8:
	r24 = 0x00000000
	goto l000067E0
	// succ:  l000067E0
l000069C0:
	r7 = r4
	r6 = r8
	r15 = 0x000069CC
	r5 = Mem0[r22 + 48:word32]
	call fn00005318 (retsize: 0;)
	Mem0[r22 + 48:word32] = r3
	r4 = Mem0[r1 + 36:word32]
	goto l000066DC
	// succ:  l000066DC
l000069E0:
	r5 = Mem0[r22 + 48:word32]
	r6 = r8
	r15 = 0x000069EC
	Mem0[r1 + 36:word32] = r4
	call fn00017044 (retsize: 0;)
	Mem0[r22 + 48:word32] = r3
	r4 = Mem0[r1 + 36:word32]
	goto l000066DC
	// succ:  l000066DC
l00006A00:
	branch Test(EQ,r4) l00006A00_ds_t
	// succ:  l00006A00_ds_f l00006A00_ds_t
l00006A00_ds_f:
	r9 = 0x00000000
	goto l00006A08
	// succ:  l00006A08
l00006A00_ds_t:
	r9 = 0x00000000
	goto l000066F4
	// succ:  l000066F4
l00006A08:
	r5 = r8
	goto l000066A0
	// succ:  l000066A0
fn00005F20_exit:


// fn00006DB4
// Return size: 0
define fn00006DB4
fn00006DB4_entry:
	r1 = fp
	// succ:  l00006DB4
l00006DB4:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r24 = Mem0[r1 + 48:word32]
	r25 = Mem0[r1 + 52:word32]
	r26 = Mem0[r1 + 56:word32]
	r27 = Mem0[r1 + 60:word32]
	r28 = Mem0[r1 + 64:word32]
	r29 = Mem0[r1 + 68:word32]
	r30 = Mem0[r1 + 72:word32]
	r31 = Mem0[r1 + 76:word32]
	r1 = r1 + 0x00000050
	return
	// succ:  fn00006DB4_exit
l00006DB4:
fn00006DB4_exit:


// fn00007044
// Return size: 0
define fn00007044
fn00007044_entry:
	r1 = fp
	// succ:  l00007044
l00007044:
	r15 = 0x00007048
	r5 = Mem0[r22 + 12:word32]
	call fn00018C34 (retsize: 0;)
	r7 = Mem0[r22 + 12:word32]
	r6 = Mem0[r23 + 16:word32]
	r5 = Mem0[r22 + 20:word32]
	r4 = Mem0[r22 + 16:word32]
	r3 = Mem0[r23 + 20:word32]
	r7 = r7 + r21
	Mem0[r22 + 12:word32] = r7
	r6 = r6 + r21
	Mem0[r23 + 16:word32] = r6
	r5 = r5 + r21
	r4 = r4 - r21
	Mem0[r22 + 20:word32] = r5
	Mem0[r22 + 16:word32] = r4
	r21 = r3 - r21
	branch Test(NE,r21) l00007044_ds_t
	// succ:  l00007044_ds_f l00007044_ds_t
l00007044_ds_f:
	Mem0[r23 + 20:word32] = r21
	goto l00007090
	// succ:  l00007090
l00007044_ds_t:
	Mem0[r23 + 20:word32] = r21
	goto l00007098
	// succ:  l00007098
l00007090:
	r31 = Mem0[r23 + 8:word32]
	Mem0[r23 + 16:word32] = r31
	// succ:  l00007098
l00007098:
	r3 = Mem0[r19:word32]
	r3 = Mem0[r3 + 16:word32]
	r4 = -r3
	r4 = r4 | r3
	r3 = r4
	r3 = r4 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r15 = Mem0[r1:word32]
	// succ:  l00007128_thunk_fn00006DB4
l00007128_thunk_fn00006DB4:
	call fn00006DB4 (retsize: 0;)
	return
	// succ:  fn00007044_exit
fn00007044_exit:


// fn000070A4
// Return size: 0
define fn000070A4
fn000070A4_entry:
	r1 = fp
	// succ:  l000070A4
l000070A4:
	r4 = r4 | r3
	r3 = r4
	r3 = r4 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r15 = Mem0[r1:word32]
	// succ:  l00007128_thunk_fn00006DB4
l00007128_thunk_fn00006DB4:
	call fn00006DB4 (retsize: 0;)
	return
	// succ:  fn000070A4_exit
fn000070A4_exit:


// fn00007F88
// Return size: 0
define fn00007F88
fn00007F88_entry:
	r1 = fp
	// succ:  l00007F88
l00007F88:
	branch Test(GE,r18) l00007F88_ds_t
	// succ:  l00007F88_ds_f l00007F88_ds_t
l00007F88_ds_f:
	r3 = -r6
	goto l00007F90
	// succ:  l00007F90
l00007F88_ds_t:
	r3 = -r6
	goto l00007F94
	// succ:  l00007F94
l00007F90:
	r19 = r4
	// succ:  l00007F94
l00007F94:
	r3 = r6 | r3
	r21 = r7
	branch Test(GE,r3) l00007F94_ds_t
	// succ:  l00007F94_ds_f l00007F94_ds_t
l00007F94_ds_f:
	r5 = r6
	goto l00007FA4
	// succ:  l00007FA4
l00007F94_ds_t:
	r5 = r6
	goto l00007FC8
	// succ:  l00007FC8
l00007FA4:
	r3 = -r19
	r3 = r3 | r19
	branch Test(GE,r3) l00007FA4_ds_t
	// succ:  l00007FA4_ds_f l00007FA4_ds_t
l00007FA4_ds_f:
	r7 = r19
	goto l00007FB4
	// succ:  l00007FB4
l00007FA4_ds_t:
	r7 = r19
	goto l00007FC8
	// succ:  l00007FC8
l00007FB4:
	r6 = Mem0[r8 + 56:word32]
	r4 = r4 - r19
	r15 = 0x00007FC0
	r6 = r6 + r4
	call fn00018C34 (retsize: 0;)
l00007FC8:
	branch Test(EQ,r21) l00007FC8_ds_t
	// succ:  l00007FC8_ds_f l00007FC8_ds_t
l00007FC8_ds_f:
	r3 = 0x00000000
	goto l00007FD0
	// succ:  l00007FD0
l00007FC8_ds_t:
	r3 = 0x00000000
	goto l00007FF0
	// succ:  l00007FF0
l00007FD0:
	Mem0[r21:word32] = r19
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn00007F88_exit
l00007FF0:
	r3 = r21
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn00007F88_exit
fn00007F88_exit:


// fn00008008
// Return size: 0
define fn00008008
fn00008008_entry:
	r1 = fp
	// succ:  l00008008
l00008008:
	branch Test(EQ,r5) l0000822C
	// succ:  l0000800C l0000822C
l0000800C:
	r3 = Mem0[r5 + 32:word32]
	branch Test(EQ,r3) l0000822C
	// succ:  l00008014 l0000822C
l00008014:
	r3 = Mem0[r5 + 36:word32]
	branch Test(EQ,r3) l0000822C
	// succ:  l0000801C l0000822C
l0000801C:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	r21 = Mem0[r5 + 28:word32]
	branch Test(EQ,r21) l0000801C_ds_t
	// succ:  l0000801C_ds_f l0000801C_ds_t
l0000801C_ds_f:
	r15 = Mem0[r1:word32]
	goto l00008034_thunk_fn00008038
	// succ:  l00008034_thunk_fn00008038
l0000801C_ds_t:
	r15 = Mem0[r1:word32]
	goto l00008218
	// succ:  l00008218
l00008034_thunk_fn00008038:
	call fn00008038 (retsize: 0;)
	return
	// succ:  fn00008008_exit
l00008218:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r3 = 0xFFFFFFFE
	r1 = r1 + 0x00000024
	return
	// succ:  fn00008008_exit
l0000822C:
	r3 = 0xFFFFFFFE
	return
	// succ:  fn00008008_exit
fn00008008_exit:


// fn00008030
// Return size: 0
define fn00008030
fn00008030_entry:
	r1 = fp
	// succ:  l00008030
l00008030:
	branch Test(EQ,r21) l00008030_ds_t
	// succ:  l00008030_ds_f l00008030_ds_t
l00008030_ds_f:
	r15 = Mem0[r1:word32]
	goto l00008034_thunk_fn00008038
	// succ:  l00008034_thunk_fn00008038
l00008030_ds_t:
	r15 = Mem0[r1:word32]
	goto l00008218_in_fn00008030
	// succ:  l00008218_in_fn00008030
l00008034_thunk_fn00008038:
	call fn00008038 (retsize: 0;)
	return
	// succ:  fn00008030_exit
l00008218_in_fn00008030:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r3 = 0xFFFFFFFE
	r1 = r1 + 0x00000024
	return
	// succ:  fn00008030_exit
fn00008030_exit:


// fn00008038
// Return size: 0
define fn00008038
fn00008038_entry:
	r1 = fp
	// succ:  l00008038
l00008038:
	r4 = Mem0[r21:word32]
	r4 = r5 ^ r4
	branch Test(EQ,r4) l00008038_ds_t
	// succ:  l00008038_ds_f l00008038_ds_t
l00008038_ds_f:
	r3 = 0xFFFFFFFE
	goto l00008048
	// succ:  l00008048
l00008038_ds_t:
	r3 = 0xFFFFFFFE
	goto l0000805C
	// succ:  l0000805C
l00008048:
	r15 = Mem0[r1:word32]
	// succ:  l0000804C
l0000804C:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn00008038_exit
l0000805C:
	r4 = Mem0[r21 + 4:word32]
	r6 = r4 ^ 0x0000002A
	r9 = r4 ^ 0x00000045
	r8 = r4 ^ 0x0000005B
	r11 = -r6
	r10 = -r9
	r7 = r4 ^ 0x00000067
	r11 = r11 | r6
	r10 = r10 | r9
	r9 = -r8
	r6 = r4 ^ 0x00000071
	r10 = r10 & r11
	r9 = r9 | r8
	r8 = -r7
	r11 = r4 ^ 0x0000029A
	r8 = r8 | r7
	r9 = r9 & r10
	r7 = -r6
	r7 = r7 | r6
	r8 = r8 & r9
	r6 = -r11
	r7 = r7 & r8
	r6 = r6 | r11
	r6 = r6 & r7
	branch Test(GE,r6) l0000805C_ds_t
	// succ:  l0000805C_ds_f l0000805C_ds_t
l0000805C_ds_f:
	r4 = r4 + 0xFFFFFFC7
	goto l000080C4
	// succ:  l000080C4
l0000805C_ds_t:
	r4 = r4 + 0xFFFFFFC7
	goto l00008158
	// succ:  l00008158
l000080C4:
	r4 = r4 & 0xFFFFFFEF
	r6 = -r4
	r4 = r6 | r4
	r6 = r4
	r6 = r4 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	branch Test(NE,r6) l000080C4_ds_t
	// succ:  l000080C4_ds_f l000080C4_ds_t
l000080C4_ds_f:
	r15 = Mem0[r1:word32]
	goto l00008158
	// succ:  l00008158
l000080C4_ds_t:
	r15 = Mem0[r1:word32]
	goto l0000804C
	// succ:  l0000804C
l00008158:
	r3 = 0x00000002
	r4 = Mem0[r21 + 8:word32]
	Mem0[r5 + 44:word32] = r3
	r3 = Mem0[r21 + 24:word32]
	Mem0[r5 + 20:word32] = r0
	Mem0[r5 + 8:word32] = r0
	Mem0[r5 + 24:word32] = r0
	Mem0[r21 + 16:word32] = r4
	Mem0[r21 + 20:word32] = r0
	branch Test(LT,r3) l00008158_ds_t
	// succ:  l00008158_ds_f l00008158_ds_t
l00008158_ds_f:
	r19 = r5
	goto l00008184
	// succ:  l00008184
l00008158_ds_t:
	r19 = r5
	goto l000081E0
	// succ:  l000081E0
l00008184:
	r4 = r3 ^ 0x00000002
	branch Test(EQ,r4) l00008184_ds_t
	// succ:  l00008184_ds_f l00008184_ds_t
l00008184_ds_f:
	r7 = 0x00000000
	goto l00008190
	// succ:  l00008190
l00008184_ds_t:
	r7 = 0x00000000
	goto l000081F8
	// succ:  l000081F8
l00008190:
	branch Test(NE,r3) l00008190_ds_t
	// succ:  l00008190_ds_f l00008190_ds_t
l00008190_ds_f:
	r4 = 0x0000002A
	goto l00008198
	// succ:  l00008198
l00008190_ds_t:
	r4 = 0x0000002A
	goto l000081A0
	// succ:  l000081A0
l00008198:
	r4 = 0x00000071
	// succ:  l0000819C
l0000819C:
	r7 = 0x00000000
	// succ:  l000081A0
l000081A0:
	r6 = r7
	r5 = r7
	r15 = 0x000081AC
	Mem0[r21 + 4:word32] = r4
	call fn00005318 (retsize: 0;)
	r5 = r21
	// succ:  l000081B8
l000081B8:
	Mem0[r19 + 48:word32] = r3
	r15 = 0x000081C0
	Mem0[r21 + 40:word32] = r0
	call fn00003674 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r3 = 0x00000000
	r1 = r1 + 0x00000024
	return
	// succ:  fn00008038_exit
l000081E0:
	r4 = -r3
	Mem0[r21 + 24:word32] = r4
	r3 = r3 ^ 0xFFFFFFFE
	branch Test(NE,r3) l000081E0_ds_t
	// succ:  l000081E0_ds_f l000081E0_ds_t
l000081E0_ds_f:
	r4 = 0x0000002A
	goto l000081F4
	// succ:  l000081F4
l000081E0_ds_t:
	r4 = 0x0000002A
	goto l0000819C
	// succ:  l0000819C
l000081F4:
	r7 = 0x00000000
	// succ:  l000081F8
l000081F8:
	r6 = r7
	r5 = r7
	r3 = 0x00000039
	r15 = 0x00008208
	Mem0[r21 + 4:word32] = r3
	call fn00007044 (retsize: 0;)
	r5 = r21
	goto l000081B8
	// succ:  l000081B8
fn00008038_exit:


// fn00008234
// Return size: 0
define fn00008234
fn00008234_entry:
	r1 = fp
	// succ:  l00008234
l00008234:
	branch Test(EQ,r5) l000084F4
	// succ:  l00008238 l000084F4
l00008238:
	r3 = Mem0[r5 + 32:word32]
	branch Test(EQ,r3) l000084F4
	// succ:  l00008240 l000084F4
l00008240:
	r3 = Mem0[r5 + 36:word32]
	branch Test(EQ,r3) l000084F4
	// succ:  l00008248 l000084F4
l00008248:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	r21 = Mem0[r5 + 28:word32]
	branch Test(EQ,r21) l00008248_ds_t
	// succ:  l00008248_ds_f l00008248_ds_t
l00008248_ds_f:
	r15 = Mem0[r1:word32]
	goto l00008264
	// succ:  l00008264
l00008248_ds_t:
	r15 = Mem0[r1:word32]
	goto l000084E0
	// succ:  l000084E0
l00008264:
	r4 = Mem0[r21:word32]
	r4 = r5 ^ r4
	branch Test(EQ,r4) l00008264_ds_t
	// succ:  l00008264_ds_f l00008264_ds_t
l00008264_ds_f:
	r3 = 0xFFFFFFFE
	goto l00008274
	// succ:  l00008274
l00008264_ds_t:
	r3 = 0xFFFFFFFE
	goto l00008288
	// succ:  l00008288
l00008274:
	r15 = Mem0[r1:word32]
	// succ:  l00008278
l00008278:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn00008234_exit
l00008288:
	r4 = Mem0[r21 + 4:word32]
	r6 = r4 ^ 0x0000002A
	r9 = r4 ^ 0x00000045
	r8 = r4 ^ 0x0000005B
	r11 = -r6
	r10 = -r9
	r7 = r4 ^ 0x00000067
	r11 = r11 | r6
	r10 = r10 | r9
	r9 = -r8
	r6 = r4 ^ 0x00000071
	r10 = r10 & r11
	r9 = r9 | r8
	r8 = -r7
	r11 = r4 ^ 0x0000029A
	r8 = r8 | r7
	r9 = r9 & r10
	r7 = -r6
	r7 = r7 | r6
	r8 = r8 & r9
	r6 = -r11
	r7 = r7 & r8
	r6 = r6 | r11
	r6 = r6 & r7
	branch Test(GE,r6) l00008288_ds_t
	// succ:  l00008288_ds_f l00008288_ds_t
l00008288_ds_f:
	r4 = r4 + 0xFFFFFFC7
	goto l000082F0
	// succ:  l000082F0
l00008288_ds_t:
	r4 = r4 + 0xFFFFFFC7
	goto l00008384
	// succ:  l00008384
l000082F0:
	r4 = r4 & 0xFFFFFFEF
	r6 = -r4
	r4 = r6 | r4
	r6 = r4
	r6 = r4 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	branch Test(NE,r6) l000082F0_ds_t
	// succ:  l000082F0_ds_f l000082F0_ds_t
l000082F0_ds_f:
	r15 = Mem0[r1:word32]
	goto l00008384
	// succ:  l00008384
l000082F0_ds_t:
	r15 = Mem0[r1:word32]
	goto l00008278
	// succ:  l00008278
l00008384:
	r3 = 0x00000002
	r4 = Mem0[r21 + 8:word32]
	Mem0[r5 + 44:word32] = r3
	r3 = Mem0[r21 + 24:word32]
	Mem0[r5 + 20:word32] = r0
	Mem0[r5 + 8:word32] = r0
	Mem0[r5 + 24:word32] = r0
	Mem0[r21 + 16:word32] = r4
	Mem0[r21 + 20:word32] = r0
	branch Test(LT,r3) l00008384_ds_t
	// succ:  l00008384_ds_f l00008384_ds_t
l00008384_ds_f:
	r19 = r5
	goto l000083B0
	// succ:  l000083B0
l00008384_ds_t:
	r19 = r5
	goto l000084A8
	// succ:  l000084A8
l000083B0:
	r4 = r3 ^ 0x00000002
	branch Test(EQ,r4) l000083B0_ds_t
	// succ:  l000083B0_ds_f l000083B0_ds_t
l000083B0_ds_f:
	r7 = 0x00000000
	goto l000083BC
	// succ:  l000083BC
l000083B0_ds_t:
	r7 = 0x00000000
	goto l000084C0
	// succ:  l000084C0
l000083BC:
	branch Test(NE,r3) l000083BC_ds_t
	// succ:  l000083BC_ds_f l000083BC_ds_t
l000083BC_ds_f:
	r4 = 0x0000002A
	goto l000083C4
	// succ:  l000083C4
l000083BC_ds_t:
	r4 = 0x0000002A
	goto l000083CC
	// succ:  l000083CC
l000083C4:
	r4 = 0x00000071
	// succ:  l000083C8
l000083C8:
	r7 = 0x00000000
	// succ:  l000083CC
l000083CC:
	r6 = r7
	r5 = r7
	r15 = 0x000083D8
	Mem0[r21 + 4:word32] = r4
	call fn00005318 (retsize: 0;)
	r5 = r21
	// succ:  l000083E4
l000083E4:
	Mem0[r19 + 48:word32] = r3
	r15 = 0x000083EC
	Mem0[r21 + 40:word32] = r0
	call fn00003674 (retsize: 0;)
	r19 = Mem0[r19 + 28:word32]
	r6 = 0x00000000
	r3 = Mem0[r19 + 76:word32]
	r8 = Mem0[r19 + 68:word32]
	r4 = Mem0[r19 + 44:word32]
	r3 = r3 + 0xFFFFFFFF
	r3 = r3 + r3
	r4 = r4 + r4
	r5 = r8
	r7 = r3
	Mem0[r19 + 60:word32] = r4
	r15 = 0x00008428
	v17 = SLICE(r0, word16, 0)
	Mem0[r3 + r8:word16] = v17
	call fn00018C64 (retsize: 0;)
	r4 = Mem0[r19 + 132:word32]
	r5 = 0x00000002
	Mem0[r19 + 108:word32] = r0
	r3 = r4 + r4
	r3 = r3 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + 0xFFFF9DB4
	v18 = Mem0[r3 + 2:word16]
	r7 = (word32) v18
	v19 = Mem0[r3:word16]
	r6 = (word32) v19
	v20 = Mem0[r3 + 4:word16]
	r4 = (word32) v20
	v21 = Mem0[r3 + 6:word16]
	r3 = (word32) v21
	Mem0[r19 + 128:word32] = r7
	Mem0[r19 + 140:word32] = r6
	Mem0[r19 + 124:word32] = r3
	Mem0[r19 + 144:word32] = r4
	Mem0[r19 + 92:word32] = r0
	Mem0[r19 + 116:word32] = r0
	Mem0[r19 + 5812:word32] = r0
	Mem0[r19 + 120:word32] = r5
	Mem0[r19 + 96:word32] = r5
	Mem0[r19 + 104:word32] = r0
	Mem0[r19 + 72:word32] = r0
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r3 = 0x00000000
	r1 = r1 + 0x00000024
	return
	// succ:  fn00008234_exit
l000084A8:
	r4 = -r3
	Mem0[r21 + 24:word32] = r4
	r3 = r3 ^ 0xFFFFFFFE
	branch Test(NE,r3) l000084A8_ds_t
	// succ:  l000084A8_ds_f l000084A8_ds_t
l000084A8_ds_f:
	r4 = 0x0000002A
	goto l000084BC
	// succ:  l000084BC
l000084A8_ds_t:
	r4 = 0x0000002A
	goto l000083C8
	// succ:  l000083C8
l000084BC:
	r7 = 0x00000000
	// succ:  l000084C0
l000084C0:
	r6 = r7
	r5 = r7
	r3 = 0x00000039
	r15 = 0x000084D0
	Mem0[r21 + 4:word32] = r3
	call fn00007044 (retsize: 0;)
	r5 = r21
	goto l000083E4
	// succ:  l000083E4
l000084E0:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r3 = 0xFFFFFFFE
	r1 = r1 + 0x00000024
	return
	// succ:  fn00008234_exit
l000084F4:
	r3 = 0xFFFFFFFE
	return
	// succ:  fn00008234_exit
fn00008234_exit:


// fn000086C8
// Return size: 0
define fn000086C8
fn000086C8_entry:
	r1 = fp
	// succ:  l000086C8
l000086C8:
	r9 = r9 | r8
	r10 = r10 & r11
	r8 = -r20
	r9 = r9 & r10
	r8 = r8 | r20
	r8 = r8 & r9
	branch Test(GE,r8) l000086C8_ds_t
	// succ:  l000086C8_ds_f l000086C8_ds_t
l000086C8_ds_f:
	r5 = r5 + 0xFFFFFFC7
	goto l000086E8
	// succ:  l000086E8
l000086C8_ds_t:
	r5 = r5 + 0xFFFFFFC7
	// succ:  l000086E4_thunk_fn00008778
l000086E4_thunk_fn00008778:
	call fn00008778 (retsize: 0;)
	return
	// succ:  fn000086C8_exit
l000086E8:
	r5 = r5 & 0xFFFFFFEF
	r8 = -r5
	r5 = r8 | r5
	// succ:  l000086F0_thunk_fn000086F4
l000086F0_thunk_fn000086F4:
	call fn000086F4 (retsize: 0;)
	return
	// succ:  fn000086C8_exit
fn000086C8_exit:


// fn000086F4
// Return size: 0
define fn000086F4
fn000086F4_entry:
	r1 = fp
	// succ:  l000086F4
l000086F4:
	r8 = r5
	r8 = r5 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	branch Test(NE,r8) l00008794
	// succ:  l00008774_thunk_fn00008778 l00008774_thunk_fn00008778
l00008774_thunk_fn00008778:
	call fn00008778 (retsize: 0;)
	return
	// succ:  fn000086F4_exit
l00008774_thunk_fn00008778:
	call fn00008778 (retsize: 0;)
	return
	// succ:  fn000086F4_exit
fn000086F4_exit:


// fn0000871C
// Return size: 0
define fn0000871C
fn0000871C_entry:
	r1 = fp
	// succ:  l0000871C
l0000871C:
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	branch Test(NE,r8) l00008794_in_fn0000871C
	// succ:  l00008774_thunk_fn00008778 l00008794_in_fn0000871C
l00008774_thunk_fn00008778:
	call fn00008778 (retsize: 0;)
	return
	// succ:  fn0000871C_exit
l00008794_in_fn0000871C:
	r1 = r1 + 0x00000008
	return
	// succ:  fn0000871C_exit
fn0000871C_exit:


// fn00008750
// Return size: 0
define fn00008750
fn00008750_entry:
	r1 = fp
	// succ:  l00008750
l00008750:
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	branch Test(NE,r8) l00008794_in_fn00008750
	// succ:  l00008774_thunk_fn00008778 l00008794_in_fn00008750
l00008774_thunk_fn00008778:
	call fn00008778 (retsize: 0;)
	return
	// succ:  fn00008750_exit
l00008794_in_fn00008750:
	r1 = r1 + 0x00000008
	return
	// succ:  fn00008750_exit
fn00008750_exit:


// fn00008778
// Return size: 0
define fn00008778
fn00008778_entry:
	r1 = fp
	// succ:  l00008778
l00008778:
	branch Test(EQ,r6) l00008784
	// succ:  l0000877C l00008784
l0000877C:
	r3 = Mem0[r4 + 20:word32]
	Mem0[r6:word32] = r3
	// succ:  l00008784
l00008784:
	branch Test(EQ,r7) l00008784_ds_t
	// succ:  l00008784_ds_f l00008784_ds_t
l00008784_ds_f:
	r3 = 0x00000000
	goto l0000878C
	// succ:  l0000878C
l00008784_ds_t:
	r3 = 0x00000000
	goto l000087A4
	// succ:  l000087A4
l0000878C:
	r4 = Mem0[r4 + 5820:word32]
	Mem0[r7:word32] = r4
	// succ:  l00008794
l00008794:
	r1 = r1 + 0x00000008
	return
	// succ:  fn00008778_exit
l000087A4:
	r3 = r7
	r1 = r1 + 0x00000008
	return
	// succ:  fn00008778_exit
fn00008778_exit:


// fn000087FC
// Return size: 0
define fn000087FC
fn000087FC_entry:
	r1 = fp
	// succ:  l000087FC
l000087FC:
	r22 = 0xFFFFFFFE
	// succ:  l000087FC_thunk_fn00008920
l000087FC_thunk_fn00008920:
	call fn00008920 (retsize: 0;)
	return
	// succ:  fn000087FC_exit
fn000087FC_exit:


// fn00008824
// Return size: 0
define fn00008824
fn00008824_entry:
	r1 = fp
	// succ:  l00008824
l00008824:
	r3 = Mem0[r19 + 4:word32]
	r23 = r7
	r8 = r3 ^ 0x0000002A
	r4 = r3 ^ 0x00000045
	r7 = r3 ^ 0x0000005B
	r6 = -r8
	r5 = -r4
	r6 = r6 | r8
	r9 = r3 ^ 0x00000067
	r5 = r5 | r4
	r4 = -r7
	r5 = r5 & r6
	r8 = r3 ^ 0x00000071
	r4 = r4 | r7
	r6 = -r9
	r4 = r4 & r5
	r7 = r3 ^ 0x0000029A
	r6 = r6 | r9
	r5 = -r8
	r6 = r6 & r4
	r5 = r5 | r8
	r4 = -r7
	r5 = r5 & r6
	r4 = r4 | r7
	r4 = r4 & r5
	branch Test(GE,r4) l00008824_ds_t
	// succ:  l00008824_ds_f l00008824_ds_t
l00008824_ds_f:
	r3 = r3 + 0xFFFFFFC7
	goto l0000888C_thunk_fn00008890
	// succ:  l0000888C_thunk_fn00008890
l00008824_ds_t:
	r3 = r3 + 0xFFFFFFC7
	goto l0000888C_thunk_fn00008920
	// succ:  l0000888C_thunk_fn00008920
l0000888C_thunk_fn00008890:
	call fn00008890 (retsize: 0;)
	return
	// succ:  fn00008824_exit
l0000888C_thunk_fn00008920:
	call fn00008920 (retsize: 0;)
	return
	// succ:  fn00008824_exit
fn00008824_exit:


// fn00008874
// Return size: 0
define fn00008874
fn00008874_entry:
	r1 = fp
	// succ:  l00008874
l00008874:
	r5 = r5 | r8
	r4 = -r7
	r5 = r5 & r6
	r4 = r4 | r7
	r4 = r4 & r5
	branch Test(GE,r4) l00008874_ds_t
	// succ:  l00008874_ds_f l00008874_ds_t
l00008874_ds_f:
	r3 = r3 + 0xFFFFFFC7
	goto l0000888C_thunk_fn00008890
	// succ:  l0000888C_thunk_fn00008890
l00008874_ds_t:
	r3 = r3 + 0xFFFFFFC7
	goto l0000888C_thunk_fn00008920
	// succ:  l0000888C_thunk_fn00008920
l0000888C_thunk_fn00008890:
	call fn00008890 (retsize: 0;)
	return
	// succ:  fn00008874_exit
l0000888C_thunk_fn00008920:
	call fn00008920 (retsize: 0;)
	return
	// succ:  fn00008874_exit
fn00008874_exit:


// fn00008890
// Return size: 0
define fn00008890
fn00008890_entry:
	r1 = fp
	// succ:  l00008890
l00008890:
	r3 = r3 & 0xFFFFFFEF
	r4 = -r3
	r3 = r4 | r3
	// succ:  l00008898_thunk_fn0000889C
l00008898_thunk_fn0000889C:
	call fn0000889C (retsize: 0;)
	return
	// succ:  fn00008890_exit
fn00008890_exit:


// fn0000889C
// Return size: 0
define fn0000889C
fn0000889C_entry:
	r1 = fp
	// succ:  l0000889C
l0000889C:
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l000087FC
	goto l0000891C_thunk_fn00008920
	// succ:  l0000891C_thunk_fn00008920 l0000891C_thunk_fn000087FC
l0000891C_thunk_fn000087FC:
	call fn000087FC (retsize: 0;)
	return
	// succ:  fn0000889C_exit
l0000891C_thunk_fn00008920:
	call fn00008920 (retsize: 0;)
	return
	// succ:  fn0000889C_exit
fn0000889C_exit:


// fn00008918
// Return size: 0
define fn00008918
fn00008918_entry:
	r1 = fp
	// succ:  l00008918
l00008918:
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l0000891C_thunk_fn000087FC
	goto l0000891C_thunk_fn00008920
	// succ:  l0000891C_thunk_fn00008920 l0000891C_thunk_fn000087FC
l0000891C_thunk_fn000087FC:
	call fn000087FC (retsize: 0;)
	return
	// succ:  fn00008918_exit
l0000891C_thunk_fn00008920:
	call fn00008920 (retsize: 0;)
	return
	// succ:  fn00008918_exit
fn00008918_exit:


// fn00008920
// Return size: 0
define fn00008920
fn00008920_entry:
	r1 = fp
	goto l00008920
	// succ:  l00008920
l00008800:
	r3 = r22
	// succ:  l00008804
l00008804:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r1 = r1 + 0x00000030
	return
	// succ:  fn00008920_exit
l00008920:
	r3 = Mem0[r19 + 16:word32]
	r4 = Mem0[r19 + 5796:word32]
	r3 = r3 + 0x00000002
	r18 = cond(r4 -u r3)
	branch Test(LT,r18) l00008920_ds_t
	// succ:  l00008920_ds_f l00008920_ds_t
l00008920_ds_f:
	r24 = 0x00000001
	goto l00008938
	// succ:  l00008938
l00008920_ds_t:
	r24 = 0x00000001
	goto l000089E4
	// succ:  l000089E4
l00008938:
	r4 = Mem0[r19 + 5820:word32]
	r6 = 0x00000010
	r5 = r19
	r3 = r6 - r4
	r18 = cond(r3 - r22)
	branch Test(GE,r18) l00008938_ds_t
	// succ:  l00008938_ds_f l00008938_ds_t
l00008938_ds_f:
	r21 = r22
	goto l00008954
	// succ:  l00008954
l00008938_ds_t:
	r21 = r22
	goto l00008958
	// succ:  l00008958
l00008954:
	r21 = r3
	// succ:  l00008958
l00008958:
	v12 = Mem0[r19 + 5816:word16]
	r6 = (word32) v12
	r18 = r21 & 0x0000001F
	r8 = r24
	branch Test(EQ,r18) l00008958_ds_t
	// succ:  l00008958_ds_f l00008958_ds_t
l00008958_ds_f:
	r8 = r8
	goto l0000896C
	// succ:  l0000896C
l00008958_ds_t:
	r8 = r8
	goto l00008978
	// succ:  l00008978
l0000896C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000896C_ds_t
	// succ:  l0000896C_ds_f l0000896C_ds_t
l0000896C_ds_f:
	r8 = r8 + r8
	goto l00008978
	// succ:  l00008978
l0000896C_ds_t:
	r8 = r8 + r8
	goto l0000896C
	// succ:  l0000896C
l00008978:
	r8 = r8 + 0xFFFFFFFF
	r8 = r8 & r23
	r18 = r4 & 0x0000001F
	r3 = r8
	branch Test(EQ,r18) l00008978_ds_t
	// succ:  l00008978_ds_f l00008978_ds_t
l00008978_ds_f:
	r3 = r3
	goto l00008990
	// succ:  l00008990
l00008978_ds_t:
	r3 = r3
	goto l0000899C
	// succ:  l0000899C
l00008990:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00008990_ds_t
	// succ:  l00008990_ds_f l00008990_ds_t
l00008990_ds_f:
	r3 = r3 + r3
	goto l0000899C
	// succ:  l0000899C
l00008990_ds_t:
	r3 = r3 + r3
	goto l00008990
	// succ:  l00008990
l0000899C:
	r4 = r4 + r21
	r3 = r3 | r6
	v15 = SLICE(r3, word16, 0)
	Mem0[r19 + 5816:word16] = v15
	r15 = 0x000089AC
	Mem0[r19 + 5820:word32] = r4
	call fn00003990 (retsize: 0;)
	r22 = r22 - r21
	r18 = r21 & 0x0000001F
	r3 = r23
	branch Test(EQ,r18) l0000899C_ds_t
	// succ:  l0000899C_ds_f l0000899C_ds_t
l0000899C_ds_f:
	r3 = r3
	goto l000089C8
	// succ:  l000089C8
l0000899C_ds_t:
	r3 = r3
	goto l000089D4
	// succ:  l000089D4
l000089C8:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000089C8_ds_t
	// succ:  l000089C8_ds_f l000089C8_ds_t
l000089C8_ds_f:
	r3 = r3 >> 1
	C = cond(r3)
	goto l000089D4
	// succ:  l000089D4
l000089C8_ds_t:
	r3 = r3 >> 1
	C = cond(r3)
	goto l000089C8
	// succ:  l000089C8
l000089D4:
	branch Test(NE,r22) l000089D4_ds_t
	// succ:  l000089D4_ds_f l000089D4_ds_t
l000089D4_ds_f:
	r23 = r3
	goto l000089DC
	// succ:  l000089DC
l000089D4_ds_t:
	r23 = r3
	goto l00008938
	// succ:  l00008938
l000089DC:
	r3 = r22
	goto l00008804
	// succ:  l00008804
l000089E4:
	r22 = 0xFFFFFFFB
	goto l00008800
	// succ:  l00008800
fn00008920_exit:


// fn00008BB4
// Return size: 0
define fn00008BB4
fn00008BB4_entry:
	r1 = fp
	// succ:  l00008BB4
l00008BB4:
	branch Test(EQ,r8) l00008BC4
	// succ:  l00008BB8 l00008BC4
l00008BB8:
	r4 = Mem0[r8:word32]
	r5 = r5 ^ r4
	branch Test(EQ,r5) l00008BCC
	// succ:  l00008BC4 l00008BCC
l00008BC4:
	r3 = r3 + 0x0000000B
	return
	// succ:  fn00008BB4_exit
l00008BCC:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r20
	r4 = Mem0[r8 + 4:word32]
	r5 = r4 ^ 0x0000002A
	r11 = r4 ^ 0x00000045
	r10 = r4 ^ 0x0000005B
	r20 = -r5
	r12 = -r11
	r9 = r4 ^ 0x00000067
	r20 = r20 | r5
	r12 = r12 | r11
	r11 = -r10
	r5 = r4 ^ 0x00000071
	r12 = r12 & r20
	r11 = r11 | r10
	r10 = -r9
	r20 = r4 ^ 0x0000029A
	r10 = r10 | r9
	r11 = r11 & r12
	r9 = -r5
	r9 = r9 | r5
	r10 = r10 & r11
	r5 = -r20
	r9 = r9 & r10
	r5 = r5 | r20
	r5 = r5 & r9
	// succ:  l00008C30_thunk_fn00008C34
l00008C30_thunk_fn00008C34:
	call fn00008C34 (retsize: 0;)
	return
	// succ:  fn00008BB4_exit
fn00008BB4_exit:


// fn00008C34
// Return size: 0
define fn00008C34
fn00008C34_entry:
	r1 = fp
	// succ:  l00008C34
l00008C34:
	branch Test(GE,r5) l00008C34_ds_t
	// succ:  l00008C34_ds_f l00008C34_ds_t
l00008C34_ds_f:
	r4 = r4 + 0xFFFFFFC7
	goto l00008C3C
	// succ:  l00008C3C
l00008C34_ds_t:
	r4 = r4 + 0xFFFFFFC7
	// succ:  l00008C38_thunk_fn00008CD8
l00008C38_thunk_fn00008CD8:
	call fn00008CD8 (retsize: 0;)
	return
	// succ:  fn00008C34_exit
l00008C3C:
	r4 = r4 & 0xFFFFFFEF
	r5 = -r4
	r4 = r5 | r4
	r5 = r4
	r5 = r4 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	// succ:  l00008C60_thunk_fn00008C64
l00008C60_thunk_fn00008C64:
	call fn00008C64 (retsize: 0;)
	return
	// succ:  fn00008C34_exit
fn00008C34_exit:


// fn00008C64
// Return size: 0
define fn00008C64
fn00008C64_entry:
	r1 = fp
	// succ:  l00008C64
l00008C64:
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	branch Test(EQ,r5) l00008CD8
	// succ:  l00008CC8_thunk_fn00008CCC l00008CC8_thunk_fn00008CD8
l00008CC8_thunk_fn00008CCC:
	call fn00008CCC (retsize: 0;)
	return
	// succ:  fn00008C64_exit
l00008CC8_thunk_fn00008CD8:
	call fn00008CD8 (retsize: 0;)
	return
	// succ:  fn00008C64_exit
fn00008C64_exit:


// fn00008CC4
// Return size: 0
define fn00008CC4
fn00008CC4_entry:
	r1 = fp
	// succ:  l00008CC4
l00008CC4:
	r5 = r5 >>u 1
	C = cond(r5)
	branch Test(EQ,r5) l00008CC8_thunk_fn00008CD8
	// succ:  l00008CC8_thunk_fn00008CCC l00008CC8_thunk_fn00008CD8
l00008CC8_thunk_fn00008CCC:
	call fn00008CCC (retsize: 0;)
	return
	// succ:  fn00008CC4_exit
l00008CC8_thunk_fn00008CD8:
	call fn00008CD8 (retsize: 0;)
	return
	// succ:  fn00008CC4_exit
fn00008CC4_exit:


// fn00008CCC
// Return size: 0
define fn00008CCC
fn00008CCC_entry:
	r1 = fp
	// succ:  l00008CCC
l00008CCC:
	r3 = r3 + 0x0000000B
	// succ:  l00008CCC_thunk_fn00008CD8
l00008CCC_thunk_fn00008CD8:
	call fn00008CD8 (retsize: 0;)
	return
	// succ:  fn00008CCC_exit
fn00008CCC_exit:


// fn00008CD8
// Return size: 0
define fn00008CD8
fn00008CD8_entry:
	r1 = fp
	r1 = fp
	// succ:  l00008CD8 l00008CD8
l00008CD8:
	r5 = Mem0[r8 + 24:word32]
	r4 = r5 ^ 0x00000001
	branch Test(EQ,r4) l00008CD8_ds_t
	// succ:  l00008CD8_ds_f l00008CD8_ds_t
l00008CD8_ds_f:
	r4 = r5 ^ 0x00000002
	goto l00008CE8
	// succ:  l00008CE8
l00008CD8_ds_t:
	r4 = r5 ^ 0x00000002
	goto l00008E64
	// succ:  l00008E64
l00008CE8:
	branch Test(EQ,r4) l00008E08
	// succ:  l00008CEC l00008E08
l00008CEC:
	branch Test(EQ,r5) l00008CF4
	goto l00008CF0
	// succ:  l00008CF0 l00008CEC_thunk_fn00008CF4
l00008CEC_thunk_fn00008CF4:
	call fn00008CF4 (retsize: 0;)
	return
	// succ:  fn00008CD8_exit
l00008CF0:
	r5 = 0x00000006
	// succ:  l00008CF0_thunk_fn00008CF4
l00008CF0_thunk_fn00008CF4:
	call fn00008CF4 (retsize: 0;)
	return
	// succ:  fn00008CD8_exit
l00008E08:
	r10 = Mem0[r8 + 28:word32]
	branch Test(EQ,r10) l00008E08_ds_t
	// succ:  l00008E08_ds_f l00008E08_ds_t
l00008E08_ds_f:
	r5 = 0x00000012
	goto l00008E14
	// succ:  l00008E14
l00008E08_ds_t:
	r5 = 0x00000012
	// succ:  l00008E10_thunk_fn00008CF4
l00008E10_thunk_fn00008CF4:
	call fn00008CF4 (retsize: 0;)
	return
	// succ:  fn00008CD8_exit
l00008E14:
	r4 = Mem0[r10 + 16:word32]
	branch Test(EQ,r4) l00008E24
	// succ:  l00008E1C l00008E24
l00008E1C:
	r5 = Mem0[r10 + 20:word32]
	r5 = r5 + 0x00000014
	// succ:  l00008E24
l00008E24:
	r4 = Mem0[r10 + 28:word32]
	branch Test(EQ,r4) l00008E3C
	// succ:  l00008E2C l00008E3C
l00008E2C:
	r4 = r4 + 0x00000001
	v11 = Mem0[r4 - 1:byte]
	r9 = (word32) v11
	branch Test(NE,r9) l00008E2C_ds_t
	// succ:  l00008E2C_ds_f l00008E2C_ds_t
l00008E2C_ds_f:
	r5 = r5 + 0x00000001
	goto l00008E3C
	// succ:  l00008E3C
l00008E2C_ds_t:
	r5 = r5 + 0x00000001
	goto l00008E2C
	// succ:  l00008E2C
l00008E3C:
	r4 = Mem0[r10 + 36:word32]
	branch Test(EQ,r4) l00008E54
	// succ:  l00008E44 l00008E54
l00008E44:
	r4 = r4 + 0x00000001
	v13 = Mem0[r4 - 1:byte]
	r9 = (word32) v13
	branch Test(NE,r9) l00008E44_ds_t
	// succ:  l00008E44_ds_f l00008E44_ds_t
l00008E44_ds_f:
	r5 = r5 + 0x00000001
	goto l00008E54
	// succ:  l00008E54
l00008E44_ds_t:
	r5 = r5 + 0x00000001
	goto l00008E44
	// succ:  l00008E44
l00008E54:
	r4 = Mem0[r10 + 44:word32]
	branch Test(EQ,r4) l00008CF4
	goto l00008E58_thunk_fn00008E5C
	// succ:  l00008E58_thunk_fn00008E5C l00008E58_thunk_fn00008CF4
l00008E58_thunk_fn00008CF4:
	call fn00008CF4 (retsize: 0;)
	return
	// succ:  fn00008CD8_exit
l00008E58_thunk_fn00008E5C:
	call fn00008E5C (retsize: 0;)
	return
	// succ:  fn00008CD8_exit
l00008E64:
	r4 = Mem0[r8 + 108:word32]
	branch Test(EQ,r4) l00008E64_ds_t
	// succ:  l00008E64_ds_f l00008E64_ds_t
l00008E64_ds_f:
	r5 = 0x00000006
	goto l00008E70
	// succ:  l00008E70
l00008E64_ds_t:
	r5 = 0x00000006
	// succ:  l00008E6C_thunk_fn00008CF4
l00008E6C_thunk_fn00008CF4:
	call fn00008CF4 (retsize: 0;)
	return
	// succ:  fn00008CD8_exit
l00008E70:
	r5 = 0x0000000A
	// succ:  l00008E70_thunk_fn00008CF4
l00008E70_thunk_fn00008CF4:
	call fn00008CF4 (retsize: 0;)
	return
	// succ:  fn00008CD8_exit
fn00008CD8_exit:


// fn00008CF4
// Return size: 0
define fn00008CF4
fn00008CF4_entry:
	r1 = fp
	goto l00008CF4
	// succ:  l00008CF4
l00008CD0:
	r1 = r1 + 0x00000008
	return
	// succ:  fn00008CF4_exit
l00008CF4:
	r4 = Mem0[r8 + 48:word32]
	r4 = r4 ^ 0x0000000F
	branch Test(EQ,r4) l00008D10
	// succ:  l00008D00 l00008D10
l00008D00:
	r3 = r3 + 0x00000005
	r3 = r3 + r5
	r1 = r1 + 0x00000008
	return
	// succ:  fn00008CF4_exit
l00008D10:
	r4 = Mem0[r8 + 80:word32]
	r4 = r4 ^ 0x0000000F
	branch Test(NE,r4) l00008D00
	// succ:  l00008D1C l00008D00
l00008D1C:
	r4 = r6
	r4 = r6 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 + r7
	r3 = r6
	r3 = r6 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r4 = r4 + r3
	r3 = r6
	r3 = r6 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r4 = r4 + r3
	r3 = r4 + r5
	goto l00008CD0
	// succ:  l00008CD0
fn00008CF4_exit:


// fn00008E58
// Return size: 0
define fn00008E58
fn00008E58_entry:
	r1 = fp
	// succ:  l00008E58
l00008E58:
	branch Test(EQ,r4) l00008E58_thunk_fn00008CF4
	goto l00008E58_thunk_fn00008E5C
	// succ:  l00008E58_thunk_fn00008E5C l00008E58_thunk_fn00008CF4
l00008E58_thunk_fn00008CF4:
	call fn00008CF4 (retsize: 0;)
	return
	// succ:  fn00008E58_exit
l00008E58_thunk_fn00008E5C:
	call fn00008E5C (retsize: 0;)
	return
	// succ:  fn00008E58_exit
fn00008E58_exit:


// fn00008E5C
// Return size: 0
define fn00008E5C
fn00008E5C_entry:
	r1 = fp
	// succ:  l00008E5C
l00008E5C:
	r5 = r5 + 0x00000002
	// succ:  l00008E5C_thunk_fn00008CF4
l00008E5C_thunk_fn00008CF4:
	call fn00008CF4 (retsize: 0;)
	return
	// succ:  fn00008E5C_exit
fn00008E5C_exit:


// fn00008E80
// Return size: 0
define fn00008E80
fn00008E80_entry:
	r1 = fp
	// succ:  l00008E80
l00008E80:
	branch Test(EQ,r5) l0000AC30
	// succ:  l00008E84 l0000AC30
l00008E84:
	r3 = Mem0[r5 + 32:word32]
	branch Test(EQ,r3) l0000AC30
	// succ:  l00008E8C l0000AC30
l00008E8C:
	r3 = Mem0[r5 + 36:word32]
	branch Test(EQ,r3) l0000AC30
	// succ:  l00008E94 l0000AC30
l00008E94:
	r1 = r1 + 0xFFFFFFB4
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r20
	Mem0[r1 + 36:word32] = r21
	Mem0[r1 + 40:word32] = r22
	Mem0[r1 + 44:word32] = r23
	Mem0[r1 + 48:word32] = r24
	Mem0[r1 + 52:word32] = r25
	Mem0[r1 + 56:word32] = r26
	Mem0[r1 + 60:word32] = r27
	Mem0[r1 + 64:word32] = r28
	Mem0[r1 + 68:word32] = r29
	Mem0[r1 + 72:word32] = r30
	r19 = Mem0[r5 + 28:word32]
	branch Test(EQ,r19) l000097A4
	// succ:  l00008ED4 l000097A4
l00008ED4:
	r4 = Mem0[r19:word32]
	r4 = r5 ^ r4
	branch Test(EQ,r4) l00008ED4_ds_t
	// succ:  l00008ED4_ds_f l00008ED4_ds_t
l00008ED4_ds_f:
	r3 = 0xFFFFFFFE
	goto l00008EE0_thunk_fn00009120
	// succ:  l00008EE0_thunk_fn00009120
l00008ED4_ds_t:
	r3 = 0xFFFFFFFE
	goto l00008F1C
	// succ:  l00008F1C
l00008EE0_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l00008F1C:
	r8 = Mem0[r19 + 4:word32]
	r4 = r8 ^ 0x00000045
	r11 = r8 ^ 0x0000002A
	r10 = r8 ^ 0x0000005B
	r12 = -r4
	r9 = -r11
	r7 = r8 ^ 0x00000067
	r9 = r9 | r11
	r12 = r12 | r4
	r4 = -r10
	r20 = r8 ^ 0x00000071
	r12 = r12 & r9
	r4 = r4 | r10
	r10 = -r7
	r9 = r8 ^ 0x0000029A
	r4 = r4 & r12
	r10 = r10 | r7
	r7 = -r20
	r10 = r10 & r4
	r7 = r7 | r20
	r4 = -r9
	r7 = r7 & r10
	r4 = r4 | r9
	r4 = r4 & r7
	branch Test(GE,r4) l00008F1C_ds_t
	// succ:  l00008F1C_ds_f l00008F1C_ds_t
l00008F1C_ds_f:
	r4 = r8 + 0xFFFFFFC7
	goto l00008F84
	// succ:  l00008F84
l00008F1C_ds_t:
	r4 = r8 + 0xFFFFFFC7
	goto l00009018
	// succ:  l00009018
l00008F84:
	r4 = r4 & 0xFFFFFFEF
	r7 = -r4
	r4 = r7 | r4
	r7 = r4
	r7 = r4 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	branch Test(NE,r7) l00008F84_ds_t
	// succ:  l00008F84_ds_f l00008F84_ds_t
l00008F84_ds_f:
	r15 = Mem0[r1:word32]
	goto l00009018
	// succ:  l00009018
l00008F84_ds_t:
	r15 = Mem0[r1:word32]
	// succ:  l00009014_thunk_fn00009120
l00009014_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l00009018:
	r3 = 0x00000005
	r18 = cond(r3 -u r6)
	branch Test(LT,r18) l00009018_ds_t
	// succ:  l00009018_ds_f l00009018_ds_t
l00009018_ds_f:
	r3 = 0xFFFFFFFE
	goto l00009028
	// succ:  l00009028
l00009018_ds_t:
	r3 = 0xFFFFFFFE
	// succ:  l00009024_thunk_fn00009120
l00009024_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l00009028:
	r3 = Mem0[r5 + 12:word32]
	branch Test(EQ,r3) l0000AC38
	// succ:  l00009030 l0000AC38
l00009030:
	r7 = Mem0[r5 + 4:word32]
	branch Test(EQ,r7) l00009030_ds_t
	// succ:  l00009030_ds_f l00009030_ds_t
l00009030_ds_f:
	r24 = r6 ^ 0x00000004
	goto l0000903C
	// succ:  l0000903C
l00009030_ds_t:
	r24 = r6 ^ 0x00000004
	goto l00009044
	// succ:  l00009044
l0000903C:
	r3 = Mem0[r5:word32]
	branch Test(EQ,r3) l0000AC38
	// succ:  l00009044 l0000AC38
l00009044:
	r4 = -r24
	r3 = -r9
	r4 = r4 | r24
	r3 = r3 | r9
	r10 = r4
	r10 = r4 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	branch Test(LT,r3) l000090DC
	// succ:  l000090D8 l000090DC
l000090D8:
	branch Test(NE,r10) l0000AC38
	// succ:  l000090DC l0000AC38
l000090DC:
	r3 = Mem0[r5 + 16:word32]
	branch Test(EQ,r3) l000090DC_ds_t
	// succ:  l000090DC_ds_f l000090DC_ds_t
l000090DC_ds_f:
	r23 = r6
	goto l000090E8
	// succ:  l000090E8
l000090DC_ds_t:
	r23 = r6
	goto l0000AD30
	// succ:  l0000AD30
l000090E8:
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 40:word32]
	Mem0[r19 + 40:word32] = r6
	branch Test(NE,r3) l000090E8_ds_t
	// succ:  l000090E8_ds_f l000090E8_ds_t
l000090E8_ds_f:
	r21 = r5
	goto l000090FC
	// succ:  l000090FC
l000090E8_ds_t:
	r21 = r5
	goto l0000973C
	// succ:  l0000973C
l000090FC:
	branch Test(NE,r7) l000090FC_ds_t
	// succ:  l000090FC_ds_f l000090FC_ds_t
l000090FC_ds_f:
	r3 = r6 ^ 0x00000005
	goto l00009104
	// succ:  l00009104
l000090FC_ds_t:
	r3 = r6 ^ 0x00000005
	goto l000097AC
	// succ:  l000097AC
l00009104:
	branch Test(NE,r3) l00009104_ds_t
	// succ:  l00009104_ds_f l00009104_ds_t
l00009104_ds_f:
	r5 = r6 + r6
	goto l0000910C
	// succ:  l0000910C
l00009104_ds_t:
	r5 = r6 + r6
	goto l00009110
	// succ:  l00009110
l0000910C:
	r5 = 0x00000001
	// succ:  l00009110
l00009110:
	r6 = 0x00000004
	r18 = cond(r6 - r4)
	branch Test(GE,r18) l00009110_ds_t
	// succ:  l00009110_ds_f l00009110_ds_t
l00009110_ds_f:
	r3 = r4 + r4
	goto l0000911C_thunk_fn00009120
	// succ:  l0000911C_thunk_fn00009120
l00009110_ds_t:
	r3 = r4 + r4
	goto l0000911C_thunk_fn00009120
	// succ:  l0000911C_thunk_fn00009120
l0000911C_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l0000911C_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l0000973C:
	r15 = 0x00009740
	r5 = r19
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r21 + 16:word32]
	r22 = Mem0[r19 + 20:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000975C
	// succ:  l00009758 l0000975C
l00009758:
	r22 = r3
	// succ:  l0000975C
l0000975C:
	branch Test(NE,r22) l0000975C_ds_t
	// succ:  l0000975C_ds_f l0000975C_ds_t
l0000975C_ds_f:
	r7 = r22
	goto l00009764
	// succ:  l00009764
l0000975C_ds_t:
	r7 = r22
	goto l000097C4
	// succ:  l000097C4
l00009764:
	branch Test(EQ,r3) l00009764_ds_t
	// succ:  l00009764_ds_f l00009764_ds_t
l00009764_ds_f:
	r4 = 0xFFFFFFFF
	goto l0000976C
	// succ:  l0000976C
l00009764_ds_t:
	r4 = 0xFFFFFFFF
	goto l00009824
	// succ:  l00009824
l0000976C:
	r8 = Mem0[r19 + 4:word32]
	r9 = r8 ^ 0x0000029A
	branch Test(NE,r9) l0000976C_ds_t
	// succ:  l0000976C_ds_f l0000976C_ds_t
l0000976C_ds_f:
	r11 = r8 ^ 0x0000002A
	goto l00009778_thunk_fn00009120
	// succ:  l00009778_thunk_fn00009120
l0000976C_ds_t:
	r11 = r8 ^ 0x0000002A
	// succ:  l00009778_thunk_fn00009120
l00009778_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l00009778_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l000097A4:
	r3 = 0xFFFFFFFE
	// succ:  l000097A4_thunk_fn00009120
l000097A4_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l000097AC:
	branch Test(NE,r9) l00009134
	goto l000097AC_thunk_fn00009120
	// succ:  l000097AC_thunk_fn00009120 l000097AC_thunk_fn00009120
l000097AC_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l000097AC_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l000097C4:
	r6 = Mem0[r19 + 16:word32]
	r15 = 0x000097CC
	r5 = Mem0[r21 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r19 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r3 = Mem0[r21 + 16:word32]
	r4 = Mem0[r19 + 20:word32]
	r7 = r7 + r22
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r19 + 16:word32] = r6
	r5 = r5 + r22
	r3 = r3 - r22
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r3
	r22 = r4 - r22
	branch Test(NE,r22) l000097C4_ds_t
	// succ:  l000097C4_ds_f l000097C4_ds_t
l000097C4_ds_f:
	Mem0[r19 + 20:word32] = r22
	goto l00009814
	// succ:  l00009814
l000097C4_ds_t:
	Mem0[r19 + 20:word32] = r22
	goto l00009764
	// succ:  l00009764
l00009814:
	r5 = Mem0[r19 + 8:word32]
	branch Test(NE,r3) l00009814_ds_t
	// succ:  l00009814_ds_f l00009814_ds_t
l00009814_ds_f:
	Mem0[r19 + 16:word32] = r5
	goto l00009820
	// succ:  l00009820
l00009814_ds_t:
	Mem0[r19 + 16:word32] = r5
	goto l0000976C
	// succ:  l0000976C
l00009820:
	r4 = 0xFFFFFFFF
	// succ:  l00009824
l00009824:
	Mem0[r19 + 40:word32] = r4
	// succ:  l00009824_thunk_fn00009120
l00009824_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l0000AC30:
	r3 = 0xFFFFFFFE
	return
	// succ:  fn00008E80_exit
l0000AC38:
	r4 = Mem0[0x0000B5B8:word32]
	r3 = 0xFFFFFFFE
	Mem0[r5 + 24:word32] = r4
	// succ:  l0000AC44_thunk_fn00009120
l0000AC44_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
l0000AD30:
	r4 = Mem0[0x0000B5C4:word32]
	r3 = 0xFFFFFFFB
	Mem0[r5 + 24:word32] = r4
	// succ:  l0000AD3C_thunk_fn00009120
l0000AD3C_thunk_fn00009120:
	call fn00009120 (retsize: 0;)
	return
	// succ:  fn00008E80_exit
fn00008E80_exit:


// fn00009120
// Return size: 0
define fn00009120
fn00009120_entry:
	r1 = fp
	// succ:  l00009120
l00009120:
	r3 = r3 + 0xFFFFFFF7
	// succ:  l00009124
l00009124:
	r18 = cond(r3 - r5)
	branch Test(GE,r18) l00009B00
	// succ:  l0000912C l00009B00
l0000912C:
	branch Test(EQ,r9) l0000912C_ds_t
	// succ:  l0000912C_ds_f l0000912C_ds_t
l0000912C_ds_f:
	r11 = r8 ^ 0x0000002A
	goto l00009134
	// succ:  l00009134
l0000912C_ds_t:
	r11 = r8 ^ 0x0000002A
	goto l0000977C
	// succ:  l0000977C
l00009134:
	branch Test(NE,r11) l00009134_ds_t
	// succ:  l00009134_ds_f l00009134_ds_t
l00009134_ds_f:
	r3 = 0x00000001
	goto l0000913C
	// succ:  l0000913C
l00009134_ds_t:
	r3 = 0x00000001
	// succ:  l00009138_thunk_fn00009B8C
l00009138_thunk_fn00009B8C:
	call fn00009B8C (retsize: 0;)
	return
	// succ:  fn00009120_exit
l0000913C:
	r22 = Mem0[r19 + 48:word32]
	r4 = Mem0[r19 + 136:word32]
	r22 = r22 + 0xFFFFFFF8
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + 0x00000008
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r18 = cond(r3 - r4)
	branch Test(GE,r18) l0000913C_ds_t
	// succ:  l0000913C_ds_f l0000913C_ds_t
l0000913C_ds_f:
	r22 = r22 + r22
	goto l00009180_thunk_fn00009B8C
	// succ:  l00009180_thunk_fn00009B8C
l0000913C_ds_t:
	r22 = r22 + r22
	// succ:  l00009180_thunk_fn00009B8C
l00009180_thunk_fn00009B8C:
	call fn00009B8C (retsize: 0;)
	return
	// succ:  fn00009120_exit
l00009180_thunk_fn00009B8C:
	call fn00009B8C (retsize: 0;)
	return
	// succ:  fn00009120_exit
l0000977C:
	r7 = Mem0[r21 + 4:word32]
	branch Test(NE,r7) l000097B0
	// succ:  l00009780_thunk_fn00009B8C l000097B0
l00009780_thunk_fn00009B8C:
	call fn00009B8C (retsize: 0;)
	return
	// succ:  fn00009120_exit
l000097B0:
	r4 = Mem0[0x0000B5C4:word32]
	r3 = 0xFFFFFFFB
	Mem0[r21 + 24:word32] = r4
	// succ:  l000097BC_thunk_fn00009B8C
l000097BC_thunk_fn00009B8C:
	call fn00009B8C (retsize: 0;)
	return
	// succ:  fn00009120_exit
l00009B00:
	branch Test(EQ,r10) l00009B00_ds_t
	// succ:  l00009B00_ds_f l00009B00_ds_t
l00009B00_ds_f:
	r3 = 0xFFFFFFFB
	goto l00009B08
	// succ:  l00009B08
l00009B00_ds_t:
	r3 = 0xFFFFFFFB
	goto l0000912C
	// succ:  l0000912C
l00009B08:
	r5 = Mem0[0x0000B5C4:word32]
	Mem0[r21 + 24:word32] = r5
	// succ:  l00009B10_thunk_fn00009B8C
l00009B10_thunk_fn00009B8C:
	call fn00009B8C (retsize: 0;)
	return
	// succ:  fn00009120_exit
fn00009120_exit:


// fn00009178
// Return size: 0
define fn00009178
fn00009178_entry:
	r1 = fp
	// succ:  l00009178
l00009178:
	r18 = cond(r3 - r4)
	branch Test(GE,r18) l00009178_ds_t
	// succ:  l00009178_ds_f l00009178_ds_t
l00009178_ds_f:
	r22 = r22 + r22
	goto l00009180_thunk_fn00009184
	// succ:  l00009180_thunk_fn00009184
l00009178_ds_t:
	r22 = r22 + r22
	goto l00009180_thunk_fn00009B8C
	// succ:  l00009180_thunk_fn00009B8C
l00009180_thunk_fn00009184:
	call fn00009184 (retsize: 0;)
	return
	// succ:  fn00009178_exit
l00009180_thunk_fn00009B8C:
	call fn00009B8C (retsize: 0;)
	return
	// succ:  fn00009178_exit
fn00009178_exit:


// fn00009184
// Return size: 0
define fn00009184
fn00009184_entry:
	r1 = fp
	goto l00009184_thunk_fn00009B8C
	// succ:  l00009184_thunk_fn00009B8C
l00009184:
	r3 = Mem0[r19 + 108:word32]
	goto l00009188
	// succ:  l00009188
l00009184_ds_f:
	r5 = r22
	goto l00009190
	// succ:  l00009190
l00009184_ds_t:
	r5 = r22
	goto l00009198
	// succ:  l00009198
l00009184_thunk_fn00009B8C:
	call fn00009B8C (retsize: 0;)
	return
	// succ:  fn00009184_exit
l00009188:
	branch Test(EQ,r3) l00009184_ds_t
	goto l00009184_ds_f
	// succ:  l00009184_ds_f l00009184_ds_t
l00009190:
	r22 = r22 | 0x00000020
	r5 = r22
	// succ:  l00009198
l00009198:
	r6 = 0x0000001F
	r15 = 0x000091A0
	r22 = r22 + 0x0000001F
	call fn00008030 (retsize: 0;)
	r4 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r3 = r22 - r3
	r6 = r4 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	r6 = r3
	r6 = r3 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	v11 = SLICE(r6, byte, 0)
	Mem0[r4 + r5:byte] = v11
	r4 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r4 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v12 = SLICE(r3, byte, 0)
	Mem0[r4 + r5:byte] = v12
	r3 = Mem0[r19 + 108:word32]
	branch Test(EQ,r3) l00009198_ds_t
	// succ:  l00009198_ds_f l00009198_ds_t
l00009198_ds_f:
	r7 = 0x00000000
	goto l00009204
	// succ:  l00009204
l00009198_ds_t:
	r7 = 0x00000000
	goto l00009328
	// succ:  l00009328
l00009204:
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r21 + 48:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	r6 = r4
	r6 = r4 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	v15 = SLICE(r6, byte, 0)
	Mem0[r3 + r5:byte] = v15
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r4
	r6 = r4 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r4 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r4
	v16 = SLICE(r6, byte, 0)
	Mem0[r3 + r5:byte] = v16
	r3 = Mem0[r19 + 20:word32]
	v17 = Mem0[r21 + 50:word16]
	r4 = (word32) v17
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	r6 = r4
	r6 = r4 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	v18 = SLICE(r6, byte, 0)
	Mem0[r3 + r5:byte] = v18
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v19 = SLICE(r4, byte, 0)
	Mem0[r3 + r5:byte] = v19
	// succ:  l00009328
l00009328:
	r5 = r7
	r15 = 0x00009330
	r6 = r7
	call fn00005318 (retsize: 0;)
	r25 = Mem0[r21 + 28:word32]
	Mem0[r21 + 48:word32] = r3
	r5 = 0x00000071
	Mem0[r19 + 4:word32] = r5
	r15 = 0x0000934C
	r5 = r25
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r25 + 20:word32]
	r22 = Mem0[r21 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(LT,r18) l00009B18
	// succ:  l00009364 l00009B18
l00009364:
	branch Test(NE,r22) l00009364_ds_t
	// succ:  l00009364_ds_f l00009364_ds_t
l00009364_ds_f:
	r7 = r22
	goto l00009368_thunk_fn00009B74
	// succ:  l00009368_thunk_fn00009B74
l00009364_ds_t:
	r7 = r22
	goto l00009B24
	// succ:  l00009B24
l00009368_thunk_fn00009B74:
	call fn00009B74 (retsize: 0;)
	return
	// succ:  fn00009184_exit
l00009B18:
	r22 = r3
	branch Test(EQ,r22) l00009B18_ds_t
	// succ:  l00009B18_ds_f l00009B18_ds_t
l00009B18_ds_f:
	r7 = r22
	goto l00009B24
	// succ:  l00009B24
l00009B18_ds_t:
	r7 = r22
	// succ:  l00009B20_thunk_fn00009B74
l00009B20_thunk_fn00009B74:
	call fn00009B74 (retsize: 0;)
	return
	// succ:  fn00009184_exit
l00009B24:
	r6 = Mem0[r25 + 16:word32]
	r15 = 0x00009B2C
	r5 = Mem0[r21 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r25 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r4 = Mem0[r21 + 16:word32]
	r3 = Mem0[r25 + 20:word32]
	r7 = r7 + r22
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r25 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l00009B24_ds_t
	// succ:  l00009B24_ds_f l00009B24_ds_t
l00009B24_ds_f:
	Mem0[r25 + 20:word32] = r22
	goto l00009B70_thunk_fn00009B74
	// succ:  l00009B70_thunk_fn00009B74
l00009B24_ds_t:
	Mem0[r25 + 20:word32] = r22
	goto l00009B70_thunk_fn00009B74
	// succ:  l00009B70_thunk_fn00009B74
l00009B70_thunk_fn00009B74:
	call fn00009B74 (retsize: 0;)
	return
	// succ:  fn00009184_exit
l00009B70_thunk_fn00009B74:
	call fn00009B74 (retsize: 0;)
	return
	// succ:  fn00009184_exit
fn00009184_exit:


// fn00009408
// Return size: 0
define fn00009408
fn00009408_entry:
	r1 = fp
	goto l00009408
	// succ:  l00009408
l00008EE4:
	r15 = Mem0[r1:word32]
	// succ:  l00008EE8
l00008EE8:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r24 = Mem0[r1 + 48:word32]
	r25 = Mem0[r1 + 52:word32]
	r26 = Mem0[r1 + 56:word32]
	r27 = Mem0[r1 + 60:word32]
	r28 = Mem0[r1 + 64:word32]
	r29 = Mem0[r1 + 68:word32]
	r30 = Mem0[r1 + 72:word32]
	r1 = r1 + 0x0000004C
	return
	// succ:  fn00009408_exit
l00009408:
	branch Test(EQ,r4) l00009408_ds_t
	// succ:  l00009408_ds_f l00009408_ds_t
l00009408_ds_f:
	r3 = r3 ^ 0x00000001
	goto l00009410
	// succ:  l00009410
l00009408_ds_t:
	r3 = r3 ^ 0x00000001
	goto l0000A0B0
	// succ:  l0000A0B0
l00009410:
	branch Test(NE,r3) l00009410_ds_t
	// succ:  l00009410_ds_f l00009410_ds_t
l00009410_ds_f:
	r3 = r23 ^ 0x00000001
	goto l00009418
	// succ:  l00009418
l00009410_ds_t:
	r3 = r23 ^ 0x00000001
	goto l000094D4
	// succ:  l000094D4
l00009418:
	branch Test(EQ,r3) l00009418_ds_t
	// succ:  l00009418_ds_f l00009418_ds_t
l00009418_ds_f:
	r3 = r23 ^ 0x00000005
	goto l00009420
	// succ:  l00009420
l00009418_ds_t:
	r3 = r23 ^ 0x00000005
	goto l0000A758
	// succ:  l0000A758
l00009420:
	branch Test(EQ,r3) l00009420_ds_t
	// succ:  l00009420_ds_f l00009420_ds_t
l00009420_ds_f:
	r8 = 0x00000000
	goto l00009428
	// succ:  l00009428
l00009420_ds_t:
	r8 = 0x00000000
	goto l00009448
	// succ:  l00009448
l00009428:
	r7 = r8
	r6 = r8
	r5 = r19
	r15 = 0x00009438
	r23 = r23 ^ 0x00000003
	call fn0000371C (retsize: 0;)
	branch Test(EQ,r23) l00009428_ds_t
	// succ:  l00009428_ds_f l00009428_ds_t
l00009428_ds_f:
	r6 = r23
	goto l00009448
	// succ:  l00009448
l00009428_ds_t:
	r6 = r23
	goto l0000AF30
	// succ:  l0000AF30
l00009448:
	r23 = Mem0[r21 + 28:word32]
	// succ:  l0000944C
l0000944C:
	r15 = 0x00009450
	r5 = r23
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r21 + 16:word32]
	r22 = Mem0[r23 + 20:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000946C
	// succ:  l00009468 l0000946C
l00009468:
	r22 = r3
	// succ:  l0000946C
l0000946C:
	branch Test(EQ,r22) l0000946C_ds_t
	// succ:  l0000946C_ds_f l0000946C_ds_t
l0000946C_ds_f:
	r7 = r22
	goto l00009474
	// succ:  l00009474
l0000946C_ds_t:
	r7 = r22
	goto l000094CC
	// succ:  l000094CC
l00009474:
	r6 = Mem0[r23 + 16:word32]
	r15 = 0x0000947C
	r5 = Mem0[r21 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r23 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r3 = Mem0[r21 + 16:word32]
	r4 = Mem0[r23 + 20:word32]
	r7 = r7 + r22
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r23 + 16:word32] = r6
	r5 = r5 + r22
	r3 = r3 - r22
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r3
	r22 = r4 - r22
	branch Test(NE,r22) l00009474_ds_t
	// succ:  l00009474_ds_f l00009474_ds_t
l00009474_ds_f:
	Mem0[r23 + 20:word32] = r22
	goto l000094C4
	// succ:  l000094C4
l00009474_ds_t:
	Mem0[r23 + 20:word32] = r22
	goto l000094CC
	// succ:  l000094CC
l000094C4:
	r4 = Mem0[r23 + 8:word32]
	Mem0[r23 + 16:word32] = r4
	// succ:  l000094CC
l000094CC:
	branch Test(EQ,r3) l000094CC_ds_t
	// succ:  l000094CC_ds_f l000094CC_ds_t
l000094CC_ds_f:
	r5 = 0xFFFFFFFF
	goto l000094D4
	// succ:  l000094D4
l000094CC_ds_t:
	r5 = 0xFFFFFFFF
	goto l0000A0BC
	// succ:  l0000A0BC
l000094D4:
	branch Test(NE,r24) l000094D4_ds_t
	// succ:  l000094D4_ds_f l000094D4_ds_t
l000094D4_ds_f:
	r3 = 0x00000000
	goto l000094DC
	// succ:  l000094DC
l000094D4_ds_t:
	r3 = 0x00000000
	goto l00008EE4
	// succ:  l00008EE4
l000094DC:
	r3 = Mem0[r19 + 24:word32]
	branch Test(LE,r3) l0000A674
	// succ:  l000094E4 l0000A674
l000094E4:
	r4 = Mem0[r19 + 20:word32]
	r5 = Mem0[r21 + 48:word32]
	r3 = r3 ^ 0x00000002
	r7 = r4 + 0x00000001
	Mem0[r19 + 20:word32] = r7
	branch Test(EQ,r3) l000094E4_ds_t
	// succ:  l000094E4_ds_f l000094E4_ds_t
l000094E4_ds_f:
	r6 = Mem0[r19 + 8:word32]
	goto l00009500
	// succ:  l00009500
l000094E4_ds_t:
	r6 = Mem0[r19 + 8:word32]
	goto l0000AD44
	// succ:  l0000AD44
l00009500:
	r3 = r5
	r3 = r5 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	v17 = SLICE(r3, byte, 0)
	Mem0[r4 + r6:byte] = v17
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r6 = r5
	r6 = r5 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	v18 = SLICE(r6, byte, 0)
	Mem0[r3 + r4:byte] = v18
	r3 = Mem0[r19 + 20:word32]
	v19 = Mem0[r21 + 50:word16]
	r4 = (word32) v19
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	r6 = r4
	r6 = r4 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	v20 = SLICE(r6, byte, 0)
	Mem0[r3 + r5:byte] = v20
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v21 = SLICE(r4, byte, 0)
	Mem0[r3 + r5:byte] = v21
	// succ:  l00009610
l00009610:
	r23 = Mem0[r21 + 28:word32]
	r15 = 0x00009618
	r5 = r23
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r23 + 20:word32]
	r22 = Mem0[r21 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l00009634
	// succ:  l00009630 l00009634
l00009630:
	r22 = r3
	// succ:  l00009634
l00009634:
	branch Test(EQ,r22) l00009634_ds_t
	// succ:  l00009634_ds_f l00009634_ds_t
l00009634_ds_f:
	r7 = r22
	goto l0000963C
	// succ:  l0000963C
l00009634_ds_t:
	r7 = r22
	goto l00009694
	// succ:  l00009694
l0000963C:
	r6 = Mem0[r23 + 16:word32]
	r15 = 0x00009644
	r5 = Mem0[r21 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r23 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r4 = Mem0[r21 + 16:word32]
	r3 = Mem0[r23 + 20:word32]
	r7 = r7 + r22
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r23 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l0000963C_ds_t
	// succ:  l0000963C_ds_f l0000963C_ds_t
l0000963C_ds_f:
	Mem0[r23 + 20:word32] = r22
	goto l0000968C
	// succ:  l0000968C
l0000963C_ds_t:
	Mem0[r23 + 20:word32] = r22
	goto l00009694
	// succ:  l00009694
l0000968C:
	r3 = Mem0[r23 + 8:word32]
	Mem0[r23 + 16:word32] = r3
	// succ:  l00009694
l00009694:
	r3 = Mem0[r19 + 24:word32]
	branch Test(LE,r3) l000096A4
	// succ:  l0000969C l000096A4
l0000969C:
	r3 = -r3
	Mem0[r19 + 24:word32] = r3
	// succ:  l000096A4
l000096A4:
	r3 = Mem0[r19 + 20:word32]
	r4 = -r3
	r4 = r4 | r3
	r4 = r4 ^ 0xFFFFFFFF
	r3 = r4
	r3 = r4 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r15 = Mem0[r1:word32]
	goto l00008EE8
	// succ:  l00008EE8
l00009FD4:
	r3 = 0x00000000
	goto l00008EE4
	// succ:  l00008EE4
l0000A0B0:
	r3 = Mem0[r21 + 16:word32]
	// succ:  l0000A0B4
l0000A0B4:
	branch Test(NE,r3) l00009FD4
	// succ:  l0000A0B8 l00009FD4
l0000A0B8:
	r5 = 0xFFFFFFFF
	// succ:  l0000A0BC
l0000A0BC:
	Mem0[r19 + 40:word32] = r5
	goto l00008EE4
	// succ:  l00008EE4
l0000A674:
	r3 = 0x00000001
	goto l00008EE4
	// succ:  l00008EE4
l0000A758:
	r15 = 0x0000A75C
	r5 = r19
	call fn00003A60 (retsize: 0;)
	r23 = Mem0[r21 + 28:word32]
	goto l0000944C
	// succ:  l0000944C
l0000AD44:
	v28 = SLICE(r5, byte, 0)
	Mem0[r4 + r6:byte] = v28
	r3 = Mem0[r19 + 20:word32]
	r6 = Mem0[r21 + 48:word32]
	r4 = Mem0[r19 + 8:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	r5 = r6
	r5 = r6 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	v29 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v29
	r3 = Mem0[r19 + 20:word32]
	v30 = Mem0[r21 + 48:word16]
	r5 = (word32) v30
	r4 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v31 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v31
	r3 = Mem0[r19 + 20:word32]
	v32 = Mem0[r21 + 48:byte]
	r5 = (word32) v32
	r4 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v33 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v33
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r21 + 8:word32]
	r4 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v34 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v34
	r3 = Mem0[r19 + 20:word32]
	r6 = Mem0[r21 + 8:word32]
	r4 = Mem0[r19 + 8:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	r5 = r6
	r5 = r6 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	v35 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v35
	r3 = Mem0[r19 + 20:word32]
	v36 = Mem0[r21 + 8:word16]
	r5 = (word32) v36
	r4 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v37 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v37
	v38 = Mem0[r21 + 8:byte]
	r5 = (word32) v38
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v39 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v39
	goto l00009610
	// succ:  l00009610
l0000AF30:
	r3 = Mem0[r19 + 76:word32]
	r4 = Mem0[r19 + 68:word32]
	r3 = r3 + 0xFFFFFFFF
	r3 = r3 + r3
	r7 = r3
	r5 = r4
	r15 = 0x0000AF50
	v40 = SLICE(r23, word16, 0)
	Mem0[r3 + r4:word16] = v40
	call fn00008C64 (retsize: 0;)
	r3 = Mem0[r19 + 116:word32]
	branch Test(NE,r3) l00009448
	// succ:  l0000AF60 l00009448
l0000AF60:
	Mem0[r19 + 108:word32] = r3
	Mem0[r19 + 92:word32] = r3
	Mem0[r19 + 5812:word32] = r3
	goto l00009448
	// succ:  l00009448
fn00009408_exit:


// fn00009980
// Return size: 0
define fn00009980
fn00009980_entry:
	r1 = fp
	// succ:  l00009980
l00009980:
	Mem0[r19 + 20:word32] = r6
	v8 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v8
	r5 = Mem0[r19 + 28:word32]
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r6 = Mem0[r5 + 4:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	r5 = r6
	r5 = r6 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	v10 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v10
	r5 = Mem0[r19 + 28:word32]
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	v11 = Mem0[r5 + 4:word16]
	r5 = (word32) v11
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v12 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v12
	r5 = Mem0[r19 + 28:word32]
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	v13 = Mem0[r5 + 4:byte]
	r5 = (word32) v13
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v14 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v14
	r3 = Mem0[r19 + 132:word32]
	r4 = r3 ^ 0x00000009
	branch Test(EQ,r4) l00009980_ds_t
	// succ:  l00009980_ds_f l00009980_ds_t
l00009980_ds_f:
	r4 = 0x00000001
	goto l00009A0C_thunk_fn00009A10
	// succ:  l00009A0C_thunk_fn00009A10
l00009980_ds_t:
	r4 = 0x00000001
	goto l00009A0C_thunk_fn0000A774
	// succ:  l00009A0C_thunk_fn0000A774
l00009A0C_thunk_fn00009A10:
	call fn00009A10 (retsize: 0;)
	return
	// succ:  fn00009980_exit
l00009A0C_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009980_exit
fn00009980_exit:


// fn00009A10
// Return size: 0
define fn00009A10
fn00009A10_entry:
	r1 = fp
	// succ:  l00009A10
l00009A10:
	r5 = Mem0[r19 + 136:word32]
	r18 = cond(r4 - r5)
	branch Test(GE,r18) l0000A654
	// succ:  l00009A1C l0000A654
l00009A1C:
	r6 = 0x00000004
	// succ:  l00009A1C_thunk_fn0000A774
l00009A1C_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009A10_exit
l0000A654:
	r18 = cond(r4 - r3)
	branch Test(LT,r18) l0000A654_ds_t
	// succ:  l0000A654_ds_f l0000A654_ds_t
l0000A654_ds_f:
	r6 = 0x00000000
	goto l0000A660
	// succ:  l0000A660
l0000A654_ds_t:
	r6 = 0x00000000
	// succ:  l0000A65C_thunk_fn0000A774
l0000A65C_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009A10_exit
l0000A660:
	r6 = 0x00000004
	// succ:  l0000A660_thunk_fn0000A774
l0000A660_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009A10_exit
fn00009A10_exit:


// fn00009B70
// Return size: 0
define fn00009B70
fn00009B70_entry:
	r1 = fp
	// succ:  l00009B70
l00009B70:
	Mem0[r25 + 20:word32] = r22
	// succ:  l00009B70_thunk_fn00009B74
l00009B70_thunk_fn00009B74:
	call fn00009B74 (retsize: 0;)
	return
	// succ:  fn00009B70_exit
fn00009B70_exit:


// fn00009B74
// Return size: 0
define fn00009B74
fn00009B74_entry:
	r1 = fp
	goto l00009B74
	// succ:  l00009B74
l0000936C:
	r3 = Mem0[r19 + 20:word32]
	branch Test(NE,r3) l0000936C_ds_t
	// succ:  l0000936C_ds_f l0000936C_ds_t
l0000936C_ds_f:
	r4 = 0xFFFFFFFF
	goto l00009378
	// succ:  l00009378
l0000936C_ds_t:
	r4 = 0xFFFFFFFF
	goto l00009B80
	// succ:  l00009B80
l00009378:
	r8 = Mem0[r19 + 4:word32]
	// succ:  l0000937C
l0000937C:
	r7 = r8 ^ 0x00000039
	branch Test(EQ,r7) l0000982C
	// succ:  l00009384 l0000982C
l00009384:
	r3 = r8 ^ 0x00000045
	branch Test(EQ,r3) l00009384_ds_t
	// succ:  l00009384_ds_f l00009384_ds_t
l00009384_ds_f:
	r3 = r8 ^ 0x00000049
	goto l00009390
	// succ:  l00009390
l00009384_ds_t:
	r3 = r8 ^ 0x00000049
	goto l00009E78
	// succ:  l00009E78
l00009390:
	branch Test(EQ,r3) l00009390_ds_t
	// succ:  l00009390_ds_f l00009390_ds_t
l00009390_ds_f:
	r3 = r8 ^ 0x0000005B
	goto l00009398
	// succ:  l00009398
l00009390_ds_t:
	r3 = r8 ^ 0x0000005B
	goto l0000A76C
	// succ:  l0000A76C
l00009398:
	branch Test(EQ,r3) l00009398_ds_t
	// succ:  l00009398_ds_f l00009398_ds_t
l00009398_ds_f:
	r8 = r8 ^ 0x00000067
	goto l000093A0
	// succ:  l000093A0
l00009398_ds_t:
	r8 = r8 ^ 0x00000067
	goto l0000AD1C
	// succ:  l0000AD1C
l000093A0:
	branch Test(EQ,r8) l0000AD24
	// succ:  l000093A0_thunk_fn0000A774 l0000AD24
l000093A0_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009B74_exit
l0000982C:
	r5 = r7
	r15 = 0x00009834
	r6 = r7
	call fn00007044 (retsize: 0;)
	r4 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	Mem0[r21 + 48:word32] = r3
	r3 = r4 + 0x00000001
	Mem0[r19 + 20:word32] = r3
	r3 = 0x0000001F
	v59 = SLICE(r3, byte, 0)
	Mem0[r4 + r5:byte] = v59
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	r5 = 0xFFFFFF8B
	v60 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v60
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	r5 = 0x00000008
	v61 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v61
	r4 = Mem0[r19 + 28:word32]
	branch Test(EQ,r4) l0000A5CC
	// succ:  l00009890 l0000A5CC
l00009890:
	r3 = Mem0[r4:word32]
	r6 = Mem0[r4 + 44:word32]
	r5 = -r3
	r5 = r5 | r3
	r3 = r5
	r3 = r5 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	branch Test(EQ,r6) l00009928
	// succ:  l00009924 l00009928
l00009924:
	r3 = r3 + 0x00000002
	// succ:  l00009928
l00009928:
	r5 = Mem0[r4 + 16:word32]
	branch Test(EQ,r5) l00009938
	// succ:  l00009930 l00009938
l00009930:
	r3 = r3 + 0x00000004
	r3 = r3 & 0x000000FF
	// succ:  l00009938
l00009938:
	r5 = Mem0[r4 + 28:word32]
	branch Test(EQ,r5) l00009948
	// succ:  l00009940 l00009948
l00009940:
	r3 = r3 + 0x00000008
	r3 = r3 & 0x000000FF
	// succ:  l00009948
l00009948:
	r4 = Mem0[r4 + 36:word32]
	branch Test(EQ,r4) l00009958
	// succ:  l00009950 l00009958
l00009950:
	r3 = r3 + 0x00000010
	r3 = r3 & 0x000000FF
	// succ:  l00009958
l00009958:
	r4 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r4 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v62 = SLICE(r3, byte, 0)
	Mem0[r4 + r5:byte] = v62
	r5 = Mem0[r19 + 28:word32]
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r5 = Mem0[r5 + 4:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v63 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v63
	r5 = Mem0[r19 + 28:word32]
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r6 = Mem0[r5 + 4:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	r5 = r6
	r5 = r6 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	v64 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v64
	r5 = Mem0[r19 + 28:word32]
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	v65 = Mem0[r5 + 4:word16]
	r5 = (word32) v65
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v66 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v66
	r5 = Mem0[r19 + 28:word32]
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	v67 = Mem0[r5 + 4:byte]
	r5 = (word32) v67
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v68 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v68
	r3 = Mem0[r19 + 132:word32]
	r4 = r3 ^ 0x00000009
	branch Test(EQ,r4) l00009958_ds_t
	// succ:  l00009958_ds_f l00009958_ds_t
l00009958_ds_f:
	r4 = 0x00000001
	goto l00009A0C_thunk_fn00009A10
	// succ:  l00009A0C_thunk_fn00009A10
l00009958_ds_t:
	r4 = 0x00000001
	goto l00009A0C_thunk_fn0000A774
	// succ:  l00009A0C_thunk_fn0000A774
l00009A0C_thunk_fn00009A10:
	call fn00009A10 (retsize: 0;)
	return
	// succ:  fn00009B74_exit
l00009A0C_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009B74_exit
l00009B74:
	r3 = Mem0[r25 + 8:word32]
	Mem0[r25 + 16:word32] = r3
	goto l0000936C
	// succ:  l0000936C
l00009B80:
	Mem0[r19 + 40:word32] = r4
	r3 = 0x00000000
	// succ:  l00009B84_thunk_fn00009408
l00009B84_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn00009B74_exit
l00009E78:
	r4 = Mem0[r19 + 28:word32]
	// succ:  l00009E78_thunk_fn0000A774
l00009E78_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009B74_exit
l0000A5CC:
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v69 = SLICE(r4, byte, 0)
	Mem0[r3 + r5:byte] = v69
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v70 = SLICE(r4, byte, 0)
	Mem0[r3 + r5:byte] = v70
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v71 = SLICE(r4, byte, 0)
	Mem0[r3 + r5:byte] = v71
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v72 = SLICE(r4, byte, 0)
	Mem0[r3 + r5:byte] = v72
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v73 = SLICE(r4, byte, 0)
	Mem0[r3 + r5:byte] = v73
	r3 = Mem0[r19 + 132:word32]
	r5 = r3 ^ 0x00000009
	branch Test(EQ,r5) l0000A67C
	// succ:  l0000A63C l0000A67C
l0000A63C:
	r6 = Mem0[r19 + 136:word32]
	r5 = 0x00000001
	r18 = cond(r5 - r6)
	branch Test(GE,r18) l0000A748
	// succ:  l0000A64C l0000A748
l0000A64C:
	r4 = 0x00000004
	goto l0000A680
	// succ:  l0000A680
l0000A67C:
	r4 = 0x00000002
	// succ:  l0000A680
l0000A680:
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v74 = SLICE(r4, byte, 0)
	Mem0[r3 + r5:byte] = v74
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	r5 = 0x00000003
	v75 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v75
	r25 = Mem0[r21 + 28:word32]
	r3 = 0x00000071
	Mem0[r19 + 4:word32] = r3
	r15 = 0x0000A6BC
	r5 = r25
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r25 + 20:word32]
	r22 = Mem0[r21 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000A6D8
	// succ:  l0000A6D4 l0000A6D8
l0000A6D4:
	r22 = r3
	// succ:  l0000A6D8
l0000A6D8:
	branch Test(EQ,r22) l0000A6D8_ds_t
	// succ:  l0000A6D8_ds_f l0000A6D8_ds_t
l0000A6D8_ds_f:
	r7 = r22
	goto l0000A6E0
	// succ:  l0000A6E0
l0000A6D8_ds_t:
	r7 = r22
	goto l0000A738
	// succ:  l0000A738
l0000A6E0:
	r6 = Mem0[r25 + 16:word32]
	r15 = 0x0000A6E8
	r5 = Mem0[r21 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r25 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r4 = Mem0[r21 + 16:word32]
	r3 = Mem0[r25 + 20:word32]
	r7 = r7 + r22
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r25 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l0000A6E0_ds_t
	// succ:  l0000A6E0_ds_f l0000A6E0_ds_t
l0000A6E0_ds_f:
	Mem0[r25 + 20:word32] = r22
	goto l0000A730
	// succ:  l0000A730
l0000A6E0_ds_t:
	Mem0[r25 + 20:word32] = r22
	goto l0000A738
	// succ:  l0000A738
l0000A730:
	r4 = Mem0[r25 + 8:word32]
	Mem0[r25 + 16:word32] = r4
	// succ:  l0000A738
l0000A738:
	r3 = Mem0[r19 + 20:word32]
	branch Test(NE,r3) l00009FC4
	goto l0000A740
	// succ:  l0000A740 l0000A73C_thunk_fn0000A774
l0000A73C_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009B74_exit
l0000A740:
	r8 = Mem0[r19 + 4:word32]
	goto l00009384
	// succ:  l00009384
l0000A748:
	r18 = cond(r5 - r3)
	branch Test(LT,r18) l0000A680
	// succ:  l0000A750 l0000A680
l0000A750:
	r4 = 0x00000004
	goto l0000A680
	// succ:  l0000A680
l0000A76C:
	r4 = Mem0[r19 + 28:word32]
	// succ:  l0000A76C_thunk_fn0000A774
l0000A76C_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009B74_exit
l0000AD1C:
	r4 = Mem0[r19 + 28:word32]
	// succ:  l0000AD1C_thunk_fn0000A774
l0000AD1C_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009B74_exit
l0000AD24:
	r3 = Mem0[r19 + 28:word32]
	r3 = Mem0[r3 + 44:word32]
	// succ:  l0000AD28_thunk_fn0000A774
l0000AD28_thunk_fn0000A774:
	call fn0000A774 (retsize: 0;)
	return
	// succ:  fn00009B74_exit
fn00009B74_exit:


// fn00009B8C
// Return size: 0
define fn00009B8C
fn00009B8C_entry:
	r1 = fp
	// succ:  l00009B8C
l00009B8C:
	r4 = Mem0[r19 + 132:word32]
	r18 = cond(r3 - r4)
	branch Test(GE,r18) l00009B8C_ds_t
	// succ:  l00009B8C_ds_f l00009B8C_ds_t
l00009B8C_ds_f:
	r3 = 0x00000005
	goto l00009B9C
	// succ:  l00009B9C
l00009B8C_ds_t:
	r3 = 0x00000005
	// succ:  l00009B98_thunk_fn00009184
l00009B98_thunk_fn00009184:
	call fn00009184 (retsize: 0;)
	return
	// succ:  fn00009B8C_exit
l00009B9C:
	r18 = cond(r3 - r4)
	branch Test(GE,r18) l00009B9C_ds_t
	// succ:  l00009B9C_ds_f l00009B9C_ds_t
l00009B9C_ds_f:
	r4 = r4 ^ 0x00000006
	goto l00009BA8
	// succ:  l00009BA8
l00009B9C_ds_t:
	r4 = r4 ^ 0x00000006
	goto l0000A668
	// succ:  l0000A668
l00009BA8:
	branch Test(EQ,r4) l0000AE3C
	// succ:  l00009BAC l0000AE3C
l00009BAC:
	r22 = r22 | 0x000000C0
	r3 = Mem0[r19 + 108:word32]
	// succ:  l00009BB0_thunk_fn00009184
l00009BB0_thunk_fn00009184:
	call fn00009184 (retsize: 0;)
	return
	// succ:  fn00009B8C_exit
l0000A668:
	r22 = r22 | 0x00000040
	r3 = Mem0[r19 + 108:word32]
	// succ:  l0000A66C_thunk_fn00009184
l0000A66C_thunk_fn00009184:
	call fn00009184 (retsize: 0;)
	return
	// succ:  fn00009B8C_exit
l0000AE3C:
	r22 = r22 | 0x00000080
	r3 = Mem0[r19 + 108:word32]
	// succ:  l0000AE40_thunk_fn00009184
l0000AE40_thunk_fn00009184:
	call fn00009184 (retsize: 0;)
	return
	// succ:  fn00009B8C_exit
fn00009B8C_exit:


// fn00009E48
// Return size: 0
define fn00009E48
fn00009E48_entry:
	r1 = fp
	// succ:  l00009E48
l00009E48:
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r4 = r3 & 0xFFFFFFFD
	// succ:  l00009E70_thunk_fn00009408
l00009E70_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn00009E48_exit
fn00009E48_exit:


// fn0000A774
// Return size: 0
define fn0000A774
fn0000A774_entry:
	r1 = fp
	goto l0000A774
	// succ:  l0000A774
l000093A4:
	r7 = Mem0[r21 + 4:word32]
	branch Test(EQ,r7) l00009784
	// succ:  l000093AC l00009784
l000093AC:
	r4 = Mem0[r19 + 132:word32]
	branch Test(EQ,r4) l000093AC_ds_t
	// succ:  l000093AC_ds_f l000093AC_ds_t
l000093AC_ds_f:
	r6 = r23
	goto l000093B8
	// succ:  l000093B8
l000093AC_ds_t:
	r6 = r23
	goto l00009AF0
	// succ:  l00009AF0
l000093B8:
	r3 = Mem0[r19 + 136:word32]
	r25 = r3 ^ 0x00000002
	branch Test(EQ,r25) l000093B8_ds_t
	// succ:  l000093B8_ds_f l000093B8_ds_t
l000093B8_ds_f:
	r3 = r3 ^ 0x00000003
	goto l000093C8
	// succ:  l000093C8
l000093B8_ds_t:
	r3 = r3 ^ 0x00000003
	goto l00009C78
	// succ:  l00009C78
l000093C8:
	branch Test(EQ,r3) l000093C8_ds_t
	// succ:  l000093C8_ds_f l000093C8_ds_t
l000093C8_ds_f:
	r3 = r4 + r4
	goto l000093D0
	// succ:  l000093D0
l000093C8_ds_t:
	r3 = r4 + r4
	goto l0000A77C
	// succ:  l0000A77C
l000093D0:
	r3 = r3 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + 0xFFFF9DB4
	r3 = Mem0[r3 + 8:word32]
	r6 = r23
	r15 = 0x000093EC
	r5 = r19
	call 0x000093EC + r3 (retsize: 0;)
	r4 = r3 + 0xFFFFFFFE
	goto l000093F8
	// succ:  l000093F8
l000093D0_ds_f:
	r4 = r3 & 0xFFFFFFFD
	goto l00009404_thunk_fn00009408
	// succ:  l00009404_thunk_fn00009408
l000093D0_ds_t:
	r4 = r3 & 0xFFFFFFFD
	goto l0000A3BC
	// succ:  l0000A3BC
l000093F8:
	r5 = 0x00000001
	r18 = cond(r5 -u r4)
	branch Test(GE,r18) l000093D0_ds_t
	goto l000093D0_ds_f
	// succ:  l000093D0_ds_f l000093D0_ds_t
l00009404_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l00009784:
	r3 = Mem0[r19 + 116:word32]
	branch Test(NE,r3) l000093AC
	// succ:  l0000978C l000093AC
l0000978C:
	branch Test(EQ,r23) l0000978C_ds_t
	// succ:  l0000978C_ds_f l0000978C_ds_t
l0000978C_ds_f:
	r3 = 0x00000000
	goto l00009794
	// succ:  l00009794
l0000978C_ds_t:
	r3 = 0x00000000
	// succ:  l00009790_thunk_fn00009408
l00009790_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l00009794:
	r3 = Mem0[r19 + 4:word32]
	r3 = r3 ^ 0x0000029A
	branch Test(NE,r3) l000093AC
	// succ:  l000097A0 l000093AC
l000097A0:
	// succ:  l000097A0_thunk_fn00009408
l000097A0_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l00009A20:
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	v8 = SLICE(r6, byte, 0)
	Mem0[r3 + r4:byte] = v8
	r5 = Mem0[r19 + 28:word32]
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r5 = Mem0[r5 + 12:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v9 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v9
	r4 = Mem0[r19 + 28:word32]
	r3 = Mem0[r4 + 16:word32]
	branch Test(EQ,r3) l00009AB8
	// succ:  l00009A5C l00009AB8
l00009A5C:
	r3 = Mem0[r19 + 20:word32]
	r5 = Mem0[r4 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v10 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v10
	r5 = Mem0[r19 + 28:word32]
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r6 = Mem0[r5 + 20:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	r5 = r6
	r5 = r6 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	v12 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v12
	r4 = Mem0[r19 + 28:word32]
	// succ:  l00009AB8
l00009AB8:
	r3 = Mem0[r4 + 44:word32]
	branch Test(EQ,r3) l00009AB8_ds_t
	// succ:  l00009AB8_ds_f l00009AB8_ds_t
l00009AB8_ds_f:
	r3 = 0x00000045
	goto l00009AC4
	// succ:  l00009AC4
l00009AB8_ds_t:
	r3 = 0x00000045
	goto l00009AE4
	// succ:  l00009AE4
l00009AC4:
	r7 = Mem0[r19 + 20:word32]
	r6 = Mem0[r19 + 8:word32]
	r15 = 0x00009AD0
	r5 = Mem0[r21 + 48:word32]
	call fn00007044 (retsize: 0;)
	r4 = Mem0[r19 + 28:word32]
	Mem0[r21 + 48:word32] = r3
	r3 = 0x00000045
	// succ:  l00009AE4
l00009AE4:
	Mem0[r19 + 32:word32] = r0
	Mem0[r19 + 4:word32] = r3
	goto l00009E7C
	// succ:  l00009E7C
l00009AF0:
	r15 = 0x00009AF0
	r5 = r19
	call fn00005F20 (retsize: 0;)
	r4 = r3 + 0xFFFFFFFE
	goto l000093F8
	// succ:  l000093F8
l00009BB8:
	r7 = Mem0[r19 + 92:word32]
	branch Test(LT,r7) l00009BB8_ds_t
	// succ:  l00009BB8_ds_f l00009BB8_ds_t
l00009BB8_ds_f:
	r8 = r25
	goto l00009BC4
	// succ:  l00009BC4
l00009BB8_ds_t:
	r8 = r25
	goto l00009BCC
	// succ:  l00009BCC
l00009BC4:
	r6 = Mem0[r19 + 56:word32]
	r6 = r6 + r7
	// succ:  l00009BCC
l00009BCC:
	r5 = r19
	r15 = 0x00009BD4
	r7 = r3 - r7
	call fn00003C90 (retsize: 0;)
	r26 = Mem0[r19:word32]
	r4 = Mem0[r19 + 108:word32]
	r27 = Mem0[r26 + 28:word32]
	Mem0[r19 + 92:word32] = r4
	r15 = 0x00009BF0
	r5 = r27
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r27 + 20:word32]
	r22 = Mem0[r26 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l00009C0C
	// succ:  l00009C08 l00009C0C
l00009C08:
	r22 = r3
	// succ:  l00009C0C
l00009C0C:
	branch Test(EQ,r22) l00009C0C_ds_t
	// succ:  l00009C0C_ds_f l00009C0C_ds_t
l00009C0C_ds_f:
	r7 = r22
	goto l00009C14
	// succ:  l00009C14
l00009C0C_ds_t:
	r7 = r22
	goto l00009C6C
	// succ:  l00009C6C
l00009C14:
	r6 = Mem0[r27 + 16:word32]
	r15 = 0x00009C1C
	r5 = Mem0[r26 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r26 + 12:word32]
	r6 = Mem0[r27 + 16:word32]
	r5 = Mem0[r26 + 20:word32]
	r4 = Mem0[r26 + 16:word32]
	r3 = Mem0[r27 + 20:word32]
	r7 = r7 + r22
	Mem0[r26 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r27 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r26 + 20:word32] = r5
	Mem0[r26 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l00009C14_ds_t
	// succ:  l00009C14_ds_f l00009C14_ds_t
l00009C14_ds_f:
	Mem0[r27 + 20:word32] = r22
	goto l00009C64
	// succ:  l00009C64
l00009C14_ds_t:
	Mem0[r27 + 20:word32] = r22
	goto l00009C6C
	// succ:  l00009C6C
l00009C64:
	r5 = Mem0[r27 + 8:word32]
	Mem0[r27 + 16:word32] = r5
	// succ:  l00009C6C
l00009C6C:
	r3 = Mem0[r19:word32]
	r3 = Mem0[r3 + 16:word32]
	branch Test(EQ,r3) l0000A0B0
	goto l00009C78
	// succ:  l00009C78 l00009C74_thunk_fn00009408
l00009C74_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l00009C78:
	r22 = Mem0[r19 + 116:word32]
	goto l00009CF4
	// succ:  l00009CF4
l00009C80:
	r3 = Mem0[r19 + 108:word32]
	r5 = Mem0[r19 + 56:word32]
	r4 = Mem0[r19 + 5792:word32]
	Mem0[r19 + 96:word32] = r0
	v53 = Mem0[r3 + r5:byte]
	r5 = (word32) v53
	r7 = Mem0[r19 + 5796:word32]
	r6 = Mem0[r19 + 5784:word32]
	r3 = r4 + r4
	v54 = SLICE(r0, word16, 0)
	Mem0[r3 + r7:word16] = v54
	r7 = r4 + 0x00000001
	r3 = r5 + r5
	Mem0[r19 + 5792:word32] = r7
	r3 = r3 + r3
	v55 = SLICE(r5, byte, 0)
	Mem0[r4 + r6:byte] = v55
	r3 = r19 + r3
	v56 = Mem0[r3 + 148:word16]
	r4 = (word32) v56
	r4 = r4 + 0x00000001
	v57 = SLICE(r4, word16, 0)
	Mem0[r3 + 148:word16] = v57
	r22 = Mem0[r19 + 116:word32]
	r3 = Mem0[r19 + 108:word32]
	r4 = Mem0[r19 + 5788:word32]
	r6 = Mem0[r19 + 5792:word32]
	r22 = r22 + 0xFFFFFFFF
	r4 = r4 + 0xFFFFFFFF
	r3 = r3 + 0x00000001
	Mem0[r19 + 116:word32] = r22
	r6 = r6 ^ r4
	branch Test(EQ,r6) l00009C80_ds_t
	// succ:  l00009C80_ds_f l00009C80_ds_t
l00009C80_ds_f:
	Mem0[r19 + 108:word32] = r3
	goto l00009CF4
	// succ:  l00009CF4
l00009C80_ds_t:
	Mem0[r19 + 108:word32] = r3
	goto l00009BB8
	// succ:  l00009BB8
l00009CF4:
	branch Test(NE,r22) l00009CF4_ds_t
	// succ:  l00009CF4_ds_f l00009CF4_ds_t
l00009CF4_ds_f:
	r5 = r19
	goto l00009CFC
	// succ:  l00009CFC
l00009CF4_ds_t:
	r5 = r19
	goto l00009C80
	// succ:  l00009C80
l00009CFC:
	r15 = 0x00009CFC
	call fn00005B0C (retsize: 0;)
	r3 = Mem0[r19 + 116:word32]
	branch Test(NE,r3) l00009C80
	// succ:  l00009D0C l00009C80
l00009D0C:
	branch Test(EQ,r23) l0000A0B0
	goto l00009D10
	// succ:  l00009D10 l00009D0C_thunk_fn00009408
l00009D0C_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l00009D10:
	branch Test(EQ,r24) l00009D10_ds_t
	// succ:  l00009D10_ds_f l00009D10_ds_t
l00009D10_ds_f:
	Mem0[r19 + 5812:word32] = r22
	goto l00009D18
	// succ:  l00009D18
l00009D10_ds_t:
	Mem0[r19 + 5812:word32] = r22
	goto l0000AE48
	// succ:  l0000AE48
l00009D18:
	r3 = Mem0[r19 + 5792:word32]
	branch Test(EQ,r3) l00009D18_ds_t
	// succ:  l00009D18_ds_f l00009D18_ds_t
l00009D18_ds_f:
	r3 = r23 ^ 0x00000001
	goto l00009D24
	// succ:  l00009D24
l00009D18_ds_t:
	r3 = r23 ^ 0x00000001
	// succ:  l00009D20_thunk_fn00009408
l00009D20_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l00009D24:
	r3 = Mem0[r19 + 92:word32]
	branch Test(LT,r3) l00009D24_ds_t
	// succ:  l00009D24_ds_f l00009D24_ds_t
l00009D24_ds_f:
	r6 = r22
	goto l00009D30
	// succ:  l00009D30
l00009D24_ds_t:
	r6 = r22
	goto l00009D38
	// succ:  l00009D38
l00009D30:
	r6 = Mem0[r19 + 56:word32]
	r6 = r6 + r3
	// succ:  l00009D38
l00009D38:
	r7 = Mem0[r19 + 108:word32]
	r5 = r19
	r8 = 0x00000000
	r15 = 0x00009D48
	r7 = r7 - r3
	call fn00003C90 (retsize: 0;)
	r25 = Mem0[r19:word32]
	r4 = Mem0[r19 + 108:word32]
	r26 = Mem0[r25 + 28:word32]
	Mem0[r19 + 92:word32] = r4
	r15 = 0x00009D64
	r5 = r26
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r26 + 20:word32]
	r22 = Mem0[r25 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l00009D80
	// succ:  l00009D7C l00009D80
l00009D7C:
	r22 = r3
	// succ:  l00009D80
l00009D80:
	branch Test(EQ,r22) l00009D80_ds_t
	// succ:  l00009D80_ds_f l00009D80_ds_t
l00009D80_ds_f:
	r7 = r22
	goto l00009D88
	// succ:  l00009D88
l00009D80_ds_t:
	r7 = r22
	goto l00009DE0
	// succ:  l00009DE0
l00009D88:
	r6 = Mem0[r26 + 16:word32]
	r15 = 0x00009D90
	r5 = Mem0[r25 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r25 + 12:word32]
	r6 = Mem0[r26 + 16:word32]
	r5 = Mem0[r25 + 20:word32]
	r4 = Mem0[r25 + 16:word32]
	r3 = Mem0[r26 + 20:word32]
	r7 = r7 + r22
	Mem0[r25 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r26 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r25 + 20:word32] = r5
	Mem0[r25 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l00009D88_ds_t
	// succ:  l00009D88_ds_f l00009D88_ds_t
l00009D88_ds_f:
	Mem0[r26 + 20:word32] = r22
	goto l00009DD8
	// succ:  l00009DD8
l00009D88_ds_t:
	Mem0[r26 + 20:word32] = r22
	goto l00009DE0
	// succ:  l00009DE0
l00009DD8:
	r5 = Mem0[r26 + 8:word32]
	Mem0[r26 + 16:word32] = r5
	// succ:  l00009DE0
l00009DE0:
	r3 = Mem0[r19:word32]
	r3 = Mem0[r3 + 16:word32]
	r4 = -r3
	r4 = r4 | r3
	r3 = r4
	r3 = r4 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r4 = r3 & 0xFFFFFFFD
	// succ:  l00009E70_thunk_fn00009408
l00009E70_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l00009E7C:
	r3 = Mem0[r4 + 16:word32]
	branch Test(EQ,r3) l0000A128
	// succ:  l00009E84 l0000A128
l00009E84:
	v17 = Mem0[r4 + 22:word16]
	r26 = (word32) v17
	r6 = Mem0[r19 + 32:word32]
	r25 = Mem0[r19 + 20:word32]
	r22 = Mem0[r19 + 12:word32]
	r26 = r26 - r6
	r4 = r25 + r26
	r18 = cond(r22 -u r4)
	branch Test(LT,r18) l00009E84_ds_t
	// succ:  l00009E84_ds_f l00009E84_ds_t
l00009E84_ds_f:
	r22 = r22 - r25
	goto l00009EA8
	// succ:  l00009EA8
l00009E84_ds_t:
	r22 = r22 - r25
	goto l00009ED0
	// succ:  l00009ED0
l00009EA8:
	r22 = r22 + r25
	r5 = Mem0[r19 + 8:word32]
	goto l0000A0C8
	// succ:  l0000A0C8
l00009EB4:
	r3 = Mem0[r19 + 28:word32]
	r22 = Mem0[r19 + 12:word32]
	r6 = Mem0[r19 + 32:word32]
	r18 = cond(r22 -u r26)
	branch Test(GE,r18) l00009EB4_ds_t
	// succ:  l00009EB4_ds_f l00009EB4_ds_t
l00009EB4_ds_f:
	r3 = Mem0[r3 + 16:word32]
	goto l00009ECC
	// succ:  l00009ECC
l00009EB4_ds_t:
	r3 = Mem0[r3 + 16:word32]
	goto l0000A0C4
	// succ:  l0000A0C4
l00009ECC:
	r22 = r22 - r25
	// succ:  l00009ED0
l00009ED0:
	r5 = Mem0[r19 + 8:word32]
	r7 = r22
	r6 = r3 + r6
	r15 = 0x00009EE0
	r5 = r5 + r25
	call fn00008C34 (retsize: 0;)
	r3 = Mem0[r19 + 28:word32]
	r4 = Mem0[r19 + 12:word32]
	r26 = r26 - r22
	r5 = Mem0[r3 + 44:word32]
	r3 = -r5
	r3 = r3 | r5
	branch Test(GE,r3) l00009ED0_ds_t
	// succ:  l00009ED0_ds_f l00009ED0_ds_t
l00009ED0_ds_f:
	Mem0[r19 + 20:word32] = r4
	goto l00009F08
	// succ:  l00009F08
l00009ED0_ds_t:
	Mem0[r19 + 20:word32] = r4
	goto l00009F2C
	// succ:  l00009F2C
l00009F08:
	r18 = cond(r25 -u r4)
	branch Test(GE,r18) l00009F08_ds_t
	// succ:  l00009F08_ds_f l00009F08_ds_t
l00009F08_ds_f:
	r7 = r4 - r25
	goto l00009F14
	// succ:  l00009F14
l00009F08_ds_t:
	r7 = r4 - r25
	goto l00009F2C
	// succ:  l00009F2C
l00009F14:
	r6 = Mem0[r19 + 8:word32]
	r5 = Mem0[r21 + 48:word32]
	r15 = 0x00009F20
	r6 = r6 + r25
	call fn00007044 (retsize: 0;)
	Mem0[r21 + 48:word32] = r3
	// succ:  l00009F2C
l00009F2C:
	r25 = Mem0[r21 + 28:word32]
	r3 = Mem0[r19 + 32:word32]
	r5 = r25
	r22 = r3 + r22
	r15 = 0x00009F40
	Mem0[r19 + 32:word32] = r22
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r25 + 20:word32]
	r22 = Mem0[r21 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l00009F5C
	// succ:  l00009F58 l00009F5C
l00009F58:
	r22 = r3
	// succ:  l00009F5C
l00009F5C:
	branch Test(EQ,r22) l00009F5C_ds_t
	// succ:  l00009F5C_ds_f l00009F5C_ds_t
l00009F5C_ds_f:
	r7 = r22
	goto l00009F64
	// succ:  l00009F64
l00009F5C_ds_t:
	r7 = r22
	goto l00009FBC
	// succ:  l00009FBC
l00009F64:
	r6 = Mem0[r25 + 16:word32]
	r15 = 0x00009F6C
	r5 = Mem0[r21 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r25 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r4 = Mem0[r21 + 16:word32]
	r3 = Mem0[r25 + 20:word32]
	r7 = r7 + r22
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r25 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l00009F64_ds_t
	// succ:  l00009F64_ds_f l00009F64_ds_t
l00009F64_ds_f:
	Mem0[r25 + 20:word32] = r22
	goto l00009FB4
	// succ:  l00009FB4
l00009F64_ds_t:
	Mem0[r25 + 20:word32] = r22
	goto l00009FBC
	// succ:  l00009FBC
l00009FB4:
	r4 = Mem0[r25 + 8:word32]
	Mem0[r25 + 16:word32] = r4
	// succ:  l00009FBC
l00009FBC:
	r25 = Mem0[r19 + 20:word32]
	branch Test(EQ,r25) l00009EB4
	// succ:  l00009FC4 l00009EB4
l00009FC4:
	r5 = 0xFFFFFFFF
	// succ:  l00009FC8
l00009FC8:
	Mem0[r19 + 40:word32] = r5
	r3 = 0x00000000
	// succ:  l00009FCC_thunk_fn00009408
l00009FCC_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l00009FDC:
	r3 = Mem0[r19 + 92:word32]
	branch Test(LT,r3) l00009FDC_ds_t
	// succ:  l00009FDC_ds_f l00009FDC_ds_t
l00009FDC_ds_f:
	r6 = r24
	goto l00009FE8
	// succ:  l00009FE8
l00009FDC_ds_t:
	r6 = r24
	goto l00009FF0
	// succ:  l00009FF0
l00009FE8:
	r6 = Mem0[r19 + 56:word32]
	r6 = r6 + r3
	// succ:  l00009FF0
l00009FF0:
	r7 = Mem0[r19 + 108:word32]
	r5 = r19
	r8 = 0x00000001
	r15 = 0x0000A000
	r7 = r7 - r3
	call fn00003C90 (retsize: 0;)
	r23 = Mem0[r19:word32]
	r4 = Mem0[r19 + 108:word32]
	r24 = Mem0[r23 + 28:word32]
	Mem0[r19 + 92:word32] = r4
	r15 = 0x0000A01C
	r5 = r24
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r24 + 20:word32]
	r22 = Mem0[r23 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000A038
	// succ:  l0000A034 l0000A038
l0000A034:
	r22 = r3
	// succ:  l0000A038
l0000A038:
	branch Test(EQ,r22) l0000A038_ds_t
	// succ:  l0000A038_ds_f l0000A038_ds_t
l0000A038_ds_f:
	r7 = r22
	goto l0000A040
	// succ:  l0000A040
l0000A038_ds_t:
	r7 = r22
	goto l0000A098
	// succ:  l0000A098
l0000A040:
	r6 = Mem0[r24 + 16:word32]
	r15 = 0x0000A048
	r5 = Mem0[r23 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r23 + 12:word32]
	r6 = Mem0[r24 + 16:word32]
	r5 = Mem0[r23 + 20:word32]
	r4 = Mem0[r23 + 16:word32]
	r3 = Mem0[r24 + 20:word32]
	r7 = r7 + r22
	Mem0[r23 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r24 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r23 + 20:word32] = r5
	Mem0[r23 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l0000A040_ds_t
	// succ:  l0000A040_ds_f l0000A040_ds_t
l0000A040_ds_f:
	Mem0[r24 + 20:word32] = r22
	goto l0000A090
	// succ:  l0000A090
l0000A040_ds_t:
	Mem0[r24 + 20:word32] = r22
	goto l0000A098
	// succ:  l0000A098
l0000A090:
	r5 = Mem0[r24 + 8:word32]
	Mem0[r24 + 16:word32] = r5
	// succ:  l0000A098
l0000A098:
	r3 = Mem0[r19:word32]
	r3 = Mem0[r3 + 16:word32]
	branch Test(NE,r3) l0000A098_ds_t
	// succ:  l0000A098_ds_f l0000A098_ds_t
l0000A098_ds_f:
	r4 = 0x0000029A
	goto l0000A0A8
	// succ:  l0000A0A8
l0000A098_ds_t:
	r4 = 0x0000029A
	goto l0000AF28
	// succ:  l0000AF28
l0000A0A8:
	r3 = 0x0000029A
	Mem0[r19 + 4:word32] = r3
	// succ:  l0000A0AC_thunk_fn00009408
l0000A0AC_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l0000A0C4:
	r5 = Mem0[r19 + 8:word32]
	// succ:  l0000A0C8
l0000A0C8:
	r7 = r26
	r6 = r3 + r6
	r15 = 0x0000A0D4
	r5 = r5 + r25
	call fn00008C34 (retsize: 0;)
	r4 = Mem0[r19 + 28:word32]
	r7 = Mem0[r19 + 20:word32]
	r5 = Mem0[r4 + 44:word32]
	r7 = r26 + r7
	r3 = -r5
	r3 = r3 | r5
	branch Test(GE,r3) l0000A0C8_ds_t
	// succ:  l0000A0C8_ds_f l0000A0C8_ds_t
l0000A0C8_ds_f:
	Mem0[r19 + 20:word32] = r7
	goto l0000A0FC
	// succ:  l0000A0FC
l0000A0C8_ds_t:
	Mem0[r19 + 20:word32] = r7
	goto l0000A124
	// succ:  l0000A124
l0000A0FC:
	r18 = cond(r25 -u r7)
	branch Test(GE,r18) l0000A0FC_ds_t
	// succ:  l0000A0FC_ds_f l0000A0FC_ds_t
l0000A0FC_ds_f:
	r7 = r7 - r25
	goto l0000A108
	// succ:  l0000A108
l0000A0FC_ds_t:
	r7 = r7 - r25
	goto l0000A124
	// succ:  l0000A124
l0000A108:
	r6 = Mem0[r19 + 8:word32]
	r5 = Mem0[r21 + 48:word32]
	r15 = 0x0000A114
	r6 = r6 + r25
	call fn00007044 (retsize: 0;)
	r4 = Mem0[r19 + 28:word32]
	Mem0[r21 + 48:word32] = r3
	// succ:  l0000A124
l0000A124:
	Mem0[r19 + 32:word32] = r0
	// succ:  l0000A128
l0000A128:
	r3 = 0x00000049
	Mem0[r19 + 4:word32] = r3
	// succ:  l0000A130
l0000A130:
	r3 = Mem0[r4 + 28:word32]
	branch Test(EQ,r3) l0000A130_ds_t
	// succ:  l0000A130_ds_f l0000A130_ds_t
l0000A130_ds_f:
	r25 = 0x00000000
	goto l0000A13C
	// succ:  l0000A13C
l0000A130_ds_t:
	r25 = 0x00000000
	goto l0000A290
	// succ:  l0000A290
l0000A13C:
	r6 = Mem0[r19 + 20:word32]
	r7 = r6
	goto l0000A178
	// succ:  l0000A178
l0000A148:
	r3 = Mem0[r19 + 32:word32]
	r5 = Mem0[r4 + 28:word32]
	r4 = Mem0[r19 + 8:word32]
	r8 = r3 + 0x00000001
	Mem0[r19 + 32:word32] = r8
	v23 = Mem0[r3 + r5:byte]
	r3 = (word32) v23
	r5 = r7 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	branch Test(EQ,r3) l0000A148_ds_t
	// succ:  l0000A148_ds_f l0000A148_ds_t
l0000A148_ds_f:
	v24 = SLICE(r3, byte, 0)
	Mem0[r7 + r4:byte] = v24
	goto l0000A170
	// succ:  l0000A170
l0000A148_ds_t:
	v24 = SLICE(r3, byte, 0)
	Mem0[r7 + r4:byte] = v24
	goto l0000A254
	// succ:  l0000A254
l0000A170:
	r7 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 28:word32]
	// succ:  l0000A178
l0000A178:
	r3 = Mem0[r19 + 12:word32]
	r3 = r3 ^ r7
	branch Test(NE,r3) l0000A148
	// succ:  l0000A184 l0000A148
l0000A184:
	r4 = Mem0[r4 + 44:word32]
	r3 = -r4
	r3 = r3 | r4
	branch Test(GE,r3) l0000A1B8
	// succ:  l0000A194 l0000A1B8
l0000A194:
	r18 = cond(r6 -u r7)
	branch Test(GE,r18) l0000A194_ds_t
	// succ:  l0000A194_ds_f l0000A194_ds_t
l0000A194_ds_f:
	r7 = r7 - r6
	goto l0000A1A0
	// succ:  l0000A1A0
l0000A194_ds_t:
	r7 = r7 - r6
	goto l0000A1B8
	// succ:  l0000A1B8
l0000A1A0:
	r3 = Mem0[r19 + 8:word32]
	r5 = Mem0[r21 + 48:word32]
	r15 = 0x0000A1AC
	r6 = r3 + r6
	call fn00007044 (retsize: 0;)
	Mem0[r21 + 48:word32] = r3
	// succ:  l0000A1B8
l0000A1B8:
	r26 = Mem0[r21 + 28:word32]
	r15 = 0x0000A1C0
	r5 = r26
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r26 + 20:word32]
	r22 = Mem0[r21 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000A1DC
	// succ:  l0000A1D8 l0000A1DC
l0000A1D8:
	r22 = r3
	// succ:  l0000A1DC
l0000A1DC:
	branch Test(EQ,r22) l0000A1DC_ds_t
	// succ:  l0000A1DC_ds_f l0000A1DC_ds_t
l0000A1DC_ds_f:
	r7 = r22
	goto l0000A1E4
	// succ:  l0000A1E4
l0000A1DC_ds_t:
	r7 = r22
	goto l0000A23C
	// succ:  l0000A23C
l0000A1E4:
	r6 = Mem0[r26 + 16:word32]
	r15 = 0x0000A1EC
	r5 = Mem0[r21 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r26 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r4 = Mem0[r21 + 16:word32]
	r3 = Mem0[r26 + 20:word32]
	r7 = r7 + r22
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r26 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l0000A1E4_ds_t
	// succ:  l0000A1E4_ds_f l0000A1E4_ds_t
l0000A1E4_ds_f:
	Mem0[r26 + 20:word32] = r22
	goto l0000A234
	// succ:  l0000A234
l0000A1E4_ds_t:
	Mem0[r26 + 20:word32] = r22
	goto l0000A23C
	// succ:  l0000A23C
l0000A234:
	r4 = Mem0[r26 + 8:word32]
	Mem0[r26 + 16:word32] = r4
	// succ:  l0000A23C
l0000A23C:
	r7 = Mem0[r19 + 20:word32]
	branch Test(NE,r7) l0000A23C_ds_t
	// succ:  l0000A23C_ds_f l0000A23C_ds_t
l0000A23C_ds_f:
	r5 = 0xFFFFFFFF
	goto l0000A248
	// succ:  l0000A248
l0000A23C_ds_t:
	r5 = 0xFFFFFFFF
	goto l00009FC8
	// succ:  l00009FC8
l0000A248:
	r4 = Mem0[r19 + 28:word32]
	r6 = r25
	goto l0000A148
	// succ:  l0000A148
l0000A254:
	r4 = Mem0[r19 + 28:word32]
	r3 = Mem0[r4 + 44:word32]
	branch Test(EQ,r3) l0000A28C
	// succ:  l0000A260 l0000A28C
l0000A260:
	r7 = Mem0[r19 + 20:word32]
	r18 = cond(r6 -u r7)
	branch Test(GE,r18) l0000A260_ds_t
	// succ:  l0000A260_ds_f l0000A260_ds_t
l0000A260_ds_f:
	r7 = r7 - r6
	goto l0000A270
	// succ:  l0000A270
l0000A260_ds_t:
	r7 = r7 - r6
	goto l0000A28C
	// succ:  l0000A28C
l0000A270:
	r3 = Mem0[r19 + 8:word32]
	r5 = Mem0[r21 + 48:word32]
	r15 = 0x0000A27C
	r6 = r3 + r6
	call fn00007044 (retsize: 0;)
	r4 = Mem0[r19 + 28:word32]
	Mem0[r21 + 48:word32] = r3
	// succ:  l0000A28C
l0000A28C:
	Mem0[r19 + 32:word32] = r0
	// succ:  l0000A290
l0000A290:
	r3 = 0x0000005B
	Mem0[r19 + 4:word32] = r3
	goto l0000A298
	// succ:  l0000A298
l0000A290_ds_f:
	r25 = 0x00000000
	goto l0000A2A4
	// succ:  l0000A2A4
l0000A290_ds_t:
	r25 = 0x00000000
	goto l0000A410
	// succ:  l0000A410
l0000A298:
	r3 = Mem0[r4 + 36:word32]
	branch Test(EQ,r3) l0000A290_ds_t
	goto l0000A290_ds_f
	// succ:  l0000A290_ds_f l0000A290_ds_t
l0000A2A4:
	r6 = Mem0[r19 + 20:word32]
	r7 = r6
	goto l0000A2E0
	// succ:  l0000A2E0
l0000A2B0:
	r3 = Mem0[r19 + 32:word32]
	r5 = Mem0[r4 + 36:word32]
	r4 = Mem0[r19 + 8:word32]
	r8 = r3 + 0x00000001
	Mem0[r19 + 32:word32] = r8
	v25 = Mem0[r3 + r5:byte]
	r3 = (word32) v25
	r5 = r7 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	branch Test(EQ,r3) l0000A2B0_ds_t
	// succ:  l0000A2B0_ds_f l0000A2B0_ds_t
l0000A2B0_ds_f:
	v26 = SLICE(r3, byte, 0)
	Mem0[r7 + r4:byte] = v26
	goto l0000A2D8
	// succ:  l0000A2D8
l0000A2B0_ds_t:
	v26 = SLICE(r3, byte, 0)
	Mem0[r7 + r4:byte] = v26
	goto l0000A3D4
	// succ:  l0000A3D4
l0000A2D8:
	r7 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 28:word32]
	// succ:  l0000A2E0
l0000A2E0:
	r3 = Mem0[r19 + 12:word32]
	r3 = r3 ^ r7
	branch Test(NE,r3) l0000A2B0
	// succ:  l0000A2EC l0000A2B0
l0000A2EC:
	r4 = Mem0[r4 + 44:word32]
	r3 = -r4
	r3 = r3 | r4
	branch Test(GE,r3) l0000A320
	// succ:  l0000A2FC l0000A320
l0000A2FC:
	r18 = cond(r6 -u r7)
	branch Test(GE,r18) l0000A2FC_ds_t
	// succ:  l0000A2FC_ds_f l0000A2FC_ds_t
l0000A2FC_ds_f:
	r7 = r7 - r6
	goto l0000A308
	// succ:  l0000A308
l0000A2FC_ds_t:
	r7 = r7 - r6
	goto l0000A320
	// succ:  l0000A320
l0000A308:
	r3 = Mem0[r19 + 8:word32]
	r5 = Mem0[r21 + 48:word32]
	r15 = 0x0000A314
	r6 = r3 + r6
	call fn00007044 (retsize: 0;)
	Mem0[r21 + 48:word32] = r3
	// succ:  l0000A320
l0000A320:
	r26 = Mem0[r21 + 28:word32]
	r15 = 0x0000A328
	r5 = r26
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r26 + 20:word32]
	r22 = Mem0[r21 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000A344
	// succ:  l0000A340 l0000A344
l0000A340:
	r22 = r3
	// succ:  l0000A344
l0000A344:
	branch Test(EQ,r22) l0000A344_ds_t
	// succ:  l0000A344_ds_f l0000A344_ds_t
l0000A344_ds_f:
	r7 = r22
	goto l0000A34C
	// succ:  l0000A34C
l0000A344_ds_t:
	r7 = r22
	goto l0000A3A4
	// succ:  l0000A3A4
l0000A34C:
	r6 = Mem0[r26 + 16:word32]
	r15 = 0x0000A354
	r5 = Mem0[r21 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r26 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r4 = Mem0[r21 + 16:word32]
	r3 = Mem0[r26 + 20:word32]
	r7 = r7 + r22
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r26 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l0000A34C_ds_t
	// succ:  l0000A34C_ds_f l0000A34C_ds_t
l0000A34C_ds_f:
	Mem0[r26 + 20:word32] = r22
	goto l0000A39C
	// succ:  l0000A39C
l0000A34C_ds_t:
	Mem0[r26 + 20:word32] = r22
	goto l0000A3A4
	// succ:  l0000A3A4
l0000A39C:
	r4 = Mem0[r26 + 8:word32]
	Mem0[r26 + 16:word32] = r4
	// succ:  l0000A3A4
l0000A3A4:
	r7 = Mem0[r19 + 20:word32]
	branch Test(NE,r7) l0000A3A4_ds_t
	// succ:  l0000A3A4_ds_f l0000A3A4_ds_t
l0000A3A4_ds_f:
	r5 = 0xFFFFFFFF
	goto l0000A3B0
	// succ:  l0000A3B0
l0000A3A4_ds_t:
	r5 = 0xFFFFFFFF
	goto l00009FC8
	// succ:  l00009FC8
l0000A3B0:
	r4 = Mem0[r19 + 28:word32]
	r6 = r25
	goto l0000A2B0
	// succ:  l0000A2B0
l0000A3BC:
	r4 = 0x0000029A
	r3 = r3 & 0xFFFFFFFD
	branch Test(NE,r3) l0000A3BC_ds_t
	// succ:  l0000A3BC_ds_f l0000A3BC_ds_t
l0000A3BC_ds_f:
	Mem0[r19 + 4:word32] = r4
	goto l0000A3CC
	// succ:  l0000A3CC
l0000A3BC_ds_t:
	Mem0[r19 + 4:word32] = r4
	// succ:  l0000A3C8_thunk_fn00009408
l0000A3C8_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l0000A3CC:
	r3 = Mem0[r21 + 16:word32]
	// succ:  l0000A3CC_thunk_fn00009408
l0000A3CC_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l0000A3D4:
	r3 = Mem0[r19 + 28:word32]
	r3 = Mem0[r3 + 44:word32]
	branch Test(EQ,r3) l0000A528
	// succ:  l0000A3E0 l0000A528
l0000A3E0:
	r7 = Mem0[r19 + 20:word32]
	r18 = cond(r6 -u r7)
	branch Test(GE,r18) l0000A3E0_ds_t
	// succ:  l0000A3E0_ds_f l0000A3E0_ds_t
l0000A3E0_ds_f:
	r4 = 0x00000067
	goto l0000A3F0
	// succ:  l0000A3F0
l0000A3E0_ds_t:
	r4 = 0x00000067
	goto l0000A418
	// succ:  l0000A418
l0000A3F0:
	r3 = Mem0[r19 + 8:word32]
	r5 = Mem0[r21 + 48:word32]
	r7 = r7 - r6
	r15 = 0x0000A400
	r6 = r3 + r6
	call fn00007044 (retsize: 0;)
	r4 = Mem0[r19 + 28:word32]
	Mem0[r21 + 48:word32] = r3
	// succ:  l0000A410
l0000A410:
	r3 = Mem0[r4 + 44:word32]
	r4 = 0x00000067
	// succ:  l0000A418
l0000A418:
	Mem0[r19 + 4:word32] = r4
	// succ:  l0000A41C
l0000A41C:
	branch Test(EQ,r3) l0000A528
	// succ:  l0000A420 l0000A528
l0000A420:
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 12:word32]
	r5 = r3 + 0x00000002
	r18 = cond(r4 -u r5)
	branch Test(GE,r18) l0000A4C0
	// succ:  l0000A434 l0000A4C0
l0000A434:
	r25 = Mem0[r21 + 28:word32]
	r15 = 0x0000A43C
	r5 = r25
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r25 + 20:word32]
	r22 = Mem0[r21 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000A458
	// succ:  l0000A454 l0000A458
l0000A454:
	r22 = r3
	// succ:  l0000A458
l0000A458:
	branch Test(EQ,r22) l0000A458_ds_t
	// succ:  l0000A458_ds_f l0000A458_ds_t
l0000A458_ds_f:
	r7 = r22
	goto l0000A460
	// succ:  l0000A460
l0000A458_ds_t:
	r7 = r22
	goto l0000A4B8
	// succ:  l0000A4B8
l0000A460:
	r6 = Mem0[r25 + 16:word32]
	r15 = 0x0000A468
	r5 = Mem0[r21 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r25 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r4 = Mem0[r21 + 16:word32]
	r3 = Mem0[r25 + 20:word32]
	r7 = r7 + r22
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r25 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l0000A460_ds_t
	// succ:  l0000A460_ds_f l0000A460_ds_t
l0000A460_ds_f:
	Mem0[r25 + 20:word32] = r22
	goto l0000A4B0
	// succ:  l0000A4B0
l0000A460_ds_t:
	Mem0[r25 + 20:word32] = r22
	goto l0000A4B8
	// succ:  l0000A4B8
l0000A4B0:
	r5 = Mem0[r25 + 8:word32]
	Mem0[r25 + 16:word32] = r5
	// succ:  l0000A4B8
l0000A4B8:
	r3 = Mem0[r19 + 20:word32]
	branch Test(NE,r3) l0000A5BC
	// succ:  l0000A4C0 l0000A5BC
l0000A4C0:
	r5 = Mem0[r21 + 48:word32]
	r4 = Mem0[r19 + 8:word32]
	r6 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r6
	v25 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v25
	r3 = Mem0[r19 + 20:word32]
	r9 = Mem0[r21 + 48:word32]
	r7 = 0x00000000
	r4 = Mem0[r19 + 8:word32]
	r8 = r3 + 0x00000001
	r6 = r7
	r5 = r7
	Mem0[r19 + 20:word32] = r8
	r8 = r9
	r8 = r9 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r15 = 0x0000A51C
	v26 = SLICE(r8, byte, 0)
	Mem0[r3 + r4:byte] = v26
	call fn00007044 (retsize: 0;)
	Mem0[r21 + 48:word32] = r3
	// succ:  l0000A528
l0000A528:
	r25 = Mem0[r21 + 28:word32]
	r4 = 0x00000071
	Mem0[r19 + 4:word32] = r4
	r15 = 0x0000A538
	r5 = r25
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r25 + 20:word32]
	r22 = Mem0[r21 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000A554
	// succ:  l0000A550 l0000A554
l0000A550:
	r22 = r3
	// succ:  l0000A554
l0000A554:
	branch Test(EQ,r22) l0000A554_ds_t
	// succ:  l0000A554_ds_f l0000A554_ds_t
l0000A554_ds_f:
	r7 = r22
	goto l0000A55C
	// succ:  l0000A55C
l0000A554_ds_t:
	r7 = r22
	goto l0000A5B4
	// succ:  l0000A5B4
l0000A55C:
	r6 = Mem0[r25 + 16:word32]
	r15 = 0x0000A564
	r5 = Mem0[r21 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r21 + 12:word32]
	r6 = Mem0[r25 + 16:word32]
	r5 = Mem0[r21 + 20:word32]
	r4 = Mem0[r21 + 16:word32]
	r3 = Mem0[r25 + 20:word32]
	r7 = r7 + r22
	Mem0[r21 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r25 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r21 + 20:word32] = r5
	Mem0[r21 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l0000A55C_ds_t
	// succ:  l0000A55C_ds_f l0000A55C_ds_t
l0000A55C_ds_f:
	Mem0[r25 + 20:word32] = r22
	goto l0000A5AC
	// succ:  l0000A5AC
l0000A55C_ds_t:
	Mem0[r25 + 20:word32] = r22
	goto l0000A5B4
	// succ:  l0000A5B4
l0000A5AC:
	r5 = Mem0[r25 + 8:word32]
	Mem0[r25 + 16:word32] = r5
	// succ:  l0000A5B4
l0000A5B4:
	r3 = Mem0[r19 + 20:word32]
	branch Test(EQ,r3) l000093A4
	// succ:  l0000A5BC l000093A4
l0000A5BC:
	r3 = 0xFFFFFFFF
	Mem0[r19 + 40:word32] = r3
	r3 = 0x00000000
	// succ:  l0000A5C4_thunk_fn00009408
l0000A5C4_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l0000A774:
	r6 = 0x00000002
	goto l00009A20
	// succ:  l00009A20
l0000A77C:
	r26 = 0xFFFFABD8
	r29 = 0x00000102
	r28 = 0x00000001
	r25 = 0x00000001
	// succ:  l0000A790
l0000A790:
	r6 = Mem0[r19 + 116:word32]
	r22 = 0xFFFFACD8
	r27 = 0x00000002
	// succ:  l0000A7A0
l0000A7A0:
	r18 = cond(r29 -u r6)
	branch Test(GE,r18) l0000A990
	// succ:  l0000A7A8 l0000A990
l0000A7A8:
	r5 = Mem0[r19 + 108:word32]
	r7 = Mem0[r19 + 56:word32]
	Mem0[r19 + 96:word32] = r0
	goto l0000A7B4
	// succ:  l0000A7B4
l0000A7A8_ds_f:
	r3 = r5 + 0xFFFFFFFF
	goto l0000A7BC
	// succ:  l0000A7BC
l0000A7A8_ds_t:
	r3 = r5 + 0xFFFFFFFF
	goto l0000A7D0
	// succ:  l0000A7D0
l0000A7B4:
	branch Test(EQ,r5) l0000A7A8_ds_t
	goto l0000A7A8_ds_f
	// succ:  l0000A7A8_ds_f l0000A7A8_ds_t
l0000A7BC:
	r4 = r7 + r3
	v32 = Mem0[r3 + r7:byte]
	r8 = (word32) v32
	v33 = Mem0[r4 + 1:byte]
	r3 = (word32) v33
	r3 = r3 ^ r8
	branch Test(EQ,r3) l0000A9C4
	// succ:  l0000A7D0 l0000A9C4
l0000A7D0:
	r4 = Mem0[r19 + 5792:word32]
	// succ:  l0000A7D4
l0000A7D4:
	v23 = Mem0[r5 + r7:byte]
	r5 = (word32) v23
	r7 = Mem0[r19 + 5796:word32]
	r6 = Mem0[r19 + 5784:word32]
	r3 = r4 + r4
	v24 = SLICE(r0, word16, 0)
	Mem0[r3 + r7:word16] = v24
	r7 = r4 + 0x00000001
	r3 = r5 + r5
	Mem0[r19 + 5792:word32] = r7
	r3 = r3 + r3
	v25 = SLICE(r5, byte, 0)
	Mem0[r4 + r6:byte] = v25
	r3 = r19 + r3
	v26 = Mem0[r3 + 148:word16]
	r4 = (word32) v26
	r4 = r4 + 0x00000001
	v34 = SLICE(r4, word16, 0)
	Mem0[r3 + 148:word16] = v34
	r3 = Mem0[r19 + 5788:word32]
	r5 = Mem0[r19 + 5792:word32]
	r6 = Mem0[r19 + 116:word32]
	r4 = Mem0[r19 + 108:word32]
	r3 = r3 + 0xFFFFFFFF
	r3 = r3 ^ r5
	r5 = -r3
	r3 = r5 | r3
	r6 = r6 + 0xFFFFFFFF
	r4 = r4 + 0x00000001
	r3 = r3 ^ 0xFFFFFFFF
	Mem0[r19 + 116:word32] = r6
	Mem0[r19 + 108:word32] = r4
	r5 = r3
	r5 = r3 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	// succ:  l0000A8C0
l0000A8C0:
	branch Test(EQ,r5) l0000A7A0
	// succ:  l0000A8C4 l0000A7A0
l0000A8C4:
	r7 = Mem0[r19 + 92:word32]
	branch Test(LT,r7) l0000A8C4_ds_t
	// succ:  l0000A8C4_ds_f l0000A8C4_ds_t
l0000A8C4_ds_f:
	r6 = 0x00000000
	goto l0000A8D0
	// succ:  l0000A8D0
l0000A8C4_ds_t:
	r6 = 0x00000000
	goto l0000A8D8
	// succ:  l0000A8D8
l0000A8D0:
	r6 = Mem0[r19 + 56:word32]
	r6 = r6 + r7
	// succ:  l0000A8D8
l0000A8D8:
	r5 = r19
	r8 = 0x00000000
	r15 = 0x0000A8E4
	r7 = r4 - r7
	call fn00003C90 (retsize: 0;)
	r27 = Mem0[r19:word32]
	r5 = Mem0[r19 + 108:word32]
	r30 = Mem0[r27 + 28:word32]
	Mem0[r19 + 92:word32] = r5
	r15 = 0x0000A900
	r5 = r30
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r30 + 20:word32]
	r22 = Mem0[r27 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000A91C
	// succ:  l0000A918 l0000A91C
l0000A918:
	r22 = r3
	// succ:  l0000A91C
l0000A91C:
	branch Test(EQ,r22) l0000A91C_ds_t
	// succ:  l0000A91C_ds_f l0000A91C_ds_t
l0000A91C_ds_f:
	r7 = r22
	goto l0000A924
	// succ:  l0000A924
l0000A91C_ds_t:
	r7 = r22
	goto l0000A97C
	// succ:  l0000A97C
l0000A924:
	r6 = Mem0[r30 + 16:word32]
	r15 = 0x0000A92C
	r5 = Mem0[r27 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r27 + 12:word32]
	r6 = Mem0[r30 + 16:word32]
	r5 = Mem0[r27 + 20:word32]
	r4 = Mem0[r27 + 16:word32]
	r3 = Mem0[r30 + 20:word32]
	r7 = r7 + r22
	Mem0[r27 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r30 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r27 + 20:word32] = r5
	Mem0[r27 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l0000A924_ds_t
	// succ:  l0000A924_ds_f l0000A924_ds_t
l0000A924_ds_f:
	Mem0[r30 + 20:word32] = r22
	goto l0000A974
	// succ:  l0000A974
l0000A924_ds_t:
	Mem0[r30 + 20:word32] = r22
	goto l0000A97C
	// succ:  l0000A97C
l0000A974:
	r3 = Mem0[r30 + 8:word32]
	Mem0[r30 + 16:word32] = r3
	// succ:  l0000A97C
l0000A97C:
	r3 = Mem0[r19:word32]
	r3 = Mem0[r3 + 16:word32]
	branch Test(NE,r3) l0000A790
	// succ:  l0000A988 l0000A790
l0000A988:
	r3 = Mem0[r21 + 16:word32]
	// succ:  l0000A988_thunk_fn00009408
l0000A988_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l0000A990:
	r15 = 0x0000A990
	r5 = r19
	call fn00005B0C (retsize: 0;)
	r6 = Mem0[r19 + 116:word32]
	r18 = cond(r29 -u r6)
	branch Test(LT,r18) l0000A7A8
	// succ:  l0000A9A4 l0000A7A8
l0000A9A4:
	branch Test(EQ,r23) l0000A0B0
	goto l0000A9A8
	// succ:  l0000A9A8 l0000A9A4_thunk_fn00009408
l0000A9A4_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l0000A9A8:
	branch Test(EQ,r6) l0000AC4C
	// succ:  l0000A9AC l0000AC4C
l0000A9AC:
	Mem0[r19 + 96:word32] = r0
	r5 = Mem0[r19 + 108:word32]
	r18 = cond(r27 -u r6)
	branch Test(GE,r18) l0000A9AC_ds_t
	// succ:  l0000A9AC_ds_f l0000A9AC_ds_t
l0000A9AC_ds_f:
	r7 = Mem0[r19 + 56:word32]
	goto l0000A9C0
	// succ:  l0000A9C0
l0000A9AC_ds_t:
	r7 = Mem0[r19 + 56:word32]
	goto l0000A7D0
	// succ:  l0000A7D0
l0000A9C0:
	goto l0000A7B4
	// succ:  l0000A7B4
l0000A9C4:
	v25 = Mem0[r4 + 2:byte]
	r3 = (word32) v25
	r3 = r3 ^ r8
	branch Test(NE,r3) l0000A7D0
	// succ:  l0000A9D0 l0000A7D0
l0000A9D0:
	v26 = Mem0[r4 + 3:byte]
	r3 = (word32) v26
	r3 = r3 ^ r8
	branch Test(NE,r3) l0000A9D0_ds_t
	// succ:  l0000A9D0_ds_f l0000A9D0_ds_t
l0000A9D0_ds_f:
	r3 = r5 + 0x00000102
	goto l0000A9E0
	// succ:  l0000A9E0
l0000A9D0_ds_t:
	r3 = r5 + 0x00000102
	goto l0000A7D0
	// succ:  l0000A7D0
l0000A9E0:
	r4 = r4 + 0x00000003
	r3 = r7 + r3
	goto l0000AADC
	// succ:  l0000AADC
l0000A9EC:
	v43 = Mem0[r4 + 2:byte]
	r9 = (word32) v43
	r9 = r9 ^ r8
	branch Test(NE,r9) l0000AFAC
	// succ:  l0000A9F8 l0000AFAC
l0000A9F8:
	v44 = Mem0[r4 + 3:byte]
	r9 = (word32) v44
	r9 = r9 ^ r8
	branch Test(NE,r9) l0000AFB4
	// succ:  l0000AA04 l0000AFB4
l0000AA04:
	v45 = Mem0[r4 + 4:byte]
	r9 = (word32) v45
	r9 = r9 ^ r8
	branch Test(NE,r9) l0000AFA4
	// succ:  l0000AA10 l0000AFA4
l0000AA10:
	v46 = Mem0[r4 + 5:byte]
	r9 = (word32) v46
	r9 = r9 ^ r8
	branch Test(NE,r9) l0000AF9C
	// succ:  l0000AA1C l0000AF9C
l0000AA1C:
	v47 = Mem0[r4 + 6:byte]
	r9 = (word32) v47
	r9 = r9 ^ r8
	branch Test(NE,r9) l0000AF94
	// succ:  l0000AA28 l0000AF94
l0000AA28:
	v48 = Mem0[r4 + 7:byte]
	r11 = (word32) v48
	r11 = r11 ^ r8
	branch Test(NE,r11) l0000AF8C
	// succ:  l0000AA34 l0000AF8C
l0000AA34:
	r4 = r4 + 0x00000008
	v50 = Mem0[r4:byte]
	r9 = (word32) v50
	r9 = r8 ^ r9
	r9 = r9 + 0xFFFFFFFF
	r12 = r9
	r12 = r9 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r18 = cond(r4 -u r3)
	branch Test(LT,r18) l0000AA34_ds_t
	// succ:  l0000AA34_ds_f l0000AA34_ds_t
l0000AA34_ds_f:
	r10 = r12 & r10
	goto l0000AAD0
	// succ:  l0000AAD0
l0000AA34_ds_t:
	r10 = r12 & r10
	goto l0000AAD8
	// succ:  l0000AAD8
l0000AAD0:
	r10 = r11
	r10 = r12 & r10
	// succ:  l0000AAD8
l0000AAD8:
	branch Test(EQ,r10) l0000AAF0
	// succ:  l0000AADC l0000AAF0
l0000AADC:
	v32 = Mem0[r4 + 1:byte]
	r9 = (word32) v32
	r9 = r9 ^ r8
	branch Test(EQ,r9) l0000AADC_ds_t
	// succ:  l0000AADC_ds_f l0000AADC_ds_t
l0000AADC_ds_f:
	r10 = r28
	goto l0000AAEC
	// succ:  l0000AAEC
l0000AADC_ds_t:
	r10 = r28
	goto l0000A9EC
	// succ:  l0000A9EC
l0000AAEC:
	r4 = r4 + 0x00000001
	goto l0000AAF0
	// succ:  l0000AAF0
l0000AAEC_ds_f:
	Mem0[r19 + 96:word32] = r3
	goto l0000AB08
	// succ:  l0000AB08
l0000AAEC_ds_t:
	Mem0[r19 + 96:word32] = r3
	goto l0000AF78
	// succ:  l0000AF78
l0000AAF0:
	r3 = r3 - r4
	r4 = 0x00000102
	r3 = r4 - r3
	r18 = cond(r6 -u r3)
	branch Test(GE,r18) l0000AAEC_ds_t
	goto l0000AAEC_ds_f
	// succ:  l0000AAEC_ds_f l0000AAEC_ds_t
l0000AB08:
	r3 = r6
	Mem0[r19 + 96:word32] = r6
	r3 = r3 + 0xFFFFFFFD
	// succ:  l0000AB14
l0000AB14:
	r5 = Mem0[r19 + 5792:word32]
	r3 = r3 & 0x000000FF
	r8 = Mem0[r19 + 5796:word32]
	v37 = Mem0[r3 + r26:byte]
	r4 = (word32) v37
	r6 = Mem0[r19 + 5784:word32]
	r7 = r5 + r5
	v38 = SLICE(r25, word16, 0)
	Mem0[r7 + r8:word16] = v38
	r4 = r4 + r4
	r7 = r5 + 0x00000001
	Mem0[r19 + 5792:word32] = r7
	r4 = r4 + r4
	v37 = SLICE(r3, byte, 0)
	Mem0[r5 + r6:byte] = v37
	r4 = r19 + r4
	v38 = Mem0[r22:byte]
	r3 = (word32) v38
	v39 = Mem0[r4 + 1176:word16]
	r5 = (word32) v39
	r3 = r3 + r3
	r5 = r5 + 0x00000001
	r3 = r3 + r3
	v40 = SLICE(r5, word16, 0)
	Mem0[r4 + 1176:word16] = v40
	r3 = r19 + r3
	v41 = Mem0[r3 + 2440:word16]
	r4 = (word32) v41
	r4 = r4 + 0x00000001
	v42 = SLICE(r4, word16, 0)
	Mem0[r3 + 2440:word16] = v42
	r3 = Mem0[r19 + 5788:word32]
	r5 = Mem0[r19 + 5792:word32]
	r4 = Mem0[r19 + 96:word32]
	r3 = r3 + 0xFFFFFFFF
	r3 = r3 ^ r5
	r6 = Mem0[r19 + 116:word32]
	r7 = Mem0[r19 + 108:word32]
	r5 = -r3
	r3 = r5 | r3
	r6 = r6 - r4
	r3 = r3 ^ 0xFFFFFFFF
	r4 = r4 + r7
	r5 = r3
	r5 = r3 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	Mem0[r19 + 116:word32] = r6
	Mem0[r19 + 108:word32] = r4
	Mem0[r19 + 96:word32] = r0
	goto l0000A8C0
	// succ:  l0000A8C0
l0000AC4C:
	branch Test(EQ,r24) l0000AC4C_ds_t
	// succ:  l0000AC4C_ds_f l0000AC4C_ds_t
l0000AC4C_ds_f:
	Mem0[r19 + 5812:word32] = r6
	goto l0000AC54
	// succ:  l0000AC54
l0000AC4C_ds_t:
	Mem0[r19 + 5812:word32] = r6
	goto l00009FDC
	// succ:  l00009FDC
l0000AC54:
	r3 = Mem0[r19 + 5792:word32]
	branch Test(EQ,r3) l0000AC54_ds_t
	// succ:  l0000AC54_ds_f l0000AC54_ds_t
l0000AC54_ds_f:
	r3 = r23 ^ 0x00000001
	goto l0000AC60
	// succ:  l0000AC60
l0000AC54_ds_t:
	r3 = r23 ^ 0x00000001
	// succ:  l0000AC5C_thunk_fn00009408
l0000AC5C_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l0000AC60:
	r3 = Mem0[r19 + 92:word32]
	branch Test(LT,r3) l0000AC70
	// succ:  l0000AC68 l0000AC70
l0000AC68:
	r6 = Mem0[r19 + 56:word32]
	r6 = r6 + r3
	// succ:  l0000AC70
l0000AC70:
	r7 = Mem0[r19 + 108:word32]
	r5 = r19
	r8 = 0x00000000
	r15 = 0x0000AC80
	r7 = r7 - r3
	call fn00003C90 (retsize: 0;)
	r25 = Mem0[r19:word32]
	r5 = Mem0[r19 + 108:word32]
	r26 = Mem0[r25 + 28:word32]
	Mem0[r19 + 92:word32] = r5
	r15 = 0x0000AC9C
	r5 = r26
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r26 + 20:word32]
	r22 = Mem0[r25 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000ACB8
	// succ:  l0000ACB4 l0000ACB8
l0000ACB4:
	r22 = r3
	// succ:  l0000ACB8
l0000ACB8:
	branch Test(EQ,r22) l0000ACB8_ds_t
	// succ:  l0000ACB8_ds_f l0000ACB8_ds_t
l0000ACB8_ds_f:
	r7 = r22
	goto l0000ACC0
	// succ:  l0000ACC0
l0000ACB8_ds_t:
	r7 = r22
	goto l00009DE0
	// succ:  l00009DE0
l0000ACC0:
	r6 = Mem0[r26 + 16:word32]
	r15 = 0x0000ACC8
	r5 = Mem0[r25 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r25 + 12:word32]
	r6 = Mem0[r26 + 16:word32]
	r5 = Mem0[r25 + 20:word32]
	r4 = Mem0[r25 + 16:word32]
	r3 = Mem0[r26 + 20:word32]
	r7 = r7 + r22
	Mem0[r25 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r26 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r25 + 20:word32] = r5
	Mem0[r25 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l0000ACC0_ds_t
	// succ:  l0000ACC0_ds_f l0000ACC0_ds_t
l0000ACC0_ds_f:
	Mem0[r26 + 20:word32] = r22
	goto l0000AD10
	// succ:  l0000AD10
l0000ACC0_ds_t:
	Mem0[r26 + 20:word32] = r22
	goto l00009DE0
	// succ:  l00009DE0
l0000AD10:
	r3 = Mem0[r26 + 8:word32]
	Mem0[r26 + 16:word32] = r3
	goto l00009DE0
	// succ:  l00009DE0
l0000AE48:
	r3 = Mem0[r19 + 92:word32]
	branch Test(LT,r3) l0000AE48_ds_t
	// succ:  l0000AE48_ds_f l0000AE48_ds_t
l0000AE48_ds_f:
	r6 = r24
	goto l0000AE54
	// succ:  l0000AE54
l0000AE48_ds_t:
	r6 = r24
	goto l0000AE5C
	// succ:  l0000AE5C
l0000AE54:
	r6 = Mem0[r19 + 56:word32]
	r6 = r6 + r3
	// succ:  l0000AE5C
l0000AE5C:
	r7 = Mem0[r19 + 108:word32]
	r5 = r19
	r8 = 0x00000001
	r15 = 0x0000AE6C
	r7 = r7 - r3
	call fn00003C90 (retsize: 0;)
	r23 = Mem0[r19:word32]
	r3 = Mem0[r19 + 108:word32]
	r24 = Mem0[r23 + 28:word32]
	Mem0[r19 + 92:word32] = r3
	r15 = 0x0000AE88
	r5 = r24
	call fn00003990 (retsize: 0;)
	r3 = Mem0[r24 + 20:word32]
	r22 = Mem0[r23 + 16:word32]
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0000AEA4
	// succ:  l0000AEA0 l0000AEA4
l0000AEA0:
	r22 = r3
	// succ:  l0000AEA4
l0000AEA4:
	branch Test(EQ,r22) l0000AEA4_ds_t
	// succ:  l0000AEA4_ds_f l0000AEA4_ds_t
l0000AEA4_ds_f:
	r7 = r22
	goto l0000AEAC
	// succ:  l0000AEAC
l0000AEA4_ds_t:
	r7 = r22
	goto l0000AF04
	// succ:  l0000AF04
l0000AEAC:
	r6 = Mem0[r24 + 16:word32]
	r15 = 0x0000AEB4
	r5 = Mem0[r23 + 12:word32]
	call fn00008C34 (retsize: 0;)
	r7 = Mem0[r23 + 12:word32]
	r6 = Mem0[r24 + 16:word32]
	r5 = Mem0[r23 + 20:word32]
	r4 = Mem0[r23 + 16:word32]
	r3 = Mem0[r24 + 20:word32]
	r7 = r7 + r22
	Mem0[r23 + 12:word32] = r7
	r6 = r6 + r22
	Mem0[r24 + 16:word32] = r6
	r5 = r5 + r22
	r4 = r4 - r22
	Mem0[r23 + 20:word32] = r5
	Mem0[r23 + 16:word32] = r4
	r22 = r3 - r22
	branch Test(NE,r22) l0000AEAC_ds_t
	// succ:  l0000AEAC_ds_f l0000AEAC_ds_t
l0000AEAC_ds_f:
	Mem0[r24 + 20:word32] = r22
	goto l0000AEFC
	// succ:  l0000AEFC
l0000AEAC_ds_t:
	Mem0[r24 + 20:word32] = r22
	goto l0000AF04
	// succ:  l0000AF04
l0000AEFC:
	r4 = Mem0[r24 + 8:word32]
	Mem0[r24 + 16:word32] = r4
	// succ:  l0000AF04
l0000AF04:
	r3 = Mem0[r19:word32]
	r3 = Mem0[r3 + 16:word32]
	branch Test(NE,r3) l0000AF04_ds_t
	// succ:  l0000AF04_ds_f l0000AF04_ds_t
l0000AF04_ds_f:
	r3 = 0x0000029A
	goto l0000AF14
	// succ:  l0000AF14
l0000AF04_ds_t:
	r3 = 0x0000029A
	goto l0000AF20
	// succ:  l0000AF20
l0000AF14:
	r5 = 0x0000029A
	Mem0[r19 + 4:word32] = r5
	// succ:  l0000AF18_thunk_fn00009408
l0000AF18_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l0000AF20:
	Mem0[r19 + 4:word32] = r3
	// succ:  l0000AF20_thunk_fn00009408
l0000AF20_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l0000AF28:
	Mem0[r19 + 4:word32] = r4
	// succ:  l0000AF28_thunk_fn00009408
l0000AF28_thunk_fn00009408:
	call fn00009408 (retsize: 0;)
	return
	// succ:  fn0000A774_exit
l0000AF78:
	r18 = cond(r27 -u r3)
	branch Test(LT,r18) l0000AF78_ds_t
	// succ:  l0000AF78_ds_f l0000AF78_ds_t
l0000AF78_ds_f:
	r3 = r3 + 0xFFFFFFFD
	goto l0000AF84
	// succ:  l0000AF84
l0000AF78_ds_t:
	r3 = r3 + 0xFFFFFFFD
	goto l0000AB14
	// succ:  l0000AB14
l0000AF84:
	r4 = Mem0[r19 + 5792:word32]
	goto l0000A7D4
	// succ:  l0000A7D4
l0000AF8C:
	r4 = r4 + 0x00000007
	goto l0000AAF0
	// succ:  l0000AAF0
l0000AF94:
	r4 = r4 + 0x00000006
	goto l0000AAF0
	// succ:  l0000AAF0
l0000AF9C:
	r4 = r4 + 0x00000005
	goto l0000AAF0
	// succ:  l0000AAF0
l0000AFA4:
	r4 = r4 + 0x00000004
	goto l0000AAF0
	// succ:  l0000AAF0
l0000AFAC:
	r4 = r4 + 0x00000002
	goto l0000AAF0
	// succ:  l0000AAF0
l0000AFB4:
	r4 = r4 + 0x00000003
	goto l0000AAF0
	// succ:  l0000AAF0
fn0000A774_exit:


// fn0000AFBC
// Return size: 0
define fn0000AFBC
fn0000AFBC_entry:
	r1 = fp
	// succ:  l0000AFBC
l0000AFBC:
	branch Test(EQ,r5) l0000B31C
	// succ:  l0000AFC0 l0000B31C
l0000AFC0:
	r1 = r1 + 0xFFFFFFD4
	Mem0[r1 + 32:word32] = r21
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	r3 = Mem0[r5 + 32:word32]
	branch Test(EQ,r3) l0000AFC0_ds_t
	// succ:  l0000AFC0_ds_f l0000AFC0_ds_t
l0000AFC0_ds_f:
	r21 = r5
	goto l0000AFE4
	// succ:  l0000AFE4
l0000AFC0_ds_t:
	r21 = r5
	goto l0000B00C
	// succ:  l0000B00C
l0000AFE4:
	r3 = Mem0[r5 + 36:word32]
	branch Test(EQ,r3) l0000AFE4_ds_t
	// succ:  l0000AFE4_ds_f l0000AFE4_ds_t
l0000AFE4_ds_f:
	r3 = 0xFFFFFFFE
	goto l0000AFF0
	// succ:  l0000AFF0
l0000AFE4_ds_t:
	r3 = 0xFFFFFFFE
	goto l0000B010
	// succ:  l0000B010
l0000AFF0:
	r19 = Mem0[r5 + 28:word32]
	branch Test(EQ,r19) l0000AFF0_ds_t
	// succ:  l0000AFF0_ds_f l0000AFF0_ds_t
l0000AFF0_ds_f:
	r15 = Mem0[r1:word32]
	goto l0000AFFC
	// succ:  l0000AFFC
l0000AFF0_ds_t:
	r15 = Mem0[r1:word32]
	goto l0000B014
	// succ:  l0000B014
l0000AFFC:
	r3 = Mem0[r19:word32]
	r3 = r5 ^ r3
	branch Test(EQ,r3) l0000AFFC_ds_t
	// succ:  l0000AFFC_ds_f l0000AFFC_ds_t
l0000AFFC_ds_f:
	r23 = r7
	goto l0000B00C
	// succ:  l0000B00C
l0000AFFC_ds_t:
	r23 = r7
	goto l0000B02C
	// succ:  l0000B02C
l0000B00C:
	r3 = 0xFFFFFFFE
	// succ:  l0000B010
l0000B010:
	r15 = Mem0[r1:word32]
	// succ:  l0000B014
l0000B014:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r1 = r1 + 0x0000002C
	return
	// succ:  fn0000AFBC_exit
l0000B02C:
	r3 = Mem0[r19 + 4:word32]
	r22 = r6
	r5 = r3 ^ 0x0000002A
	r7 = r3 ^ 0x00000045
	r4 = r3 ^ 0x0000005B
	r9 = -r5
	r8 = -r7
	r6 = r3 ^ 0x00000067
	r9 = r9 | r5
	r8 = r8 | r7
	r7 = -r4
	r5 = r3 ^ 0x00000071
	r8 = r8 & r9
	r7 = r7 | r4
	r4 = -r6
	r9 = r3 ^ 0x0000029A
	r4 = r4 | r6
	r7 = r7 & r8
	r6 = -r5
	r3 = r3 + 0xFFFFFFC7
	r3 = r3 & 0xFFFFFFEF
	r4 = r4 & r7
	r6 = r6 | r5
	r5 = -r9
	r6 = r6 & r4
	r5 = r5 | r9
	r4 = -r3
	r3 = r4 | r3
	r5 = r5 & r6
	r3 = r3 & r5
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l0000B02C_ds_t
	// succ:  l0000B02C_ds_f l0000B02C_ds_t
l0000B02C_ds_f:
	r3 = 0xFFFFFFFE
	goto l0000B12C
	// succ:  l0000B12C
l0000B02C_ds_t:
	r3 = 0xFFFFFFFE
	goto l0000B010
	// succ:  l0000B010
l0000B12C:
	r3 = r22 ^ 0xFFFFFFFF
	branch Test(EQ,r3) l0000B12C_ds_t
	// succ:  l0000B12C_ds_f l0000B12C_ds_t
l0000B12C_ds_f:
	r5 = 0x00000009
	goto l0000B138
	// succ:  l0000B138
l0000B12C_ds_t:
	r5 = 0x00000009
	goto l0000B290
	// succ:  l0000B290
l0000B138:
	r18 = cond(r5 -u r22)
	branch Test(LT,r18) l0000B138_ds_t
	// succ:  l0000B138_ds_f l0000B138_ds_t
l0000B138_ds_f:
	r3 = 0x00000001
	goto l0000B144
	// succ:  l0000B144
l0000B138_ds_t:
	r3 = 0x00000001
	goto l0000B148
	// succ:  l0000B148
l0000B144:
	r3 = r4
	// succ:  l0000B148
l0000B148:
	r4 = r3 & 0x000000FF
	goto l0000B14C
	// succ:  l0000B14C
l0000B148_ds_f:
	r3 = 0xFFFFFFFE
	goto l0000B15C
	// succ:  l0000B15C
l0000B148_ds_t:
	r3 = 0xFFFFFFFE
	goto l0000B010
	// succ:  l0000B010
l0000B14C:
	r3 = 0x00000004
	r18 = cond(r3 -u r23)
	branch Test(LT,r18) l0000B148_ds_t
	goto l0000B148_ds_f
	// succ:  l0000B148_ds_f l0000B148_ds_t
l0000B15C:
	branch Test(NE,r4) l0000B15C_ds_t
	// succ:  l0000B15C_ds_f l0000B15C_ds_t
l0000B15C_ds_f:
	r15 = Mem0[r1:word32]
	goto l0000B164
	// succ:  l0000B164
l0000B15C_ds_t:
	r15 = Mem0[r1:word32]
	goto l0000B014
	// succ:  l0000B014
l0000B164:
	r3 = Mem0[r19 + 136:word32]
	r3 = r3 ^ r23
	branch Test(EQ,r3) l0000B164_ds_t
	// succ:  l0000B164_ds_f l0000B164_ds_t
l0000B164_ds_f:
	r4 = r22 + r22
	goto l0000B174
	// succ:  l0000B174
l0000B164_ds_t:
	r4 = r22 + r22
	goto l0000B244
	// succ:  l0000B244
l0000B174:
	r5 = r21
	goto l0000B178
	// succ:  l0000B178
l0000B174_ds_f:
	r3 = 0xFFFFFFFE
	goto l0000B18C
	// succ:  l0000B18C
l0000B174_ds_t:
	r3 = 0xFFFFFFFE
	goto l0000B010
	// succ:  l0000B010
l0000B178:
	r15 = 0x0000B178
	r6 = 0x00000005
	call fn00008E80 (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFE
	branch Test(EQ,r3) l0000B174_ds_t
	goto l0000B174_ds_f
	// succ:  l0000B174_ds_f l0000B174_ds_t
l0000B18C:
	r3 = Mem0[r21 + 16:word32]
	branch Test(EQ,r3) l0000B18C_ds_t
	// succ:  l0000B18C_ds_f l0000B18C_ds_t
l0000B18C_ds_f:
	r3 = 0xFFFFFFFB
	goto l0000B198
	// succ:  l0000B198
l0000B18C_ds_t:
	r3 = 0xFFFFFFFB
	goto l0000B010
	// succ:  l0000B010
l0000B198:
	r6 = Mem0[r19 + 132:word32]
	r3 = r22 ^ r6
	// succ:  l0000B1A0
l0000B1A0:
	branch Test(EQ,r3) l0000B220
	goto l0000B1A4
	// succ:  l0000B1A4 l0000B1A0_thunk_fn0000B298
l0000B1A0_thunk_fn0000B298:
	call fn0000B298 (retsize: 0;)
	return
	// succ:  fn0000AFBC_exit
l0000B1A4:
	branch Test(NE,r6) l0000B1A4_ds_t
	// succ:  l0000B1A4_ds_f l0000B1A4_ds_t
l0000B1A4_ds_f:
	r3 = r22 + r22
	goto l0000B1AC
	// succ:  l0000B1AC
l0000B1A4_ds_t:
	r3 = r22 + r22
	// succ:  l0000B1A8_thunk_fn0000B298
l0000B1A8_thunk_fn0000B298:
	call fn0000B298 (retsize: 0;)
	return
	// succ:  fn0000AFBC_exit
l0000B1AC:
	r3 = Mem0[r19 + 5808:word32]
	branch Test(EQ,r3) l0000B1AC_ds_t
	// succ:  l0000B1AC_ds_f l0000B1AC_ds_t
l0000B1AC_ds_f:
	r3 = r3 ^ 0x00000001
	goto l0000B1B8
	// succ:  l0000B1B8
l0000B1AC_ds_t:
	r3 = r3 ^ 0x00000001
	// succ:  l0000B1B4_thunk_fn0000B298
l0000B1B4_thunk_fn0000B298:
	call fn0000B298 (retsize: 0;)
	return
	// succ:  fn0000AFBC_exit
l0000B1B8:
	r8 = Mem0[r19 + 76:word32]
	r5 = Mem0[r19 + 68:word32]
	r7 = r8 + 0xFFFFFFFF
	branch Test(EQ,r3) l0000B1B8_ds_t
	// succ:  l0000B1B8_ds_f l0000B1B8_ds_t
l0000B1B8_ds_f:
	r7 = r7 + r7
	goto l0000B1CC_thunk_fn0000B1D0
	// succ:  l0000B1CC_thunk_fn0000B1D0
l0000B1B8_ds_t:
	r7 = r7 + r7
	goto l0000B1CC_thunk_fn0000B298
	// succ:  l0000B1CC_thunk_fn0000B298
l0000B1CC_thunk_fn0000B1D0:
	call fn0000B1D0 (retsize: 0;)
	return
	// succ:  fn0000AFBC_exit
l0000B1CC_thunk_fn0000B298:
	call fn0000B298 (retsize: 0;)
	return
	// succ:  fn0000AFBC_exit
l0000B244:
	r6 = Mem0[r19 + 132:word32]
	r4 = r4 + r22
	r3 = r6 + r6
	r3 = r3 + r6
	r4 = r4 + r4
	r3 = r3 + r3
	r4 = r4 + r4
	r3 = r3 + r3
	r4 = r4 + 0xFFFF9DB4
	r3 = r3 + 0xFFFF9DB4
	r4 = Mem0[r4 + 8:word32]
	r3 = Mem0[r3 + 8:word32]
	r3 = r4 ^ r3
	branch Test(NE,r3) l0000B244_ds_t
	// succ:  l0000B244_ds_f l0000B244_ds_t
l0000B244_ds_f:
	r5 = r21
	goto l0000B288
	// succ:  l0000B288
l0000B244_ds_t:
	r5 = r21
	goto l0000B178
	// succ:  l0000B178
l0000B288:
	r3 = r22 ^ r6
	goto l0000B1A0
	// succ:  l0000B1A0
l0000B290:
	r22 = 0x00000006
	goto l0000B14C
	// succ:  l0000B14C
l0000B31C:
	r3 = 0xFFFFFFFE
	return
	// succ:  fn0000AFBC_exit
fn0000AFBC_exit:


// fn0000B1C0
// Return size: 0
define fn0000B1C0
fn0000B1C0_entry:
	r1 = fp
	// succ:  l0000B1C0
l0000B1C0:
	r7 = r8 + 0xFFFFFFFF
	branch Test(EQ,r3) l0000B1C0_ds_t
	// succ:  l0000B1C0_ds_f l0000B1C0_ds_t
l0000B1C0_ds_f:
	r7 = r7 + r7
	goto l0000B1CC_thunk_fn0000B1D0
	// succ:  l0000B1CC_thunk_fn0000B1D0
l0000B1C0_ds_t:
	r7 = r7 + r7
	goto l0000B1CC_thunk_fn0000B298
	// succ:  l0000B1CC_thunk_fn0000B298
l0000B1CC_thunk_fn0000B1D0:
	call fn0000B1D0 (retsize: 0;)
	return
	// succ:  fn0000B1C0_exit
l0000B1CC_thunk_fn0000B298:
	call fn0000B298 (retsize: 0;)
	return
	// succ:  fn0000B1C0_exit
fn0000B1C0_exit:


// fn0000B1D0
// Return size: 0
define fn0000B1D0
fn0000B1D0_entry:
	r1 = fp
	r1 = fp
	// succ:  l0000B1D0 l0000B1D0
l0000B1D0:
	v4 = SLICE(r6, word16, 0)
	Mem0[r7 + r5:word16] = v4
	// succ:  l0000B1D0_thunk_fn0000B298
l0000B1D0_thunk_fn0000B298:
	call fn0000B298 (retsize: 0;)
	return
	// succ:  fn0000B1D0_exit
fn0000B1D0_exit:


// fn0000B298
// Return size: 0
define fn0000B298
fn0000B298_entry:
	r1 = fp
	// succ:  l0000B298
l0000B298:
	r3 = Mem0[r19 + 44:word32]
	r4 = r7 + 0x00000002
	r4 = r5 + r4
	goto l0000B2A4
	// succ:  l0000B2A4
l0000B298_ds_f:
	r9 = r6 - r3
	goto l0000B2B8
	// succ:  l0000B2B8
l0000B298_ds_t:
	r9 = r6 - r3
	goto l0000B2F8
	// succ:  l0000B2F8
l0000B2A4:
	r4 = r4 + 0xFFFFFFFE
	v8 = Mem0[r4:word16]
	r6 = (word32) v8
	r18 = cond(r6 -u r3)
	branch Test(LT,r18) l0000B298_ds_t
	goto l0000B298_ds_f
	// succ:  l0000B298_ds_f l0000B298_ds_t
l0000B2B8:
	r8 = r8 + 0xFFFFFFFF
	branch Test(NE,r8) l0000B2B8_ds_t
	// succ:  l0000B2B8_ds_f l0000B2B8_ds_t
l0000B2B8_ds_f:
	v13 = SLICE(r9, word16, 0)
	Mem0[r4:word16] = v13
	goto l0000B2C4
	// succ:  l0000B2C4
l0000B2B8_ds_t:
	v13 = SLICE(r9, word16, 0)
	Mem0[r4:word16] = v13
	goto l0000B2A4
	// succ:  l0000B2A4
l0000B2C4:
	r4 = Mem0[r19 + 64:word32]
	// succ:  l0000B2C8
l0000B2C8:
	r6 = r3
	r8 = r3 + r3
	r4 = r4 + r8
	// succ:  l0000B2D0_thunk_fn0000B2D4
l0000B2D0_thunk_fn0000B2D4:
	call fn0000B2D4 (retsize: 0;)
	return
	// succ:  fn0000B298_exit
l0000B2F8:
	r8 = r8 + 0xFFFFFFFF
	branch Test(NE,r8) l0000B2F8_ds_t
	// succ:  l0000B2F8_ds_f l0000B2F8_ds_t
l0000B2F8_ds_f:
	v26 = SLICE(r0, word16, 0)
	Mem0[r4:word16] = v26
	goto l0000B304
	// succ:  l0000B304
l0000B2F8_ds_t:
	v26 = SLICE(r0, word16, 0)
	Mem0[r4:word16] = v26
	goto l0000B2A4
	// succ:  l0000B2A4
l0000B304:
	r4 = Mem0[r19 + 64:word32]
	goto l0000B2C8
	// succ:  l0000B2C8
fn0000B298_exit:


// fn0000B2CC
// Return size: 0
define fn0000B2CC
fn0000B2CC_entry:
	r1 = fp
	// succ:  l0000B2CC
l0000B2CC:
	r8 = r3 + r3
	r4 = r4 + r8
	// succ:  l0000B2D0_thunk_fn0000B2D4
l0000B2D0_thunk_fn0000B2D4:
	call fn0000B2D4 (retsize: 0;)
	return
	// succ:  fn0000B2CC_exit
fn0000B2CC_exit:


// fn0000B2D4
// Return size: 0
define fn0000B2D4
fn0000B2D4_entry:
	r1 = fp
	goto l0000B2D4
	// succ:  l0000B2D4
l0000B1D4:
	r15 = 0x0000B1D8
	r6 = 0x00000000
	call fn00008C64 (retsize: 0;)
	Mem0[r19 + 5808:word32] = r0
	// succ:  l0000B1E4
l0000B1E4:
	r3 = r22 + r22
	// succ:  l0000B1E8
l0000B1E8:
	r3 = r3 + r22
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + 0xFFFF9DB4
	v15 = Mem0[r3 + 2:word16]
	r6 = (word32) v15
	v16 = Mem0[r3:word16]
	r5 = (word32) v16
	v18 = Mem0[r3 + 4:word16]
	r4 = (word32) v18
	v19 = Mem0[r3 + 6:word16]
	r3 = (word32) v19
	Mem0[r19 + 132:word32] = r22
	Mem0[r19 + 128:word32] = r6
	Mem0[r19 + 140:word32] = r5
	Mem0[r19 + 144:word32] = r4
	Mem0[r19 + 124:word32] = r3
	// succ:  l0000B220
l0000B220:
	Mem0[r19 + 136:word32] = r23
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r3 = 0x00000000
	r1 = r1 + 0x0000002C
	return
	// succ:  fn0000B2D4_exit
l0000B2C4_ds_f:
	r9 = r8 - r3
	goto l0000B2E8
	// succ:  l0000B2E8
l0000B2C4_ds_t:
	r9 = r8 - r3
	goto l0000B30C
	// succ:  l0000B30C
l0000B2D4:
	r4 = r4 + 0xFFFFFFFE
	v4 = Mem0[r4:word16]
	r8 = (word32) v4
	r18 = cond(r8 -u r3)
	branch Test(LT,r18) l0000B2C4_ds_t
	goto l0000B2C4_ds_f
	// succ:  l0000B2C4_ds_f l0000B2C4_ds_t
l0000B2E8:
	r6 = r6 + 0xFFFFFFFF
	branch Test(NE,r6) l0000B2E8_ds_t
	// succ:  l0000B2E8_ds_f l0000B2E8_ds_t
l0000B2E8_ds_f:
	v10 = SLICE(r9, word16, 0)
	Mem0[r4:word16] = v10
	goto l0000B2F4
	// succ:  l0000B2F4
l0000B2E8_ds_t:
	v10 = SLICE(r9, word16, 0)
	Mem0[r4:word16] = v10
	goto l0000B2D4
	// succ:  l0000B2D4
l0000B2F4:
	goto l0000B1D4
	// succ:  l0000B1D4
l0000B30C:
	r6 = r6 + 0xFFFFFFFF
	branch Test(NE,r6) l0000B30C_ds_t
	// succ:  l0000B30C_ds_f l0000B30C_ds_t
l0000B30C_ds_f:
	v22 = SLICE(r0, word16, 0)
	Mem0[r4:word16] = v22
	goto l0000B318
	// succ:  l0000B318
l0000B30C_ds_t:
	v22 = SLICE(r0, word16, 0)
	Mem0[r4:word16] = v22
	goto l0000B2D4
	// succ:  l0000B2D4
l0000B318:
	goto l0000B1D4
	// succ:  l0000B1D4
fn0000B2D4_exit:


// fn0000B324
// Return size: 0
define fn0000B324
fn0000B324_entry:
	r1 = fp
	// succ:  l0000B324
l0000B324:
	branch Test(EQ,r5) l0000B504
	// succ:  l0000B328 l0000B504
l0000B328:
	r3 = Mem0[r5 + 32:word32]
	branch Test(EQ,r3) l0000B504
	// succ:  l0000B330 l0000B504
l0000B330:
	r7 = Mem0[r5 + 36:word32]
	branch Test(EQ,r7) l0000B504
	// succ:  l0000B338 l0000B504
l0000B338:
	r4 = Mem0[r5 + 28:word32]
	branch Test(EQ,r4) l0000B504
	// succ:  l0000B340 l0000B504
l0000B340:
	r6 = Mem0[r4:word32]
	r6 = r5 ^ r6
	branch Test(EQ,r6) l0000B340_ds_t
	// succ:  l0000B340_ds_f l0000B340_ds_t
l0000B340_ds_f:
	r3 = 0xFFFFFFFE
	goto l0000B350
	// succ:  l0000B350
l0000B340_ds_t:
	r3 = 0xFFFFFFFE
	goto l0000B358
	// succ:  l0000B358
l0000B350:
	return
	// succ:  fn0000B324_exit
l0000B358:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1:word32] = r15
	r6 = Mem0[r4 + 4:word32]
	r8 = r6 ^ 0x00000045
	r19 = r6 ^ 0x0000002A
	r10 = r6 ^ 0x0000005B
	r9 = -r8
	r11 = -r19
	r12 = r6 ^ 0x00000067
	r11 = r11 | r19
	r9 = r9 | r8
	r8 = -r10
	r9 = r9 & r11
	r21 = r6 ^ 0x00000071
	r8 = r8 | r10
	r10 = -r12
	r8 = r8 & r9
	r11 = r6 ^ 0x0000029A
	r10 = r10 | r12
	r9 = -r21
	r10 = r10 & r8
	r9 = r9 | r21
	r8 = -r11
	r9 = r9 & r10
	r8 = r8 | r11
	r8 = r8 & r9
	branch Test(GE,r8) l0000B358_ds_t
	// succ:  l0000B358_ds_f l0000B358_ds_t
l0000B358_ds_f:
	r6 = r6 + 0xFFFFFFC7
	goto l0000B3D0
	// succ:  l0000B3D0
l0000B358_ds_t:
	r6 = r6 + 0xFFFFFFC7
	goto l0000B464
	// succ:  l0000B464
l0000B3D0:
	r6 = r6 & 0xFFFFFFEF
	r8 = -r6
	r6 = r8 | r6
	r8 = r6
	r8 = r6 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	branch Test(NE,r8) l0000B3D0_ds_t
	// succ:  l0000B3D0_ds_f l0000B3D0_ds_t
l0000B3D0_ds_f:
	r15 = Mem0[r1:word32]
	goto l0000B464
	// succ:  l0000B464
l0000B3D0_ds_t:
	r15 = Mem0[r1:word32]
	goto l0000B4F4
	// succ:  l0000B4F4
l0000B464:
	r6 = Mem0[r4 + 8:word32]
	r19 = r5
	branch Test(EQ,r6) l0000B464_ds_t
	// succ:  l0000B464_ds_f l0000B464_ds_t
l0000B464_ds_f:
	r5 = Mem0[r5 + 40:word32]
	goto l0000B474
	// succ:  l0000B474
l0000B464_ds_t:
	r5 = Mem0[r5 + 40:word32]
	goto l0000B488
	// succ:  l0000B488
l0000B474:
	r15 = 0x0000B474
	call 0x0000B474 + r7 (retsize: 0;)
	r4 = Mem0[r19 + 28:word32]
	r7 = Mem0[r19 + 36:word32]
	r5 = Mem0[r19 + 40:word32]
	// succ:  l0000B488
l0000B488:
	r6 = Mem0[r4 + 68:word32]
	branch Test(EQ,r6) l0000B4A4
	// succ:  l0000B490 l0000B4A4
l0000B490:
	r15 = 0x0000B490
	call 0x0000B490 + r7 (retsize: 0;)
	r4 = Mem0[r19 + 28:word32]
	r7 = Mem0[r19 + 36:word32]
	r5 = Mem0[r19 + 40:word32]
	// succ:  l0000B4A4
l0000B4A4:
	r6 = Mem0[r4 + 64:word32]
	branch Test(EQ,r6) l0000B4C0
	// succ:  l0000B4AC l0000B4C0
l0000B4AC:
	r15 = 0x0000B4AC
	call 0x0000B4AC + r7 (retsize: 0;)
	r4 = Mem0[r19 + 28:word32]
	r7 = Mem0[r19 + 36:word32]
	r5 = Mem0[r19 + 40:word32]
	// succ:  l0000B4C0
l0000B4C0:
	r6 = Mem0[r4 + 56:word32]
	branch Test(EQ,r6) l0000B4DC
	// succ:  l0000B4C8 l0000B4DC
l0000B4C8:
	r15 = 0x0000B4C8
	call 0x0000B4C8 + r7 (retsize: 0;)
	r7 = Mem0[r19 + 36:word32]
	r5 = Mem0[r19 + 40:word32]
	r4 = Mem0[r19 + 28:word32]
	// succ:  l0000B4DC
l0000B4DC:
	r15 = 0x0000B4DC
	r6 = r4
	call 0x0000B4DC + r7 (retsize: 0;)
	Mem0[r19 + 28:word32] = r0
	branch Test(EQ,r21) l0000B4DC_ds_t
	// succ:  l0000B4DC_ds_f l0000B4DC_ds_t
l0000B4DC_ds_f:
	r3 = 0x00000000
	goto l0000B4F0
	// succ:  l0000B4F0
l0000B4DC_ds_t:
	r3 = 0x00000000
	goto l0000B50C
	// succ:  l0000B50C
l0000B4F0:
	r15 = Mem0[r1:word32]
	// succ:  l0000B4F4
l0000B4F4:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn0000B324_exit
l0000B504:
	r3 = 0xFFFFFFFE
	return
	// succ:  fn0000B324_exit
l0000B50C:
	r3 = 0xFFFFFFFD
	goto l0000B4F0
	// succ:  l0000B4F0
fn0000B324_exit:


// fn0000B514
// Return size: 0
define fn0000B514
fn0000B514_entry:
	r1 = fp
	// succ:  l0000B514
l0000B514:
	r1 = r1 + 0xFFFFFFC0
	r3 = Mem0[r1 + 92:word32]
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	branch Test(EQ,r3) l0000B514_ds_t
	// succ:  l0000B514_ds_f l0000B514_ds_t
l0000B514_ds_f:
	Mem0[r1 + 60:word32] = r28
	goto l0000B544_thunk_fn0000B548
	// succ:  l0000B544_thunk_fn0000B548
l0000B514_ds_t:
	Mem0[r1 + 60:word32] = r28
	goto l0000B544_thunk_fn0000B9E0
	// succ:  l0000B544_thunk_fn0000B9E0
l0000B544_thunk_fn0000B548:
	call fn0000B548 (retsize: 0;)
	return
	// succ:  fn0000B514_exit
l0000B544_thunk_fn0000B9E0:
	call fn0000B9E0 (retsize: 0;)
	return
	// succ:  fn0000B514_exit
fn0000B514_exit:


// fn0000B51C
// Return size: 0
define fn0000B51C
fn0000B51C_entry:
	r1 = fp
	// succ:  l0000B51C
l0000B51C:
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	branch Test(EQ,r3) l0000B51C_ds_t
	// succ:  l0000B51C_ds_f l0000B51C_ds_t
l0000B51C_ds_f:
	Mem0[r1 + 60:word32] = r28
	goto l0000B544_thunk_fn0000B548
	// succ:  l0000B544_thunk_fn0000B548
l0000B51C_ds_t:
	Mem0[r1 + 60:word32] = r28
	goto l0000B544_thunk_fn0000B9E0
	// succ:  l0000B544_thunk_fn0000B9E0
l0000B544_thunk_fn0000B548:
	call fn0000B548 (retsize: 0;)
	return
	// succ:  fn0000B51C_exit
l0000B544_thunk_fn0000B9E0:
	call fn0000B9E0 (retsize: 0;)
	return
	// succ:  fn0000B51C_exit
fn0000B51C_exit:


// fn0000B548
// Return size: 0
define fn0000B548
fn0000B548_entry:
	r1 = fp
	// succ:  l0000B548
l0000B548:
	v4 = Mem0[r3:byte]
	r4 = (word32) v4
	r3 = Mem0[r1 + 96:word32]
	r21 = r5
	r4 = r4 ^ 0x00000031
	r5 = r3 ^ 0x00000038
	r3 = -r5
	r4 = -r4
	r3 = r3 | r5
	r3 = r3 | r4
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l0000B9E0
	goto l0000B5F0
	// succ:  l0000B5F0 l0000B5EC_thunk_fn0000B9E0
l0000B5EC_thunk_fn0000B9E0:
	call fn0000B9E0 (retsize: 0;)
	return
	// succ:  fn0000B548_exit
l0000B5F0:
	branch Test(EQ,r21) l0000B5F0_ds_t
	// succ:  l0000B5F0_ds_f l0000B5F0_ds_t
l0000B5F0_ds_f:
	r23 = r6
	goto l0000B5F8
	// succ:  l0000B5F8
l0000B5F0_ds_t:
	r23 = r6
	goto l0000B6F4
	// succ:  l0000B6F4
l0000B5F8:
	r3 = Mem0[r21 + 32:word32]
	Mem0[r21 + 24:word32] = r4
	r25 = r9
	branch Test(EQ,r3) l0000B5F8_ds_t
	// succ:  l0000B5F8_ds_f l0000B5F8_ds_t
l0000B5F8_ds_f:
	r22 = r10
	goto l0000B60C
	// succ:  l0000B60C
l0000B5F8_ds_t:
	r22 = r10
	goto l0000B9C8
	// succ:  l0000B9C8
l0000B60C:
	r5 = Mem0[r21 + 36:word32]
	branch Test(EQ,r5) l0000B9B8
	// succ:  l0000B614 l0000B9B8
l0000B614:
	r5 = r23 ^ 0xFFFFFFFF
	branch Test(EQ,r5) l0000B990
	// succ:  l0000B61C l0000B990
l0000B61C:
	branch Test(LT,r8) l0000B998
	// succ:  l0000B620 l0000B998
l0000B620:
	r5 = 0x0000000F
	r18 = cond(r5 - r8)
	branch Test(LT,r18) l0000B620_ds_t
	// succ:  l0000B620_ds_f l0000B620_ds_t
l0000B620_ds_f:
	r28 = 0x00000001
	goto l0000B630
	// succ:  l0000B630
l0000B620_ds_t:
	r28 = 0x00000001
	goto l0000B9A8
	// succ:  l0000B9A8
l0000B630:
	r6 = r25 + 0xFFFFFFFF
	r5 = 0x00000008
	r18 = cond(r5 -u r6)
	branch Test(LT,r18) l0000B630_ds_t
	// succ:  l0000B630_ds_f l0000B630_ds_t
l0000B630_ds_f:
	r5 = 0x00000007
	goto l0000B644
	// succ:  l0000B644
l0000B630_ds_t:
	r5 = 0x00000007
	goto l0000B6F4
	// succ:  l0000B6F4
l0000B644:
	r6 = r8 + 0xFFFFFFF8
	r18 = cond(r5 -u r6)
	branch Test(LT,r18) l0000B644_ds_t
	// succ:  l0000B644_ds_f l0000B644_ds_t
l0000B644_ds_f:
	r24 = r8
	goto l0000B654
	// succ:  l0000B654
l0000B644_ds_t:
	r24 = r8
	goto l0000B6F4
	// succ:  l0000B6F4
l0000B654:
	r7 = r7 ^ 0x00000008
	r5 = -r7
	r7 = r5 | r7
	r5 = r7
	r5 = r7 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	branch Test(NE,r5) l0000B654_ds_t
	// succ:  l0000B654_ds_f l0000B654_ds_t
l0000B654_ds_f:
	r5 = 0x00000009
	goto l0000B6E8
	// succ:  l0000B6E8
l0000B654_ds_t:
	r5 = 0x00000009
	goto l0000B6F4
	// succ:  l0000B6F4
l0000B6E8:
	r18 = cond(r5 -u r23)
	branch Test(GE,r18) l0000B6E8_ds_t
	// succ:  l0000B6E8_ds_f l0000B6E8_ds_t
l0000B6E8_ds_f:
	r5 = 0x00000004
	goto l0000B6F4
	// succ:  l0000B6F4
l0000B6E8_ds_t:
	r5 = 0x00000004
	goto l0000B6FC
	// succ:  l0000B6FC
l0000B6F4:
	r22 = 0xFFFFFFFE
	// succ:  l0000B6F4_thunk_fn0000B9E0
l0000B6F4_thunk_fn0000B9E0:
	call fn0000B9E0 (retsize: 0;)
	return
	// succ:  fn0000B548_exit
l0000B6FC:
	r18 = cond(r5 -u r22)
	branch Test(LT,r18) l0000B6FC_ds_t
	// succ:  l0000B6FC_ds_f l0000B6FC_ds_t
l0000B6FC_ds_f:
	r5 = r8 ^ 0x00000008
	goto l0000B708
	// succ:  l0000B708
l0000B6FC_ds_t:
	r5 = r8 ^ 0x00000008
	goto l0000B6F4
	// succ:  l0000B6F4
l0000B708:
	r6 = -r5
	r6 = r6 | r5
	branch Test(LT,r6) l0000B718
	// succ:  l0000B714 l0000B718
l0000B714:
	branch Test(NE,r4) l0000B6F4
	// succ:  l0000B718 l0000B6F4
l0000B718:
	branch Test(NE,r5) l0000B720
	// succ:  l0000B71C l0000B720
l0000B71C:
	r24 = 0x00000009
	// succ:  l0000B720
l0000B720:
	r5 = Mem0[r21 + 40:word32]
	r7 = 0x000016C4
	r15 = 0x0000B728
	r6 = 0x00000001
	call 0x0000B728 + r3 (retsize: 0;)
	branch Test(EQ,r3) l0000B720_ds_t
	// succ:  l0000B720_ds_f l0000B720_ds_t
l0000B720_ds_f:
	r19 = r3
	goto l0000B738
	// succ:  l0000B738
l0000B720_ds_t:
	r19 = r3
	goto l0000BA10
	// succ:  l0000BA10
l0000B738:
	Mem0[r21 + 28:word32] = r3
	r4 = r25 + 0x00000007
	r26 = 0x00000001
	r3 = 0x0000002A
	r18 = r24 & 0x0000001F
	r27 = r26
	branch Test(EQ,r18) l0000B738_ds_t
	// succ:  l0000B738_ds_f l0000B738_ds_t
l0000B738_ds_f:
	r27 = r27
	goto l0000B758
	// succ:  l0000B758
l0000B738_ds_t:
	r27 = r27
	goto l0000B764
	// succ:  l0000B764
l0000B758:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000B758_ds_t
	// succ:  l0000B758_ds_f l0000B758_ds_t
l0000B758_ds_f:
	r27 = r27 + r27
	goto l0000B764
	// succ:  l0000B764
l0000B758_ds_t:
	r27 = r27 + r27
	goto l0000B758
	// succ:  l0000B758
l0000B764:
	Mem0[r19 + 4:word32] = r3
	r8 = r27 + 0xFFFFFFFF
	r18 = r4 & 0x0000001F
	r3 = r26
	branch Test(EQ,r18) l0000B764_ds_t
	// succ:  l0000B764_ds_f l0000B764_ds_t
l0000B764_ds_f:
	r3 = r3
	goto l0000B77C
	// succ:  l0000B77C
l0000B764_ds_t:
	r3 = r3
	goto l0000B788
	// succ:  l0000B788
l0000B77C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000B77C_ds_t
	// succ:  l0000B77C_ds_f l0000B77C_ds_t
l0000B77C_ds_f:
	r3 = r3 + r3
	goto l0000B788
	// succ:  l0000B788
l0000B77C_ds_t:
	r3 = r3 + r3
	goto l0000B77C
	// succ:  l0000B77C
l0000B788:
	r7 = r3 + 0xFFFFFFFF
	Mem0[r19 + 52:word32] = r8
	r6 = 0x00000003
	r5 = r25 + 0x00000009
	Mem0[r19 + 80:word32] = r4
	Mem0[r19 + 84:word32] = r7
	Mem0[r19:word32] = r21
	Mem0[r19 + 24:word32] = r28
	Mem0[r19 + 28:word32] = r0
	Mem0[r19 + 48:word32] = r24
	Mem0[r19 + 44:word32] = r27
	r15 = 0x0000B7B8
	Mem0[r19 + 76:word32] = r3
	call fn00007F88 (retsize: 0;)
	r5 = Mem0[r21 + 40:word32]
	r4 = Mem0[r21 + 32:word32]
	r6 = r27
	r7 = 0x00000002
	r15 = 0x0000B7D0
	Mem0[r19 + 88:word32] = r3
	call 0x0000B7D0 + r4 (retsize: 0;)
	r5 = Mem0[r21 + 40:word32]
	r4 = Mem0[r21 + 32:word32]
	r6 = Mem0[r19 + 44:word32]
	r7 = 0x00000002
	r15 = 0x0000B7E8
	Mem0[r19 + 56:word32] = r3
	call 0x0000B7E8 + r4 (retsize: 0;)
	r5 = Mem0[r21 + 40:word32]
	r4 = Mem0[r21 + 32:word32]
	r6 = Mem0[r19 + 76:word32]
	r7 = 0x00000002
	r15 = 0x0000B800
	Mem0[r19 + 64:word32] = r3
	call 0x0000B800 + r4 (retsize: 0;)
	r9 = r25 + 0x00000006
	r5 = Mem0[r21 + 40:word32]
	r18 = r9 & 0x0000001F
	r4 = r26
	branch Test(EQ,r18) l0000B788_ds_t
	// succ:  l0000B788_ds_f l0000B788_ds_t
l0000B788_ds_f:
	r4 = r4
	goto l0000B820
	// succ:  l0000B820
l0000B788_ds_t:
	r4 = r4
	goto l0000B82C
	// succ:  l0000B82C
l0000B820:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000B820_ds_t
	// succ:  l0000B820_ds_f l0000B820_ds_t
l0000B820_ds_f:
	r4 = r4 + r4
	goto l0000B82C
	// succ:  l0000B82C
l0000B820_ds_t:
	r4 = r4 + r4
	goto l0000B820
	// succ:  l0000B820
l0000B82C:
	r8 = Mem0[r21 + 32:word32]
	r6 = r4
	Mem0[r19 + 5788:word32] = r4
	r7 = 0x00000004
	Mem0[r19 + 68:word32] = r3
	r15 = 0x0000B840
	Mem0[r19 + 5824:word32] = r0
	call 0x0000B840 + r8 (retsize: 0;)
	r5 = Mem0[r19 + 5788:word32]
	r6 = Mem0[r19 + 56:word32]
	Mem0[r19 + 8:word32] = r3
	r4 = r5 + r5
	r7 = r4 + r4
	branch Test(EQ,r6) l0000B82C_ds_t
	// succ:  l0000B82C_ds_f l0000B82C_ds_t
l0000B82C_ds_f:
	Mem0[r19 + 12:word32] = r7
	goto l0000B864
	// succ:  l0000B864
l0000B82C_ds_t:
	Mem0[r19 + 12:word32] = r7
	goto l0000B9E8
	// succ:  l0000B9E8
l0000B864:
	r6 = Mem0[r19 + 64:word32]
	branch Test(EQ,r6) l0000B9E8
	// succ:  l0000B86C l0000B9E8
l0000B86C:
	r6 = Mem0[r19 + 68:word32]
	r7 = -r6
	r6 = r6 | r7
	branch Test(GE,r6) l0000B86C_ds_t
	// succ:  l0000B86C_ds_f l0000B86C_ds_t
l0000B86C_ds_f:
	r6 = -r3
	goto l0000B880
	// succ:  l0000B880
l0000B86C_ds_t:
	r6 = -r3
	goto l0000B9E8
	// succ:  l0000B9E8
l0000B880:
	r6 = r3 | r6
	branch Test(GE,r6) l0000B880_ds_t
	// succ:  l0000B880_ds_f l0000B880_ds_t
l0000B880_ds_f:
	r4 = r4 + r5
	goto l0000B88C
	// succ:  l0000B88C
l0000B880_ds_t:
	r4 = r4 + r5
	goto l0000B9E8
	// succ:  l0000B9E8
l0000B88C:
	r6 = r5 & 0xFFFFFFFE
	r6 = r3 + r6
	r5 = r21
	r3 = r3 + r4
	Mem0[r19 + 5784:word32] = r3
	r3 = 0x00000008
	Mem0[r19 + 136:word32] = r22
	Mem0[r19 + 5796:word32] = r6
	Mem0[r19 + 132:word32] = r23
	r15 = 0x0000B8B0
	v25 = SLICE(r3, byte, 0)
	Mem0[r19 + 36:byte] = v25
	call fn00008008 (retsize: 0;)
	branch Test(NE,r3) l0000B88C_ds_t
	// succ:  l0000B88C_ds_f l0000B88C_ds_t
l0000B88C_ds_f:
	r22 = r3
	goto l0000B8C0
	// succ:  l0000B8C0
l0000B88C_ds_t:
	r22 = r3
	// succ:  l0000B8BC_thunk_fn0000B9E0
l0000B8BC_thunk_fn0000B9E0:
	call fn0000B9E0 (retsize: 0;)
	return
	// succ:  fn0000B548_exit
l0000B8C0:
	r19 = Mem0[r21 + 28:word32]
	r6 = r3
	r3 = Mem0[r19 + 76:word32]
	r4 = Mem0[r19 + 44:word32]
	r8 = Mem0[r19 + 68:word32]
	r3 = r3 + 0xFFFFFFFF
	r3 = r3 + r3
	r4 = r4 + r4
	r7 = r3
	r5 = r8
	Mem0[r19 + 60:word32] = r4
	r15 = 0x0000B8F4
	v26 = SLICE(r22, word16, 0)
	Mem0[r3 + r8:word16] = v26
	call fn00008C64 (retsize: 0;)
	r4 = Mem0[r19 + 132:word32]
	r5 = 0x00000002
	Mem0[r19 + 108:word32] = r22
	r3 = r4 + r4
	r3 = r3 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + 0xFFFF9DB4
	v27 = Mem0[r3 + 2:word16]
	r7 = (word32) v27
	v28 = Mem0[r3:word16]
	r6 = (word32) v28
	v29 = Mem0[r3 + 4:word16]
	r4 = (word32) v29
	v30 = Mem0[r3 + 6:word16]
	r3 = (word32) v30
	Mem0[r19 + 128:word32] = r7
	Mem0[r19 + 140:word32] = r6
	Mem0[r19 + 144:word32] = r4
	Mem0[r19 + 124:word32] = r3
	Mem0[r19 + 92:word32] = r22
	Mem0[r19 + 116:word32] = r22
	Mem0[r19 + 5812:word32] = r22
	Mem0[r19 + 120:word32] = r5
	Mem0[r19 + 96:word32] = r5
	Mem0[r19 + 104:word32] = r22
	Mem0[r19 + 72:word32] = r22
	// succ:  l0000B958_thunk_fn0000B9E0
l0000B958_thunk_fn0000B9E0:
	call fn0000B9E0 (retsize: 0;)
	return
	// succ:  fn0000B548_exit
l0000B990:
	branch Test(GE,r8) l0000B990_ds_t
	// succ:  l0000B990_ds_f l0000B990_ds_t
l0000B990_ds_f:
	r23 = 0x00000006
	goto l0000B998
	// succ:  l0000B998
l0000B990_ds_t:
	r23 = 0x00000006
	goto l0000B620
	// succ:  l0000B620
l0000B998:
	r8 = -r8
	r4 = 0x00000001
	r28 = 0x00000000
	goto l0000B630
	// succ:  l0000B630
l0000B9A8:
	r4 = r28
	r8 = r8 + 0xFFFFFFF0
	r28 = 0x00000002
	goto l0000B630
	// succ:  l0000B630
l0000B9B8:
	r5 = 0x00004C80
	Mem0[r21 + 36:word32] = r5
	goto l0000B614
	// succ:  l0000B614
l0000B9C8:
	r5 = 0x00004C58
	Mem0[r21 + 40:word32] = r3
	Mem0[r21 + 32:word32] = r5
	r3 = r5
	goto l0000B60C
	// succ:  l0000B60C
l0000B9E8:
	r5 = 0x0000029A
	r3 = Mem0[0x0000B5C0:word32]
	Mem0[r19 + 4:word32] = r5
	r5 = r21
	Mem0[r21 + 24:word32] = r3
	r15 = 0x0000BA00
	r22 = 0xFFFFFFFC
	call fn0000B324 (retsize: 0;)
	r3 = r22
	// succ:  l0000BA08_thunk_fn0000B9E0
l0000BA08_thunk_fn0000B9E0:
	call fn0000B9E0 (retsize: 0;)
	return
	// succ:  fn0000B548_exit
l0000BA10:
	r22 = 0xFFFFFFFC
	// succ:  l0000BA10_thunk_fn0000B9E0
l0000BA10_thunk_fn0000B9E0:
	call fn0000B9E0 (retsize: 0;)
	return
	// succ:  fn0000B548_exit
fn0000B548_exit:


// fn0000B9E0
// Return size: 0
define fn0000B9E0
fn0000B9E0_entry:
	r1 = fp
	goto l0000B9E0
	// succ:  l0000B9E0
l0000B95C:
	r3 = r22
	// succ:  l0000B960
l0000B960:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r28 = Mem0[r1 + 60:word32]
	r1 = r1 + 0x00000040
	return
	// succ:  fn0000B9E0_exit
l0000B9E0:
	r22 = 0xFFFFFFFA
	goto l0000B95C
	// succ:  l0000B95C
fn0000B9E0_exit:


// fn0000BA7C
// Return size: 0
define fn0000BA7C
fn0000BA7C_entry:
	r1 = fp
	// succ:  l0000BA7C
l0000BA7C:
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l0000BA7C_ds_t
	// succ:  l0000BA7C_ds_f l0000BA7C_ds_t
l0000BA7C_ds_f:
	r8 = r8 ^ 0x00000038
	goto l0000BAC4
	// succ:  l0000BAC4
l0000BA7C_ds_t:
	r8 = r8 ^ 0x00000038
	goto l0000BE50
	// succ:  l0000BE50
l0000BAC4:
	r3 = -r8
	r8 = r3 | r8
	r4 = r8
	r4 = r8 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l0000BE50
	// succ:  l0000BB50 l0000BE50
l0000BB50:
	branch Test(EQ,r5) l0000BB50_ds_t
	// succ:  l0000BB50_ds_f l0000BB50_ds_t
l0000BB50_ds_f:
	r21 = r5
	goto l0000BB58
	// succ:  l0000BB58
l0000BB50_ds_t:
	r21 = r5
	goto l0000BE80
	// succ:  l0000BE80
l0000BB58:
	r3 = Mem0[r5 + 32:word32]
	Mem0[r5 + 24:word32] = r4
	branch Test(EQ,r3) l0000BB58_ds_t
	// succ:  l0000BB58_ds_f l0000BB58_ds_t
l0000BB58_ds_f:
	r22 = r6
	goto l0000BB68
	// succ:  l0000BB68
l0000BB58_ds_t:
	r22 = r6
	goto l0000BE38
	// succ:  l0000BE38
l0000BB68:
	r4 = Mem0[r21 + 36:word32]
	branch Test(EQ,r4) l0000BE28
	// succ:  l0000BB70 l0000BE28
l0000BB70:
	r4 = r22 ^ 0xFFFFFFFF
	branch Test(EQ,r4) l0000BB70_ds_t
	// succ:  l0000BB70_ds_f l0000BB70_ds_t
l0000BB70_ds_f:
	r4 = 0x00000009
	goto l0000BB7C
	// succ:  l0000BB7C
l0000BB70_ds_t:
	r4 = 0x00000009
	goto l0000BE20
	// succ:  l0000BE20
l0000BB7C:
	r18 = cond(r4 -u r22)
	branch Test(LT,r18) l0000BE80
	// succ:  l0000BB84 l0000BE80
l0000BB84:
	r5 = Mem0[r21 + 40:word32]
	r7 = 0x000016C4
	r15 = 0x0000BB8C
	r6 = 0x00000001
	call 0x0000BB8C + r3 (retsize: 0;)
	branch Test(EQ,r3) l0000BB84_ds_t
	// succ:  l0000BB84_ds_f l0000BB84_ds_t
l0000BB84_ds_f:
	r19 = r3
	goto l0000BB9C
	// succ:  l0000BB9C
l0000BB84_ds_t:
	r19 = r3
	goto l0000BE88
	// succ:  l0000BE88
l0000BB9C:
	Mem0[r21 + 28:word32] = r3
	r4 = 0xFFFF8000
	r3 = 0x0000002A
	r5 = Mem0[r21 + 40:word32]
	Mem0[r19 + 4:word32] = r3
	r3 = 0x00000001
	Mem0[r19 + 24:word32] = r3
	r3 = 0x00000005
	r6 = r4
	Mem0[r19 + 88:word32] = r3
	r3 = Mem0[r21 + 32:word32]
	r9 = 0x0000000F
	r8 = 0x00007FFF
	Mem0[r19 + 48:word32] = r9
	Mem0[r19 + 52:word32] = r8
	Mem0[r19 + 80:word32] = r9
	Mem0[r19 + 84:word32] = r8
	r7 = 0x00000002
	Mem0[r19 + 44:word32] = r4
	Mem0[r19 + 76:word32] = r4
	Mem0[r19:word32] = r21
	r15 = 0x0000BBF4
	Mem0[r19 + 28:word32] = r0
	call 0x0000BBF4 + r3 (retsize: 0;)
	r5 = Mem0[r21 + 40:word32]
	r4 = Mem0[r21 + 32:word32]
	r6 = Mem0[r19 + 44:word32]
	r7 = 0x00000002
	r15 = 0x0000BC0C
	Mem0[r19 + 56:word32] = r3
	call 0x0000BC0C + r4 (retsize: 0;)
	r5 = Mem0[r21 + 40:word32]
	r4 = Mem0[r21 + 32:word32]
	r6 = Mem0[r19 + 76:word32]
	r7 = 0x00000002
	r15 = 0x0000BC24
	Mem0[r19 + 64:word32] = r3
	call 0x0000BC24 + r4 (retsize: 0;)
	r4 = 0x00004000
	r5 = Mem0[r21 + 40:word32]
	r8 = Mem0[r21 + 32:word32]
	r6 = r4
	Mem0[r19 + 5788:word32] = r4
	r7 = 0x00000004
	Mem0[r19 + 68:word32] = r3
	r15 = 0x0000BC48
	Mem0[r19 + 5824:word32] = r0
	call 0x0000BC48 + r8 (retsize: 0;)
	r6 = Mem0[r19 + 5788:word32]
	r5 = Mem0[r19 + 56:word32]
	Mem0[r19 + 8:word32] = r3
	r4 = r6 + r6
	r7 = r4 + r4
	branch Test(EQ,r5) l0000BB9C_ds_t
	// succ:  l0000BB9C_ds_f l0000BB9C_ds_t
l0000BB9C_ds_f:
	Mem0[r19 + 12:word32] = r7
	goto l0000BC6C
	// succ:  l0000BC6C
l0000BB9C_ds_t:
	Mem0[r19 + 12:word32] = r7
	goto l0000BE58
	// succ:  l0000BE58
l0000BC6C:
	r5 = Mem0[r19 + 64:word32]
	branch Test(EQ,r5) l0000BE58
	// succ:  l0000BC74 l0000BE58
l0000BC74:
	r5 = Mem0[r19 + 68:word32]
	r7 = -r5
	r5 = r5 | r7
	branch Test(GE,r5) l0000BC74_ds_t
	// succ:  l0000BC74_ds_f l0000BC74_ds_t
l0000BC74_ds_f:
	r5 = -r3
	goto l0000BC88
	// succ:  l0000BC88
l0000BC74_ds_t:
	r5 = -r3
	goto l0000BE58
	// succ:  l0000BE58
l0000BC88:
	r5 = r3 | r5
	r5 = r5 ^ 0xFFFFFFFF
	r8 = r5
	r8 = r5 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	branch Test(NE,r8) l0000BC88_ds_t
	// succ:  l0000BC88_ds_f l0000BC88_ds_t
l0000BC88_ds_f:
	r4 = r4 + r6
	goto l0000BD18
	// succ:  l0000BD18
l0000BC88_ds_t:
	r4 = r4 + r6
	goto l0000BE58
	// succ:  l0000BE58
l0000BD18:
	r7 = r6 & 0xFFFFFFFE
	r5 = r21
	r6 = r3 + r7
	r3 = r3 + r4
	r4 = 0x00000008
	Mem0[r19 + 132:word32] = r22
	Mem0[r19 + 5796:word32] = r6
	Mem0[r19 + 5784:word32] = r3
	Mem0[r19 + 136:word32] = r8
	r15 = 0x0000BD3C
	v17 = SLICE(r4, byte, 0)
	Mem0[r19 + 36:byte] = v17
	call fn00008008 (retsize: 0;)
	branch Test(EQ,r3) l0000BD18_ds_t
	// succ:  l0000BD18_ds_f l0000BD18_ds_t
l0000BD18_ds_f:
	r22 = r3
	goto l0000BD4C
	// succ:  l0000BD4C
l0000BD18_ds_t:
	r22 = r3
	goto l0000BD68
	// succ:  l0000BD68
l0000BD4C:
	r3 = r22
	// succ:  l0000BD50
l0000BD50:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r1 = r1 + 0x00000028
	return
	// succ:  fn0000BA7C_exit
l0000BD68:
	r19 = Mem0[r21 + 28:word32]
	r6 = r3
	r3 = Mem0[r19 + 76:word32]
	r8 = Mem0[r19 + 68:word32]
	r4 = Mem0[r19 + 44:word32]
	r3 = r3 + 0xFFFFFFFF
	r3 = r3 + r3
	r4 = r4 + r4
	r5 = r8
	r7 = r3
	Mem0[r19 + 60:word32] = r4
	r15 = 0x0000BD9C
	v18 = SLICE(r22, word16, 0)
	Mem0[r3 + r8:word16] = v18
	call fn00008C64 (retsize: 0;)
	r4 = Mem0[r19 + 132:word32]
	r5 = 0x00000002
	Mem0[r19 + 108:word32] = r22
	r3 = r4 + r4
	r3 = r3 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + 0xFFFF9DB4
	v19 = Mem0[r3 + 2:word16]
	r7 = (word32) v19
	v20 = Mem0[r3:word16]
	r6 = (word32) v20
	v21 = Mem0[r3 + 4:word16]
	r4 = (word32) v21
	v22 = Mem0[r3 + 6:word16]
	r3 = (word32) v22
	Mem0[r19 + 128:word32] = r7
	Mem0[r19 + 140:word32] = r6
	Mem0[r19 + 124:word32] = r3
	Mem0[r19 + 144:word32] = r4
	Mem0[r19 + 92:word32] = r22
	Mem0[r19 + 116:word32] = r22
	Mem0[r19 + 5812:word32] = r22
	Mem0[r19 + 120:word32] = r5
	Mem0[r19 + 96:word32] = r5
	Mem0[r19 + 104:word32] = r22
	Mem0[r19 + 72:word32] = r22
	r3 = r22
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r1 = r1 + 0x00000028
	return
	// succ:  fn0000BA7C_exit
l0000BE20:
	r22 = 0x00000006
	goto l0000BB84
	// succ:  l0000BB84
l0000BE28:
	r4 = 0x00004C80
	Mem0[r21 + 36:word32] = r4
	goto l0000BB70
	// succ:  l0000BB70
l0000BE38:
	r4 = 0x00004C58
	Mem0[r5 + 40:word32] = r3
	Mem0[r5 + 32:word32] = r4
	r3 = r4
	goto l0000BB68
	// succ:  l0000BB68
l0000BE50:
	r22 = 0xFFFFFFFA
	goto l0000BD4C
	// succ:  l0000BD4C
l0000BE58:
	r3 = Mem0[0x0000B5C0:word32]
	r4 = 0x0000029A
	r5 = r21
	Mem0[r19 + 4:word32] = r4
	Mem0[r21 + 24:word32] = r3
	r15 = 0x0000BE70
	r22 = 0xFFFFFFFC
	call fn0000B324 (retsize: 0;)
	r3 = r22
	goto l0000BD50
	// succ:  l0000BD50
l0000BE80:
	r22 = 0xFFFFFFFE
	goto l0000BD4C
	// succ:  l0000BD4C
l0000BE88:
	r22 = 0xFFFFFFFC
	goto l0000BD4C
	// succ:  l0000BD4C
fn0000BA7C_exit:


// fn0000C324
// Return size: 0
define fn0000C324
fn0000C324_entry:
	r1 = fp
	// succ:  l0000C324
l0000C324:
	branch Test(EQ,r5) l0000C3E8
	// succ:  l0000C328 l0000C3E8
l0000C328:
	r3 = Mem0[r5 + 32:word32]
	branch Test(EQ,r3) l0000C3E8
	// succ:  l0000C330 l0000C3E8
l0000C330:
	r3 = Mem0[r5 + 36:word32]
	branch Test(EQ,r3) l0000C3E8
	// succ:  l0000C338 l0000C3E8
l0000C338:
	r4 = Mem0[r5 + 28:word32]
	branch Test(EQ,r4) l0000C3E8
	// succ:  l0000C340 l0000C3E8
l0000C340:
	r6 = Mem0[r4:word32]
	r6 = r5 ^ r6
	branch Test(EQ,r6) l0000C340_ds_t
	// succ:  l0000C340_ds_f l0000C340_ds_t
l0000C340_ds_f:
	r3 = 0xFFFFFFFE
	goto l0000C350
	// succ:  l0000C350
l0000C340_ds_t:
	r3 = 0xFFFFFFFE
	goto l0000C358
	// succ:  l0000C358
l0000C350:
	return
	// succ:  fn0000C324_exit
l0000C358:
	r7 = Mem0[r4 + 4:word32]
	r8 = 0x0000001F
	r7 = r7 + 0xFFFFC0CC
	r18 = cond(r8 -u r7)
	branch Test(LT,r18) l0000C350
	// succ:  l0000C36C l0000C350
l0000C36C:
	r3 = Mem0[r4 + 12:word32]
	Mem0[r4 + 44:word32] = r6
	Mem0[r4 + 48:word32] = r6
	Mem0[r4 + 52:word32] = r6
	Mem0[r4 + 32:word32] = r6
	Mem0[r5 + 20:word32] = r6
	Mem0[r5 + 8:word32] = r6
	branch Test(EQ,r3) l0000C36C_ds_t
	// succ:  l0000C36C_ds_f l0000C36C_ds_t
l0000C36C_ds_f:
	Mem0[r5 + 24:word32] = r6
	goto l0000C390
	// succ:  l0000C390
l0000C36C_ds_t:
	Mem0[r5 + 24:word32] = r6
	goto l0000C398
	// succ:  l0000C398
l0000C390:
	r3 = r3 & 0x00000001
	Mem0[r5 + 48:word32] = r3
	// succ:  l0000C398
l0000C398:
	r5 = 0x00003F34
	Mem0[r4 + 4:word32] = r5
	r5 = 0xFFFF8000
	r3 = r4 + 0x00000534
	Mem0[r4 + 112:word32] = r3
	Mem0[r4 + 24:word32] = r5
	Mem0[r4 + 84:word32] = r3
	Mem0[r4 + 80:word32] = r3
	r5 = 0xFFFFFFFF
	r3 = 0x00000001
	Mem0[r4 + 7108:word32] = r3
	Mem0[r4 + 8:word32] = r0
	Mem0[r4 + 16:word32] = r0
	Mem0[r4 + 36:word32] = r0
	Mem0[r4 + 60:word32] = r0
	Mem0[r4 + 64:word32] = r0
	Mem0[r4 + 7112:word32] = r5
	r3 = 0x00000000
	return
	// succ:  fn0000C324_exit
l0000C3E8:
	r3 = 0xFFFFFFFE
	return
	// succ:  fn0000C324_exit
fn0000C324_exit:


// fn0000CE64
// Return size: 0
define fn0000CE64
fn0000CE64_entry:
	r1 = fp
	// succ:  l0000CE64
l0000CE64:
	r3 = r3 + r3
	r3 = r3 + r3
	r4 = r5 + r3
	v7 = Mem0[r4 + 1:byte]
	r7 = (word32) v7
	Mem0[r22 + 7112:word32] = r0
	v10 = Mem0[r3 + r5:byte]
	r3 = (word32) v10
	r18 = cond(r19 -u r7)
	branch Test(GE,r18) l0000CE64_ds_t
	// succ:  l0000CE64_ds_f l0000CE64_ds_t
l0000CE64_ds_f:
	v13 = Mem0[r4 + 2:word16]
	r4 = (word32) v13
	goto l0000CE84_thunk_fn0000CE88
	// succ:  l0000CE84_thunk_fn0000CE88
l0000CE64_ds_t:
	v13 = Mem0[r4 + 2:word16]
	r4 = (word32) v13
	goto l0000CE84_thunk_fn0000CEE4
	// succ:  l0000CE84_thunk_fn0000CEE4
l0000CE84_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000CE64_exit
l0000CE84_thunk_fn0000CEE4:
	call fn0000CEE4 (retsize: 0;)
	return
	// succ:  fn0000CE64_exit
fn0000CE64_exit:


// fn0000CE88
// Return size: 0
define fn0000CE88
fn0000CE88_entry:
	r1 = fp
	goto l0000CE88_thunk_fn0000CEE4
	// succ:  l0000CE88_thunk_fn0000CEE4
l0000CE88:
	branch Test(EQ,r21) l0000CE88_ds_t
	// succ:  l0000CE88_ds_f l0000CE88_ds_t
l0000CE88_ds_f:
	r31 = r21
	goto l0000CE90
	// succ:  l0000CE90
l0000CE88_ds_t:
	r31 = r21
	goto l0000D0B8
	// succ:  l0000D0B8
l0000CE88_thunk_fn0000CEE4:
	call fn0000CEE4 (retsize: 0;)
	return
	// succ:  fn0000CE88_exit
l0000CE90:
	r24 = r24 + 0x00000001
	v6 = Mem0[r24 - 1:byte]
	r4 = (word32) v6
	r21 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r3 = r4
	branch Test(EQ,r18) l0000CE90_ds_t
	// succ:  l0000CE90_ds_f l0000CE90_ds_t
l0000CE90_ds_f:
	r3 = r3
	goto l0000CEAC
	// succ:  l0000CEAC
l0000CE90_ds_t:
	r3 = r3
	goto l0000CEB8
	// succ:  l0000CEB8
l0000CEAC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000CEAC_ds_t
	// succ:  l0000CEAC_ds_f l0000CEAC_ds_t
l0000CEAC_ds_f:
	r3 = r3 + r3
	goto l0000CEB8
	// succ:  l0000CEB8
l0000CEAC_ds_t:
	r3 = r3 + r3
	goto l0000CEAC
	// succ:  l0000CEAC
l0000CEB8:
	r25 = r25 + r3
	r3 = r6 & r25
	r3 = r3 + r3
	r3 = r3 + r3
	r4 = r5 + r3
	v14 = Mem0[r4 + 1:byte]
	r7 = (word32) v14
	r19 = r19 + 0x00000008
	v16 = Mem0[r3 + r5:byte]
	r3 = (word32) v16
	r18 = cond(r19 -u r7)
	branch Test(LT,r18) l0000CEB8_ds_t
	// succ:  l0000CEB8_ds_f l0000CEB8_ds_t
l0000CEB8_ds_f:
	v17 = Mem0[r4 + 2:word16]
	r4 = (word32) v17
	goto l0000CEE0_thunk_fn0000CEE4
	// succ:  l0000CEE0_thunk_fn0000CEE4
l0000CEB8_ds_t:
	v17 = Mem0[r4 + 2:word16]
	r4 = (word32) v17
	goto l0000CE88
	// succ:  l0000CE88
l0000CEE0_thunk_fn0000CEE4:
	call fn0000CEE4 (retsize: 0;)
	return
	// succ:  fn0000CE88_exit
l0000D0A4_ds_f:
	Mem0[r22 + 64:word32] = r19
	goto l0000D0D8
	// succ:  l0000D0D8
l0000D0A4_ds_t:
	Mem0[r22 + 64:word32] = r19
	goto l0000D0D4_thunk_fn0000D18C
	// succ:  l0000D0D4_thunk_fn0000D18C
l0000D0B8:
	r3 = Mem0[r22 + 44:word32]
	// succ:  l0000D0BC
l0000D0BC:
	Mem0[r23 + 12:word32] = r28
	Mem0[r23 + 16:word32] = r26
	Mem0[r23:word32] = r24
	Mem0[r23 + 4:word32] = r21
	Mem0[r22 + 60:word32] = r25
	branch Test(NE,r3) l0000D0A4_ds_t
	goto l0000D0A4_ds_f
	// succ:  l0000D0A4_ds_f l0000D0A4_ds_t
l0000D0D4_thunk_fn0000D18C:
	call fn0000D18C (retsize: 0;)
	return
	// succ:  fn0000CE88_exit
l0000D0D8:
	r3 = r29 ^ r26
	branch Test(EQ,r3) l0000D0D8_ds_t
	// succ:  l0000D0D8_ds_f l0000D0D8_ds_t
l0000D0D8_ds_f:
	r4 = 0x00003F50
	goto l0000D0E4
	// succ:  l0000D0E4
l0000D0D8_ds_t:
	r4 = 0x00003F50
	// succ:  l0000D0E0_thunk_fn0000D1CC
l0000D0E0_thunk_fn0000D1CC:
	call fn0000D1CC (retsize: 0;)
	return
	// succ:  fn0000CE88_exit
l0000D0E4:
	r3 = Mem0[r22 + 4:word32]
	r18 = cond(r4 -u r3)
	branch Test(LT,r18) l0000D0E4_ds_t
	// succ:  l0000D0E4_ds_f l0000D0E4_ds_t
l0000D0E4_ds_f:
	r5 = r27 ^ 0x00000004
	goto l0000D0F4
	// succ:  l0000D0F4
l0000D0E4_ds_t:
	r5 = r27 ^ 0x00000004
	// succ:  l0000D0F0_thunk_fn0000D1CC
l0000D0F0_thunk_fn0000D1CC:
	call fn0000D1CC (retsize: 0;)
	return
	// succ:  fn0000CE88_exit
l0000D0F4:
	r4 = -r5
	r4 = r4 | r5
	r5 = r4
	r5 = r4 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	branch Test(NE,r5) l0000D0F4_ds_t
	// succ:  l0000D0F4_ds_f l0000D0F4_ds_t
l0000D0F4_ds_f:
	r4 = 0x00003F4D
	goto l0000D180_thunk_fn0000D184
	// succ:  l0000D180_thunk_fn0000D184
l0000D0F4_ds_t:
	r4 = 0x00003F4D
	goto l0000D180_thunk_fn0000D18C
	// succ:  l0000D180_thunk_fn0000D18C
l0000D180_thunk_fn0000D184:
	call fn0000D184 (retsize: 0;)
	return
	// succ:  fn0000CE88_exit
l0000D180_thunk_fn0000D18C:
	call fn0000D18C (retsize: 0;)
	return
	// succ:  fn0000CE88_exit
fn0000CE88_exit:


// fn0000CEE4
// Return size: 0
define fn0000CEE4
fn0000CEE4_entry:
	r1 = fp
	goto l0000CEE4
	// succ:  l0000CEE4
l0000CDD0:
	r18 = r7 & 0x0000001F
	r8 = r25
	branch Test(EQ,r18) l0000CDD0_ds_t
	// succ:  l0000CDD0_ds_f l0000CDD0_ds_t
l0000CDD0_ds_f:
	r8 = r8
	goto l0000CDE0
	// succ:  l0000CDE0
l0000CDD0_ds_t:
	r8 = r8
	goto l0000CDEC
	// succ:  l0000CDEC
l0000CDE0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000CDE0_ds_t
	// succ:  l0000CDE0_ds_f l0000CDE0_ds_t
l0000CDE0_ds_f:
	r8 = r8 >>u 1
	C = cond(r8)
	goto l0000CDEC
	// succ:  l0000CDEC
l0000CDE0_ds_t:
	r8 = r8 >>u 1
	C = cond(r8)
	goto l0000CDE0
	// succ:  l0000CDE0
l0000CDEC:
	r25 = r8
	r19 = r19 - r7
	Mem0[r22 + 7112:word32] = r7
	Mem0[r22 + 68:word32] = r4
	r3 = r28
	// succ:  l0000CE00
l0000CE00:
	r9 = 0x00003F4D
	Mem0[r22 + 4:word32] = r9
	branch Test(EQ,r26) l0000CE00_ds_t
	// succ:  l0000CE00_ds_f l0000CE00_ds_t
l0000CE00_ds_f:
	r9 = 0x00003F48
	goto l0000CE10
	// succ:  l0000CE10
l0000CE00_ds_t:
	r9 = 0x00003F48
	// succ:  l0000CE0C_thunk_fn0000DB74
l0000CE0C_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000CEE4_exit
l0000CE10:
	v87 = Mem0[r22 + 71:byte]
	r8 = (word32) v87
	r28 = r28 + 0x00000001
	v88 = SLICE(r8, byte, 0)
	Mem0[r3:byte] = v88
	r26 = r26 + 0xFFFFFFFF
	Mem0[r22 + 4:word32] = r9
	// succ:  l0000CE20_thunk_fn0000EDD8
l0000CE20_thunk_fn0000EDD8:
	call fn0000EDD8 (retsize: 0;)
	return
	// succ:  fn0000CEE4_exit
l0000CEE4:
	branch Test(EQ,r3) l0000CEE4_ds_t
	// succ:  l0000CEE4_ds_f l0000CEE4_ds_t
l0000CEE4_ds_f:
	r6 = r3 & 0x000000F0
	goto l0000CEEC
	// succ:  l0000CEEC
l0000CEE4_ds_t:
	r6 = r3 & 0x000000F0
	goto l0000CDD0
	// succ:  l0000CDD0
l0000CEEC:
	branch Test(EQ,r6) l0000CEEC_ds_t
	// succ:  l0000CEEC_ds_f l0000CEEC_ds_t
l0000CEEC_ds_f:
	r8 = 0xFFFFFFFF
	goto l0000CEF0_thunk_fn0000CEF4
	// succ:  l0000CEF0_thunk_fn0000CEF4
l0000CEEC_ds_t:
	r8 = 0xFFFFFFFF
	goto l0000F588
	// succ:  l0000F588
l0000CEF0_thunk_fn0000CEF4:
	call fn0000CEF4 (retsize: 0;)
	return
	// succ:  fn0000CEE4_exit
l0000F588:
	r3 = r3 + r7
	r18 = r3 & 0x0000001F
	r9 = r8
	branch Test(EQ,r18) l0000F588_ds_t
	// succ:  l0000F588_ds_f l0000F588_ds_t
l0000F588_ds_f:
	r9 = r9
	goto l0000F59C
	// succ:  l0000F59C
l0000F588_ds_t:
	r9 = r9
	goto l0000F5A8
	// succ:  l0000F5A8
l0000F59C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F59C_ds_t
	// succ:  l0000F59C_ds_f l0000F59C_ds_t
l0000F59C_ds_f:
	r9 = r9 + r9
	goto l0000F5A8
	// succ:  l0000F5A8
l0000F59C_ds_t:
	r9 = r9 + r9
	goto l0000F59C
	// succ:  l0000F59C
l0000F5A8:
	r9 = r9 ^ 0xFFFFFFFF
	r6 = r9 & r25
	r18 = r7 & 0x0000001F
	r3 = r6
	branch Test(EQ,r18) l0000F5A8_ds_t
	// succ:  l0000F5A8_ds_f l0000F5A8_ds_t
l0000F5A8_ds_f:
	r3 = r3
	goto l0000F5C0
	// succ:  l0000F5C0
l0000F5A8_ds_t:
	r3 = r3
	goto l0000F5CC
	// succ:  l0000F5CC
l0000F5C0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F5C0_ds_t
	// succ:  l0000F5C0_ds_f l0000F5C0_ds_t
l0000F5C0_ds_f:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000F5CC
	// succ:  l0000F5CC
l0000F5C0_ds_t:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000F5C0
	// succ:  l0000F5C0
l0000F5CC:
	r3 = r3 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r6 = r5 + r3
	v73 = Mem0[r6 + 1:byte]
	r8 = (word32) v73
	v74 = Mem0[r3 + r5:byte]
	r3 = (word32) v74
	r10 = r8 + r7
	r18 = cond(r19 -u r10)
	branch Test(GE,r18) l0000F5CC_ds_t
	// succ:  l0000F5CC_ds_f l0000F5CC_ds_t
l0000F5CC_ds_f:
	v75 = Mem0[r6 + 2:word16]
	r6 = (word32) v75
	goto l0000F5F4
	// succ:  l0000F5F4
l0000F5CC_ds_t:
	v75 = Mem0[r6 + 2:word16]
	r6 = (word32) v75
	goto l0000F674
	// succ:  l0000F674
l0000F5F4:
	branch Test(EQ,r21) l0000F5F4_ds_t
	// succ:  l0000F5F4_ds_f l0000F5F4_ds_t
l0000F5F4_ds_f:
	r31 = r21
	goto l0000F5FC
	// succ:  l0000F5FC
l0000F5F4_ds_t:
	r31 = r21
	// succ:  l0000F5F8_thunk_fn0000CE88
l0000F5F8_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000CEE4_exit
l0000F5FC:
	r24 = r24 + 0x00000001
	v76 = Mem0[r24 - 1:byte]
	r6 = (word32) v76
	r21 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r3 = r6
	branch Test(EQ,r18) l0000F5FC_ds_t
	// succ:  l0000F5FC_ds_f l0000F5FC_ds_t
l0000F5FC_ds_f:
	r3 = r3
	goto l0000F618
	// succ:  l0000F618
l0000F5FC_ds_t:
	r3 = r3
	goto l0000F624
	// succ:  l0000F624
l0000F618:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F618_ds_t
	// succ:  l0000F618_ds_f l0000F618_ds_t
l0000F618_ds_f:
	r3 = r3 + r3
	goto l0000F624
	// succ:  l0000F624
l0000F618_ds_t:
	r3 = r3 + r3
	goto l0000F618
	// succ:  l0000F618
l0000F624:
	r25 = r25 + r3
	r6 = r9 & r25
	r18 = r7 & 0x0000001F
	r3 = r6
	branch Test(EQ,r18) l0000F624_ds_t
	// succ:  l0000F624_ds_f l0000F624_ds_t
l0000F624_ds_f:
	r3 = r3
	goto l0000F63C
	// succ:  l0000F63C
l0000F624_ds_t:
	r3 = r3
	goto l0000F648
	// succ:  l0000F648
l0000F63C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F63C_ds_t
	// succ:  l0000F63C_ds_f l0000F63C_ds_t
l0000F63C_ds_f:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000F648
	// succ:  l0000F648
l0000F63C_ds_t:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000F63C
	// succ:  l0000F63C
l0000F648:
	r3 = r3 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r6 = r5 + r3
	v77 = Mem0[r6 + 1:byte]
	r8 = (word32) v77
	r19 = r19 + 0x00000008
	v78 = Mem0[r3 + r5:byte]
	r3 = (word32) v78
	r10 = r8 + r7
	r18 = cond(r19 -u r10)
	branch Test(LT,r18) l0000F648_ds_t
	// succ:  l0000F648_ds_f l0000F648_ds_t
l0000F648_ds_f:
	v79 = Mem0[r6 + 2:word16]
	r6 = (word32) v79
	goto l0000F674
	// succ:  l0000F674
l0000F648_ds_t:
	v79 = Mem0[r6 + 2:word16]
	r6 = (word32) v79
	goto l0000F5F4
	// succ:  l0000F5F4
l0000F674:
	r19 = r19 - r7
	Mem0[r22 + 7112:word32] = r10
	Mem0[r22 + 68:word32] = r6
	r18 = r7 & 0x0000001F
	r4 = r25
	branch Test(EQ,r18) l0000F674_ds_t
	// succ:  l0000F674_ds_f l0000F674_ds_t
l0000F674_ds_f:
	r4 = r4
	goto l0000F690
	// succ:  l0000F690
l0000F674_ds_t:
	r4 = r4
	goto l0000F69C
	// succ:  l0000F69C
l0000F690:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F690_ds_t
	// succ:  l0000F690_ds_f l0000F690_ds_t
l0000F690_ds_f:
	r4 = r4 >>u 1
	C = cond(r4)
	goto l0000F69C
	// succ:  l0000F69C
l0000F690_ds_t:
	r4 = r4 >>u 1
	C = cond(r4)
	goto l0000F690
	// succ:  l0000F690
l0000F69C:
	r18 = r8 & 0x0000001F
	r25 = r4
	branch Test(EQ,r18) l0000F69C_ds_t
	// succ:  l0000F69C_ds_f l0000F69C_ds_t
l0000F69C_ds_f:
	r25 = r25
	goto l0000F6AC
	// succ:  l0000F6AC
l0000F69C_ds_t:
	r25 = r25
	goto l0000F6B8
	// succ:  l0000F6B8
l0000F6AC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F6AC_ds_t
	// succ:  l0000F6AC_ds_f l0000F6AC_ds_t
l0000F6AC_ds_f:
	r25 = r25 >>u 1
	C = cond(r25)
	goto l0000F6B8
	// succ:  l0000F6B8
l0000F6AC_ds_t:
	r25 = r25 >>u 1
	C = cond(r25)
	goto l0000F6AC
	// succ:  l0000F6AC
l0000F6B8:
	branch Test(NE,r3) l0000F6B8_ds_t
	// succ:  l0000F6B8_ds_f l0000F6B8_ds_t
l0000F6B8_ds_f:
	r19 = r19 - r8
	goto l0000F6C0
	// succ:  l0000F6C0
l0000F6B8_ds_t:
	r19 = r19 - r8
	// succ:  l0000F6BC_thunk_fn0000CEF4
l0000F6BC_thunk_fn0000CEF4:
	call fn0000CEF4 (retsize: 0;)
	return
	// succ:  fn0000CEE4_exit
l0000F6C0:
	r3 = r28
	goto l0000CE00
	// succ:  l0000CE00
fn0000CEE4_exit:


// fn0000CEF0
// Return size: 0
define fn0000CEF0
fn0000CEF0_entry:
	r1 = fp
	// succ:  l0000CEF0
l0000CEF0:
	r8 = 0xFFFFFFFF
	// succ:  l0000CEF0_thunk_fn0000CEF4
l0000CEF0_thunk_fn0000CEF4:
	call fn0000CEF4 (retsize: 0;)
	return
	// succ:  fn0000CEF0_exit
fn0000CEF0_exit:


// fn0000CEF4
// Return size: 0
define fn0000CEF4
fn0000CEF4_entry:
	r1 = fp
	// succ:  l0000CEF4
l0000CEF4:
	r18 = r7 & 0x0000001F
	r6 = r25
	branch Test(EQ,r18) l0000CEF4_ds_t
	// succ:  l0000CEF4_ds_f l0000CEF4_ds_t
l0000CEF4_ds_f:
	r6 = r6
	goto l0000CF04
	// succ:  l0000CF04
l0000CEF4_ds_t:
	r6 = r6
	goto l0000CF10
	// succ:  l0000CF10
l0000CF04:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000CF04_ds_t
	// succ:  l0000CF04_ds_f l0000CF04_ds_t
l0000CF04_ds_f:
	r6 = r6 >>u 1
	C = cond(r6)
	goto l0000CF10
	// succ:  l0000CF10
l0000CF04_ds_t:
	r6 = r6 >>u 1
	C = cond(r6)
	goto l0000CF04
	// succ:  l0000CF04
l0000CF10:
	r25 = r6
	r19 = r19 - r7
	Mem0[r22 + 7112:word32] = r7
	Mem0[r22 + 68:word32] = r4
	goto l0000CF20
	// succ:  l0000CF20
l0000CF10_ds_f:
	r4 = 0x00003F3F
	goto l0000CF2C
	// succ:  l0000CF2C
l0000CF10_ds_t:
	r4 = 0x00003F3F
	goto l0000F220
	// succ:  l0000F220
l0000CF20:
	r4 = r3 & 0x00000020
	branch Test(NE,r4) l0000CF10_ds_t
	goto l0000CF10_ds_f
	// succ:  l0000CF10_ds_f l0000CF10_ds_t
l0000CF2C:
	r4 = r3 & 0x00000040
	branch Test(NE,r4) l0000CF2C_ds_t
	// succ:  l0000CF2C_ds_f l0000CF2C_ds_t
l0000CF2C_ds_f:
	r6 = 0x00003F51
	goto l0000CF38
	// succ:  l0000CF38
l0000CF2C_ds_t:
	r6 = 0x00003F51
	goto l0000F50C
	// succ:  l0000F50C
l0000CF38:
	r7 = 0x00003F49
	r3 = r3 & 0x0000000F
	Mem0[r22 + 4:word32] = r7
	Mem0[r22 + 76:word32] = r3
	branch Test(NE,r3) l0000D400
	// succ:  l0000CF4C l0000D400
l0000CF4C:
	r4 = Mem0[r22 + 68:word32]
	goto l0000CF50
	// succ:  l0000CF50
l0000CF4C_ds_f:
	r7 = r7
	goto l0000CF78
	// succ:  l0000CF78
l0000CF4C_ds_t:
	r7 = r7
	goto l0000CF84
	// succ:  l0000CF84
l0000CF50:
	r3 = 0x00003F4A
	Mem0[r22 + 4:word32] = r3
	Mem0[r22 + 7116:word32] = r4
	r3 = Mem0[r22 + 92:word32]
	r4 = 0xFFFFFFFF
	r6 = Mem0[r22 + 84:word32]
	r18 = r3 & 0x0000001F
	r7 = r4
	branch Test(EQ,r18) l0000CF4C_ds_t
	goto l0000CF4C_ds_f
	// succ:  l0000CF4C_ds_f l0000CF4C_ds_t
l0000CF78:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000CF78_ds_t
	// succ:  l0000CF78_ds_f l0000CF78_ds_t
l0000CF78_ds_f:
	r7 = r7 + r7
	goto l0000CF84
	// succ:  l0000CF84
l0000CF78_ds_t:
	r7 = r7 + r7
	goto l0000CF78
	// succ:  l0000CF78
l0000CF84:
	r7 = r7 ^ 0xFFFFFFFF
	r3 = r25 & r7
	r3 = r3 + r3
	r3 = r3 + r3
	r5 = r6 + r3
	v13 = Mem0[r5 + 1:byte]
	r4 = (word32) v13
	v14 = Mem0[r5 + 2:word16]
	r10 = (word32) v14
	v16 = Mem0[r3 + r6:byte]
	r3 = (word32) v16
	r18 = cond(r19 -u r4)
	branch Test(GE,r18) l0000CF84_ds_t
	// succ:  l0000CF84_ds_f l0000CF84_ds_t
l0000CF84_ds_f:
	r5 = r4
	goto l0000CFB0
	// succ:  l0000CFB0
l0000CF84_ds_t:
	r5 = r4
	goto l0000D010
	// succ:  l0000D010
l0000CFB0:
	branch Test(EQ,r21) l0000CFB0_ds_t
	// succ:  l0000CFB0_ds_f l0000CFB0_ds_t
l0000CFB0_ds_f:
	r31 = r21
	goto l0000CFB8
	// succ:  l0000CFB8
l0000CFB0_ds_t:
	r31 = r21
	// succ:  l0000CFB4_thunk_fn0000CE88
l0000CFB4_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000CFB8:
	r24 = r24 + 0x00000001
	v20 = Mem0[r24 - 1:byte]
	r4 = (word32) v20
	r21 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r3 = r4
	branch Test(EQ,r18) l0000CFB8_ds_t
	// succ:  l0000CFB8_ds_f l0000CFB8_ds_t
l0000CFB8_ds_f:
	r3 = r3
	goto l0000CFD4
	// succ:  l0000CFD4
l0000CFB8_ds_t:
	r3 = r3
	goto l0000CFE0
	// succ:  l0000CFE0
l0000CFD4:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000CFD4_ds_t
	// succ:  l0000CFD4_ds_f l0000CFD4_ds_t
l0000CFD4_ds_f:
	r3 = r3 + r3
	goto l0000CFE0
	// succ:  l0000CFE0
l0000CFD4_ds_t:
	r3 = r3 + r3
	goto l0000CFD4
	// succ:  l0000CFD4
l0000CFE0:
	r25 = r25 + r3
	r3 = r25 & r7
	r3 = r3 + r3
	r3 = r3 + r3
	r5 = r6 + r3
	v21 = Mem0[r5 + 1:byte]
	r4 = (word32) v21
	r19 = r19 + 0x00000008
	v22 = Mem0[r5 + 2:word16]
	r10 = (word32) v22
	v23 = Mem0[r3 + r6:byte]
	r3 = (word32) v23
	r18 = cond(r19 -u r4)
	// succ:  l0000D004_thunk_fn0000D008
l0000D004_thunk_fn0000D008:
	call fn0000D008 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000D010:
	r7 = r3 & 0x000000F0
	branch Test(EQ,r7) l0000D010_ds_t
	// succ:  l0000D010_ds_f l0000D010_ds_t
l0000D010_ds_f:
	r8 = r4
	goto l0000D01C
	// succ:  l0000D01C
l0000D010_ds_t:
	r8 = r4
	goto l0000F0B8
	// succ:  l0000F0B8
l0000D01C:
	r6 = Mem0[r22 + 7112:word32]
	goto l0000D020
	// succ:  l0000D020
l0000D01C_ds_f:
	r9 = r9
	goto l0000D03C
	// succ:  l0000D03C
l0000D01C_ds_t:
	r9 = r9
	goto l0000D048
	// succ:  l0000D048
l0000D020:
	r4 = r8 + r6
	Mem0[r22 + 7112:word32] = r4
	r4 = r3 & 0x00000040
	r18 = r8 & 0x0000001F
	r9 = r25
	branch Test(EQ,r18) l0000D01C_ds_t
	goto l0000D01C_ds_f
	// succ:  l0000D01C_ds_f l0000D01C_ds_t
l0000D03C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000D03C_ds_t
	// succ:  l0000D03C_ds_f l0000D03C_ds_t
l0000D03C_ds_f:
	r9 = r9 >>u 1
	C = cond(r9)
	goto l0000D048
	// succ:  l0000D048
l0000D03C_ds_t:
	r9 = r9 >>u 1
	C = cond(r9)
	goto l0000D03C
	// succ:  l0000D03C
l0000D048:
	r19 = r19 - r5
	branch Test(NE,r4) l0000D048_ds_t
	// succ:  l0000D048_ds_f l0000D048_ds_t
l0000D048_ds_f:
	r25 = r9
	goto l0000D054
	// succ:  l0000D054
l0000D048_ds_t:
	r25 = r9
	goto l0000ED90
	// succ:  l0000ED90
l0000D054:
	r5 = 0x00003F4B
	r3 = r3 & 0x0000000F
	Mem0[r22 + 4:word32] = r5
	Mem0[r22 + 72:word32] = r10
	Mem0[r22 + 76:word32] = r3
	branch Test(NE,r3) l0000D4A8
	// succ:  l0000D06C l0000D4A8
l0000D06C:
	r9 = 0x00003F4C
	Mem0[r22 + 4:word32] = r9
	branch Test(EQ,r26) l0000D06C_ds_t
	// succ:  l0000D06C_ds_f l0000D06C_ds_t
l0000D06C_ds_f:
	r4 = r29 - r26
	goto l0000D07C
	// succ:  l0000D07C
l0000D06C_ds_t:
	r4 = r29 - r26
	// succ:  l0000D078_thunk_fn0000DB74
l0000D078_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000D07C:
	r5 = Mem0[r22 + 72:word32]
	r18 = cond(r4 -u r5)
	branch Test(GE,r18) l0000D07C_ds_t
	// succ:  l0000D07C_ds_f l0000D07C_ds_t
l0000D07C_ds_f:
	r4 = r5 - r4
	goto l0000D08C
	// succ:  l0000D08C
l0000D07C_ds_t:
	r4 = r5 - r4
	goto l0000ED80
	// succ:  l0000ED80
l0000D08C:
	r3 = Mem0[r22 + 48:word32]
	r18 = cond(r3 -u r4)
	branch Test(GE,r18) l0000EC34
	// succ:  l0000D098 l0000EC34
l0000D098:
	r3 = Mem0[r22 + 7108:word32]
	branch Test(EQ,r3) l0000D098_ds_t
	// succ:  l0000D098_ds_f l0000D098_ds_t
l0000D098_ds_f:
	r31 = 0xFFFFFFFD
	goto l0000D0A4
	// succ:  l0000D0A4
l0000D098_ds_t:
	r31 = 0xFFFFFFFD
	goto l0000EC34
	// succ:  l0000EC34
l0000D0A4:
	r3 = 0xFFFFA00C
	r4 = 0x00003F51
	Mem0[r23 + 24:word32] = r3
	Mem0[r22 + 4:word32] = r4
	// succ:  l0000D0B4_thunk_fn0000CE88
l0000D0B4_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000D3C8:
	branch Test(EQ,r21) l0000D3C8_ds_t
	// succ:  l0000D3C8_ds_f l0000D3C8_ds_t
l0000D3C8_ds_f:
	r31 = r21
	goto l0000D3D0
	// succ:  l0000D3D0
l0000D3C8_ds_t:
	r31 = r21
	// succ:  l0000D3CC_thunk_fn0000CE88
l0000D3CC_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000D3D0:
	r24 = r24 + 0x00000001
	v44 = Mem0[r24 - 1:byte]
	r5 = (word32) v44
	r21 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r4 = r5
	branch Test(EQ,r18) l0000D3D0_ds_t
	// succ:  l0000D3D0_ds_f l0000D3D0_ds_t
l0000D3D0_ds_f:
	r4 = r4
	goto l0000D3EC
	// succ:  l0000D3EC
l0000D3D0_ds_t:
	r4 = r4
	goto l0000D3F8
	// succ:  l0000D3F8
l0000D3EC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000D3EC_ds_t
	// succ:  l0000D3EC_ds_f l0000D3EC_ds_t
l0000D3EC_ds_f:
	r4 = r4 + r4
	goto l0000D3F8
	// succ:  l0000D3F8
l0000D3EC_ds_t:
	r4 = r4 + r4
	goto l0000D3EC
	// succ:  l0000D3EC
l0000D3F8:
	r19 = r19 + 0x00000008
	r25 = r25 + r4
	// succ:  l0000D400
l0000D400:
	r18 = cond(r19 -u r3)
	branch Test(LT,r18) l0000D400_ds_t
	// succ:  l0000D400_ds_f l0000D400_ds_t
l0000D400_ds_f:
	r8 = 0xFFFFFFFF
	goto l0000D40C
	// succ:  l0000D40C
l0000D400_ds_t:
	r8 = 0xFFFFFFFF
	goto l0000D3C8
	// succ:  l0000D3C8
l0000D40C:
	r6 = Mem0[r22 + 68:word32]
	r5 = Mem0[r22 + 7112:word32]
	r18 = r3 & 0x0000001F
	r4 = r8
	branch Test(EQ,r18) l0000D40C_ds_t
	// succ:  l0000D40C_ds_f l0000D40C_ds_t
l0000D40C_ds_f:
	r4 = r4
	goto l0000D424
	// succ:  l0000D424
l0000D40C_ds_t:
	r4 = r4
	goto l0000D430
	// succ:  l0000D430
l0000D424:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000D424_ds_t
	// succ:  l0000D424_ds_f l0000D424_ds_t
l0000D424_ds_f:
	r4 = r4 + r4
	goto l0000D430
	// succ:  l0000D430
l0000D424_ds_t:
	r4 = r4 + r4
	goto l0000D424
	// succ:  l0000D424
l0000D430:
	r4 = r4 ^ 0xFFFFFFFF
	r4 = r4 & r25
	r4 = r4 + r6
	r5 = r5 + r3
	r18 = r3 & 0x0000001F
	r9 = r25
	branch Test(EQ,r18) l0000D430_ds_t
	// succ:  l0000D430_ds_f l0000D430_ds_t
l0000D430_ds_f:
	r9 = r9
	goto l0000D450
	// succ:  l0000D450
l0000D430_ds_t:
	r9 = r9
	goto l0000D45C
	// succ:  l0000D45C
l0000D450:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000D450_ds_t
	// succ:  l0000D450_ds_f l0000D450_ds_t
l0000D450_ds_f:
	r9 = r9 >>u 1
	C = cond(r9)
	goto l0000D45C
	// succ:  l0000D45C
l0000D450_ds_t:
	r9 = r9 >>u 1
	C = cond(r9)
	goto l0000D450
	// succ:  l0000D450
l0000D45C:
	Mem0[r22 + 68:word32] = r4
	r19 = r19 - r3
	Mem0[r22 + 7112:word32] = r5
	r25 = r9
	goto l0000CF50
	// succ:  l0000CF50
l0000D470:
	branch Test(EQ,r21) l0000D470_ds_t
	// succ:  l0000D470_ds_f l0000D470_ds_t
l0000D470_ds_f:
	r31 = r21
	goto l0000D478
	// succ:  l0000D478
l0000D470_ds_t:
	r31 = r21
	// succ:  l0000D474_thunk_fn0000CE88
l0000D474_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000D478:
	r24 = r24 + 0x00000001
	v35 = Mem0[r24 - 1:byte]
	r5 = (word32) v35
	r21 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r4 = r5
	branch Test(EQ,r18) l0000D478_ds_t
	// succ:  l0000D478_ds_f l0000D478_ds_t
l0000D478_ds_f:
	r4 = r4
	goto l0000D494
	// succ:  l0000D494
l0000D478_ds_t:
	r4 = r4
	goto l0000D4A0
	// succ:  l0000D4A0
l0000D494:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000D494_ds_t
	// succ:  l0000D494_ds_f l0000D494_ds_t
l0000D494_ds_f:
	r4 = r4 + r4
	goto l0000D4A0
	// succ:  l0000D4A0
l0000D494_ds_t:
	r4 = r4 + r4
	goto l0000D494
	// succ:  l0000D494
l0000D4A0:
	r19 = r19 + 0x00000008
	r25 = r25 + r4
	// succ:  l0000D4A8
l0000D4A8:
	r18 = cond(r19 -u r3)
	branch Test(LT,r18) l0000D4A8_ds_t
	// succ:  l0000D4A8_ds_f l0000D4A8_ds_t
l0000D4A8_ds_f:
	r7 = 0xFFFFFFFF
	goto l0000D4B4
	// succ:  l0000D4B4
l0000D4A8_ds_t:
	r7 = 0xFFFFFFFF
	goto l0000D470
	// succ:  l0000D470
l0000D4B4:
	r6 = Mem0[r22 + 72:word32]
	r5 = Mem0[r22 + 7112:word32]
	r18 = r3 & 0x0000001F
	r4 = r7
	branch Test(EQ,r18) l0000D4B4_ds_t
	// succ:  l0000D4B4_ds_f l0000D4B4_ds_t
l0000D4B4_ds_f:
	r4 = r4
	goto l0000D4CC
	// succ:  l0000D4CC
l0000D4B4_ds_t:
	r4 = r4
	goto l0000D4D8
	// succ:  l0000D4D8
l0000D4CC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000D4CC_ds_t
	// succ:  l0000D4CC_ds_f l0000D4CC_ds_t
l0000D4CC_ds_f:
	r4 = r4 + r4
	goto l0000D4D8
	// succ:  l0000D4D8
l0000D4CC_ds_t:
	r4 = r4 + r4
	goto l0000D4CC
	// succ:  l0000D4CC
l0000D4D8:
	r4 = r4 ^ 0xFFFFFFFF
	r4 = r4 & r25
	r6 = r6 + r4
	r4 = r5 + r3
	r18 = r3 & 0x0000001F
	r8 = r25
	branch Test(EQ,r18) l0000D4D8_ds_t
	// succ:  l0000D4D8_ds_f l0000D4D8_ds_t
l0000D4D8_ds_f:
	r8 = r8
	goto l0000D4F8
	// succ:  l0000D4F8
l0000D4D8_ds_t:
	r8 = r8
	goto l0000D504
	// succ:  l0000D504
l0000D4F8:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000D4F8_ds_t
	// succ:  l0000D4F8_ds_f l0000D4F8_ds_t
l0000D4F8_ds_f:
	r8 = r8 >>u 1
	C = cond(r8)
	goto l0000D504
	// succ:  l0000D504
l0000D4F8_ds_t:
	r8 = r8 >>u 1
	C = cond(r8)
	goto l0000D4F8
	// succ:  l0000D4F8
l0000D504:
	Mem0[r22 + 72:word32] = r6
	r19 = r19 - r3
	Mem0[r22 + 7112:word32] = r4
	r25 = r8
	goto l0000D06C
	// succ:  l0000D06C
l0000EC34:
	r3 = Mem0[r22 + 52:word32]
	r18 = cond(r3 -u r4)
	branch Test(GE,r18) l0000EC34_ds_t
	// succ:  l0000EC34_ds_f l0000EC34_ds_t
l0000EC34_ds_f:
	r5 = Mem0[r22 + 56:word32]
	goto l0000EC44
	// succ:  l0000EC44
l0000EC34_ds_t:
	r5 = Mem0[r22 + 56:word32]
	goto l0000EFB4
	// succ:  l0000EFB4
l0000EC44:
	r6 = Mem0[r22 + 44:word32]
	r4 = r4 - r3
	r3 = r6 - r4
	r5 = r5 + r3
	goto l0000EC54
	// succ:  l0000EC54
l0000EC44_ds_f:
	r3 = r6
	goto l0000EC64
	// succ:  l0000EC64
l0000EC44_ds_t:
	r3 = r6
	goto l0000EC68
	// succ:  l0000EC68
l0000EC54:
	r6 = Mem0[r22 + 68:word32]
	r18 = cond(r4 -u r6)
	branch Test(GE,r18) l0000EC44_ds_t
	goto l0000EC44_ds_f
	// succ:  l0000EC44_ds_f l0000EC44_ds_t
l0000EC64:
	r3 = r4
	// succ:  l0000EC68
l0000EC68:
	r18 = cond(r26 -u r3)
	branch Test(GE,r18) l0000EC74
	// succ:  l0000EC70 l0000EC74
l0000EC70:
	r3 = r26
	// succ:  l0000EC74
l0000EC74:
	r6 = r6 - r3
	Mem0[r22 + 68:word32] = r6
	r6 = r5 + 0x00000004
	r26 = r26 - r3
	r18 = cond(r28 -u r6)
	branch Test(GE,r18) l0000EC74_ds_t
	// succ:  l0000EC74_ds_f l0000EC74_ds_t
l0000EC74_ds_f:
	r4 = 0x00000001
	goto l0000EC90
	// succ:  l0000EC90
l0000EC74_ds_t:
	r4 = 0x00000001
	goto l0000EC94
	// succ:  l0000EC94
l0000EC90:
	r4 = 0x00000000
	// succ:  l0000EC94
l0000EC94:
	r6 = r28 + 0x00000004
	r18 = cond(r5 -u r6)
	branch Test(GE,r18) l0000EC94_ds_t
	// succ:  l0000EC94_ds_f l0000EC94_ds_t
l0000EC94_ds_f:
	r7 = 0x00000001
	goto l0000ECA4
	// succ:  l0000ECA4
l0000EC94_ds_t:
	r7 = 0x00000001
	goto l0000ECA8
	// succ:  l0000ECA8
l0000ECA4:
	r7 = 0x00000000
	// succ:  l0000ECA8
l0000ECA8:
	r8 = 0x00000009
	r4 = r4 | r7
	r18 = cond(r8 -u r3)
	branch Test(LT,r18) l0000ECA8_ds_t
	// succ:  l0000ECA8_ds_f l0000ECA8_ds_t
l0000ECA8_ds_f:
	r6 = 0x00000001
	goto l0000ECBC
	// succ:  l0000ECBC
l0000ECA8_ds_t:
	r6 = 0x00000001
	goto l0000ECC0
	// succ:  l0000ECC0
l0000ECBC:
	r6 = 0x00000000
	// succ:  l0000ECC0
l0000ECC0:
	r4 = r4 & r6
	r4 = r4 & 0x000000FF
	branch Test(EQ,r4) l0000ECC0_ds_t
	// succ:  l0000ECC0_ds_f l0000ECC0_ds_t
l0000ECC0_ds_f:
	r4 = r28 | r5
	goto l0000ECD0
	// succ:  l0000ECD0
l0000ECC0_ds_t:
	r4 = r28 | r5
	goto l0000F1E0
	// succ:  l0000F1E0
l0000ECD0:
	r4 = r4 & 0x00000003
	branch Test(NE,r4) l0000ECD0_ds_t
	// succ:  l0000ECD0_ds_f l0000ECD0_ds_t
l0000ECD0_ds_f:
	r6 = 0x00000000
	goto l0000ECDC
	// succ:  l0000ECDC
l0000ECD0_ds_t:
	r6 = 0x00000000
	goto l0000F1E0
	// succ:  l0000F1E0
l0000ECDC:
	r7 = r6
	r8 = r3 + 0xFFFFFFFC
	r4 = r8
	r4 = r8 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 + 0x00000001
	// succ:  l0000ECF4
l0000ECF4:
	r8 = Mem0[r6 + r5:word32]
	r7 = r7 + 0x00000001
	Mem0[r6 + r28:word32] = r8
	r18 = cond(r7 -u r4)
	branch Test(LT,r18) l0000ECF4_ds_t
	// succ:  l0000ECF4_ds_f l0000ECF4_ds_t
l0000ECF4_ds_f:
	r6 = r6 + 0x00000004
	goto l0000ED0C
	// succ:  l0000ED0C
l0000ECF4_ds_t:
	r6 = r6 + 0x00000004
	goto l0000ECF4
	// succ:  l0000ECF4
l0000ED0C:
	r4 = r4 + r4
	r4 = r4 + r4
	r9 = r3 ^ r4
	r7 = r28 + r4
	r6 = r3 - r4
	branch Test(EQ,r9) l0000ED0C_ds_t
	// succ:  l0000ED0C_ds_f l0000ED0C_ds_t
l0000ED0C_ds_f:
	r8 = r5 + r4
	goto l0000ED28
	// succ:  l0000ED28
l0000ED0C_ds_t:
	r8 = r5 + r4
	goto l0000ED50
	// succ:  l0000ED50
l0000ED28:
	v30 = Mem0[r4 + r5:byte]
	r5 = (word32) v30
	v31 = SLICE(r5, byte, 0)
	Mem0[r4 + r28:byte] = v31
	r4 = r6 + 0xFFFFFFFF
	branch Test(EQ,r4) l0000ED28_ds_t
	// succ:  l0000ED28_ds_f l0000ED28_ds_t
l0000ED28_ds_f:
	r6 = r6 ^ 0x00000002
	goto l0000ED3C
	// succ:  l0000ED3C
l0000ED28_ds_t:
	r6 = r6 ^ 0x00000002
	goto l0000ED50
	// succ:  l0000ED50
l0000ED3C:
	v32 = Mem0[r8 + 1:byte]
	r9 = (word32) v32
	branch Test(EQ,r6) l0000ED3C_ds_t
	// succ:  l0000ED3C_ds_f l0000ED3C_ds_t
l0000ED3C_ds_f:
	v30 = SLICE(r9, byte, 0)
	Mem0[r7 + 1:byte] = v30
	goto l0000ED48
	// succ:  l0000ED48
l0000ED3C_ds_t:
	v30 = SLICE(r9, byte, 0)
	Mem0[r7 + 1:byte] = v30
	goto l0000ED50
	// succ:  l0000ED50
l0000ED48:
	v31 = Mem0[r8 + 2:byte]
	r8 = (word32) v31
	v32 = SLICE(r8, byte, 0)
	Mem0[r7 + 2:byte] = v32
	// succ:  l0000ED50
l0000ED50:
	r4 = Mem0[r22 + 68:word32]
	goto l0000ED54
	// succ:  l0000ED54
l0000ED50_ds_f:
	r28 = r28 + r3
	goto l0000ED5C
	// succ:  l0000ED5C
l0000ED50_ds_t:
	r28 = r28 + r3
	goto l0000ED64
	// succ:  l0000ED64
l0000ED54:
	branch Test(EQ,r4) l0000ED50_ds_t
	goto l0000ED50_ds_f
	// succ:  l0000ED50_ds_f l0000ED50_ds_t
l0000ED5C:
	r4 = Mem0[r22 + 4:word32]
	// succ:  l0000ED5C_thunk_fn0000EDD8
l0000ED5C_thunk_fn0000EDD8:
	call fn0000EDD8 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000ED64:
	r7 = 0x00003F48
	Mem0[r22 + 4:word32] = r7
	// succ:  l0000ED68_thunk_fn0000EDD8
l0000ED68_thunk_fn0000EDD8:
	call fn0000EDD8 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000ED80:
	r3 = Mem0[r22 + 68:word32]
	r5 = r28 - r5
	r6 = r3
	goto l0000EC68
	// succ:  l0000EC68
l0000ED90:
	r3 = 0xFFFF9FF4
	r4 = 0x00003F51
	r31 = 0xFFFFFFFD
	Mem0[r23 + 24:word32] = r3
	Mem0[r22 + 4:word32] = r4
	// succ:  l0000EDA4_thunk_fn0000CE88
l0000EDA4_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000EFB4:
	r3 = r3 - r4
	r5 = r5 + r3
	goto l0000EC54
	// succ:  l0000EC54
l0000F0B8:
	r3 = r3 + r4
	r5 = 0xFFFFFFFF
	r18 = r3 & 0x0000001F
	r8 = r5
	branch Test(EQ,r18) l0000F0B8_ds_t
	// succ:  l0000F0B8_ds_f l0000F0B8_ds_t
l0000F0B8_ds_f:
	r8 = r8
	goto l0000F0D0
	// succ:  l0000F0D0
l0000F0B8_ds_t:
	r8 = r8
	goto l0000F0DC
	// succ:  l0000F0DC
l0000F0D0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F0D0_ds_t
	// succ:  l0000F0D0_ds_f l0000F0D0_ds_t
l0000F0D0_ds_f:
	r8 = r8 + r8
	goto l0000F0DC
	// succ:  l0000F0DC
l0000F0D0_ds_t:
	r8 = r8 + r8
	goto l0000F0D0
	// succ:  l0000F0D0
l0000F0DC:
	r8 = r8 ^ 0xFFFFFFFF
	r5 = r8 & r25
	r18 = r4 & 0x0000001F
	r3 = r5
	branch Test(EQ,r18) l0000F0DC_ds_t
	// succ:  l0000F0DC_ds_f l0000F0DC_ds_t
l0000F0DC_ds_f:
	r3 = r3
	goto l0000F0F4
	// succ:  l0000F0F4
l0000F0DC_ds_t:
	r3 = r3
	goto l0000F100
	// succ:  l0000F100
l0000F0F4:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F0F4_ds_t
	// succ:  l0000F0F4_ds_f l0000F0F4_ds_t
l0000F0F4_ds_f:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000F100
	// succ:  l0000F100
l0000F0F4_ds_t:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000F0F4
	// succ:  l0000F0F4
l0000F100:
	r3 = r3 + r10
	r3 = r3 + r3
	r3 = r3 + r3
	r7 = r6 + r3
	v36 = Mem0[r7 + 1:byte]
	r5 = (word32) v36
	r9 = r10
	v37 = Mem0[r3 + r6:byte]
	r3 = (word32) v37
	r11 = r5 + r4
	r18 = cond(r19 -u r11)
	branch Test(GE,r18) l0000F100_ds_t
	// succ:  l0000F100_ds_f l0000F100_ds_t
l0000F100_ds_f:
	v39 = Mem0[r7 + 2:word16]
	r10 = (word32) v39
	goto l0000F12C
	// succ:  l0000F12C
l0000F100_ds_t:
	v39 = Mem0[r7 + 2:word16]
	r10 = (word32) v39
	goto l0000F1AC
	// succ:  l0000F1AC
l0000F12C:
	branch Test(EQ,r21) l0000F12C_ds_t
	// succ:  l0000F12C_ds_f l0000F12C_ds_t
l0000F12C_ds_f:
	r31 = r21
	goto l0000F134
	// succ:  l0000F134
l0000F12C_ds_t:
	r31 = r21
	// succ:  l0000F130_thunk_fn0000CE88
l0000F130_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000F134:
	r24 = r24 + 0x00000001
	v40 = Mem0[r24 - 1:byte]
	r5 = (word32) v40
	r21 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r3 = r5
	branch Test(EQ,r18) l0000F134_ds_t
	// succ:  l0000F134_ds_f l0000F134_ds_t
l0000F134_ds_f:
	r3 = r3
	goto l0000F150
	// succ:  l0000F150
l0000F134_ds_t:
	r3 = r3
	goto l0000F15C
	// succ:  l0000F15C
l0000F150:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F150_ds_t
	// succ:  l0000F150_ds_f l0000F150_ds_t
l0000F150_ds_f:
	r3 = r3 + r3
	goto l0000F15C
	// succ:  l0000F15C
l0000F150_ds_t:
	r3 = r3 + r3
	goto l0000F150
	// succ:  l0000F150
l0000F15C:
	r25 = r25 + r3
	r5 = r8 & r25
	r18 = r4 & 0x0000001F
	r3 = r5
	branch Test(EQ,r18) l0000F15C_ds_t
	// succ:  l0000F15C_ds_f l0000F15C_ds_t
l0000F15C_ds_f:
	r3 = r3
	goto l0000F174
	// succ:  l0000F174
l0000F15C_ds_t:
	r3 = r3
	goto l0000F180
	// succ:  l0000F180
l0000F174:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F174_ds_t
	// succ:  l0000F174_ds_f l0000F174_ds_t
l0000F174_ds_f:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000F180
	// succ:  l0000F180
l0000F174_ds_t:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000F174
	// succ:  l0000F174
l0000F180:
	r3 = r3 + r9
	r3 = r3 + r3
	r3 = r3 + r3
	r7 = r6 + r3
	v41 = Mem0[r7 + 1:byte]
	r5 = (word32) v41
	r19 = r19 + 0x00000008
	v42 = Mem0[r3 + r6:byte]
	r3 = (word32) v42
	r11 = r5 + r4
	r18 = cond(r19 -u r11)
	branch Test(LT,r18) l0000F180_ds_t
	// succ:  l0000F180_ds_f l0000F180_ds_t
l0000F180_ds_f:
	v43 = Mem0[r7 + 2:word16]
	r10 = (word32) v43
	goto l0000F1AC
	// succ:  l0000F1AC
l0000F180_ds_t:
	v43 = Mem0[r7 + 2:word16]
	r10 = (word32) v43
	goto l0000F12C
	// succ:  l0000F12C
l0000F1AC:
	r6 = Mem0[r22 + 7112:word32]
	r18 = r4 & 0x0000001F
	r7 = r25
	branch Test(EQ,r18) l0000F1AC_ds_t
	// succ:  l0000F1AC_ds_f l0000F1AC_ds_t
l0000F1AC_ds_f:
	r7 = r7
	goto l0000F1C0
	// succ:  l0000F1C0
l0000F1AC_ds_t:
	r7 = r7
	goto l0000F1CC
	// succ:  l0000F1CC
l0000F1C0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F1C0_ds_t
	// succ:  l0000F1C0_ds_f l0000F1C0_ds_t
l0000F1C0_ds_f:
	r7 = r7 >>u 1
	C = cond(r7)
	goto l0000F1CC
	// succ:  l0000F1CC
l0000F1C0_ds_t:
	r7 = r7 >>u 1
	C = cond(r7)
	goto l0000F1C0
	// succ:  l0000F1C0
l0000F1CC:
	r19 = r19 - r4
	r8 = r5
	r6 = r4 + r6
	r25 = r7
	goto l0000D020
	// succ:  l0000D020
l0000F1E0:
	r4 = 0x00000000
	// succ:  l0000F1E4
l0000F1E4:
	v33 = Mem0[r4 + r5:byte]
	r6 = (word32) v33
	v34 = SLICE(r6, byte, 0)
	Mem0[r4 + r28:byte] = v34
	r4 = r4 + 0x00000001
	r6 = r3 ^ r4
	branch Test(NE,r6) l0000F1E4
	// succ:  l0000F1F8 l0000F1E4
l0000F1F8:
	r4 = Mem0[r22 + 68:word32]
	goto l0000ED54
	// succ:  l0000ED54
l0000F220:
	r3 = 0xFFFFFFFF
	Mem0[r22 + 7112:word32] = r3
	Mem0[r22 + 4:word32] = r4
	r31 = r24
	// succ:  l0000F22C_thunk_fn0000D9E8
l0000F22C_thunk_fn0000D9E8:
	call fn0000D9E8 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
l0000F50C:
	r5 = 0xFFFF9FD8
	r31 = 0xFFFFFFFD
	Mem0[r23 + 24:word32] = r5
	Mem0[r22 + 4:word32] = r6
	// succ:  l0000F51C_thunk_fn0000CE88
l0000F51C_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000CEF4_exit
fn0000CEF4_exit:


// fn0000D008
// Return size: 0
define fn0000D008
fn0000D008_entry:
	r1 = fp
	// succ:  l0000D008
l0000D008:
	branch Test(LT,r18) l0000D008_ds_t
	// succ:  l0000D008_ds_f l0000D008_ds_t
l0000D008_ds_f:
	r5 = r4
	goto l0000D00C_thunk_fn0000CEE4
	// succ:  l0000D00C_thunk_fn0000CEE4
l0000D008_ds_t:
	r5 = r4
	// succ:  l0000D00C_thunk_fn0000CEE4
l0000D00C_thunk_fn0000CEE4:
	call fn0000CEE4 (retsize: 0;)
	return
	// succ:  fn0000D008_exit
l0000D00C_thunk_fn0000CEE4:
	call fn0000CEE4 (retsize: 0;)
	return
	// succ:  fn0000D008_exit
fn0000D008_exit:


// fn0000D120
// Return size: 0
define fn0000D120
fn0000D120_entry:
	r1 = fp
	// succ:  l0000D120
l0000D120:
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	branch Test(NE,r5) l0000D120_ds_t
	// succ:  l0000D120_ds_f l0000D120_ds_t
l0000D120_ds_f:
	r4 = 0x00003F4D
	goto l0000D180_thunk_fn0000D184
	// succ:  l0000D180_thunk_fn0000D184
l0000D120_ds_t:
	r4 = 0x00003F4D
	goto l0000D180_thunk_fn0000D18C
	// succ:  l0000D180_thunk_fn0000D18C
l0000D180_thunk_fn0000D184:
	call fn0000D184 (retsize: 0;)
	return
	// succ:  fn0000D120_exit
l0000D180_thunk_fn0000D18C:
	call fn0000D18C (retsize: 0;)
	return
	// succ:  fn0000D120_exit
fn0000D120_exit:


// fn0000D184
// Return size: 0
define fn0000D184
fn0000D184_entry:
	r1 = fp
	// succ:  l0000D184
l0000D184:
	r18 = cond(r4 -u r3)
	branch Test(LT,r18) l0000D24C
	// succ:  l0000D188_thunk_fn0000D18C l0000D188_thunk_fn0000D1CC
l0000D188_thunk_fn0000D18C:
	call fn0000D18C (retsize: 0;)
	return
	// succ:  fn0000D184_exit
l0000D188_thunk_fn0000D1CC:
	call fn0000D1CC (retsize: 0;)
	return
	// succ:  fn0000D184_exit
fn0000D184_exit:


// fn0000D18C
// Return size: 0
define fn0000D18C
fn0000D18C_entry:
	r1 = fp
	r1 = fp
	// succ:  l0000D18C l0000D18C
l0000D18C:
	r19 = Mem0[r23 + 28:word32]
	r5 = Mem0[r19 + 56:word32]
	branch Test(EQ,r5) l0000D18C_ds_t
	// succ:  l0000D18C_ds_f l0000D18C_ds_t
l0000D18C_ds_f:
	r26 = r29 - r26
	goto l0000D19C
	// succ:  l0000D19C
l0000D18C_ds_t:
	r26 = r29 - r26
	goto l0000DE4C
	// succ:  l0000DE4C
l0000D19C:
	r7 = Mem0[r19 + 44:word32]
	branch Test(NE,r7) l0000D19C_ds_t
	// succ:  l0000D19C_ds_f l0000D19C_ds_t
l0000D19C_ds_f:
	r4 = 0x00000001
	goto l0000D1A8
	// succ:  l0000D1A8
l0000D19C_ds_t:
	r4 = 0x00000001
	// succ:  l0000D1A4_thunk_fn0000D1CC
l0000D1A4_thunk_fn0000D1CC:
	call fn0000D1CC (retsize: 0;)
	return
	// succ:  fn0000D18C_exit
l0000D1A8:
	r3 = Mem0[r19 + 40:word32]
	Mem0[r19 + 52:word32] = r0
	r18 = r3 & 0x0000001F
	r7 = r4
	branch Test(EQ,r18) l0000D1A8_ds_t
	// succ:  l0000D1A8_ds_f l0000D1A8_ds_t
l0000D1A8_ds_f:
	r7 = r7
	goto l0000D1BC_thunk_fn0000D1C0
	// succ:  l0000D1BC_thunk_fn0000D1C0
l0000D1A8_ds_t:
	r7 = r7
	goto l0000D1BC_thunk_fn0000D1CC
	// succ:  l0000D1BC_thunk_fn0000D1CC
l0000D1BC_thunk_fn0000D1C0:
	call fn0000D1C0 (retsize: 0;)
	return
	// succ:  fn0000D18C_exit
l0000D1BC_thunk_fn0000D1CC:
	call fn0000D1CC (retsize: 0;)
	return
	// succ:  fn0000D18C_exit
l0000DE4C:
	r6 = Mem0[r19 + 40:word32]
	r7 = 0x00000001
	r5 = Mem0[r23 + 40:word32]
	r18 = r6 & 0x0000001F
	r9 = r7
	branch Test(EQ,r18) l0000DE4C_ds_t
	// succ:  l0000DE4C_ds_f l0000DE4C_ds_t
l0000DE4C_ds_f:
	r9 = r9
	goto l0000DE68
	// succ:  l0000DE68
l0000DE4C_ds_t:
	r9 = r9
	goto l0000DE74
	// succ:  l0000DE74
l0000DE68:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000DE68_ds_t
	// succ:  l0000DE68_ds_f l0000DE68_ds_t
l0000DE68_ds_f:
	r9 = r9 + r9
	goto l0000DE74
	// succ:  l0000DE74
l0000DE68_ds_t:
	r9 = r9 + r9
	goto l0000DE68
	// succ:  l0000DE68
l0000DE74:
	r3 = Mem0[r23 + 32:word32]
	r15 = 0x0000DE78
	r6 = r9
	call 0x0000DE78 + r3 (retsize: 0;)
	Mem0[r19 + 56:word32] = r3
	branch Test(NE,r3) l0000DE74_ds_t
	// succ:  l0000DE74_ds_f l0000DE74_ds_t
l0000DE74_ds_f:
	r5 = r3
	goto l0000DE8C
	// succ:  l0000DE8C
l0000DE74_ds_t:
	r5 = r3
	goto l0000D19C
	// succ:  l0000D19C
l0000DE8C:
	r5 = 0x00003F52
	Mem0[r22 + 4:word32] = r5
	r31 = 0xFFFFFFFC
	// succ:  l0000DE94_thunk_fn0000D1CC
l0000DE94_thunk_fn0000D1CC:
	call fn0000D1CC (retsize: 0;)
	return
	// succ:  fn0000D18C_exit
fn0000D18C_exit:


// fn0000D1B0
// Return size: 0
define fn0000D1B0
fn0000D1B0_entry:
	r1 = fp
	// succ:  l0000D1B0
l0000D1B0:
	r18 = r3 & 0x0000001F
	r7 = r4
	branch Test(EQ,r18) l0000D1B0_ds_t
	// succ:  l0000D1B0_ds_f l0000D1B0_ds_t
l0000D1B0_ds_f:
	r7 = r7
	goto l0000D1BC_thunk_fn0000D1C0
	// succ:  l0000D1BC_thunk_fn0000D1C0
l0000D1B0_ds_t:
	r7 = r7
	goto l0000D1BC_thunk_fn0000D1CC
	// succ:  l0000D1BC_thunk_fn0000D1CC
l0000D1BC_thunk_fn0000D1C0:
	call fn0000D1C0 (retsize: 0;)
	return
	// succ:  fn0000D1B0_exit
l0000D1BC_thunk_fn0000D1CC:
	call fn0000D1CC (retsize: 0;)
	return
	// succ:  fn0000D1B0_exit
fn0000D1B0_exit:


// fn0000D1C0
// Return size: 0
define fn0000D1C0
fn0000D1C0_entry:
	r1 = fp
	// succ:  l0000D1C0
l0000D1C0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000D1C0_ds_t
	// succ:  l0000D1C0_ds_f l0000D1C0_ds_t
l0000D1C0_ds_f:
	r7 = r7 + r7
	goto l0000D1C8_thunk_fn0000D1CC
	// succ:  l0000D1C8_thunk_fn0000D1CC
l0000D1C0_ds_t:
	r7 = r7 + r7
	goto l0000D1C0
	// succ:  l0000D1C0
l0000D1C8_thunk_fn0000D1CC:
	call fn0000D1CC (retsize: 0;)
	return
	// succ:  fn0000D1C0_exit
fn0000D1C0_exit:


// fn0000D1CC
// Return size: 0
define fn0000D1CC
fn0000D1CC_entry:
	r1 = fp
	goto l0000D1CC
	// succ:  l0000D1CC
l0000CCE8:
	r3 = r31
	// succ:  l0000CCEC
l0000CCEC:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 60:word32]
	r21 = Mem0[r1 + 68:word32]
	r22 = Mem0[r1 + 72:word32]
	r23 = Mem0[r1 + 76:word32]
	r24 = Mem0[r1 + 80:word32]
	r25 = Mem0[r1 + 84:word32]
	r26 = Mem0[r1 + 88:word32]
	r27 = Mem0[r1 + 92:word32]
	r28 = Mem0[r1 + 96:word32]
	r29 = Mem0[r1 + 100:word32]
	r30 = Mem0[r1 + 104:word32]
	r31 = Mem0[r1 + 108:word32]
	r1 = r1 + 0x00000070
	return
	// succ:  fn0000D1CC_exit
l0000D1CC:
	Mem0[r19 + 48:word32] = r0
	Mem0[r19 + 44:word32] = r7
	// succ:  l0000D1D4
l0000D1D4:
	r18 = cond(r26 -u r7)
	branch Test(GE,r18) l0000DCDC
	// succ:  l0000D1DC l0000DCDC
l0000D1DC:
	r3 = Mem0[r19 + 52:word32]
	r7 = r7 - r3
	r18 = cond(r7 -u r26)
	branch Test(GE,r18) l0000D1DC_ds_t
	// succ:  l0000D1DC_ds_f l0000D1DC_ds_t
l0000D1DC_ds_f:
	r24 = r26
	goto l0000D1F0
	// succ:  l0000D1F0
l0000D1DC_ds_t:
	r24 = r26
	goto l0000D1F4
	// succ:  l0000D1F4
l0000D1F0:
	r24 = r7
	// succ:  l0000D1F4
l0000D1F4:
	r7 = r24
	r6 = r28 - r26
	r5 = r5 + r3
	r15 = 0x0000D204
	r26 = r26 - r24
	call fn00008C34 (retsize: 0;)
	branch Test(NE,r26) l0000D1F4_ds_t
	// succ:  l0000D1F4_ds_f l0000D1F4_ds_t
l0000D1F4_ds_f:
	r7 = r26
	goto l0000D214
	// succ:  l0000D214
l0000D1F4_ds_t:
	r7 = r26
	goto l0000DF50
	// succ:  l0000DF50
l0000D214:
	r3 = Mem0[r19 + 52:word32]
	r4 = Mem0[r19 + 44:word32]
	r3 = r24 + r3
	Mem0[r19 + 52:word32] = r3
	r3 = r3 ^ r4
	branch Test(NE,r3) l0000D230
	// succ:  l0000D22C l0000D230
l0000D22C:
	Mem0[r19 + 52:word32] = r3
	// succ:  l0000D230
l0000D230:
	r3 = Mem0[r19 + 48:word32]
	r21 = Mem0[r23 + 4:word32]
	r18 = cond(r3 -u r4)
	branch Test(GE,r18) l0000D230_ds_t
	// succ:  l0000D230_ds_f l0000D230_ds_t
l0000D230_ds_f:
	r26 = Mem0[r23 + 16:word32]
	goto l0000D244
	// succ:  l0000D244
l0000D230_ds_t:
	r26 = Mem0[r23 + 16:word32]
	goto l0000D24C
	// succ:  l0000D24C
l0000D244:
	r24 = r24 + r3
	Mem0[r19 + 48:word32] = r24
	// succ:  l0000D24C
l0000D24C:
	r5 = Mem0[r23 + 8:word32]
	r3 = Mem0[r23 + 20:word32]
	r4 = Mem0[r22 + 32:word32]
	r6 = Mem0[r22 + 12:word32]
	r26 = r29 - r26
	r21 = r30 - r21
	r3 = r3 + r26
	r5 = r5 + r21
	Mem0[r23 + 20:word32] = r3
	Mem0[r23 + 8:word32] = r5
	r4 = r4 + r26
	r3 = r6
	r3 = r6 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 & 0x00000001
	branch Test(EQ,r3) l0000D24C_ds_t
	// succ:  l0000D24C_ds_f l0000D24C_ds_t
l0000D24C_ds_f:
	Mem0[r22 + 32:word32] = r4
	goto l0000D290
	// succ:  l0000D290
l0000D24C_ds_t:
	Mem0[r22 + 32:word32] = r4
	goto l0000D2C8
	// succ:  l0000D2C8
l0000D290:
	r3 = -r26
	r3 = r3 | r26
	branch Test(GE,r3) l0000D2C8
	// succ:  l0000D29C l0000D2C8
l0000D29C:
	r6 = Mem0[r23 + 12:word32]
	r3 = Mem0[r22 + 20:word32]
	r5 = Mem0[r22 + 28:word32]
	r6 = r6 - r26
	branch Test(EQ,r3) l0000D29C_ds_t
	// succ:  l0000D29C_ds_f l0000D29C_ds_t
l0000D29C_ds_f:
	r7 = r26
	goto l0000D2B4
	// succ:  l0000D2B4
l0000D29C_ds_t:
	r7 = r26
	goto l0000DFE4
	// succ:  l0000DFE4
l0000D2B4:
	r15 = 0x0000D2B8
	call fn00007044 (retsize: 0;)
	Mem0[r22 + 28:word32] = r3
	// succ:  l0000D2C4
l0000D2C4:
	Mem0[r23 + 48:word32] = r3
	// succ:  l0000D2C8
l0000D2C8:
	r3 = Mem0[r22 + 8:word32]
	branch Test(EQ,r3) l0000D2C8_ds_t
	// succ:  l0000D2C8_ds_f l0000D2C8_ds_t
l0000D2C8_ds_f:
	r6 = Mem0[r22 + 64:word32]
	goto l0000D2D4
	// succ:  l0000D2D4
l0000D2C8_ds_t:
	r6 = Mem0[r22 + 64:word32]
	goto l0000D2D8
	// succ:  l0000D2D8
l0000D2D4:
	r6 = r6 + 0x00000040
	// succ:  l0000D2D8
l0000D2D8:
	r4 = Mem0[r22 + 4:word32]
	r3 = r4 ^ 0x00003F3F
	branch Test(EQ,r3) l0000DCD4
	// succ:  l0000D2E4 l0000DCD4
l0000D2E4:
	r3 = r4 ^ 0x00003F47
	r5 = -r3
	r5 = r5 | r3
	r5 = r5 ^ 0xFFFFFFFF
	r3 = r5
	r3 = r5 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	branch Test(NE,r3) l0000D2E4_ds_t
	// succ:  l0000D2E4_ds_f l0000D2E4_ds_t
l0000D2E4_ds_f:
	r4 = r4 ^ 0x00003F42
	goto l0000D37C
	// succ:  l0000D37C
l0000D2E4_ds_t:
	r4 = r4 ^ 0x00003F42
	goto l0000D388
	// succ:  l0000D388
l0000D37C:
	r5 = -r4
	r4 = r5 | r4
	branch Test(LT,r4) l0000D38C
	// succ:  l0000D388 l0000D38C
l0000D388:
	r3 = 0x00000100
	// succ:  l0000D38C
l0000D38C:
	r21 = r21 | r26
	r3 = r3 + r6
	r4 = -r21
	r21 = r4 | r21
	branch Test(GE,r21) l0000D38C_ds_t
	// succ:  l0000D38C_ds_f l0000D38C_ds_t
l0000D38C_ds_f:
	Mem0[r23 + 44:word32] = r3
	goto l0000D3A4
	// succ:  l0000D3A4
l0000D38C_ds_t:
	Mem0[r23 + 44:word32] = r3
	goto l0000D3B8
	// succ:  l0000D3B8
l0000D3A4:
	r27 = r27 ^ 0x00000004
	r3 = -r27
	r27 = r3 | r27
	branch Test(LT,r27) l0000D3A4_ds_t
	// succ:  l0000D3A4_ds_f l0000D3A4_ds_t
l0000D3A4_ds_f:
	r3 = r31
	goto l0000D3B8
	// succ:  l0000D3B8
l0000D3A4_ds_t:
	r3 = r31
	goto l0000CCEC
	// succ:  l0000CCEC
l0000D3B8:
	branch Test(NE,r31) l0000D3B8_ds_t
	// succ:  l0000D3B8_ds_f l0000D3B8_ds_t
l0000D3B8_ds_f:
	r3 = r31
	goto l0000D3C0
	// succ:  l0000D3C0
l0000D3B8_ds_t:
	r3 = r31
	goto l0000CCEC
	// succ:  l0000CCEC
l0000D3C0:
	r31 = 0xFFFFFFFB
	goto l0000CCE8
	// succ:  l0000CCE8
l0000DCD4:
	r6 = r6 + 0x00000080
	goto l0000D38C
	// succ:  l0000D38C
l0000DCDC:
	r15 = 0x0000DCE0
	r6 = r28 - r7
	call fn00008C34 (retsize: 0;)
	r3 = Mem0[r19 + 44:word32]
	Mem0[r19 + 52:word32] = r0
	r21 = Mem0[r23 + 4:word32]
	Mem0[r19 + 48:word32] = r3
	r26 = Mem0[r23 + 16:word32]
	goto l0000D24C
	// succ:  l0000D24C
l0000DF50:
	r5 = Mem0[r19 + 56:word32]
	r15 = 0x0000DF58
	r6 = r28 - r26
	call fn00008C34 (retsize: 0;)
	r4 = Mem0[r19 + 44:word32]
	Mem0[r19 + 52:word32] = r26
	r21 = Mem0[r23 + 4:word32]
	Mem0[r19 + 48:word32] = r4
	r26 = Mem0[r23 + 16:word32]
	goto l0000D24C
	// succ:  l0000D24C
l0000DFE4:
	r15 = 0x0000DFE4
	call fn00015318 (retsize: 0;)
	Mem0[r22 + 28:word32] = r3
	goto l0000D2C4
	// succ:  l0000D2C4
fn0000D1CC_exit:


// fn0000D9D8
// Return size: 0
define fn0000D9D8
fn0000D9D8_entry:
	r1 = fp
	// succ:  l0000D9D8
l0000D9D8:
	r20 = Mem0[r1 + 52:word32]
	Mem0[r23 + 48:word32] = r3
	r3 = 0x00003F3F
	Mem0[r22 + 4:word32] = r3
	// succ:  l0000D9E4_thunk_fn0000D9E8
l0000D9E4_thunk_fn0000D9E8:
	call fn0000D9E8 (retsize: 0;)
	return
	// succ:  fn0000D9D8_exit
fn0000D9D8_exit:


// fn0000D9E8
// Return size: 0
define fn0000D9E8
fn0000D9E8_entry:
	r1 = fp
	// succ:  l0000D9E8
l0000D9E8:
	r4 = Mem0[r1 + 32:word32]
	r3 = 0x00000001
	r18 = cond(r3 -u r4)
	branch Test(GE,r18) l0000F778
	// succ:  l0000D9F8 l0000F778
l0000D9F8:
	r3 = Mem0[r22 + 8:word32]
	branch Test(EQ,r3) l0000D9F8_ds_t
	// succ:  l0000D9F8_ds_f l0000D9F8_ds_t
l0000D9F8_ds_f:
	r24 = r31
	goto l0000DA04
	// succ:  l0000DA04
l0000D9F8_ds_t:
	r24 = r31
	goto l0000E13C
	// succ:  l0000E13C
l0000DA04:
	r3 = r19 & 0x00000007
	r18 = r3 & 0x0000001F
	r5 = r25
	branch Test(EQ,r18) l0000DA04_ds_t
	// succ:  l0000DA04_ds_f l0000DA04_ds_t
l0000DA04_ds_f:
	r5 = r5
	goto l0000DA18
	// succ:  l0000DA18
l0000DA04_ds_t:
	r5 = r5
	goto l0000DA24
	// succ:  l0000DA24
l0000DA18:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000DA18_ds_t
	// succ:  l0000DA18_ds_f l0000DA18_ds_t
l0000DA18_ds_f:
	r5 = r5 >>u 1
	C = cond(r5)
	goto l0000DA24
	// succ:  l0000DA24
l0000DA18_ds_t:
	r5 = r5 >>u 1
	C = cond(r5)
	goto l0000DA18
	// succ:  l0000DA18
l0000DA24:
	r25 = r5
	r6 = 0x00003F4E
	r19 = r19 & 0xFFFFFFF8
	Mem0[r22 + 4:word32] = r6
	r4 = Mem0[r22 + 12:word32]
	branch Test(EQ,r4) l0000DA24_ds_t
	// succ:  l0000DA24_ds_f l0000DA24_ds_t
l0000DA24_ds_f:
	r5 = 0x00003F4F
	goto l0000DA40
	// succ:  l0000DA40
l0000DA24_ds_t:
	r5 = 0x00003F4F
	// succ:  l0000DA3C_thunk_fn0000DB74
l0000DA3C_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000DA40:
	r3 = 0x0000001F
	r18 = cond(r3 -u r19)
	branch Test(LT,r18) l0000F7C4
	// succ:  l0000DA4C l0000F7C4
l0000DA4C:
	branch Test(EQ,r21) l0000DA4C_ds_t
	// succ:  l0000DA4C_ds_f l0000DA4C_ds_t
l0000DA4C_ds_f:
	r5 = r19 + 0x00000008
	goto l0000DA54
	// succ:  l0000DA54
l0000DA4C_ds_t:
	r5 = r19 + 0x00000008
	// succ:  l0000DA50_thunk_fn0000DB74
l0000DA50_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000DA54:
	v15 = Mem0[r24:byte]
	r8 = (word32) v15
	r6 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r7 = r8
	branch Test(EQ,r18) l0000DA54_ds_t
	// succ:  l0000DA54_ds_f l0000DA54_ds_t
l0000DA54_ds_f:
	r7 = r7
	goto l0000DA6C
	// succ:  l0000DA6C
l0000DA54_ds_t:
	r7 = r7
	goto l0000DA78
	// succ:  l0000DA78
l0000DA6C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000DA6C_ds_t
	// succ:  l0000DA6C_ds_f l0000DA6C_ds_t
l0000DA6C_ds_f:
	r7 = r7 + r7
	goto l0000DA78
	// succ:  l0000DA78
l0000DA6C_ds_t:
	r7 = r7 + r7
	goto l0000DA6C
	// succ:  l0000DA6C
l0000DA78:
	r31 = r24 + 0x00000001
	r18 = cond(r3 -u r5)
	branch Test(LT,r18) l0000DA78_ds_t
	// succ:  l0000DA78_ds_f l0000DA78_ds_t
l0000DA78_ds_f:
	r25 = r25 + r7
	goto l0000DA88
	// succ:  l0000DA88
l0000DA78_ds_t:
	r25 = r25 + r7
	goto l0000F820
	// succ:  l0000F820
l0000DA88:
	branch Test(EQ,r6) l0000DA88_ds_t
	// succ:  l0000DA88_ds_f l0000DA88_ds_t
l0000DA88_ds_f:
	r7 = r21 + 0xFFFFFFFE
	goto l0000DA90
	// succ:  l0000DA90
l0000DA88_ds_t:
	r7 = r21 + 0xFFFFFFFE
	goto l0000DCC0
	// succ:  l0000DCC0
l0000DA90:
	v18 = Mem0[r24 + 1:byte]
	r9 = (word32) v18
	r6 = r19 + 0x00000010
	r18 = r5 & 0x0000001F
	r8 = r9
	branch Test(EQ,r18) l0000DA90_ds_t
	// succ:  l0000DA90_ds_f l0000DA90_ds_t
l0000DA90_ds_f:
	r8 = r8
	goto l0000DAA8
	// succ:  l0000DAA8
l0000DA90_ds_t:
	r8 = r8
	goto l0000DAB4
	// succ:  l0000DAB4
l0000DAA8:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000DAA8_ds_t
	// succ:  l0000DAA8_ds_f l0000DAA8_ds_t
l0000DAA8_ds_f:
	r8 = r8 + r8
	goto l0000DAB4
	// succ:  l0000DAB4
l0000DAA8_ds_t:
	r8 = r8 + r8
	goto l0000DAA8
	// succ:  l0000DAA8
l0000DAB4:
	r31 = r24 + 0x00000002
	r18 = cond(r3 -u r6)
	branch Test(LT,r18) l0000DAB4_ds_t
	// succ:  l0000DAB4_ds_f l0000DAB4_ds_t
l0000DAB4_ds_f:
	r25 = r25 + r8
	goto l0000DAC4
	// succ:  l0000DAC4
l0000DAB4_ds_t:
	r25 = r25 + r8
	goto l0000F82C
	// succ:  l0000F82C
l0000DAC4:
	branch Test(EQ,r7) l0000F838
	// succ:  l0000DAC8 l0000F838
l0000DAC8:
	v20 = Mem0[r24 + 2:byte]
	r9 = (word32) v20
	r5 = r19 + 0x00000018
	r7 = r21 + 0xFFFFFFFD
	r18 = r6 & 0x0000001F
	r8 = r9
	branch Test(EQ,r18) l0000DAC8_ds_t
	// succ:  l0000DAC8_ds_f l0000DAC8_ds_t
l0000DAC8_ds_f:
	r8 = r8
	goto l0000DAE4
	// succ:  l0000DAE4
l0000DAC8_ds_t:
	r8 = r8
	goto l0000DAF0
	// succ:  l0000DAF0
l0000DAE4:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000DAE4_ds_t
	// succ:  l0000DAE4_ds_f l0000DAE4_ds_t
l0000DAE4_ds_f:
	r8 = r8 + r8
	goto l0000DAF0
	// succ:  l0000DAF0
l0000DAE4_ds_t:
	r8 = r8 + r8
	goto l0000DAE4
	// succ:  l0000DAE4
l0000DAF0:
	r31 = r24 + 0x00000003
	r18 = cond(r3 -u r5)
	branch Test(LT,r18) l0000DAF0_ds_t
	// succ:  l0000DAF0_ds_f l0000DAF0_ds_t
l0000DAF0_ds_f:
	r25 = r25 + r8
	goto l0000DB00
	// succ:  l0000DB00
l0000DAF0_ds_t:
	r25 = r25 + r8
	goto l0000F86C
	// succ:  l0000F86C
l0000DB00:
	branch Test(EQ,r7) l0000F858
	// succ:  l0000DB04 l0000F858
l0000DB04:
	v21 = Mem0[r24 + 3:byte]
	r6 = (word32) v21
	r21 = r21 + 0xFFFFFFFC
	r31 = r24 + 0x00000004
	r18 = r5 & 0x0000001F
	r3 = r6
	branch Test(EQ,r18) l0000DB04_ds_t
	// succ:  l0000DB04_ds_f l0000DB04_ds_t
l0000DB04_ds_f:
	r3 = r3
	goto l0000DB20
	// succ:  l0000DB20
l0000DB04_ds_t:
	r3 = r3
	goto l0000DB2C
	// succ:  l0000DB2C
l0000DB20:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000DB20_ds_t
	// succ:  l0000DB20_ds_f l0000DB20_ds_t
l0000DB20_ds_f:
	r3 = r3 + r3
	goto l0000DB2C
	// succ:  l0000DB2C
l0000DB20_ds_t:
	r3 = r3 + r3
	goto l0000DB20
	// succ:  l0000DB20
l0000DB2C:
	r19 = r19 + 0x00000020
	r25 = r25 + r3
	goto l0000DB34
	// succ:  l0000DB34
l0000DB2C_ds_f:
	r5 = -r7
	goto l0000DB5C
	// succ:  l0000DB5C
l0000DB2C_ds_t:
	r5 = -r7
	goto l0000DB58_thunk_fn0000DB74
	// succ:  l0000DB58_thunk_fn0000DB74
l0000DB34:
	r5 = Mem0[r23 + 20:word32]
	r3 = Mem0[r22 + 32:word32]
	r7 = r29 - r26
	r5 = r5 + r7
	r3 = r3 + r7
	Mem0[r23 + 20:word32] = r5
	Mem0[r22 + 32:word32] = r3
	r3 = r4 & 0x00000004
	branch Test(EQ,r3) l0000DB2C_ds_t
	goto l0000DB2C_ds_f
	// succ:  l0000DB2C_ds_f l0000DB2C_ds_t
l0000DB58_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000DB5C:
	r5 = r5 | r7
	branch Test(GE,r5) l0000DB90
	goto l0000DB64
	// succ:  l0000DB64 l0000DB60_thunk_fn0000DB74
l0000DB60_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000DB64:
	r3 = Mem0[r22 + 20:word32]
	r5 = Mem0[r22 + 28:word32]
	branch Test(EQ,r3) l0000DB64_ds_t
	// succ:  l0000DB64_ds_f l0000DB64_ds_t
l0000DB64_ds_f:
	r6 = r28 - r7
	goto l0000DB70_thunk_fn0000DB74
	// succ:  l0000DB70_thunk_fn0000DB74
l0000DB64_ds_t:
	r6 = r28 - r7
	goto l0000F7F0
	// succ:  l0000F7F0
l0000DB70_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000DCC0:
	r21 = r6
	r19 = r5
	r24 = r31
	// succ:  l0000DCC8_thunk_fn0000DB74
l0000DCC8_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000E13C:
	r4 = 0x00000002
	r18 = cond(r4 -u r19)
	branch Test(LT,r18) l0000E13C_ds_t
	// succ:  l0000E13C_ds_f l0000E13C_ds_t
l0000E13C_ds_f:
	r4 = r25 >>u 1
	C = cond(r4)
	goto l0000E14C
	// succ:  l0000E14C
l0000E13C_ds_t:
	r4 = r25 >>u 1
	C = cond(r4)
	goto l0000E188
	// succ:  l0000E188
l0000E14C:
	branch Test(EQ,r21) l0000E14C_ds_t
	// succ:  l0000E14C_ds_f l0000E14C_ds_t
l0000E14C_ds_f:
	r4 = r31
	goto l0000E154
	// succ:  l0000E154
l0000E14C_ds_t:
	r4 = r31
	goto l0000F4F8
	// succ:  l0000F4F8
l0000E154:
	v27 = Mem0[r31:byte]
	r5 = (word32) v27
	r21 = r21 + 0xFFFFFFFF
	r24 = r31 + 0x00000001
	r18 = r19 & 0x0000001F
	r4 = r5
	branch Test(EQ,r18) l0000E154_ds_t
	// succ:  l0000E154_ds_f l0000E154_ds_t
l0000E154_ds_f:
	r4 = r4
	goto l0000E170
	// succ:  l0000E170
l0000E154_ds_t:
	r4 = r4
	goto l0000E17C
	// succ:  l0000E17C
l0000E170:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E170_ds_t
	// succ:  l0000E170_ds_f l0000E170_ds_t
l0000E170_ds_f:
	r4 = r4 + r4
	goto l0000E17C
	// succ:  l0000E17C
l0000E170_ds_t:
	r4 = r4 + r4
	goto l0000E170
	// succ:  l0000E170
l0000E17C:
	r19 = r19 + 0x00000008
	r25 = r25 + r4
	r4 = r25 >>u 1
	C = cond(r4)
	// succ:  l0000E188
l0000E188:
	r5 = r25 & 0x00000001
	r4 = r4 & 0x00000003
	Mem0[r22 + 8:word32] = r5
	r5 = r4 ^ 0x00000002
	branch Test(EQ,r5) l0000E188_ds_t
	// succ:  l0000E188_ds_f l0000E188_ds_t
l0000E188_ds_f:
	r5 = r4 ^ 0x00000003
	goto l0000E1A0
	// succ:  l0000E1A0
l0000E188_ds_t:
	r5 = r4 ^ 0x00000003
	goto l0000E398
	// succ:  l0000E398
l0000E1A0:
	branch Test(EQ,r5) l0000E1A0_ds_t
	// succ:  l0000E1A0_ds_f l0000E1A0_ds_t
l0000E1A0_ds_f:
	r4 = r4 ^ 0x00000001
	goto l0000E1A8
	// succ:  l0000E1A8
l0000E1A0_ds_t:
	r4 = r4 ^ 0x00000001
	goto l0000E364
	// succ:  l0000E364
l0000E1A8:
	branch Test(EQ,r4) l0000E1A8_ds_t
	// succ:  l0000E1A8_ds_f l0000E1A8_ds_t
l0000E1A8_ds_f:
	r5 = r24
	goto l0000E1B0
	// succ:  l0000E1B0
l0000E1A8_ds_t:
	r5 = r24
	goto l0000E5BC
	// succ:  l0000E5BC
l0000E1B0:
	r8 = r25
	r8 = r25 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r25 = r8
	r7 = 0x00003F41
	Mem0[r22 + 4:word32] = r7
	r19 = r19 + 0xFFFFFFFD
	r3 = r19 & 0x00000007
	r6 = 0x0000001F
	r19 = r19 & 0xFFFFFFF8
	r18 = r3 & 0x0000001F
	r7 = r25
	branch Test(EQ,r18) l0000E1B0_ds_t
	// succ:  l0000E1B0_ds_f l0000E1B0_ds_t
l0000E1B0_ds_f:
	r7 = r7
	goto l0000E1EC
	// succ:  l0000E1EC
l0000E1B0_ds_t:
	r7 = r7
	goto l0000E1F8
	// succ:  l0000E1F8
l0000E1EC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E1EC_ds_t
	// succ:  l0000E1EC_ds_f l0000E1EC_ds_t
l0000E1EC_ds_f:
	r7 = r7 >>u 1
	C = cond(r7)
	goto l0000E1F8
	// succ:  l0000E1F8
l0000E1EC_ds_t:
	r7 = r7 >>u 1
	C = cond(r7)
	goto l0000E1EC
	// succ:  l0000E1EC
l0000E1F8:
	r18 = cond(r6 -u r19)
	branch Test(LT,r18) l0000E1F8_ds_t
	// succ:  l0000E1F8_ds_f l0000E1F8_ds_t
l0000E1F8_ds_f:
	r25 = r7
	goto l0000E204
	// succ:  l0000E204
l0000E1F8_ds_t:
	r25 = r7
	goto l0000E2EC
	// succ:  l0000E2EC
l0000E204:
	branch Test(EQ,r21) l0000E204_ds_t
	// succ:  l0000E204_ds_f l0000E204_ds_t
l0000E204_ds_f:
	r8 = r19 + 0x00000008
	goto l0000E20C
	// succ:  l0000E20C
l0000E204_ds_t:
	r8 = r19 + 0x00000008
	// succ:  l0000E208_thunk_fn0000DB74
l0000E208_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000E20C:
	v28 = Mem0[r5:byte]
	r7 = (word32) v28
	r3 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r4 = r7
	branch Test(EQ,r18) l0000E20C_ds_t
	// succ:  l0000E20C_ds_f l0000E20C_ds_t
l0000E20C_ds_f:
	r4 = r4
	goto l0000E224
	// succ:  l0000E224
l0000E20C_ds_t:
	r4 = r4
	goto l0000E230
	// succ:  l0000E230
l0000E224:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E224_ds_t
	// succ:  l0000E224_ds_f l0000E224_ds_t
l0000E224_ds_f:
	r4 = r4 + r4
	goto l0000E230
	// succ:  l0000E230
l0000E224_ds_t:
	r4 = r4 + r4
	goto l0000E224
	// succ:  l0000E224
l0000E230:
	r24 = r24 + 0x00000001
	r18 = cond(r6 -u r8)
	branch Test(LT,r18) l0000E230_ds_t
	// succ:  l0000E230_ds_f l0000E230_ds_t
l0000E230_ds_f:
	r25 = r25 + r4
	goto l0000E240
	// succ:  l0000E240
l0000E230_ds_t:
	r25 = r25 + r4
	goto l0000F6F0
	// succ:  l0000F6F0
l0000E240:
	branch Test(EQ,r3) l0000E240_ds_t
	// succ:  l0000E240_ds_f l0000E240_ds_t
l0000E240_ds_f:
	r4 = r21 + 0xFFFFFFFE
	goto l0000E248
	// succ:  l0000E248
l0000E240_ds_t:
	r4 = r21 + 0xFFFFFFFE
	goto l0000F6FC
	// succ:  l0000F6FC
l0000E248:
	v29 = Mem0[r5 + 1:byte]
	r9 = (word32) v29
	r3 = r19 + 0x00000010
	r18 = r8 & 0x0000001F
	r7 = r9
	branch Test(EQ,r18) l0000E248_ds_t
	// succ:  l0000E248_ds_f l0000E248_ds_t
l0000E248_ds_f:
	r7 = r7
	goto l0000E260
	// succ:  l0000E260
l0000E248_ds_t:
	r7 = r7
	goto l0000E26C
	// succ:  l0000E26C
l0000E260:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E260_ds_t
	// succ:  l0000E260_ds_f l0000E260_ds_t
l0000E260_ds_f:
	r7 = r7 + r7
	goto l0000E26C
	// succ:  l0000E26C
l0000E260_ds_t:
	r7 = r7 + r7
	goto l0000E260
	// succ:  l0000E260
l0000E26C:
	r24 = r5 + 0x00000002
	r18 = cond(r6 -u r3)
	branch Test(LT,r18) l0000E26C_ds_t
	// succ:  l0000E26C_ds_f l0000E26C_ds_t
l0000E26C_ds_f:
	r25 = r25 + r7
	goto l0000E27C
	// succ:  l0000E27C
l0000E26C_ds_t:
	r25 = r25 + r7
	goto l0000F75C
	// succ:  l0000F75C
l0000E27C:
	branch Test(EQ,r4) l0000E27C_ds_t
	// succ:  l0000E27C_ds_f l0000E27C_ds_t
l0000E27C_ds_f:
	r9 = r19 + 0x00000018
	goto l0000E284
	// succ:  l0000E284
l0000E27C_ds_t:
	r9 = r19 + 0x00000018
	goto l0000F768
	// succ:  l0000F768
l0000E284:
	v30 = Mem0[r5 + 2:byte]
	r8 = (word32) v30
	r4 = r21 + 0xFFFFFFFD
	r18 = r3 & 0x0000001F
	r7 = r8
	branch Test(EQ,r18) l0000E284_ds_t
	// succ:  l0000E284_ds_f l0000E284_ds_t
l0000E284_ds_f:
	r7 = r7
	goto l0000E29C
	// succ:  l0000E29C
l0000E284_ds_t:
	r7 = r7
	goto l0000E2A8
	// succ:  l0000E2A8
l0000E29C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E29C_ds_t
	// succ:  l0000E29C_ds_f l0000E29C_ds_t
l0000E29C_ds_f:
	r7 = r7 + r7
	goto l0000E2A8
	// succ:  l0000E2A8
l0000E29C_ds_t:
	r7 = r7 + r7
	goto l0000E29C
	// succ:  l0000E29C
l0000E2A8:
	r24 = r5 + 0x00000003
	r18 = cond(r6 -u r9)
	branch Test(LT,r18) l0000E2A8_ds_t
	// succ:  l0000E2A8_ds_f l0000E2A8_ds_t
l0000E2A8_ds_f:
	r25 = r25 + r7
	goto l0000E2B8
	// succ:  l0000E2B8
l0000E2A8_ds_t:
	r25 = r25 + r7
	goto l0000F798
	// succ:  l0000F798
l0000E2B8:
	branch Test(EQ,r4) l0000F7A4
	// succ:  l0000E2BC l0000F7A4
l0000E2BC:
	v31 = Mem0[r5 + 3:byte]
	r4 = (word32) v31
	r21 = r21 + 0xFFFFFFFC
	r24 = r5 + 0x00000004
	r18 = r9 & 0x0000001F
	r3 = r4
	branch Test(EQ,r18) l0000E2BC_ds_t
	// succ:  l0000E2BC_ds_f l0000E2BC_ds_t
l0000E2BC_ds_f:
	r3 = r3
	goto l0000E2D8
	// succ:  l0000E2D8
l0000E2BC_ds_t:
	r3 = r3
	goto l0000E2E4
	// succ:  l0000E2E4
l0000E2D8:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E2D8_ds_t
	// succ:  l0000E2D8_ds_f l0000E2D8_ds_t
l0000E2D8_ds_f:
	r3 = r3 + r3
	goto l0000E2E4
	// succ:  l0000E2E4
l0000E2D8_ds_t:
	r3 = r3 + r3
	goto l0000E2D8
	// succ:  l0000E2D8
l0000E2E4:
	r19 = r19 + 0x00000020
	r25 = r25 + r3
	// succ:  l0000E2EC
l0000E2EC:
	r3 = r25 & 0xFFFFFFFF
	r4 = r25
	r4 = r25 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 ^ 0xFFFFFFFF
	r4 = r3 ^ r4
	branch Test(EQ,r4) l0000E2EC_ds_t
	// succ:  l0000E2EC_ds_f l0000E2EC_ds_t
l0000E2EC_ds_f:
	r9 = 0x00003F51
	goto l0000E34C
	// succ:  l0000E34C
l0000E2EC_ds_t:
	r9 = 0x00003F51
	goto l0000F260
	// succ:  l0000F260
l0000E34C:
	r8 = 0xFFFF9F00
	r31 = 0xFFFFFFFD
	Mem0[r23 + 24:word32] = r8
	Mem0[r22 + 4:word32] = r9
	// succ:  l0000E35C_thunk_fn0000CE88
l0000E35C_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000E364:
	r9 = 0xFFFF9EEC
	r3 = 0x00003F51
	r4 = r25
	r4 = r25 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	Mem0[r23 + 24:word32] = r9
	Mem0[r22 + 4:word32] = r3
	r25 = r4
	r19 = r19 + 0xFFFFFFFD
	r31 = 0xFFFFFFFD
	// succ:  l0000E390_thunk_fn0000CE88
l0000E390_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000E398:
	r8 = r25
	r8 = r25 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r25 = r8
	r7 = 0x00003F44
	Mem0[r22 + 4:word32] = r7
	r19 = r19 + 0xFFFFFFFD
	r3 = 0x0000000D
	r18 = cond(r3 -u r19)
	branch Test(LT,r18) l0000E398_ds_t
	// succ:  l0000E398_ds_f l0000E398_ds_t
l0000E398_ds_f:
	r4 = r24
	goto l0000E3C8
	// succ:  l0000E3C8
l0000E398_ds_t:
	r4 = r24
	goto l0000E438
	// succ:  l0000E438
l0000E3C8:
	branch Test(EQ,r21) l0000E3C8_ds_t
	// succ:  l0000E3C8_ds_f l0000E3C8_ds_t
l0000E3C8_ds_f:
	r7 = r19 + 0x00000008
	goto l0000E3D0
	// succ:  l0000E3D0
l0000E3C8_ds_t:
	r7 = r19 + 0x00000008
	// succ:  l0000E3CC_thunk_fn0000DB74
l0000E3CC_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000E3D0:
	v33 = Mem0[r24:byte]
	r4 = (word32) v33
	r5 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r6 = r4
	branch Test(EQ,r18) l0000E3D0_ds_t
	// succ:  l0000E3D0_ds_f l0000E3D0_ds_t
l0000E3D0_ds_f:
	r6 = r6
	goto l0000E3E8
	// succ:  l0000E3E8
l0000E3D0_ds_t:
	r6 = r6
	goto l0000E3F4
	// succ:  l0000E3F4
l0000E3E8:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E3E8_ds_t
	// succ:  l0000E3E8_ds_f l0000E3E8_ds_t
l0000E3E8_ds_f:
	r6 = r6 + r6
	goto l0000E3F4
	// succ:  l0000E3F4
l0000E3E8_ds_t:
	r6 = r6 + r6
	goto l0000E3E8
	// succ:  l0000E3E8
l0000E3F4:
	r4 = r24 + 0x00000001
	r18 = cond(r3 -u r7)
	branch Test(LT,r18) l0000E3F4_ds_t
	// succ:  l0000E3F4_ds_f l0000E3F4_ds_t
l0000E3F4_ds_f:
	r25 = r25 + r6
	goto l0000E404
	// succ:  l0000E404
l0000E3F4_ds_t:
	r25 = r25 + r6
	goto l0000F6C8
	// succ:  l0000F6C8
l0000E404:
	branch Test(EQ,r5) l0000F734
	// succ:  l0000E408 l0000F734
l0000E408:
	v34 = Mem0[r24 + 1:byte]
	r5 = (word32) v34
	r21 = r21 + 0xFFFFFFFE
	r4 = r24 + 0x00000002
	r18 = r7 & 0x0000001F
	r3 = r5
	branch Test(EQ,r18) l0000E408_ds_t
	// succ:  l0000E408_ds_f l0000E408_ds_t
l0000E408_ds_f:
	r3 = r3
	goto l0000E424
	// succ:  l0000E424
l0000E408_ds_t:
	r3 = r3
	goto l0000E430
	// succ:  l0000E430
l0000E424:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E424_ds_t
	// succ:  l0000E424_ds_f l0000E424_ds_t
l0000E424_ds_f:
	r3 = r3 + r3
	goto l0000E430
	// succ:  l0000E430
l0000E424_ds_t:
	r3 = r3 + r3
	goto l0000E424
	// succ:  l0000E424
l0000E430:
	r19 = r19 + 0x00000010
	r25 = r25 + r3
	// succ:  l0000E438
l0000E438:
	r5 = r25 & 0x0000001F
	r3 = r25
	r3 = r25 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r6 = r25
	r6 = r25 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r3 = r3 & 0x0000001F
	r6 = r6 & 0x0000000F
	r5 = r5 + 0x00000101
	r3 = r3 + 0x00000001
	r6 = r6 + 0x00000004
	Mem0[r22 + 100:word32] = r5
	Mem0[r22 + 104:word32] = r3
	Mem0[r22 + 96:word32] = r6
	r7 = 0x0000001E
	r9 = r25
	r9 = r25 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r19 = r19 + 0xFFFFFFF2
	r18 = cond(r7 -u r3)
	branch Test(LT,r18) l0000E438_ds_t
	// succ:  l0000E438_ds_f l0000E438_ds_t
l0000E438_ds_f:
	r25 = r9
	goto l0000E4F0
	// succ:  l0000E4F0
l0000E438_ds_t:
	r25 = r9
	goto l0000ED70
	// succ:  l0000ED70
l0000E4F0:
	r3 = 0x0000011E
	r18 = cond(r3 -u r5)
	branch Test(LT,r18) l0000E4F0_ds_t
	// succ:  l0000E4F0_ds_f l0000E4F0_ds_t
l0000E4F0_ds_f:
	r3 = 0x00000000
	goto l0000E500
	// succ:  l0000E500
l0000E4F0_ds_t:
	r3 = 0x00000000
	goto l0000ED70
	// succ:  l0000ED70
l0000E500:
	r24 = r4
	r5 = 0x00003F45
	Mem0[r22 + 108:word32] = r3
	Mem0[r22 + 4:word32] = r5
	r7 = r3 + r3
	r8 = 0x00000002
	r5 = r3 + 0x00000001
	r7 = r7 + 0xFFFFA958
	r18 = cond(r8 -u r19)
	branch Test(LT,r18) l0000E500_ds_t
	// succ:  l0000E500_ds_f l0000E500_ds_t
l0000E500_ds_f:
	r6 = r6 + 0x00000001
	goto l0000E530
	// succ:  l0000E530
l0000E500_ds_t:
	r6 = r6 + 0x00000001
	goto l0000E568
	// succ:  l0000E568
l0000E530:
	branch Test(EQ,r21) l0000E530_ds_t
	// succ:  l0000E530_ds_f l0000E530_ds_t
l0000E530_ds_f:
	r31 = r21
	goto l0000E538
	// succ:  l0000E538
l0000E530_ds_t:
	r31 = r21
	// succ:  l0000E534_thunk_fn0000CE88
l0000E534_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000E538:
	v35 = Mem0[r24:byte]
	r4 = (word32) v35
	r21 = r21 + 0xFFFFFFFF
	r24 = r24 + 0x00000001
	r18 = r19 & 0x0000001F
	r3 = r4
	branch Test(EQ,r18) l0000E538_ds_t
	// succ:  l0000E538_ds_f l0000E538_ds_t
l0000E538_ds_f:
	r3 = r3
	goto l0000E554
	// succ:  l0000E554
l0000E538_ds_t:
	r3 = r3
	goto l0000E560
	// succ:  l0000E560
l0000E554:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E554_ds_t
	// succ:  l0000E554_ds_f l0000E554_ds_t
l0000E554_ds_f:
	r3 = r3 + r3
	goto l0000E560
	// succ:  l0000E560
l0000E554_ds_t:
	r3 = r3 + r3
	goto l0000E554
	// succ:  l0000E554
l0000E560:
	r19 = r19 + 0x00000008
	r25 = r25 + r3
	// succ:  l0000E568
l0000E568:
	v36 = Mem0[r7:word16]
	r3 = (word32) v36
	goto l0000E56C
	// succ:  l0000E56C
l0000E568_ds_f:
	r7 = r7 + 0x00000002
	goto l0000E5A8
	// succ:  l0000E5A8
l0000E568_ds_t:
	r7 = r7 + 0x00000002
	goto l0000F504
	// succ:  l0000F504
l0000E56C:
	r9 = r25 & 0x00000007
	Mem0[r22 + 108:word32] = r5
	r3 = r3 + 0x0000003A
	r3 = r3 + r3
	r4 = r5 + 0x00000001
	v37 = SLICE(r9, word16, 0)
	Mem0[r3 + r22:word16] = v37
	r3 = r6 ^ r4
	r9 = r25
	r9 = r25 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r19 = r19 + 0xFFFFFFFD
	r25 = r9
	branch Test(EQ,r3) l0000E568_ds_t
	goto l0000E568_ds_f
	// succ:  l0000E568_ds_f l0000E568_ds_t
l0000E5A8:
	r18 = cond(r8 -u r19)
	branch Test(GE,r18) l0000E5A8_ds_t
	// succ:  l0000E5A8_ds_f l0000E5A8_ds_t
l0000E5A8_ds_f:
	r5 = r4
	goto l0000E5B4
	// succ:  l0000E5B4
l0000E5A8_ds_t:
	r5 = r4
	goto l0000E530
	// succ:  l0000E530
l0000E5B4:
	v38 = Mem0[r7:word16]
	r3 = (word32) v38
	goto l0000E56C
	// succ:  l0000E56C
l0000E5BC:
	r4 = 0x00000009
	r9 = 0xFFFFA158
	r5 = 0xFFFFA0D8
	Mem0[r22 + 88:word32] = r4
	r4 = Mem0[r1 + 36:word32]
	r6 = 0x00000005
	r7 = 0x00003F47
	Mem0[r22 + 80:word32] = r9
	Mem0[r22 + 84:word32] = r5
	Mem0[r22 + 92:word32] = r6
	branch Test(EQ,r4) l0000E5BC_ds_t
	// succ:  l0000E5BC_ds_f l0000E5BC_ds_t
l0000E5BC_ds_f:
	Mem0[r22 + 4:word32] = r7
	goto l0000E5F4
	// succ:  l0000E5F4
l0000E5BC_ds_t:
	Mem0[r22 + 4:word32] = r7
	goto l0000FA54
	// succ:  l0000FA54
l0000E5F4:
	r5 = r25
	r5 = r25 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r25 = r5
	r19 = r19 + 0xFFFFFFFD
	// succ:  l0000E608_thunk_fn0000EDD8
l0000E608_thunk_fn0000EDD8:
	call fn0000EDD8 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000E704:
	r4 = 0x00000012
	r18 = cond(r4 -u r3)
	branch Test(LT,r18) l0000E704_ds_t
	// succ:  l0000E704_ds_f l0000E704_ds_t
l0000E704_ds_f:
	r3 = r3 + r3
	goto l0000E714
	// succ:  l0000E714
l0000E704_ds_t:
	r3 = r3 + r3
	goto l0000E748
	// succ:  l0000E748
l0000E714:
	r6 = 0xFFFFA97E
	r3 = r3 + 0xFFFFA958
	// succ:  l0000E724
l0000E724:
	v39 = Mem0[r3:word16]
	r4 = (word32) v39
	r3 = r3 + 0x00000002
	r5 = r6 ^ r3
	r4 = r4 + 0x0000003A
	r4 = r4 + r4
	branch Test(NE,r5) l0000E724_ds_t
	// succ:  l0000E724_ds_f l0000E724_ds_t
l0000E724_ds_f:
	v41 = SLICE(r0, word16, 0)
	Mem0[r4 + r22:word16] = v41
	goto l0000E740
	// succ:  l0000E740
l0000E724_ds_t:
	v41 = SLICE(r0, word16, 0)
	Mem0[r4 + r22:word16] = v41
	goto l0000E724
	// succ:  l0000E724
l0000E740:
	r3 = 0x00000013
	Mem0[r22 + 108:word32] = r3
	// succ:  l0000E748
l0000E748:
	r3 = r22 + 0x00000534
	r4 = 0x00000007
	Mem0[r22 + 88:word32] = r4
	Mem0[r22 + 112:word32] = r3
	Mem0[r22 + 80:word32] = r3
	r10 = r22 + 0x000002F4
	r9 = r22 + 0x00000058
	r8 = r22 + 0x00000070
	r7 = 0x00000013
	r6 = r22 + 0x00000074
	r5 = 0x00000000
	r15 = 0x0000E774
	Mem0[r1 + 52:word32] = r20
	call fn000109C0 (retsize: 0;)
	branch Test(EQ,r3) l0000E748_ds_t
	// succ:  l0000E748_ds_f l0000E748_ds_t
l0000E748_ds_f:
	r20 = Mem0[r1 + 52:word32]
	goto l0000E784
	// succ:  l0000E784
l0000E748_ds_t:
	r20 = Mem0[r1 + 52:word32]
	goto l0000F748
	// succ:  l0000F748
l0000E784:
	r5 = 0xFFFF9F44
	r6 = 0x00003F51
	r31 = 0xFFFFFFFD
	Mem0[r23 + 24:word32] = r5
	Mem0[r22 + 4:word32] = r6
	// succ:  l0000E798_thunk_fn0000CE88
l0000E798_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000E7A4:
	branch Test(EQ,r3) l0000E7A4_ds_t
	// succ:  l0000E7A4_ds_f l0000E7A4_ds_t
l0000E7A4_ds_f:
	r8 = 0x00003F3F
	goto l0000E7AC
	// succ:  l0000E7AC
l0000E7A4_ds_t:
	r8 = 0x00003F3F
	goto l0000E80C
	// succ:  l0000E80C
l0000E7AC:
	r18 = cond(r3 -u r21)
	branch Test(GE,r18) l0000E7AC_ds_t
	// succ:  l0000E7AC_ds_f l0000E7AC_ds_t
l0000E7AC_ds_f:
	r31 = r21
	goto l0000E7B8
	// succ:  l0000E7B8
l0000E7AC_ds_t:
	r31 = r21
	goto l0000E7BC
	// succ:  l0000E7BC
l0000E7B8:
	r31 = r3
	// succ:  l0000E7BC
l0000E7BC:
	r18 = cond(r26 -u r31)
	branch Test(GE,r18) l0000E7C8
	// succ:  l0000E7C4 l0000E7C8
l0000E7C4:
	r31 = r26
	// succ:  l0000E7C8
l0000E7C8:
	branch Test(EQ,r31) l0000E7C8_ds_t
	// succ:  l0000E7C8_ds_f l0000E7C8_ds_t
l0000E7C8_ds_f:
	r6 = r24
	goto l0000E7D0
	// succ:  l0000E7D0
l0000E7C8_ds_t:
	r6 = r24
	// succ:  l0000E7CC_thunk_fn0000CE88
l0000E7CC_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000E7D0:
	r5 = r28
	r7 = r31
	Mem0[r1 + 52:word32] = r20
	r15 = 0x0000E7E0
	r21 = r21 - r31
	call fn00008C34 (retsize: 0;)
	r3 = Mem0[r22 + 68:word32]
	r24 = r24 + r31
	r26 = r26 - r31
	r28 = r28 + r31
	r31 = r3 - r31
	Mem0[r22 + 68:word32] = r31
	r4 = Mem0[r22 + 4:word32]
	r20 = Mem0[r1 + 52:word32]
	// succ:  l0000E804_thunk_fn0000EDD8
l0000E804_thunk_fn0000EDD8:
	call fn0000EDD8 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000E80C:
	Mem0[r22 + 4:word32] = r8
	r31 = r24
	goto l0000D9E8
	// succ:  l0000D9E8
l0000E81C:
	r7 = 0x00003F43
	Mem0[r22 + 4:word32] = r7
	goto l0000E7A4
	// succ:  l0000E7A4
l0000E84C:
	r7 = Mem0[r22 + 100:word32]
	r5 = Mem0[r22 + 104:word32]
	r12 = 0x00000000
	r5 = r7 + r5
	// succ:  l0000E858_thunk_fn0000EDD8
l0000E858_thunk_fn0000EDD8:
	call fn0000EDD8 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000ED70:
	r6 = 0xFFFF9F20
	r24 = r4
	// succ:  l0000ED78_thunk_fn0000DB74
l0000ED78_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000F260:
	r6 = Mem0[r1 + 36:word32]
	r5 = 0x00003F42
	Mem0[r22 + 4:word32] = r5
	branch Test(EQ,r6) l0000F260_ds_t
	// succ:  l0000F260_ds_f l0000F260_ds_t
l0000F260_ds_f:
	Mem0[r22 + 68:word32] = r3
	goto l0000F274
	// succ:  l0000F274
l0000F260_ds_t:
	Mem0[r22 + 68:word32] = r3
	goto l0000FA84
	// succ:  l0000FA84
l0000F274:
	r19 = r4
	r25 = r4
	goto l0000E81C
	// succ:  l0000E81C
l0000F4F8:
	r31 = r3
	r24 = r4
	// succ:  l0000F4FC_thunk_fn0000CE88
l0000F4FC_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000F504:
	r3 = r5
	goto l0000E704
	// succ:  l0000E704
l0000F6C8:
	r19 = r7
	r21 = r5
	goto l0000E438
	// succ:  l0000E438
l0000F6F0:
	r19 = r8
	r21 = r3
	goto l0000E2EC
	// succ:  l0000E2EC
l0000F6FC:
	r21 = r3
	r19 = r8
	r31 = r3
	// succ:  l0000F704_thunk_fn0000CE88
l0000F704_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000F734:
	r21 = r5
	r19 = r7
	r24 = r4
	r31 = r5
	// succ:  l0000F740_thunk_fn0000CE88
l0000F740_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000F748:
	r7 = 0x00003F46
	Mem0[r22 + 4:word32] = r7
	r31 = r3
	Mem0[r22 + 108:word32] = r3
	goto l0000E84C
	// succ:  l0000E84C
l0000F75C:
	r19 = r3
	r21 = r4
	goto l0000E2EC
	// succ:  l0000E2EC
l0000F768:
	r21 = r4
	r19 = r3
	r31 = r4
	// succ:  l0000F770_thunk_fn0000CE88
l0000F770_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000F778:
	r24 = r31
	r31 = 0x00000000
	// succ:  l0000F77C_thunk_fn0000CE88
l0000F77C_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000F798:
	r19 = r9
	r21 = r4
	goto l0000E2EC
	// succ:  l0000E2EC
l0000F7A4:
	r21 = r4
	r19 = r9
	r31 = r4
	// succ:  l0000F7AC_thunk_fn0000CE88
l0000F7AC_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000F7C4:
	r31 = r24
	goto l0000DB34
	// succ:  l0000DB34
l0000F7F0:
	r15 = 0x0000F7F0
	call fn00015318 (retsize: 0;)
	r4 = Mem0[r22 + 12:word32]
	// succ:  l0000F7F8_thunk_fn0000DB74
l0000F7F8_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000F820:
	r19 = r5
	r21 = r6
	goto l0000DB34
	// succ:  l0000DB34
l0000F82C:
	r19 = r6
	r21 = r7
	goto l0000DB34
	// succ:  l0000DB34
l0000F838:
	r24 = r31
	r21 = r7
	r19 = r6
	r31 = r7
	// succ:  l0000F844_thunk_fn0000CE88
l0000F844_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000F858:
	r24 = r31
	r21 = r7
	r19 = r5
	r31 = r7
	// succ:  l0000F864_thunk_fn0000CE88
l0000F864_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000F86C:
	r19 = r5
	r21 = r7
	goto l0000DB34
	// succ:  l0000DB34
l0000FA54:
	r6 = r25
	r6 = r25 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r31 = r3
	r25 = r6
	r19 = r19 + 0xFFFFFFFD
	// succ:  l0000FA6C_thunk_fn0000CE88
l0000FA6C_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
l0000FA84:
	r19 = Mem0[r1 + 36:word32]
	r31 = r19
	r25 = r19
	// succ:  l0000FA8C_thunk_fn0000CE88
l0000FA8C_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000D9E8_exit
fn0000D9E8_exit:


// fn0000DB74
// Return size: 0
define fn0000DB74
fn0000DB74_entry:
	r1 = fp
	// succ:  l0000DB74
l0000DB74:
	r15 = 0x0000DB78
	call fn00007044 (retsize: 0;)
	r4 = Mem0[r22 + 12:word32]
	// succ:  l0000DB84
l0000DB84:
	Mem0[r22 + 28:word32] = r3
	Mem0[r23 + 48:word32] = r3
	r3 = r4 & 0x00000004
	// succ:  l0000DB90
l0000DB90:
	branch Test(EQ,r3) l0000DD00
	// succ:  l0000DB94 l0000DD00
l0000DB94:
	r5 = Mem0[r22 + 20:word32]
	branch Test(NE,r5) l0000DB94_ds_t
	// succ:  l0000DB94_ds_f l0000DB94_ds_t
l0000DB94_ds_f:
	r3 = r25
	goto l0000DBA0
	// succ:  l0000DBA0
l0000DB94_ds_t:
	r3 = r25
	goto l0000DC90
	// succ:  l0000DC90
l0000DBA0:
	r3 = r25 + r25
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r5 = r25
	r5 = r25 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r7 = __rcr(r25, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = r7 & 0xFF000000
	r6 = r25
	r6 = r25 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r5 = r5 + r7
	r6 = r6 & 0xFFFFFF00
	r3 = r3 + r3
	r5 = r5 + r6
	r3 = r3 & 0x00FF0000
	r3 = r5 + r3
	// succ:  l0000DC90
l0000DC90:
	r5 = Mem0[r22 + 28:word32]
	r3 = r5 ^ r3
	branch Test(EQ,r3) l0000DC90_ds_t
	// succ:  l0000DC90_ds_f l0000DC90_ds_t
l0000DC90_ds_f:
	r24 = r31
	goto l0000DCA0
	// succ:  l0000DCA0
l0000DC90_ds_t:
	r24 = r31
	goto l0000DD00
	// succ:  l0000DD00
l0000DCA0:
	r3 = 0xFFFFA02C
	r4 = 0x00003F51
	Mem0[r23 + 24:word32] = r3
	Mem0[r22 + 4:word32] = r4
	r29 = r26
	r31 = 0xFFFFFFFD
	// succ:  l0000DCB8_thunk_fn0000CE88
l0000DCB8_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000DB74_exit
l0000DCCC:
	r31 = r21
	// succ:  l0000DCCC_thunk_fn0000CE88
l0000DCCC_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000DB74_exit
l0000DD00:
	r19 = r3
	r29 = r26
	r24 = r31
	r25 = r3
	r5 = 0x00003F4F
	// succ:  l0000DD14
l0000DD14:
	Mem0[r22 + 4:word32] = r5
	branch Test(EQ,r4) l0000DD14_ds_t
	// succ:  l0000DD14_ds_f l0000DD14_ds_t
l0000DD14_ds_f:
	r8 = 0x00003F50
	goto l0000DD20
	// succ:  l0000DD20
l0000DD14_ds_t:
	r8 = 0x00003F50
	goto l0000F4D8
	// succ:  l0000F4D8
l0000DD20:
	r3 = Mem0[r22 + 20:word32]
	branch Test(EQ,r3) l0000DD20_ds_t
	// succ:  l0000DD20_ds_f l0000DD20_ds_t
l0000DD20_ds_f:
	r3 = 0x0000001F
	goto l0000DD2C
	// succ:  l0000DD2C
l0000DD20_ds_t:
	r3 = 0x0000001F
	goto l0000F4D8
	// succ:  l0000F4D8
l0000DD2C:
	r18 = cond(r3 -u r19)
	branch Test(LT,r18) l0000DD2C_ds_t
	// succ:  l0000DD2C_ds_f l0000DD2C_ds_t
l0000DD2C_ds_f:
	r4 = r24
	goto l0000DD38
	// succ:  l0000DD38
l0000DD2C_ds_t:
	r4 = r24
	goto l0000DE20
	// succ:  l0000DE20
l0000DD38:
	branch Test(EQ,r21) l0000DD38_ds_t
	// succ:  l0000DD38_ds_f l0000DD38_ds_t
l0000DD38_ds_f:
	r5 = r19 + 0x00000008
	goto l0000DD40
	// succ:  l0000DD40
l0000DD38_ds_t:
	r5 = r19 + 0x00000008
	goto l0000DCCC
	// succ:  l0000DCCC
l0000DD40:
	v21 = Mem0[r24:byte]
	r4 = (word32) v21
	r6 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r7 = r4
	branch Test(EQ,r18) l0000DD40_ds_t
	// succ:  l0000DD40_ds_f l0000DD40_ds_t
l0000DD40_ds_f:
	r7 = r7
	goto l0000DD58
	// succ:  l0000DD58
l0000DD40_ds_t:
	r7 = r7
	goto l0000DD64
	// succ:  l0000DD64
l0000DD58:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000DD58_ds_t
	// succ:  l0000DD58_ds_f l0000DD58_ds_t
l0000DD58_ds_f:
	r7 = r7 + r7
	goto l0000DD64
	// succ:  l0000DD64
l0000DD58_ds_t:
	r7 = r7 + r7
	goto l0000DD58
	// succ:  l0000DD58
l0000DD64:
	r4 = r24 + 0x00000001
	r18 = cond(r3 -u r5)
	branch Test(LT,r18) l0000DD64_ds_t
	// succ:  l0000DD64_ds_f l0000DD64_ds_t
l0000DD64_ds_f:
	r25 = r25 + r7
	goto l0000DD74
	// succ:  l0000DD74
l0000DD64_ds_t:
	r25 = r25 + r7
	goto l0000F400
	// succ:  l0000F400
l0000DD74:
	branch Test(EQ,r6) l0000DD74_ds_t
	// succ:  l0000DD74_ds_f l0000DD74_ds_t
l0000DD74_ds_f:
	r7 = r21 + 0xFFFFFFFE
	goto l0000DD7C
	// succ:  l0000DD7C
l0000DD74_ds_t:
	r7 = r21 + 0xFFFFFFFE
	goto l0000F40C
	// succ:  l0000F40C
l0000DD7C:
	v22 = Mem0[r24 + 1:byte]
	r4 = (word32) v22
	r6 = r19 + 0x00000010
	r18 = r5 & 0x0000001F
	r8 = r4
	branch Test(EQ,r18) l0000DD7C_ds_t
	// succ:  l0000DD7C_ds_f l0000DD7C_ds_t
l0000DD7C_ds_f:
	r8 = r8
	goto l0000DD94
	// succ:  l0000DD94
l0000DD7C_ds_t:
	r8 = r8
	goto l0000DDA0
	// succ:  l0000DDA0
l0000DD94:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000DD94_ds_t
	// succ:  l0000DD94_ds_f l0000DD94_ds_t
l0000DD94_ds_f:
	r8 = r8 + r8
	goto l0000DDA0
	// succ:  l0000DDA0
l0000DD94_ds_t:
	r8 = r8 + r8
	goto l0000DD94
	// succ:  l0000DD94
l0000DDA0:
	r4 = r24 + 0x00000002
	r18 = cond(r3 -u r6)
	branch Test(LT,r18) l0000DDA0_ds_t
	// succ:  l0000DDA0_ds_f l0000DDA0_ds_t
l0000DDA0_ds_f:
	r25 = r25 + r8
	goto l0000DDB0
	// succ:  l0000DDB0
l0000DDA0_ds_t:
	r25 = r25 + r8
	goto l0000F4BC
	// succ:  l0000F4BC
l0000DDB0:
	branch Test(EQ,r7) l0000F4E4
	// succ:  l0000DDB4 l0000F4E4
l0000DDB4:
	v23 = Mem0[r24 + 2:byte]
	r4 = (word32) v23
	r5 = r19 + 0x00000018
	r7 = r21 + 0xFFFFFFFD
	r18 = r6 & 0x0000001F
	r8 = r4
	branch Test(EQ,r18) l0000DDB4_ds_t
	// succ:  l0000DDB4_ds_f l0000DDB4_ds_t
l0000DDB4_ds_f:
	r8 = r8
	goto l0000DDD0
	// succ:  l0000DDD0
l0000DDB4_ds_t:
	r8 = r8
	goto l0000DDDC
	// succ:  l0000DDDC
l0000DDD0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000DDD0_ds_t
	// succ:  l0000DDD0_ds_f l0000DDD0_ds_t
l0000DDD0_ds_f:
	r8 = r8 + r8
	goto l0000DDDC
	// succ:  l0000DDDC
l0000DDD0_ds_t:
	r8 = r8 + r8
	goto l0000DDD0
	// succ:  l0000DDD0
l0000DDDC:
	r4 = r24 + 0x00000003
	r18 = cond(r3 -u r5)
	branch Test(LT,r18) l0000DDDC_ds_t
	// succ:  l0000DDDC_ds_f l0000DDDC_ds_t
l0000DDDC_ds_f:
	r25 = r25 + r8
	goto l0000DDEC
	// succ:  l0000DDEC
l0000DDDC_ds_t:
	r25 = r25 + r8
	goto l0000F524
	// succ:  l0000F524
l0000DDEC:
	branch Test(EQ,r7) l0000F20C
	// succ:  l0000DDF0 l0000F20C
l0000DDF0:
	v24 = Mem0[r24 + 3:byte]
	r6 = (word32) v24
	r21 = r21 + 0xFFFFFFFC
	r4 = r24 + 0x00000004
	r18 = r5 & 0x0000001F
	r3 = r6
	branch Test(EQ,r18) l0000DDF0_ds_t
	// succ:  l0000DDF0_ds_f l0000DDF0_ds_t
l0000DDF0_ds_f:
	r3 = r3
	goto l0000DE0C
	// succ:  l0000DE0C
l0000DDF0_ds_t:
	r3 = r3
	goto l0000DE18
	// succ:  l0000DE18
l0000DE0C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000DE0C_ds_t
	// succ:  l0000DE0C_ds_f l0000DE0C_ds_t
l0000DE0C_ds_f:
	r3 = r3 + r3
	goto l0000DE18
	// succ:  l0000DE18
l0000DE0C_ds_t:
	r3 = r3 + r3
	goto l0000DE0C
	// succ:  l0000DE0C
l0000DE18:
	r19 = r19 + 0x00000020
	r25 = r25 + r3
	// succ:  l0000DE20
l0000DE20:
	r3 = Mem0[r22 + 32:word32]
	r3 = r3 ^ r25
	branch Test(EQ,r3) l0000F4C8
	// succ:  l0000DE2C l0000F4C8
l0000DE2C:
	r6 = 0xFFFFA044
	r24 = r4
	// succ:  l0000DE38
l0000DE38:
	Mem0[r23 + 24:word32] = r6
	r7 = 0x00003F51
	Mem0[r22 + 4:word32] = r7
	r31 = 0xFFFFFFFD
	// succ:  l0000DE44_thunk_fn0000CE88
l0000DE44_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000DB74_exit
l0000F20C:
	r19 = r5
	r21 = r7
	r24 = r4
	// succ:  l0000F218
l0000F218:
	r31 = 0x00000000
	// succ:  l0000F218_thunk_fn0000CE88
l0000F218_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000DB74_exit
l0000F400:
	r19 = r5
	r21 = r6
	goto l0000DE20
	// succ:  l0000DE20
l0000F40C:
	r21 = r6
	r19 = r5
	r24 = r4
	r31 = r6
	// succ:  l0000F418_thunk_fn0000CE88
l0000F418_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000DB74_exit
l0000F4BC:
	r19 = r6
	r21 = r7
	goto l0000DE20
	// succ:  l0000DE20
l0000F4C8:
	r19 = r3
	r24 = r4
	r25 = r3
	r8 = 0x00003F50
	// succ:  l0000F4D8
l0000F4D8:
	Mem0[r22 + 4:word32] = r8
	r31 = 0x00000001
	// succ:  l0000F4DC_thunk_fn0000CE88
l0000F4DC_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000DB74_exit
l0000F4E4:
	r21 = r7
	r19 = r6
	r24 = r4
	r31 = r7
	// succ:  l0000F4F0_thunk_fn0000CE88
l0000F4F0_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000DB74_exit
l0000F524:
	r19 = r5
	r21 = r7
	goto l0000DE20
	// succ:  l0000DE20
fn0000DB74_exit:


// fn0000EDD8
// Return size: 0
define fn0000EDD8
fn0000EDD8_entry:
	r1 = fp
	// succ:  l0000EDD8
l0000EDD8:
	branch Test(EQ,r21) l0000DCCC
	goto l0000EDDC
	// succ:  l0000EDDC l0000EDD8_thunk_fn0000DB74
l0000EDD8_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000EDD8_exit
l0000EDDC:
	r24 = r24 + 0x00000001
	v5 = Mem0[r24 - 1:byte]
	r6 = (word32) v5
	r21 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r3 = r6
	branch Test(EQ,r18) l0000EDDC_ds_t
	// succ:  l0000EDDC_ds_f l0000EDDC_ds_t
l0000EDDC_ds_f:
	r3 = r3
	goto l0000EDF8
	// succ:  l0000EDF8
l0000EDDC_ds_t:
	r3 = r3
	goto l0000EE04
	// succ:  l0000EE04
l0000EDF8:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000EDF8_ds_t
	// succ:  l0000EDF8_ds_f l0000EDF8_ds_t
l0000EDF8_ds_f:
	r3 = r3 + r3
	goto l0000EE04
	// succ:  l0000EE04
l0000EDF8_ds_t:
	r3 = r3 + r3
	goto l0000EDF8
	// succ:  l0000EDF8
l0000EE04:
	r19 = r19 + 0x00000008
	r18 = cond(r19 -u r8)
	branch Test(LT,r18) l0000EE04_ds_t
	// succ:  l0000EE04_ds_f l0000EE04_ds_t
l0000EE04_ds_f:
	r25 = r25 + r3
	goto l0000EE10_thunk_fn0000EE14
	// succ:  l0000EE10_thunk_fn0000EE14
l0000EE04_ds_t:
	r25 = r25 + r3
	goto l0000EDD8
	// succ:  l0000EDD8
l0000EE10_thunk_fn0000EE14:
	call fn0000EE14 (retsize: 0;)
	return
	// succ:  fn0000EDD8_exit
fn0000EDD8_exit:


// fn0000EE08
// Return size: 0
define fn0000EE08
fn0000EE08_entry:
	r1 = fp
	// succ:  l0000EE08
l0000EE08:
	r18 = cond(r19 -u r8)
	branch Test(LT,r18) l0000EE08_ds_t
	// succ:  l0000EE08_ds_f l0000EE08_ds_t
l0000EE08_ds_f:
	r25 = r25 + r3
	goto l0000EE10_thunk_fn0000EE14
	// succ:  l0000EE10_thunk_fn0000EE14
l0000EE08_ds_t:
	r25 = r25 + r3
	// succ:  l0000EE10_thunk_fn0000EDD8
l0000EE10_thunk_fn0000EDD8:
	call fn0000EDD8 (retsize: 0;)
	return
	// succ:  fn0000EE08_exit
l0000EE10_thunk_fn0000EE14:
	call fn0000EE14 (retsize: 0;)
	return
	// succ:  fn0000EE08_exit
fn0000EE08_exit:


// fn0000EE14
// Return size: 0
define fn0000EE14
fn0000EE14_entry:
	r1 = fp
	goto l0000EE14_thunk_fn0000EDD8
	// succ:  l0000EE14_thunk_fn0000EDD8
l0000CD94:
	r3 = 0x0000001E
	r18 = cond(r3 -u r4)
	branch Test(LT,r18) l0000CDBC
	// succ:  l0000CDA0 l0000CDBC
l0000CDA0:
	r3 = r4
	r3 = r4 + r4
	r3 = r3 + r3
	r3 = r3 + 0xFFFFA05C
	r3 = Mem0[r3:word32]
	call r3 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000CDBC:
	r31 = 0xFFFFFFFE
	// succ:  l0000CDBC_thunk_fn0000CE88
l0000CDBC_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000CE24:
	r3 = 0x00000005
	r18 = cond(r3 -u r21)
	branch Test(LT,r18) l0000CE24_ds_t
	// succ:  l0000CE24_ds_f l0000CE24_ds_t
l0000CE24_ds_f:
	r3 = 0x00000101
	goto l0000CE34
	// succ:  l0000CE34
l0000CE24_ds_t:
	r3 = 0x00000101
	goto l0000DF78
	// succ:  l0000DF78
l0000CE34:
	r3 = Mem0[r22 + 88:word32]
	r7 = 0xFFFFFFFF
	r5 = Mem0[r22 + 80:word32]
	r18 = r3 & 0x0000001F
	r6 = r7
	branch Test(EQ,r18) l0000CE34_ds_t
	// succ:  l0000CE34_ds_f l0000CE34_ds_t
l0000CE34_ds_f:
	r6 = r6
	goto l0000CE50
	// succ:  l0000CE50
l0000CE34_ds_t:
	r6 = r6
	goto l0000CE5C
	// succ:  l0000CE5C
l0000CE50:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000CE50_ds_t
	// succ:  l0000CE50_ds_f l0000CE50_ds_t
l0000CE50_ds_f:
	r6 = r6 + r6
	goto l0000CE5C
	// succ:  l0000CE5C
l0000CE50_ds_t:
	r6 = r6 + r6
	goto l0000CE50
	// succ:  l0000CE50
l0000CE5C:
	r6 = r6 ^ 0xFFFFFFFF
	r3 = r6 & r25
	r3 = r3 + r3
	r3 = r3 + r3
	r4 = r5 + r3
	v40 = Mem0[r4 + 1:byte]
	r7 = (word32) v40
	Mem0[r22 + 7112:word32] = r0
	v37 = Mem0[r3 + r5:byte]
	r3 = (word32) v37
	r18 = cond(r19 -u r7)
	branch Test(GE,r18) l0000CE5C_ds_t
	// succ:  l0000CE5C_ds_f l0000CE5C_ds_t
l0000CE5C_ds_f:
	v42 = Mem0[r4 + 2:word16]
	r4 = (word32) v42
	goto l0000CE84_thunk_fn0000CE88
	// succ:  l0000CE84_thunk_fn0000CE88
l0000CE5C_ds_t:
	v42 = Mem0[r4 + 2:word16]
	r4 = (word32) v42
	goto l0000CE84_thunk_fn0000CEE4
	// succ:  l0000CE84_thunk_fn0000CEE4
l0000CE84_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000CE84_thunk_fn0000CEE4:
	call fn0000CEE4 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000DF78:
	r18 = cond(r3 -u r26)
	branch Test(GE,r18) l0000DF78_ds_t
	// succ:  l0000DF78_ds_f l0000DF78_ds_t
l0000DF78_ds_f:
	r6 = r29
	goto l0000DF84
	// succ:  l0000DF84
l0000DF78_ds_t:
	r6 = r29
	goto l0000CE34
	// succ:  l0000CE34
l0000DF84:
	r5 = r23
	Mem0[r23 + 12:word32] = r28
	Mem0[r23 + 16:word32] = r26
	Mem0[r23:word32] = r24
	Mem0[r23 + 4:word32] = r21
	Mem0[r22 + 60:word32] = r25
	Mem0[r22 + 64:word32] = r19
	r15 = 0x0000DFA4
	Mem0[r1 + 52:word32] = r20
	call fn000070A4 (retsize: 0;)
	r4 = Mem0[r22 + 4:word32]
	r28 = Mem0[r23 + 12:word32]
	r26 = Mem0[r23 + 16:word32]
	r3 = r4 ^ 0x00003F3F
	r24 = Mem0[r23:word32]
	r21 = Mem0[r23 + 4:word32]
	r25 = Mem0[r22 + 60:word32]
	r19 = Mem0[r22 + 64:word32]
	branch Test(NE,r3) l0000DF84_ds_t
	// succ:  l0000DF84_ds_f l0000DF84_ds_t
l0000DF84_ds_f:
	r20 = Mem0[r1 + 52:word32]
	goto l0000DFD4
	// succ:  l0000DFD4
l0000DF84_ds_t:
	r20 = Mem0[r1 + 52:word32]
	goto l0000DFDC
	// succ:  l0000DFDC
l0000DFD4:
	r6 = 0xFFFFFFFF
	Mem0[r22 + 7112:word32] = r6
	// succ:  l0000DFDC
l0000DFDC:
	r4 = r4 + 0xFFFFC0CC
	goto l0000CD94
	// succ:  l0000CD94
l0000E60C:
	r5 = 0x00003F48
	Mem0[r22 + 4:word32] = r5
	goto l0000CE24
	// succ:  l0000CE24
l0000E84C_ds_f:
	r9 = 0xFFFFFFFF
	goto l0000E868
	// succ:  l0000E868
l0000E84C_ds_t:
	r9 = 0xFFFFFFFF
	goto l0000F7CC
	// succ:  l0000F7CC
l0000E85C:
	r18 = cond(r31 -u r5)
	branch Test(GE,r18) l0000E84C_ds_t
	goto l0000E84C_ds_f
	// succ:  l0000E84C_ds_f l0000E84C_ds_t
l0000E868:
	r3 = Mem0[r22 + 88:word32]
	r8 = Mem0[r22 + 80:word32]
	r18 = r3 & 0x0000001F
	r6 = r9
	branch Test(EQ,r18) l0000E868_ds_t
	// succ:  l0000E868_ds_f l0000E868_ds_t
l0000E868_ds_f:
	r6 = r6
	goto l0000E880
	// succ:  l0000E880
l0000E868_ds_t:
	r6 = r6
	goto l0000E88C
	// succ:  l0000E88C
l0000E880:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E880_ds_t
	// succ:  l0000E880_ds_f l0000E880_ds_t
l0000E880_ds_f:
	r6 = r6 + r6
	goto l0000E88C
	// succ:  l0000E88C
l0000E880_ds_t:
	r6 = r6 + r6
	goto l0000E880
	// succ:  l0000E880
l0000E88C:
	r6 = r6 ^ 0xFFFFFFFF
	r3 = r25 & r6
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r8 + r3
	v24 = Mem0[r3 + 1:byte]
	r4 = (word32) v24
	r18 = cond(r19 -u r4)
	branch Test(GE,r18) l0000E88C_ds_t
	// succ:  l0000E88C_ds_f l0000E88C_ds_t
l0000E88C_ds_f:
	v25 = Mem0[r3 + 2:word16]
	r3 = (word32) v25
	goto l0000E8B0
	// succ:  l0000E8B0
l0000E88C_ds_t:
	v25 = Mem0[r3 + 2:word16]
	r3 = (word32) v25
	goto l0000E904
	// succ:  l0000E904
l0000E8B0:
	branch Test(EQ,r21) l0000DCCC
	goto l0000E8B4
	// succ:  l0000E8B4 l0000E8B0_thunk_fn0000DB74
l0000E8B0_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000E8B4:
	r24 = r24 + 0x00000001
	v28 = Mem0[r24 - 1:byte]
	r4 = (word32) v28
	r21 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r3 = r4
	branch Test(EQ,r18) l0000E8B4_ds_t
	// succ:  l0000E8B4_ds_f l0000E8B4_ds_t
l0000E8B4_ds_f:
	r3 = r3
	goto l0000E8D0
	// succ:  l0000E8D0
l0000E8B4_ds_t:
	r3 = r3
	goto l0000E8DC
	// succ:  l0000E8DC
l0000E8D0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E8D0_ds_t
	// succ:  l0000E8D0_ds_f l0000E8D0_ds_t
l0000E8D0_ds_f:
	r3 = r3 + r3
	goto l0000E8DC
	// succ:  l0000E8DC
l0000E8D0_ds_t:
	r3 = r3 + r3
	goto l0000E8D0
	// succ:  l0000E8D0
l0000E8DC:
	r25 = r25 + r3
	r3 = r25 & r6
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r8 + r3
	v29 = Mem0[r3 + 1:byte]
	r4 = (word32) v29
	r19 = r19 + 0x00000008
	r18 = cond(r19 -u r4)
	branch Test(LT,r18) l0000E8DC_ds_t
	// succ:  l0000E8DC_ds_f l0000E8DC_ds_t
l0000E8DC_ds_f:
	v30 = Mem0[r3 + 2:word16]
	r3 = (word32) v30
	goto l0000E904
	// succ:  l0000E904
l0000E8DC_ds_t:
	v30 = Mem0[r3 + 2:word16]
	r3 = (word32) v30
	goto l0000E8B0
	// succ:  l0000E8B0
l0000E904:
	r18 = cond(r20 -u r3)
	branch Test(LT,r18) l0000E904_ds_t
	// succ:  l0000E904_ds_f l0000E904_ds_t
l0000E904_ds_f:
	r6 = r3 ^ 0x00000010
	goto l0000E910
	// succ:  l0000E910
l0000E904_ds_t:
	r6 = r3 ^ 0x00000010
	goto l0000EDBC
	// succ:  l0000EDBC
l0000E910:
	r6 = r31 + 0x00000001
	r31 = r31 + 0x0000003A
	r31 = r31 + r31
	Mem0[r22 + 108:word32] = r6
	r18 = r4 & 0x0000001F
	r8 = r25
	branch Test(EQ,r18) l0000E910_ds_t
	// succ:  l0000E910_ds_f l0000E910_ds_t
l0000E910_ds_f:
	r8 = r8
	goto l0000E930
	// succ:  l0000E930
l0000E910_ds_t:
	r8 = r8
	goto l0000E93C
	// succ:  l0000E93C
l0000E930:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000E930_ds_t
	// succ:  l0000E930_ds_f l0000E930_ds_t
l0000E930_ds_f:
	r8 = r8 >>u 1
	C = cond(r8)
	goto l0000E93C
	// succ:  l0000E93C
l0000E930_ds_t:
	r8 = r8 >>u 1
	C = cond(r8)
	goto l0000E930
	// succ:  l0000E930
l0000E93C:
	v32 = SLICE(r3, word16, 0)
	Mem0[r31 + r22:word16] = v32
	r25 = r8
	r19 = r19 - r4
	r31 = r6
	goto l0000E85C
	// succ:  l0000E85C
l0000EDBC:
	branch Test(EQ,r6) l0000EDBC_ds_t
	// succ:  l0000EDBC_ds_f l0000EDBC_ds_t
l0000EDBC_ds_f:
	r3 = r3 ^ 0x00000011
	goto l0000EDC4
	// succ:  l0000EDC4
l0000EDBC_ds_t:
	r3 = r3 ^ 0x00000011
	goto l0000F420
	// succ:  l0000F420
l0000EDC4:
	branch Test(EQ,r3) l0000EDC4_ds_t
	// succ:  l0000EDC4_ds_f l0000EDC4_ds_t
l0000EDC4_ds_f:
	r8 = r4 + 0x00000007
	goto l0000EDCC
	// succ:  l0000EDCC
l0000EDC4_ds_t:
	r8 = r4 + 0x00000007
	goto l0000F350
	// succ:  l0000F350
l0000EDCC:
	r18 = cond(r19 -u r8)
	branch Test(GE,r18) l0000EDCC_ds_t
	// succ:  l0000EDCC_ds_f l0000EDCC_ds_t
l0000EDCC_ds_f:
	r6 = 0xFFFFFFF9
	goto l0000EDD4_thunk_fn0000EDD8
	// succ:  l0000EDD4_thunk_fn0000EDD8
l0000EDCC_ds_t:
	r6 = 0xFFFFFFF9
	goto l0000EE18
	// succ:  l0000EE18
l0000EDD4_thunk_fn0000EDD8:
	call fn0000EDD8 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000EE14:
	r6 = 0xFFFFFFF9
	goto l0000EE18
	// succ:  l0000EE18
l0000EE14_thunk_fn0000EDD8:
	call fn0000EDD8 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000EE18:
	r9 = r12
	r18 = r4 & 0x0000001F
	r3 = r25
	branch Test(EQ,r18) l0000EE18_ds_t
	// succ:  l0000EE18_ds_f l0000EE18_ds_t
l0000EE18_ds_f:
	r3 = r3
	goto l0000EE2C
	// succ:  l0000EE2C
l0000EE18_ds_t:
	r3 = r3
	goto l0000EE38
	// succ:  l0000EE38
l0000EE2C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000EE2C_ds_t
	// succ:  l0000EE2C_ds_f l0000EE2C_ds_t
l0000EE2C_ds_f:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000EE38
	// succ:  l0000EE38
l0000EE2C_ds_t:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000EE2C
	// succ:  l0000EE2C
l0000EE38:
	r4 = r6 - r4
	r6 = r3 & 0x0000007F
	r6 = r6 + 0x0000000B
	r19 = r19 + r4
	r25 = r3
	r25 = r3 >>u 1
	C = cond(r25)
	r25 = r25 >>u 1
	C = cond(r25)
	r25 = r25 >>u 1
	C = cond(r25)
	r25 = r25 >>u 1
	C = cond(r25)
	r25 = r25 >>u 1
	C = cond(r25)
	r25 = r25 >>u 1
	C = cond(r25)
	r25 = r25 >>u 1
	C = cond(r25)
	goto l0000EE68
	// succ:  l0000EE68
l0000EE38_ds_f:
	r4 = r31 + 0x0000003A
	goto l0000EE78
	// succ:  l0000EE78
l0000EE38_ds_t:
	r4 = r31 + 0x0000003A
	goto l0000F968
	// succ:  l0000F968
l0000EE68:
	r11 = r6 + r31
	r18 = cond(r5 -u r11)
	branch Test(LT,r18) l0000EE38_ds_t
	goto l0000EE38_ds_f
	// succ:  l0000EE38_ds_f l0000EE38_ds_t
l0000EE78:
	r8 = r4 + r4
	Mem0[r1 + 56:word32] = r8
	r8 = r22 + r8
	r8 = r8 >>u 1
	C = cond(r8)
	r10 = r6 + 0xFFFFFFFF
	r3 = 0x00000004
	r9 = r9 & 0xFFFFFFFF
	r18 = cond(r3 -u r10)
	branch Test(GE,r18) l0000EE78_ds_t
	// succ:  l0000EE78_ds_f l0000EE78_ds_t
l0000EE78_ds_f:
	r8 = r8 & 0x00000001
	goto l0000EEA4
	// succ:  l0000EEA4
l0000EE78_ds_t:
	r8 = r8 & 0x00000001
	goto l0000F88C
	// succ:  l0000F88C
l0000EEA4:
	branch Test(EQ,r8) l0000EEA4_ds_t
	// succ:  l0000EEA4_ds_f l0000EEA4_ds_t
l0000EEA4_ds_f:
	r3 = Mem0[r1 + 56:word32]
	goto l0000EEAC
	// succ:  l0000EEAC
l0000EEA4_ds_t:
	r3 = Mem0[r1 + 56:word32]
	goto l0000F6E0
	// succ:  l0000F6E0
l0000EEAC:
	r31 = r31 + 0x00000001
	Mem0[r1 + 40:word32] = r31
	v18 = SLICE(r9, word16, 0)
	Mem0[r3 + r22:word16] = v18
	r10 = r6 + 0xFFFFFFFE
	// succ:  l0000EEBC
l0000EEBC:
	r3 = r9 + r9
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r4 = r8 + r4
	r3 = r3 + r3
	r6 = r6 - r8
	r3 = r3 & 0xFFFF0000
	r4 = r4 + r4
	r31 = r6 >>u 1
	C = cond(r31)
	r3 = r3 | r9
	r4 = r22 + r4
	r8 = 0x00000000
	// succ:  l0000EF20
l0000EF20:
	Mem0[r4:word32] = r3
	r8 = r8 + 0x00000001
	r18 = cond(r8 -u r31)
	branch Test(LT,r18) l0000EF20_ds_t
	// succ:  l0000EF20_ds_f l0000EF20_ds_t
l0000EF20_ds_f:
	r4 = r4 + 0x00000004
	goto l0000EF34
	// succ:  l0000EF34
l0000EF20_ds_t:
	r4 = r4 + 0x00000004
	goto l0000EF20
	// succ:  l0000EF20
l0000EF34:
	r4 = Mem0[r1 + 40:word32]
	r3 = r6 & 0xFFFFFFFE
	r6 = r3 ^ r6
	r10 = r10 - r3
	branch Test(EQ,r6) l0000EF34_ds_t
	// succ:  l0000EF34_ds_f l0000EF34_ds_t
l0000EF34_ds_f:
	r31 = r3 + r4
	goto l0000EF4C
	// succ:  l0000EF4C
l0000EF34_ds_t:
	r31 = r3 + r4
	goto l0000EFA8
	// succ:  l0000EFA8
l0000EF4C:
	r3 = r31 + 0x0000003A
	r3 = r3 + r3
	v19 = SLICE(r9, word16, 0)
	Mem0[r3 + r22:word16] = v19
	r31 = r31 + 0x00000001
	branch Test(EQ,r10) l0000EF4C_ds_t
	// succ:  l0000EF4C_ds_f l0000EF4C_ds_t
l0000EF4C_ds_f:
	r6 = r10 + 0xFFFFFFFF
	goto l0000EF64
	// succ:  l0000EF64
l0000EF4C_ds_t:
	r6 = r10 + 0xFFFFFFFF
	goto l0000EFA8
	// succ:  l0000EFA8
l0000EF64:
	r3 = r31 + 0x0000003A
	r3 = r3 + r3
	branch Test(EQ,r6) l0000EF64_ds_t
	// succ:  l0000EF64_ds_f l0000EF64_ds_t
l0000EF64_ds_f:
	v20 = SLICE(r9, word16, 0)
	Mem0[r3 + r22:word16] = v20
	goto l0000EF74
	// succ:  l0000EF74
l0000EF64_ds_t:
	v20 = SLICE(r9, word16, 0)
	Mem0[r3 + r22:word16] = v20
	goto l0000EFA8
	// succ:  l0000EFA8
l0000EF74:
	r3 = r31 + 0x0000003B
	r3 = r3 + r3
	v21 = SLICE(r9, word16, 0)
	Mem0[r3 + r22:word16] = v21
	r3 = r6 ^ 0x00000001
	branch Test(EQ,r3) l0000EF74_ds_t
	// succ:  l0000EF74_ds_f l0000EF74_ds_t
l0000EF74_ds_f:
	r6 = r6 ^ 0x00000002
	goto l0000EF8C
	// succ:  l0000EF8C
l0000EF74_ds_t:
	r6 = r6 ^ 0x00000002
	goto l0000EFA8
	// succ:  l0000EFA8
l0000EF8C:
	r3 = r31 + 0x0000003C
	r3 = r3 + r3
	branch Test(EQ,r6) l0000EF8C_ds_t
	// succ:  l0000EF8C_ds_f l0000EF8C_ds_t
l0000EF8C_ds_f:
	v22 = SLICE(r9, word16, 0)
	Mem0[r3 + r22:word16] = v22
	goto l0000EF9C
	// succ:  l0000EF9C
l0000EF8C_ds_t:
	v22 = SLICE(r9, word16, 0)
	Mem0[r3 + r22:word16] = v22
	goto l0000EFA8
	// succ:  l0000EFA8
l0000EF9C:
	r31 = r31 + 0x0000003D
	r31 = r31 + r31
	v23 = SLICE(r9, word16, 0)
	Mem0[r31 + r22:word16] = v23
	// succ:  l0000EFA8
l0000EFA8:
	r31 = r11
	Mem0[r22 + 108:word32] = r11
	goto l0000E85C
	// succ:  l0000E85C
l0000F350:
	r8 = r4 + 0x00000003
	r18 = cond(r19 -u r8)
	branch Test(GE,r18) l0000F350_ds_t
	// succ:  l0000F350_ds_f l0000F350_ds_t
l0000F350_ds_f:
	r9 = 0xFFFFFFFD
	goto l0000F360
	// succ:  l0000F360
l0000F350_ds_t:
	r9 = 0xFFFFFFFD
	goto l0000F3A0
	// succ:  l0000F3A0
l0000F360:
	branch Test(EQ,r21) l0000DCCC
	goto l0000F364
	// succ:  l0000F364 l0000F360_thunk_fn0000DB74
l0000F360_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000F364:
	r24 = r24 + 0x00000001
	v33 = Mem0[r24 - 1:byte]
	r6 = (word32) v33
	r21 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r3 = r6
	branch Test(EQ,r18) l0000F364_ds_t
	// succ:  l0000F364_ds_f l0000F364_ds_t
l0000F364_ds_f:
	r3 = r3
	goto l0000F380
	// succ:  l0000F380
l0000F364_ds_t:
	r3 = r3
	goto l0000F38C
	// succ:  l0000F38C
l0000F380:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F380_ds_t
	// succ:  l0000F380_ds_f l0000F380_ds_t
l0000F380_ds_f:
	r3 = r3 + r3
	goto l0000F38C
	// succ:  l0000F38C
l0000F380_ds_t:
	r3 = r3 + r3
	goto l0000F380
	// succ:  l0000F380
l0000F38C:
	r19 = r19 + 0x00000008
	r18 = cond(r19 -u r8)
	branch Test(LT,r18) l0000F38C_ds_t
	// succ:  l0000F38C_ds_f l0000F38C_ds_t
l0000F38C_ds_f:
	r25 = r25 + r3
	goto l0000F39C
	// succ:  l0000F39C
l0000F38C_ds_t:
	r25 = r25 + r3
	goto l0000F360
	// succ:  l0000F360
l0000F39C:
	r9 = 0xFFFFFFFD
	// succ:  l0000F3A0
l0000F3A0:
	r18 = r4 & 0x0000001F
	r3 = r25
	branch Test(EQ,r18) l0000F3A0_ds_t
	// succ:  l0000F3A0_ds_f l0000F3A0_ds_t
l0000F3A0_ds_f:
	r3 = r3
	goto l0000F3B0
	// succ:  l0000F3B0
l0000F3A0_ds_t:
	r3 = r3
	goto l0000F3BC
	// succ:  l0000F3BC
l0000F3B0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F3B0_ds_t
	// succ:  l0000F3B0_ds_f l0000F3B0_ds_t
l0000F3B0_ds_f:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000F3BC
	// succ:  l0000F3BC
l0000F3B0_ds_t:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0000F3B0
	// succ:  l0000F3B0
l0000F3BC:
	r4 = r9 - r4
	r6 = r3 & 0x00000007
	r6 = r6 + 0x00000003
	r25 = r3
	r25 = r3 >>u 1
	C = cond(r25)
	r25 = r25 >>u 1
	C = cond(r25)
	r25 = r25 >>u 1
	C = cond(r25)
	r19 = r19 + r4
	r9 = r12
	goto l0000EE68
	// succ:  l0000EE68
l0000F420:
	r8 = r4 + 0x00000002
	r18 = cond(r19 -u r8)
	branch Test(GE,r18) l0000F468
	// succ:  l0000F42C l0000F468
l0000F42C:
	branch Test(EQ,r21) l0000DCCC
	goto l0000F430
	// succ:  l0000F430 l0000F42C_thunk_fn0000DB74
l0000F42C_thunk_fn0000DB74:
	call fn0000DB74 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000F430:
	r24 = r24 + 0x00000001
	v34 = Mem0[r24 - 1:byte]
	r6 = (word32) v34
	r21 = r21 + 0xFFFFFFFF
	r18 = r19 & 0x0000001F
	r3 = r6
	branch Test(EQ,r18) l0000F430_ds_t
	// succ:  l0000F430_ds_f l0000F430_ds_t
l0000F430_ds_f:
	r3 = r3
	goto l0000F44C
	// succ:  l0000F44C
l0000F430_ds_t:
	r3 = r3
	goto l0000F458
	// succ:  l0000F458
l0000F44C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F44C_ds_t
	// succ:  l0000F44C_ds_f l0000F44C_ds_t
l0000F44C_ds_f:
	r3 = r3 + r3
	goto l0000F458
	// succ:  l0000F458
l0000F44C_ds_t:
	r3 = r3 + r3
	goto l0000F44C
	// succ:  l0000F44C
l0000F458:
	r19 = r19 + 0x00000008
	r18 = cond(r19 -u r8)
	branch Test(LT,r18) l0000F458_ds_t
	// succ:  l0000F458_ds_f l0000F458_ds_t
l0000F458_ds_f:
	r25 = r25 + r3
	goto l0000F468
	// succ:  l0000F468
l0000F458_ds_t:
	r25 = r25 + r3
	goto l0000F42C
	// succ:  l0000F42C
l0000F468:
	r18 = r4 & 0x0000001F
	r9 = r25
	branch Test(EQ,r18) l0000F468_ds_t
	// succ:  l0000F468_ds_f l0000F468_ds_t
l0000F468_ds_f:
	r9 = r9
	goto l0000F478
	// succ:  l0000F478
l0000F468_ds_t:
	r9 = r9
	goto l0000F484
	// succ:  l0000F484
l0000F478:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0000F478_ds_t
	// succ:  l0000F478_ds_f l0000F478_ds_t
l0000F478_ds_f:
	r9 = r9 >>u 1
	C = cond(r9)
	goto l0000F484
	// succ:  l0000F484
l0000F478_ds_t:
	r9 = r9 >>u 1
	C = cond(r9)
	goto l0000F478
	// succ:  l0000F478
l0000F484:
	r19 = r19 - r4
	branch Test(EQ,r31) l0000F484_ds_t
	// succ:  l0000F484_ds_f l0000F484_ds_t
l0000F484_ds_f:
	r25 = r9
	goto l0000F490
	// succ:  l0000F490
l0000F484_ds_t:
	r25 = r9
	goto l0000FAB0
	// succ:  l0000FAB0
l0000F490:
	r3 = r31 + 0x00000039
	r6 = r9 & 0x00000003
	r3 = r3 + r3
	r8 = r25
	r8 = r25 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	v35 = Mem0[r3 + r22:word16]
	r9 = (word32) v35
	r6 = r6 + 0x00000003
	r25 = r8
	r19 = r19 + 0xFFFFFFFE
	goto l0000EE68
	// succ:  l0000EE68
l0000F6E0:
	Mem0[r1 + 40:word32] = r31
	goto l0000EEBC
	// succ:  l0000EEBC
l0000F7CC:
	v37 = Mem0[r22 + 628:word16]
	r3 = (word32) v37
	branch Test(NE,r3) l0000F7CC_ds_t
	// succ:  l0000F7CC_ds_f l0000F7CC_ds_t
l0000F7CC_ds_f:
	r6 = 0x00003F51
	goto l0000F7D8
	// succ:  l0000F7D8
l0000F7CC_ds_t:
	r6 = 0x00003F51
	goto l0000F8F8
	// succ:  l0000F8F8
l0000F7D8:
	r5 = 0xFFFF9F7C
	r31 = 0xFFFFFFFD
	Mem0[r23 + 24:word32] = r5
	Mem0[r22 + 4:word32] = r6
	// succ:  l0000F7E8_thunk_fn0000CE88
l0000F7E8_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000F88C:
	r3 = Mem0[r1 + 56:word32]
	r31 = r31 + 0x00000001
	r6 = r6 + 0xFFFFFFFE
	v46 = SLICE(r9, word16, 0)
	Mem0[r3 + r22:word16] = v46
	goto l0000EF64
	// succ:  l0000EF64
l0000F8F8:
	r4 = r22 + 0x00000070
	r11 = r22 + 0x000002F4
	r8 = 0x00000009
	r31 = r22 + 0x00000074
	Mem0[r22 + 88:word32] = r8
	r10 = r11
	r8 = r4
	r6 = r31
	r3 = r22 + 0x00000534
	Mem0[r22 + 112:word32] = r3
	Mem0[r22 + 80:word32] = r3
	r9 = r22 + 0x00000058
	r5 = 0x00000001
	Mem0[r1 + 44:word32] = r4
	Mem0[r1 + 48:word32] = r11
	r15 = 0x0000F934
	Mem0[r1 + 52:word32] = r20
	call fn000109C0 (retsize: 0;)
	r4 = Mem0[r1 + 44:word32]
	r11 = Mem0[r1 + 48:word32]
	branch Test(EQ,r3) l0000F8F8_ds_t
	// succ:  l0000F8F8_ds_f l0000F8F8_ds_t
l0000F8F8_ds_f:
	r20 = Mem0[r1 + 52:word32]
	goto l0000F94C
	// succ:  l0000F94C
l0000F8F8_ds_t:
	r20 = Mem0[r1 + 52:word32]
	goto l0000F984
	// succ:  l0000F984
l0000F94C:
	r9 = 0xFFFF9FA4
	r3 = 0x00003F51
	r31 = 0xFFFFFFFD
	Mem0[r23 + 24:word32] = r9
	Mem0[r22 + 4:word32] = r3
	// succ:  l0000F960_thunk_fn0000CE88
l0000F960_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000F968:
	r4 = 0xFFFF9F60
	r5 = 0x00003F51
	r31 = 0xFFFFFFFD
	Mem0[r23 + 24:word32] = r4
	Mem0[r22 + 4:word32] = r5
	// succ:  l0000F97C_thunk_fn0000CE88
l0000F97C_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000F984:
	r6 = Mem0[r22 + 100:word32]
	r5 = Mem0[r22 + 112:word32]
	r7 = 0x00000006
	Mem0[r22 + 92:word32] = r7
	r10 = r11
	r7 = Mem0[r22 + 104:word32]
	r8 = r4
	r6 = r6 + r6
	Mem0[r22 + 84:word32] = r5
	r9 = r22 + 0x0000005C
	r6 = r31 + r6
	r5 = 0x00000002
	r15 = 0x0000F9B4
	Mem0[r1 + 52:word32] = r20
	call fn000109C0 (retsize: 0;)
	branch Test(EQ,r3) l0000F984_ds_t
	// succ:  l0000F984_ds_f l0000F984_ds_t
l0000F984_ds_f:
	r20 = Mem0[r1 + 52:word32]
	goto l0000F9C4
	// succ:  l0000F9C4
l0000F984_ds_t:
	r20 = Mem0[r1 + 52:word32]
	goto l0000FA94
	// succ:  l0000FA94
l0000F9C4:
	r8 = 0xFFFF9FC0
	r9 = 0x00003F51
	r31 = 0xFFFFFFFD
	Mem0[r23 + 24:word32] = r8
	Mem0[r22 + 4:word32] = r9
	// succ:  l0000F9D8_thunk_fn0000CE88
l0000F9D8_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000FA94:
	r4 = 0x00003F47
	Mem0[r22 + 4:word32] = r4
	r4 = Mem0[r1 + 36:word32]
	branch Test(NE,r4) l0000FA94_ds_t
	// succ:  l0000FA94_ds_f l0000FA94_ds_t
l0000FA94_ds_f:
	r31 = r3
	goto l0000FAA8
	// succ:  l0000FAA8
l0000FA94_ds_t:
	r31 = r3
	goto l0000E60C
	// succ:  l0000E60C
l0000FAA8:
	r3 = Mem0[r22 + 44:word32]
	// succ:  l0000FAA8_thunk_fn0000CE88
l0000FAA8_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
l0000FAB0:
	r3 = 0xFFFF9F60
	r4 = 0x00003F51
	r31 = 0xFFFFFFFD
	Mem0[r23 + 24:word32] = r3
	Mem0[r22 + 4:word32] = r4
	// succ:  l0000FAC4_thunk_fn0000CE88
l0000FAC4_thunk_fn0000CE88:
	call fn0000CE88 (retsize: 0;)
	return
	// succ:  fn0000EE14_exit
fn0000EE14_exit:


// fn000109C0
// Return size: 0
define fn000109C0
fn000109C0_entry:
	r1 = fp
	// succ:  l000109C0
l000109C0:
	r1 = r1 + 0xFFFFFF6C
	Mem0[r1 + 96:word32] = r19
	Mem0[r1 + 100:word32] = r20
	Mem0[r1 + 104:word32] = r21
	Mem0[r1 + 108:word32] = r22
	Mem0[r1 + 112:word32] = r23
	Mem0[r1 + 116:word32] = r24
	Mem0[r1 + 120:word32] = r25
	Mem0[r1 + 124:word32] = r26
	Mem0[r1 + 128:word32] = r27
	Mem0[r1 + 132:word32] = r28
	Mem0[r1 + 136:word32] = r29
	Mem0[r1 + 140:word32] = r30
	Mem0[r1 + 144:word32] = r31
	Mem0[r1 + 36:word32] = r0
	Mem0[r1 + 40:word32] = r0
	Mem0[r1 + 44:word32] = r0
	Mem0[r1 + 48:word32] = r0
	Mem0[r1 + 52:word32] = r0
	Mem0[r1 + 56:word32] = r0
	Mem0[r1 + 60:word32] = r0
	Mem0[r1 + 64:word32] = r0
	branch Test(EQ,r7) l000109C0_ds_t
	// succ:  l000109C0_ds_f l000109C0_ds_t
l000109C0_ds_f:
	Mem0[r1 + 168:word32] = r9
	goto l00010A20
	// succ:  l00010A20
l000109C0_ds_t:
	Mem0[r1 + 168:word32] = r9
	goto l00010A54
	// succ:  l00010A54
l00010A20:
	r4 = r6
	r12 = r7 + r7
	r12 = r6 + r12
	r22 = r1 + 0x00000004
	// succ:  l00010A30
l00010A30:
	v23 = Mem0[r4:word16]
	r3 = (word32) v23
	r4 = r4 + 0x00000002
	r11 = r4 ^ r12
	r3 = r3 + r3
	r3 = r22 + r3
	v25 = Mem0[r3 + 32:word16]
	r9 = (word32) v25
	r9 = r9 + 0x00000001
	branch Test(NE,r11) l00010A30_ds_t
	// succ:  l00010A30_ds_f l00010A30_ds_t
l00010A30_ds_f:
	v26 = SLICE(r9, word16, 0)
	Mem0[r3 + 32:word16] = v26
	goto l00010A54
	// succ:  l00010A54
l00010A30_ds_t:
	v26 = SLICE(r9, word16, 0)
	Mem0[r3 + 32:word16] = v26
	goto l00010A30
	// succ:  l00010A30
l00010A54:
	v27 = Mem0[r1 + 66:word16]
	r22 = (word32) v27
	branch Test(NE,r22) l00010A54_ds_t
	// succ:  l00010A54_ds_f l00010A54_ds_t
l00010A54_ds_f:
	v28 = Mem0[r1 + 64:word16]
	r3 = (word32) v28
	goto l00010A60
	// succ:  l00010A60
l00010A54_ds_t:
	v28 = Mem0[r1 + 64:word16]
	r3 = (word32) v28
	goto l000115E4
	// succ:  l000115E4
l00010A60:
	branch Test(NE,r3) l00010A60_ds_t
	// succ:  l00010A60_ds_f l00010A60_ds_t
l00010A60_ds_f:
	v29 = Mem0[r1 + 62:word16]
	r3 = (word32) v29
	goto l00010A68
	// succ:  l00010A68
l00010A60_ds_t:
	v29 = Mem0[r1 + 62:word16]
	r3 = (word32) v29
	goto l00010B34
	// succ:  l00010B34
l00010A68:
	branch Test(NE,r3) l00010A68_ds_t
	// succ:  l00010A68_ds_f l00010A68_ds_t
l00010A68_ds_f:
	v30 = Mem0[r1 + 60:word16]
	r3 = (word32) v30
	goto l00010A70
	// succ:  l00010A70
l00010A68_ds_t:
	v30 = Mem0[r1 + 60:word16]
	r3 = (word32) v30
	goto l00011654
	// succ:  l00011654
l00010A70:
	branch Test(NE,r3) l00010A70_ds_t
	// succ:  l00010A70_ds_f l00010A70_ds_t
l00010A70_ds_f:
	v31 = Mem0[r1 + 58:word16]
	r3 = (word32) v31
	goto l00010A78
	// succ:  l00010A78
l00010A70_ds_t:
	v31 = Mem0[r1 + 58:word16]
	r3 = (word32) v31
	goto l00011668
	// succ:  l00011668
l00010A78:
	branch Test(NE,r3) l00010A78_ds_t
	// succ:  l00010A78_ds_f l00010A78_ds_t
l00010A78_ds_f:
	v32 = Mem0[r1 + 56:word16]
	r3 = (word32) v32
	goto l00010A80
	// succ:  l00010A80
l00010A78_ds_t:
	v32 = Mem0[r1 + 56:word16]
	r3 = (word32) v32
	goto l0001167C
	// succ:  l0001167C
l00010A80:
	branch Test(NE,r3) l00010A80_ds_t
	// succ:  l00010A80_ds_f l00010A80_ds_t
l00010A80_ds_f:
	v33 = Mem0[r1 + 54:word16]
	r3 = (word32) v33
	goto l00010A88
	// succ:  l00010A88
l00010A80_ds_t:
	v33 = Mem0[r1 + 54:word16]
	r3 = (word32) v33
	goto l000116E0
	// succ:  l000116E0
l00010A88:
	branch Test(NE,r3) l00010A88_ds_t
	// succ:  l00010A88_ds_f l00010A88_ds_t
l00010A88_ds_f:
	v34 = Mem0[r1 + 52:word16]
	r3 = (word32) v34
	goto l00010A90
	// succ:  l00010A90
l00010A88_ds_t:
	v34 = Mem0[r1 + 52:word16]
	r3 = (word32) v34
	goto l000116F4
	// succ:  l000116F4
l00010A90:
	branch Test(NE,r3) l00010A90_ds_t
	// succ:  l00010A90_ds_f l00010A90_ds_t
l00010A90_ds_f:
	v35 = Mem0[r1 + 50:word16]
	r3 = (word32) v35
	goto l00010A98
	// succ:  l00010A98
l00010A90_ds_t:
	v35 = Mem0[r1 + 50:word16]
	r3 = (word32) v35
	goto l0001171C
	// succ:  l0001171C
l00010A98:
	branch Test(NE,r3) l00010A98_ds_t
	// succ:  l00010A98_ds_f l00010A98_ds_t
l00010A98_ds_f:
	v36 = Mem0[r1 + 48:word16]
	r3 = (word32) v36
	goto l00010AA0
	// succ:  l00010AA0
l00010A98_ds_t:
	v36 = Mem0[r1 + 48:word16]
	r3 = (word32) v36
	goto l00011640
	// succ:  l00011640
l00010AA0:
	branch Test(NE,r3) l00010AA0_ds_t
	// succ:  l00010AA0_ds_f l00010AA0_ds_t
l00010AA0_ds_f:
	v37 = Mem0[r1 + 46:word16]
	r3 = (word32) v37
	goto l00010AA8
	// succ:  l00010AA8
l00010AA0_ds_t:
	v37 = Mem0[r1 + 46:word16]
	r3 = (word32) v37
	goto l0001173C
	// succ:  l0001173C
l00010AA8:
	branch Test(NE,r3) l00010AA8_ds_t
	// succ:  l00010AA8_ds_f l00010AA8_ds_t
l00010AA8_ds_f:
	v38 = Mem0[r1 + 44:word16]
	r3 = (word32) v38
	goto l00010AB0
	// succ:  l00010AB0
l00010AA8_ds_t:
	v38 = Mem0[r1 + 44:word16]
	r3 = (word32) v38
	goto l00011750
	// succ:  l00011750
l00010AB0:
	branch Test(NE,r3) l00010AB0_ds_t
	// succ:  l00010AB0_ds_f l00010AB0_ds_t
l00010AB0_ds_f:
	v39 = Mem0[r1 + 42:word16]
	r3 = (word32) v39
	goto l00010AB8
	// succ:  l00010AB8
l00010AB0_ds_t:
	v39 = Mem0[r1 + 42:word16]
	r3 = (word32) v39
	goto l0001177C
	// succ:  l0001177C
l00010AB8:
	branch Test(NE,r3) l00010AB8_ds_t
	// succ:  l00010AB8_ds_f l00010AB8_ds_t
l00010AB8_ds_f:
	v40 = Mem0[r1 + 40:word16]
	r3 = (word32) v40
	goto l00010AC0
	// succ:  l00010AC0
l00010AB8_ds_t:
	v40 = Mem0[r1 + 40:word16]
	r3 = (word32) v40
	goto l0001179C
	// succ:  l0001179C
l00010AC0:
	branch Test(NE,r3) l00010AC0_ds_t
	// succ:  l00010AC0_ds_f l00010AC0_ds_t
l00010AC0_ds_f:
	v41 = Mem0[r1 + 38:word16]
	r11 = (word32) v41
	goto l00010AC8
	// succ:  l00010AC8
l00010AC0_ds_t:
	v41 = Mem0[r1 + 38:word16]
	r11 = (word32) v41
	goto l000117C0
	// succ:  l000117C0
l00010AC8:
	branch Test(NE,r11) l00010AC8_ds_t
	// succ:  l00010AC8_ds_f l00010AC8_ds_t
l00010AC8_ds_f:
	r3 = r11
	goto l00010AD0
	// succ:  l00010AD0
l00010AC8_ds_t:
	r3 = r11
	goto l00011730
	// succ:  l00011730
l00010AD0:
	r4 = Mem0[r8:word32]
	r5 = 0x00004001
	v44 = SLICE(r5, word16, 0)
	Mem0[r4:word16] = v44
	v45 = SLICE(r11, word16, 0)
	Mem0[r4 + 2:word16] = v45
	r6 = r4 + 0x00000008
	Mem0[r8:word32] = r6
	v46 = SLICE(r5, word16, 0)
	Mem0[r4 + 4:word16] = v46
	v47 = SLICE(r11, word16, 0)
	Mem0[r4 + 6:word16] = v47
	r4 = Mem0[r1 + 168:word32]
	r5 = 0x00000001
	Mem0[r4:word32] = r5
	// succ:  l00010AFC
l00010AFC:
	r19 = Mem0[r1 + 96:word32]
	r21 = Mem0[r1 + 104:word32]
	r22 = Mem0[r1 + 108:word32]
	r23 = Mem0[r1 + 112:word32]
	r24 = Mem0[r1 + 116:word32]
	r25 = Mem0[r1 + 120:word32]
	r26 = Mem0[r1 + 124:word32]
	r27 = Mem0[r1 + 128:word32]
	r28 = Mem0[r1 + 132:word32]
	r29 = Mem0[r1 + 136:word32]
	r30 = Mem0[r1 + 140:word32]
	r31 = Mem0[r1 + 144:word32]
	r1 = r1 + 0x00000094
	return
	// succ:  fn000109C0_exit
l00010B34:
	v142 = Mem0[r1 + 38:word16]
	r11 = (word32) v142
	branch Test(NE,r11) l00010B34_ds_t
	// succ:  l00010B34_ds_f l00010B34_ds_t
l00010B34_ds_f:
	v143 = Mem0[r1 + 40:word16]
	r3 = (word32) v143
	goto l00010B40
	// succ:  l00010B40
l00010B34_ds_t:
	v143 = Mem0[r1 + 40:word16]
	r3 = (word32) v143
	goto l00011810
	// succ:  l00011810
l00010B40:
	branch Test(NE,r3) l00010B40_ds_t
	// succ:  l00010B40_ds_f l00010B40_ds_t
l00010B40_ds_f:
	r4 = 0x00000002
	goto l00010B48
	// succ:  l00010B48
l00010B40_ds_t:
	r4 = 0x00000002
	goto l00011710
	// succ:  l00011710
l00010B48:
	v144 = Mem0[r1 + 42:word16]
	r3 = (word32) v144
	branch Test(NE,r3) l00010B48_ds_t
	// succ:  l00010B48_ds_f l00010B48_ds_t
l00010B48_ds_f:
	r9 = 0x0000000E
	goto l00010B54
	// succ:  l00010B54
l00010B48_ds_t:
	r9 = 0x0000000E
	goto l00011620
	// succ:  l00011620
l00010B54:
	v145 = Mem0[r1 + 44:word16]
	r3 = (word32) v145
	// succ:  l00010B58
l00010B58:
	branch Test(NE,r3) l00010B58_ds_t
	// succ:  l00010B58_ds_f l00010B58_ds_t
l00010B58_ds_f:
	r12 = 0x00000002
	goto l00010B60
	// succ:  l00010B60
l00010B58_ds_t:
	r12 = 0x00000002
	goto l00011770
	// succ:  l00011770
l00010B60:
	r3 = r9 ^ 0x00000005
	branch Test(EQ,r3) l00010B60_ds_t
	// succ:  l00010B60_ds_f l00010B60_ds_t
l00010B60_ds_f:
	r19 = 0x00000002
	goto l00010B6C
	// succ:  l00010B6C
l00010B60_ds_t:
	r19 = 0x00000002
	goto l00011634
	// succ:  l00011634
l00010B6C:
	v55 = Mem0[r1 + 46:word16]
	r3 = (word32) v55
	branch Test(NE,r3) l00010B6C_ds_t
	// succ:  l00010B6C_ds_f l00010B6C_ds_t
l00010B6C_ds_f:
	r31 = 0x00000002
	goto l00010B78
	// succ:  l00010B78
l00010B6C_ds_t:
	r31 = 0x00000002
	goto l00011790
	// succ:  l00011790
l00010B78:
	r3 = r9 ^ 0x00000006
	branch Test(EQ,r3) l00010B78_ds_t
	// succ:  l00010B78_ds_f l00010B78_ds_t
l00010B78_ds_f:
	r4 = r9
	goto l00010B84
	// succ:  l00010B84
l00010B78_ds_t:
	r4 = r9
	goto l000116D8
	// succ:  l000116D8
l00010B84:
	v56 = Mem0[r1 + 48:word16]
	r3 = (word32) v56
	branch Test(NE,r3) l00010B84_ds_t
	// succ:  l00010B84_ds_f l00010B84_ds_t
l00010B84_ds_f:
	r4 = 0x00000006
	goto l00010B90
	// succ:  l00010B90
l00010B84_ds_t:
	r4 = 0x00000006
	goto l000117E0
	// succ:  l000117E0
l00010B90:
	r3 = r9 ^ 0x00000007
	branch Test(EQ,r3) l00010B90_ds_t
	// succ:  l00010B90_ds_f l00010B90_ds_t
l00010B90_ds_f:
	r4 = r9
	goto l00010B9C
	// succ:  l00010B9C
l00010B90_ds_t:
	r4 = r9
	goto l00011708
	// succ:  l00011708
l00010B9C:
	v57 = Mem0[r1 + 50:word16]
	r3 = (word32) v57
	branch Test(NE,r3) l00010B9C_ds_t
	// succ:  l00010B9C_ds_f l00010B9C_ds_t
l00010B9C_ds_f:
	r4 = 0x00000007
	goto l00010BA8
	// succ:  l00010BA8
l00010B9C_ds_t:
	r4 = 0x00000007
	goto l000117E8
	// succ:  l000117E8
l00010BA8:
	r3 = r9 ^ 0x00000008
	branch Test(EQ,r3) l00010BA8_ds_t
	// succ:  l00010BA8_ds_f l00010BA8_ds_t
l00010BA8_ds_f:
	r4 = r9
	goto l00010BB4
	// succ:  l00010BB4
l00010BA8_ds_t:
	r4 = r9
	goto l00011638
	// succ:  l00011638
l00010BB4:
	v58 = Mem0[r1 + 52:word16]
	r3 = (word32) v58
	branch Test(NE,r3) l00010BB4_ds_t
	// succ:  l00010BB4_ds_f l00010BB4_ds_t
l00010BB4_ds_f:
	r4 = 0x00000008
	goto l00010BC0
	// succ:  l00010BC0
l00010BB4_ds_t:
	r4 = 0x00000008
	goto l000117F0
	// succ:  l000117F0
l00010BC0:
	r3 = r9 ^ 0x00000009
	branch Test(EQ,r3) l00010BC0_ds_t
	// succ:  l00010BC0_ds_f l00010BC0_ds_t
l00010BC0_ds_f:
	r4 = r9
	goto l00010BCC
	// succ:  l00010BCC
l00010BC0_ds_t:
	r4 = r9
	goto l000116D8
	// succ:  l000116D8
l00010BCC:
	v59 = Mem0[r1 + 54:word16]
	r3 = (word32) v59
	branch Test(NE,r3) l00010BCC_ds_t
	// succ:  l00010BCC_ds_f l00010BCC_ds_t
l00010BCC_ds_f:
	r4 = 0x00000009
	goto l00010BD8
	// succ:  l00010BD8
l00010BCC_ds_t:
	r4 = 0x00000009
	goto l000117F8
	// succ:  l000117F8
l00010BD8:
	r3 = r9 ^ 0x0000000A
	branch Test(EQ,r3) l00010BD8_ds_t
	// succ:  l00010BD8_ds_f l00010BD8_ds_t
l00010BD8_ds_f:
	r4 = r9
	goto l00010BE4
	// succ:  l00010BE4
l00010BD8_ds_t:
	r4 = r9
	goto l00011708
	// succ:  l00011708
l00010BE4:
	v60 = Mem0[r1 + 56:word16]
	r3 = (word32) v60
	branch Test(NE,r3) l00010BE4_ds_t
	// succ:  l00010BE4_ds_f l00010BE4_ds_t
l00010BE4_ds_f:
	r4 = 0x0000000A
	goto l00010BF0
	// succ:  l00010BF0
l00010BE4_ds_t:
	r4 = 0x0000000A
	goto l00011808
	// succ:  l00011808
l00010BF0:
	r3 = r9 ^ 0x0000000B
	branch Test(EQ,r3) l00010BF0_ds_t
	// succ:  l00010BF0_ds_f l00010BF0_ds_t
l00010BF0_ds_f:
	r4 = r9
	goto l00010BFC
	// succ:  l00010BFC
l00010BF0_ds_t:
	r4 = r9
	goto l00011638
	// succ:  l00011638
l00010BFC:
	v61 = Mem0[r1 + 58:word16]
	r3 = (word32) v61
	branch Test(NE,r3) l00010BFC_ds_t
	// succ:  l00010BFC_ds_f l00010BFC_ds_t
l00010BFC_ds_f:
	r4 = 0x0000000B
	goto l00010C08
	// succ:  l00010C08
l00010BFC_ds_t:
	r4 = 0x0000000B
	goto l00011800
	// succ:  l00011800
l00010C08:
	r3 = r9 ^ 0x0000000C
	branch Test(EQ,r3) l00010C08_ds_t
	// succ:  l00010C08_ds_f l00010C08_ds_t
l00010C08_ds_f:
	r4 = r9
	goto l00010C14
	// succ:  l00010C14
l00010C08_ds_t:
	r4 = r9
	goto l000116D8
	// succ:  l000116D8
l00010C14:
	v62 = Mem0[r1 + 60:word16]
	r3 = (word32) v62
	branch Test(NE,r3) l00010C14_ds_t
	// succ:  l00010C14_ds_f l00010C14_ds_t
l00010C14_ds_f:
	r4 = 0x0000000C
	goto l00010C20
	// succ:  l00010C20
l00010C14_ds_t:
	r4 = 0x0000000C
	goto l0001181C
	// succ:  l0001181C
l00010C20:
	r3 = r9 ^ 0x0000000D
	branch Test(EQ,r3) l00010C20_ds_t
	// succ:  l00010C20_ds_f l00010C20_ds_t
l00010C20_ds_f:
	r4 = r9
	goto l00010C2C
	// succ:  l00010C2C
l00010C20_ds_t:
	r4 = r9
	goto l00011708
	// succ:  l00011708
l00010C2C:
	v63 = Mem0[r1 + 62:word16]
	r3 = (word32) v63
	branch Test(NE,r3) l00010C2C_ds_t
	// succ:  l00010C2C_ds_f l00010C2C_ds_t
l00010C2C_ds_f:
	r4 = 0x0000000D
	goto l00010C38
	// succ:  l00010C38
l00010C2C_ds_t:
	r4 = 0x0000000D
	goto l00011824
	// succ:  l00011824
l00010C38:
	r3 = r9 ^ 0x0000000F
	branch Test(NE,r3) l00010C38_ds_t
	// succ:  l00010C38_ds_f l00010C38_ds_t
l00010C38_ds_f:
	v64 = Mem0[r1 + 64:word16]
	r12 = (word32) v64
	goto l00010C44
	// succ:  l00010C44
l00010C38_ds_t:
	v64 = Mem0[r1 + 64:word16]
	r12 = (word32) v64
	goto l0001162C
	// succ:  l0001162C
l00010C44:
	r31 = 0x00000002
	r4 = r9
	branch Test(NE,r12) l00010C44_ds_t
	// succ:  l00010C44_ds_f l00010C44_ds_t
l00010C44_ds_f:
	r3 = r31 - r11
	goto l00010C54
	// succ:  l00010C54
l00010C44_ds_t:
	r3 = r31 - r11
	goto l0001182C
	// succ:  l0001182C
l00010C54:
	v65 = Mem0[r1 + 40:word16]
	r12 = (word32) v65
	goto l00010C58
	// succ:  l00010C58
l00010C54_ds_f:
	v66 = Mem0[r1 + 42:word16]
	r20 = (word32) v66
	goto l00010C68
	// succ:  l00010C68
l00010C54_ds_t:
	v66 = Mem0[r1 + 42:word16]
	r20 = (word32) v66
	goto l00010F74
	// succ:  l00010F74
l00010C58:
	r3 = r3 + r3
	r3 = r3 - r12
	branch Test(LT,r3) l00010C54_ds_t
	goto l00010C54_ds_f
	// succ:  l00010C54_ds_f l00010C54_ds_t
l00010C68:
	r3 = r3 + r3
	r3 = r3 - r20
	branch Test(LT,r3) l00010C68_ds_t
	// succ:  l00010C68_ds_f l00010C68_ds_t
l00010C68_ds_f:
	v67 = Mem0[r1 + 44:word16]
	r19 = (word32) v67
	goto l00010C78
	// succ:  l00010C78
l00010C68_ds_t:
	v67 = Mem0[r1 + 44:word16]
	r19 = (word32) v67
	goto l00010F74
	// succ:  l00010F74
l00010C78:
	r3 = r3 + r3
	r3 = r3 - r19
	branch Test(LT,r3) l00010C78_ds_t
	// succ:  l00010C78_ds_f l00010C78_ds_t
l00010C78_ds_f:
	v68 = Mem0[r1 + 46:word16]
	r21 = (word32) v68
	goto l00010C88
	// succ:  l00010C88
l00010C78_ds_t:
	v68 = Mem0[r1 + 46:word16]
	r21 = (word32) v68
	goto l00010F74
	// succ:  l00010F74
l00010C88:
	r3 = r3 + r3
	r3 = r3 - r21
	branch Test(LT,r3) l00010C88_ds_t
	// succ:  l00010C88_ds_f l00010C88_ds_t
l00010C88_ds_f:
	v69 = Mem0[r1 + 48:word16]
	r23 = (word32) v69
	goto l00010C98
	// succ:  l00010C98
l00010C88_ds_t:
	v69 = Mem0[r1 + 48:word16]
	r23 = (word32) v69
	goto l00010F74
	// succ:  l00010F74
l00010C98:
	r3 = r3 + r3
	r3 = r3 - r23
	branch Test(LT,r3) l00010C98_ds_t
	// succ:  l00010C98_ds_f l00010C98_ds_t
l00010C98_ds_f:
	v70 = Mem0[r1 + 50:word16]
	r24 = (word32) v70
	goto l00010CA8
	// succ:  l00010CA8
l00010C98_ds_t:
	v70 = Mem0[r1 + 50:word16]
	r24 = (word32) v70
	goto l00010F74
	// succ:  l00010F74
l00010CA8:
	r3 = r3 + r3
	r3 = r3 - r24
	branch Test(LT,r3) l00010CA8_ds_t
	// succ:  l00010CA8_ds_f l00010CA8_ds_t
l00010CA8_ds_f:
	v71 = Mem0[r1 + 52:word16]
	r25 = (word32) v71
	goto l00010CB8
	// succ:  l00010CB8
l00010CA8_ds_t:
	v71 = Mem0[r1 + 52:word16]
	r25 = (word32) v71
	goto l00010F74
	// succ:  l00010F74
l00010CB8:
	r3 = r3 + r3
	r3 = r3 - r25
	branch Test(LT,r3) l00010CB8_ds_t
	// succ:  l00010CB8_ds_f l00010CB8_ds_t
l00010CB8_ds_f:
	v72 = Mem0[r1 + 54:word16]
	r26 = (word32) v72
	goto l00010CC8
	// succ:  l00010CC8
l00010CB8_ds_t:
	v72 = Mem0[r1 + 54:word16]
	r26 = (word32) v72
	goto l00010F74
	// succ:  l00010F74
l00010CC8:
	r3 = r3 + r3
	r3 = r3 - r26
	branch Test(LT,r3) l00010CC8_ds_t
	// succ:  l00010CC8_ds_f l00010CC8_ds_t
l00010CC8_ds_f:
	v73 = Mem0[r1 + 56:word16]
	r27 = (word32) v73
	goto l00010CD8
	// succ:  l00010CD8
l00010CC8_ds_t:
	v73 = Mem0[r1 + 56:word16]
	r27 = (word32) v73
	goto l00010F74
	// succ:  l00010F74
l00010CD8:
	r3 = r3 + r3
	r3 = r3 - r27
	branch Test(LT,r3) l00010CD8_ds_t
	// succ:  l00010CD8_ds_f l00010CD8_ds_t
l00010CD8_ds_f:
	v74 = Mem0[r1 + 58:word16]
	r28 = (word32) v74
	goto l00010CE8
	// succ:  l00010CE8
l00010CD8_ds_t:
	v74 = Mem0[r1 + 58:word16]
	r28 = (word32) v74
	goto l00010F74
	// succ:  l00010F74
l00010CE8:
	r3 = r3 + r3
	r3 = r3 - r28
	branch Test(LT,r3) l00010CE8_ds_t
	// succ:  l00010CE8_ds_f l00010CE8_ds_t
l00010CE8_ds_f:
	v75 = Mem0[r1 + 60:word16]
	r29 = (word32) v75
	goto l00010CF8
	// succ:  l00010CF8
l00010CE8_ds_t:
	v75 = Mem0[r1 + 60:word16]
	r29 = (word32) v75
	goto l00010F74
	// succ:  l00010F74
l00010CF8:
	r3 = r3 + r3
	r3 = r3 - r29
	branch Test(LT,r3) l00010CF8_ds_t
	// succ:  l00010CF8_ds_f l00010CF8_ds_t
l00010CF8_ds_f:
	v76 = Mem0[r1 + 62:word16]
	r30 = (word32) v76
	goto l00010D08
	// succ:  l00010D08
l00010CF8_ds_t:
	v76 = Mem0[r1 + 62:word16]
	r30 = (word32) v76
	goto l00010F74
	// succ:  l00010F74
l00010D08:
	r3 = r3 + r3
	r3 = r3 - r30
	branch Test(LT,r3) l00010D08_ds_t
	// succ:  l00010D08_ds_f l00010D08_ds_t
l00010D08_ds_f:
	v77 = Mem0[r1 + 64:word16]
	r31 = (word32) v77
	goto l00010D18
	// succ:  l00010D18
l00010D08_ds_t:
	v77 = Mem0[r1 + 64:word16]
	r31 = (word32) v77
	goto l00010F74
	// succ:  l00010F74
l00010D18:
	r3 = r3 + r3
	r3 = r3 - r31
	branch Test(LT,r3) l00010F74
	// succ:  l00010D24 l00010F74
l00010D24:
	r3 = r3 + r3
	r3 = r3 - r22
	branch Test(LT,r3) l00010F74
	// succ:  l00010D30 l00010F74
l00010D30:
	branch Test(EQ,r3) l00010D30_ds_t
	// succ:  l00010D30_ds_f l00010D30_ds_t
l00010D30_ds_f:
	r3 = r12 + r11
	goto l00010D38
	// succ:  l00010D38
l00010D30_ds_t:
	r3 = r12 + r11
	goto l00010DD8
	// succ:  l00010DD8
l00010D38:
	r3 = -r5
	r3 = r3 | r5
	branch Test(GE,r3) l00010D38_ds_t
	// succ:  l00010D38_ds_f l00010D38_ds_t
l00010D38_ds_f:
	r3 = 0xFFFFFFFF
	goto l00010D48
	// succ:  l00010D48
l00010D38_ds_t:
	r3 = 0xFFFFFFFF
	goto l00010AFC
	// succ:  l00010AFC
l00010D48:
	r3 = r9 ^ 0x00000001
	r3 = -r3
	r22 = r3
	r22 = r3 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	branch Test(NE,r22) l00010F74
	// succ:  l00010DD4 l00010F74
l00010DD4:
	r3 = r12 + r11
	// succ:  l00010DD8
l00010DD8:
	r3 = r3 & 0xFFFFFFFF
	r12 = r20 + r3
	r12 = r12 & 0xFFFFFFFF
	r19 = r19 + r12
	r19 = r19 & 0xFFFFFFFF
	r20 = r21 + r19
	r20 = r20 & 0xFFFFFFFF
	r21 = r23 + r20
	r21 = r21 & 0xFFFFFFFF
	r22 = r24 + r21
	r22 = r22 & 0xFFFFFFFF
	r23 = r25 + r22
	r23 = r23 & 0xFFFFFFFF
	r24 = r26 + r23
	r24 = r24 & 0xFFFFFFFF
	r25 = r27 + r24
	r25 = r25 & 0xFFFFFFFF
	r26 = r28 + r25
	r26 = r26 & 0xFFFFFFFF
	r27 = r29 + r26
	r27 = r27 & 0xFFFFFFFF
	r28 = r30 + r27
	r28 = r28 & 0xFFFFFFFF
	v79 = SLICE(r3, word16, 0)
	Mem0[r1 + 10:word16] = v79
	r3 = Mem0[r1 + 168:word32]
	r31 = r31 + r28
	v80 = SLICE(r19, word16, 0)
	Mem0[r1 + 14:word16] = v80
	v81 = SLICE(r27, word16, 0)
	Mem0[r1 + 30:word16] = v81
	v82 = SLICE(r0, word16, 0)
	Mem0[r1 + 6:word16] = v82
	v83 = SLICE(r11, word16, 0)
	Mem0[r1 + 8:word16] = v83
	v84 = SLICE(r12, word16, 0)
	Mem0[r1 + 12:word16] = v84
	v85 = SLICE(r20, word16, 0)
	Mem0[r1 + 16:word16] = v85
	v86 = SLICE(r21, word16, 0)
	Mem0[r1 + 18:word16] = v86
	v87 = SLICE(r22, word16, 0)
	Mem0[r1 + 20:word16] = v87
	v88 = SLICE(r23, word16, 0)
	Mem0[r1 + 22:word16] = v88
	v89 = SLICE(r24, word16, 0)
	Mem0[r1 + 24:word16] = v89
	v90 = SLICE(r25, word16, 0)
	Mem0[r1 + 26:word16] = v90
	v91 = SLICE(r26, word16, 0)
	Mem0[r1 + 28:word16] = v91
	v92 = SLICE(r28, word16, 0)
	Mem0[r1 + 32:word16] = v92
	v93 = SLICE(r31, word16, 0)
	Mem0[r1 + 34:word16] = v93
	r27 = Mem0[r3:word32]
	r19 = r1 + 0x00000004
	branch Test(EQ,r7) l00010DD8_ds_t
	// succ:  l00010DD8_ds_f l00010DD8_ds_t
l00010DD8_ds_f:
	r3 = 0x00000000
	goto l00010EB8
	// succ:  l00010EB8
l00010DD8_ds_t:
	r3 = 0x00000000
	goto l00010EEC
	// succ:  l00010EEC
l00010EB8:
	r11 = r3 + r3
	goto l00010EBC
	// succ:  l00010EBC
l00010EB8_ds_f:
	r12 = r11 + r11
	goto l00010EC8
	// succ:  l00010EC8
l00010EB8_ds_t:
	r12 = r11 + r11
	goto l00010F4C
	// succ:  l00010F4C
l00010EBC:
	v94 = Mem0[r11 + r6:word16]
	r11 = (word32) v94
	branch Test(EQ,r11) l00010EB8_ds_t
	goto l00010EB8_ds_f
	// succ:  l00010EB8_ds_f l00010EB8_ds_t
l00010EC8:
	v95 = Mem0[r12 + r19:word16]
	r11 = (word32) v95
	r20 = r11 + r11
	v97 = SLICE(r3, word16, 0)
	Mem0[r20 + r10:word16] = v97
	r11 = r11 + 0x00000001
	r3 = r3 + 0x00000001
	v98 = SLICE(r11, word16, 0)
	Mem0[r12 + r19:word16] = v98
	r11 = r7 ^ r3
	branch Test(NE,r11) l00010EC8_ds_t
	// succ:  l00010EC8_ds_f l00010EC8_ds_t
l00010EC8_ds_f:
	r11 = r3 + r3
	goto l00010EEC
	// succ:  l00010EEC
l00010EC8_ds_t:
	r11 = r3 + r3
	goto l00010EBC
	// succ:  l00010EBC
l00010EEC:
	r18 = cond(r9 -u r27)
	branch Test(GE,r18) l00010EF8
	// succ:  l00010EF4 l00010EF8
l00010EF4:
	r27 = r9
	// succ:  l00010EF8
l00010EF8:
	r18 = cond(r27 -u r4)
	branch Test(GE,r18) l00010F04
	// succ:  l00010F00 l00010F04
l00010F00:
	r27 = r4
	// succ:  l00010F04
l00010F04:
	r11 = Mem0[r8:word32]
	r7 = 0x00000001
	Mem0[r1 + 68:word32] = r11
	r18 = r27 & 0x0000001F
	r11 = r7
	branch Test(EQ,r18) l00010F04_ds_t
	// succ:  l00010F04_ds_f l00010F04_ds_t
l00010F04_ds_f:
	r11 = r11
	goto l00010F20
	// succ:  l00010F20
l00010F04_ds_t:
	r11 = r11
	goto l00010F2C
	// succ:  l00010F2C
l00010F20:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00010F20_ds_t
	// succ:  l00010F20_ds_f l00010F20_ds_t
l00010F20_ds_f:
	r11 = r11 + r11
	goto l00010F2C
	// succ:  l00010F2C
l00010F20_ds_t:
	r11 = r11 + r11
	goto l00010F20
	// succ:  l00010F20
l00010F2C:
	branch Test(EQ,r5) l00010F2C_ds_t
	// succ:  l00010F2C_ds_f l00010F2C_ds_t
l00010F2C_ds_f:
	r3 = r5 ^ r7
	goto l00010F34
	// succ:  l00010F34
l00010F2C_ds_t:
	r3 = r5 ^ r7
	goto l00011040
	// succ:  l00011040
l00010F34:
	branch Test(NE,r3) l00010F7C
	// succ:  l00010F38 l00010F7C
l00010F38:
	r5 = 0x00000354
	r18 = cond(r5 -u r11)
	branch Test(GE,r18) l00011834
	// succ:  l00010F44 l00011834
l00010F44:
	r3 = 0x00000001
	goto l00010AFC
	// succ:  l00010AFC
l00010F4C:
	r3 = r3 + 0x00000001
	r11 = r7 ^ r3
	branch Test(NE,r11) l00010F4C_ds_t
	// succ:  l00010F4C_ds_f l00010F4C_ds_t
l00010F4C_ds_f:
	r11 = r3 + r3
	goto l00010F5C
	// succ:  l00010F5C
l00010F4C_ds_t:
	r11 = r3 + r3
	goto l00010EBC
	// succ:  l00010EBC
l00010F5C:
	goto l00010EEC
	// succ:  l00010EEC
l00010F60:
	r9 = 0x00000003
	// succ:  l00010F64
l00010F64:
	r4 = 0x00000001
	// succ:  l00010F68
l00010F68:
	r31 = 0x00000002
	r3 = r31 - r11
	branch Test(GE,r3) l00010C54
	// succ:  l00010F74 l00010C54
l00010F74:
	r3 = 0xFFFFFFFF
	goto l00010AFC
	// succ:  l00010AFC
l00010F7C:
	r7 = r5 ^ 0x00000002
	r5 = -r7
	r5 = r5 | r7
	r5 = r5 ^ 0xFFFFFFFF
	r12 = r5
	r12 = r5 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r12 = r12 >>u 1
	C = cond(r12)
	r7 = 0x00000250
	r18 = cond(r7 -u r11)
	branch Test(GE,r18) l00010F7C_ds_t
	// succ:  l00010F7C_ds_f l00010F7C_ds_t
l00010F7C_ds_f:
	Mem0[r1 + 84:word32] = r12
	goto l0001101C
	// succ:  l0001101C
l00010F7C_ds_t:
	Mem0[r1 + 84:word32] = r12
	goto l00011020
	// succ:  l00011020
l0001101C:
	branch Test(NE,r12) l00010F44
	// succ:  l00011020 l00010F44
l00011020:
	r19 = 0xFFFFA980
	r31 = 0xFFFFA9C0
	r28 = 0x00000000
	Mem0[r1 + 76:word32] = r19
	Mem0[r1 + 80:word32] = r31
	goto l00011054
	// succ:  l00011054
l00011040:
	r3 = r7
	Mem0[r1 + 76:word32] = r10
	Mem0[r1 + 80:word32] = r10
	Mem0[r1 + 84:word32] = r5
	r28 = 0x00000014
	// succ:  l00011054
l00011054:
	r5 = -r3
	r3 = r5 | r3
	r3 = r3 ^ 0xFFFFFFFF
	r5 = r3
	r5 = r3 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	Mem0[r1 + 88:word32] = r5
	// succ:  l000110E4
l000110E4:
	r30 = r11
	r11 = 0x00000000
	r21 = 0xFFFFFFFF
	r29 = Mem0[r1 + 68:word32]
	r23 = r27
	r25 = r11
	r24 = r4
	r31 = r30 + r21
	r22 = r1 + 0x00000004
	r26 = 0x00000001
	Mem0[r1 + 72:word32] = r31
	Mem0[r1 + 92:word32] = r8
	goto l00011114
	// succ:  l00011114
l000110E4_ds_f:
	r12 = 0x00000000
	goto l0001112C
	// succ:  l0001112C
l000110E4_ds_t:
	r12 = 0x00000000
	goto l00011150
	// succ:  l00011150
l00011114:
	v100 = Mem0[r10:word16]
	r7 = (word32) v100
	r20 = r24 & 0x000000FF
	r3 = r7 + 0x00000001
	r18 = cond(r3 -u r28)
	branch Test(LT,r18) l000110E4_ds_t
	goto l000110E4_ds_f
	// succ:  l000110E4_ds_f l000110E4_ds_t
l0001112C:
	r18 = cond(r7 -u r28)
	branch Test(LT,r18) l0001112C_ds_t
	// succ:  l0001112C_ds_f l0001112C_ds_t
l0001112C_ds_f:
	r19 = Mem0[r1 + 76:word32]
	goto l00011138
	// succ:  l00011138
l0001112C_ds_t:
	r19 = Mem0[r1 + 76:word32]
	goto l000115D8
	// succ:  l000115D8
l00011138:
	r7 = r7 - r28
	r31 = Mem0[r1 + 80:word32]
	r7 = r7 + r7
	v101 = Mem0[r7 + r19:word16]
	r12 = (word32) v101
	v102 = Mem0[r7 + r31:word16]
	r7 = (word32) v102
	r12 = r12 & 0x000000FF
	// succ:  l00011150
l00011150:
	r18 = r23 & 0x0000001F
	r5 = r26
	branch Test(EQ,r18) l00011150_ds_t
	// succ:  l00011150_ds_f l00011150_ds_t
l00011150_ds_f:
	r5 = r5
	goto l00011160
	// succ:  l00011160
l00011150_ds_t:
	r5 = r5
	goto l0001116C
	// succ:  l0001116C
l00011160:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011160_ds_t
	// succ:  l00011160_ds_f l00011160_ds_t
l00011160_ds_f:
	r5 = r5 + r5
	goto l0001116C
	// succ:  l0001116C
l00011160_ds_t:
	r5 = r5 + r5
	goto l00011160
	// succ:  l00011160
l0001116C:
	r18 = r25 & 0x0000001F
	r3 = r11
	branch Test(EQ,r18) l0001116C_ds_t
	// succ:  l0001116C_ds_f l0001116C_ds_t
l0001116C_ds_f:
	r3 = r3
	goto l0001117C
	// succ:  l0001117C
l0001116C_ds_t:
	r3 = r3
	goto l00011188
	// succ:  l00011188
l0001117C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0001117C_ds_t
	// succ:  l0001117C_ds_f l0001117C_ds_t
l0001117C_ds_f:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l00011188
	// succ:  l00011188
l0001117C_ds_t:
	r3 = r3 >>u 1
	C = cond(r3)
	goto l0001117C
	// succ:  l0001117C
l00011188:
	r3 = r3 + r5
	r18 = r24 & 0x0000001F
	r8 = r26
	branch Test(EQ,r18) l00011188_ds_t
	// succ:  l00011188_ds_f l00011188_ds_t
l00011188_ds_f:
	r8 = r8
	goto l0001119C
	// succ:  l0001119C
l00011188_ds_t:
	r8 = r8
	goto l000111A8
	// succ:  l000111A8
l0001119C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0001119C_ds_t
	// succ:  l0001119C_ds_f l0001119C_ds_t
l0001119C_ds_f:
	r8 = r8 + r8
	goto l000111A8
	// succ:  l000111A8
l0001119C_ds_t:
	r8 = r8 + r8
	goto l0001119C
	// succ:  l0001119C
l000111A8:
	r3 = r3 - r8
	r3 = r3 + r3
	r3 = r3 + r3
	r31 = 0xFFFFFFFC
	r3 = r29 + r3
	r18 = r24 & 0x0000001F
	r19 = r31
	branch Test(EQ,r18) l000111A8_ds_t
	// succ:  l000111A8_ds_f l000111A8_ds_t
l000111A8_ds_f:
	r19 = r19
	goto l000111CC
	// succ:  l000111CC
l000111A8_ds_t:
	r19 = r19
	goto l000111D8
	// succ:  l000111D8
l000111CC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000111CC_ds_t
	// succ:  l000111CC_ds_f l000111CC_ds_t
l000111CC_ds_f:
	r19 = r19 + r19
	goto l000111D8
	// succ:  l000111D8
l000111CC_ds_t:
	r19 = r19 + r19
	goto l000111CC
	// succ:  l000111CC
l000111D8:
	v103 = SLICE(r12, byte, 0)
	Mem0[r3:byte] = v103
	v104 = SLICE(r20, byte, 0)
	Mem0[r3 + 1:byte] = v104
	v105 = SLICE(r7, word16, 0)
	Mem0[r3 + 2:word16] = v105
	r5 = r5 - r8
	branch Test(NE,r5) l000111D8_ds_t
	// succ:  l000111D8_ds_f l000111D8_ds_t
l000111D8_ds_f:
	r3 = r3 + r19
	goto l000111F0
	// succ:  l000111F0
l000111D8_ds_t:
	r3 = r3 + r19
	goto l000111D8
	// succ:  l000111D8
l000111F0:
	r5 = r4 + 0xFFFFFFFF
	r18 = r5 & 0x0000001F
	r3 = r26
	branch Test(EQ,r18) l000111F0_ds_t
	// succ:  l000111F0_ds_f l000111F0_ds_t
l000111F0_ds_f:
	r3 = r3
	goto l00011204
	// succ:  l00011204
l000111F0_ds_t:
	r3 = r3
	goto l00011210
	// succ:  l00011210
l00011204:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011204_ds_t
	// succ:  l00011204_ds_f l00011204_ds_t
l00011204_ds_f:
	r3 = r3 + r3
	goto l00011210
	// succ:  l00011210
l00011204_ds_t:
	r3 = r3 + r3
	goto l00011204
	// succ:  l00011204
l00011210:
	r5 = r11 & r3
	branch Test(EQ,r5) l00011224
	// succ:  l00011218 l00011224
l00011218:
	r3 = r3 >>u 1
	C = cond(r3)
	r5 = r11 & r3
	branch Test(NE,r5) l00011218
	// succ:  l00011224 l00011218
l00011224:
	branch Test(EQ,r3) l00011224_ds_t
	// succ:  l00011224_ds_f l00011224_ds_t
l00011224_ds_f:
	r7 = r4 + r4
	goto l0001122C
	// succ:  l0001122C
l00011224_ds_t:
	r7 = r4 + r4
	goto l00011238
	// succ:  l00011238
l0001122C:
	r5 = r3 + 0xFFFFFFFF
	r11 = r5 & r11
	r3 = r3 + r11
	// succ:  l00011238
l00011238:
	r7 = r22 + r7
	v106 = Mem0[r7 + 32:word16]
	r5 = (word32) v106
	r5 = r5 + 0xFFFFFFFF
	r5 = r5 & 0xFFFFFFFF
	branch Test(NE,r5) l00011238_ds_t
	// succ:  l00011238_ds_f l00011238_ds_t
l00011238_ds_f:
	v107 = SLICE(r5, word16, 0)
	Mem0[r7 + 32:word16] = v107
	goto l00011254
	// succ:  l00011254
l00011238_ds_t:
	v107 = SLICE(r5, word16, 0)
	Mem0[r7 + 32:word16] = v107
	goto l00011268
	// succ:  l00011268
l00011254:
	r4 = r4 ^ r9
	branch Test(EQ,r4) l00011690
	// succ:  l0001125C l00011690
l0001125C:
	v108 = Mem0[r10 + 2:word16]
	r4 = (word32) v108
	r4 = r4 + r4
	v109 = Mem0[r4 + r6:word16]
	r4 = (word32) v109
	// succ:  l00011268
l00011268:
	r18 = cond(r27 -u r4)
	branch Test(GE,r18) l00011268_ds_t
	// succ:  l00011268_ds_f l00011268_ds_t
l00011268_ds_f:
	r24 = r4 - r25
	goto l00011274
	// succ:  l00011274
l00011268_ds_t:
	r24 = r4 - r25
	goto l000115CC
	// succ:  l000115CC
l00011274:
	r5 = Mem0[r1 + 72:word32]
	r7 = r5 & r3
	r5 = r7 ^ r21
	branch Test(EQ,r5) l00011274_ds_t
	// succ:  l00011274_ds_f l00011274_ds_t
l00011274_ds_f:
	r11 = r3
	goto l00011288
	// succ:  l00011288
l00011274_ds_t:
	r11 = r3
	goto l000115D0
	// succ:  l000115D0
l00011288:
	branch Test(NE,r25) l00011288_ds_t
	// succ:  l00011288_ds_f l00011288_ds_t
l00011288_ds_f:
	r8 = 0x00000004
	goto l00011290
	// succ:  l00011290
l00011288_ds_t:
	r8 = 0x00000004
	goto l00011294
	// succ:  l00011294
l00011290:
	r25 = r27
	// succ:  l00011294
l00011294:
	r18 = r23 & 0x0000001F
	r5 = r8
	branch Test(EQ,r18) l00011294_ds_t
	// succ:  l00011294_ds_f l00011294_ds_t
l00011294_ds_f:
	r5 = r5
	goto l000112A4
	// succ:  l000112A4
l00011294_ds_t:
	r5 = r5
	goto l000112B0
	// succ:  l000112B0
l000112A4:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000112A4_ds_t
	// succ:  l000112A4_ds_f l000112A4_ds_t
l000112A4_ds_f:
	r5 = r5 + r5
	goto l000112B0
	// succ:  l000112B0
l000112A4_ds_t:
	r5 = r5 + r5
	goto l000112A4
	// succ:  l000112A4
l000112B0:
	r23 = r4 - r25
	r29 = r29 + r5
	r18 = r23 & 0x0000001F
	r5 = r26
	branch Test(EQ,r18) l000112B0_ds_t
	// succ:  l000112B0_ds_f l000112B0_ds_t
l000112B0_ds_f:
	r5 = r5
	goto l000112C8
	// succ:  l000112C8
l000112B0_ds_t:
	r5 = r5
	goto l000112D4
	// succ:  l000112D4
l000112C8:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000112C8_ds_t
	// succ:  l000112C8_ds_f l000112C8_ds_t
l000112C8_ds_f:
	r5 = r5 + r5
	goto l000112D4
	// succ:  l000112D4
l000112C8_ds_t:
	r5 = r5 + r5
	goto l000112C8
	// succ:  l000112C8
l000112D4:
	r18 = cond(r4 -u r9)
	branch Test(GE,r18) l000112D4_ds_t
	// succ:  l000112D4_ds_f l000112D4_ds_t
l000112D4_ds_f:
	r24 = r23
	goto l000112E0
	// succ:  l000112E0
l000112D4_ds_t:
	r24 = r23
	goto l00011570
	// succ:  l00011570
l000112E0:
	r8 = r4 + r4
	r8 = r22 + r8
	v113 = Mem0[r8 + 32:word16]
	r8 = (word32) v113
	r5 = r5 - r8
	branch Test(LE,r5) l000112E0_ds_t
	// succ:  l000112E0_ds_f l000112E0_ds_t
l000112E0_ds_f:
	r11 = r23 + 0x00000001
	goto l000112F8
	// succ:  l000112F8
l000112E0_ds_t:
	r11 = r23 + 0x00000001
	goto l00011554
	// succ:  l00011554
l000112F8:
	r8 = r11 + r25
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l000112F8_ds_t
	// succ:  l000112F8_ds_f l000112F8_ds_t
l000112F8_ds_f:
	r5 = r5 + r5
	goto l00011308
	// succ:  l00011308
l000112F8_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l00011308:
	r8 = r8 + r8
	r8 = r22 + r8
	v114 = Mem0[r8 + 32:word16]
	r8 = (word32) v114
	r5 = r5 - r8
	branch Test(LE,r5) l00011550
	// succ:  l0001131C l00011550
l0001131C:
	r11 = r23 + 0x00000002
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l0001131C_ds_t
	// succ:  l0001131C_ds_f l0001131C_ds_t
l0001131C_ds_f:
	r5 = r5 + r5
	goto l00011330
	// succ:  l00011330
l0001131C_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l00011330:
	r8 = r8 + r8
	r8 = r22 + r8
	v115 = Mem0[r8 + 32:word16]
	r8 = (word32) v115
	r5 = r5 - r8
	branch Test(LE,r5) l00011550
	// succ:  l00011344 l00011550
l00011344:
	r11 = r23 + 0x00000003
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l00011344_ds_t
	// succ:  l00011344_ds_f l00011344_ds_t
l00011344_ds_f:
	r5 = r5 + r5
	goto l00011358
	// succ:  l00011358
l00011344_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l00011358:
	r8 = r8 + r8
	r8 = r22 + r8
	v116 = Mem0[r8 + 32:word16]
	r8 = (word32) v116
	r5 = r5 - r8
	branch Test(LE,r5) l00011550
	// succ:  l0001136C l00011550
l0001136C:
	r11 = r23 + 0x00000004
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l0001136C_ds_t
	// succ:  l0001136C_ds_f l0001136C_ds_t
l0001136C_ds_f:
	r5 = r5 + r5
	goto l00011380
	// succ:  l00011380
l0001136C_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l00011380:
	r8 = r8 + r8
	r8 = r22 + r8
	v117 = Mem0[r8 + 32:word16]
	r8 = (word32) v117
	r5 = r5 - r8
	branch Test(LE,r5) l00011550
	// succ:  l00011394 l00011550
l00011394:
	r11 = r23 + 0x00000005
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l00011394_ds_t
	// succ:  l00011394_ds_f l00011394_ds_t
l00011394_ds_f:
	r5 = r5 + r5
	goto l000113A8
	// succ:  l000113A8
l00011394_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l000113A8:
	r8 = r8 + r8
	r8 = r22 + r8
	v118 = Mem0[r8 + 32:word16]
	r8 = (word32) v118
	r5 = r5 - r8
	branch Test(LE,r5) l00011550
	// succ:  l000113BC l00011550
l000113BC:
	r11 = r23 + 0x00000006
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l000113BC_ds_t
	// succ:  l000113BC_ds_f l000113BC_ds_t
l000113BC_ds_f:
	r5 = r5 + r5
	goto l000113D0
	// succ:  l000113D0
l000113BC_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l000113D0:
	r8 = r8 + r8
	r8 = r22 + r8
	v119 = Mem0[r8 + 32:word16]
	r8 = (word32) v119
	r5 = r5 - r8
	branch Test(LE,r5) l00011550
	// succ:  l000113E4 l00011550
l000113E4:
	r11 = r23 + 0x00000007
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l000113E4_ds_t
	// succ:  l000113E4_ds_f l000113E4_ds_t
l000113E4_ds_f:
	r5 = r5 + r5
	goto l000113F8
	// succ:  l000113F8
l000113E4_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l000113F8:
	r8 = r8 + r8
	r8 = r22 + r8
	v120 = Mem0[r8 + 32:word16]
	r8 = (word32) v120
	r5 = r5 - r8
	branch Test(LE,r5) l00011550
	// succ:  l0001140C l00011550
l0001140C:
	r11 = r23 + 0x00000008
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l0001140C_ds_t
	// succ:  l0001140C_ds_f l0001140C_ds_t
l0001140C_ds_f:
	r5 = r5 + r5
	goto l00011420
	// succ:  l00011420
l0001140C_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l00011420:
	r8 = r8 + r8
	r8 = r22 + r8
	v121 = Mem0[r8 + 32:word16]
	r8 = (word32) v121
	r5 = r5 - r8
	branch Test(LE,r5) l00011550
	// succ:  l00011434 l00011550
l00011434:
	r11 = r23 + 0x00000009
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l00011434_ds_t
	// succ:  l00011434_ds_f l00011434_ds_t
l00011434_ds_f:
	r5 = r5 + r5
	goto l00011448
	// succ:  l00011448
l00011434_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l00011448:
	r8 = r8 + r8
	r8 = r22 + r8
	v122 = Mem0[r8 + 32:word16]
	r8 = (word32) v122
	r5 = r5 - r8
	branch Test(LE,r5) l00011550
	// succ:  l0001145C l00011550
l0001145C:
	r11 = r23 + 0x0000000A
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l0001145C_ds_t
	// succ:  l0001145C_ds_f l0001145C_ds_t
l0001145C_ds_f:
	r5 = r5 + r5
	goto l00011470
	// succ:  l00011470
l0001145C_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l00011470:
	r8 = r8 + r8
	r8 = r22 + r8
	v123 = Mem0[r8 + 32:word16]
	r8 = (word32) v123
	r5 = r5 - r8
	branch Test(LE,r5) l00011470_ds_t
	// succ:  l00011470_ds_f l00011470_ds_t
l00011470_ds_f:
	r8 = r23 + 0x0000000B
	goto l00011488
	// succ:  l00011488
l00011470_ds_t:
	r8 = r23 + 0x0000000B
	goto l00011550
	// succ:  l00011550
l00011488:
	r11 = r25 + r8
	r18 = cond(r11 -u r9)
	branch Test(GE,r18) l00011488_ds_t
	// succ:  l00011488_ds_f l00011488_ds_t
l00011488_ds_f:
	r5 = r5 + r5
	goto l00011498
	// succ:  l00011498
l00011488_ds_t:
	r5 = r5 + r5
	goto l000117D8
	// succ:  l000117D8
l00011498:
	r11 = r11 + r11
	r11 = r22 + r11
	v124 = Mem0[r11 + 32:word16]
	r11 = (word32) v124
	r5 = r5 - r11
	branch Test(LE,r5) l00011498_ds_t
	// succ:  l00011498_ds_f l00011498_ds_t
l00011498_ds_f:
	r11 = r23 + 0x0000000C
	goto l000114B0
	// succ:  l000114B0
l00011498_ds_t:
	r11 = r23 + 0x0000000C
	goto l000117D8
	// succ:  l000117D8
l000114B0:
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l000114B0_ds_t
	// succ:  l000114B0_ds_f l000114B0_ds_t
l000114B0_ds_f:
	r5 = r5 + r5
	goto l000114C0
	// succ:  l000114C0
l000114B0_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l000114C0:
	r8 = r8 + r8
	r8 = r22 + r8
	v125 = Mem0[r8 + 32:word16]
	r8 = (word32) v125
	r5 = r5 - r8
	branch Test(LE,r5) l000114C0_ds_t
	// succ:  l000114C0_ds_f l000114C0_ds_t
l000114C0_ds_f:
	r8 = r23 + 0x0000000D
	goto l000114D8
	// succ:  l000114D8
l000114C0_ds_t:
	r8 = r23 + 0x0000000D
	goto l00011550
	// succ:  l00011550
l000114D8:
	r11 = r25 + r8
	r18 = cond(r11 -u r9)
	branch Test(GE,r18) l000114D8_ds_t
	// succ:  l000114D8_ds_f l000114D8_ds_t
l000114D8_ds_f:
	r5 = r5 + r5
	goto l000114E8
	// succ:  l000114E8
l000114D8_ds_t:
	r5 = r5 + r5
	goto l000117D8
	// succ:  l000117D8
l000114E8:
	r11 = r11 + r11
	r11 = r22 + r11
	v126 = Mem0[r11 + 32:word16]
	r11 = (word32) v126
	r5 = r5 - r11
	branch Test(LE,r5) l000114E8_ds_t
	// succ:  l000114E8_ds_f l000114E8_ds_t
l000114E8_ds_f:
	r11 = r23 + 0x0000000E
	goto l00011500
	// succ:  l00011500
l000114E8_ds_t:
	r11 = r23 + 0x0000000E
	goto l000117D8
	// succ:  l000117D8
l00011500:
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l00011500_ds_t
	// succ:  l00011500_ds_f l00011500_ds_t
l00011500_ds_f:
	r5 = r5 + r5
	goto l00011510
	// succ:  l00011510
l00011500_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l00011510:
	r8 = r8 + r8
	r8 = r22 + r8
	v127 = Mem0[r8 + 32:word16]
	r8 = (word32) v127
	r5 = r5 - r8
	branch Test(LE,r5) l00011550
	// succ:  l00011524 l00011550
l00011524:
	r11 = r23 + 0x0000000F
	r8 = r25 + r11
	r18 = cond(r8 -u r9)
	branch Test(GE,r18) l00011524_ds_t
	// succ:  l00011524_ds_f l00011524_ds_t
l00011524_ds_f:
	r5 = r5 + r5
	goto l00011538
	// succ:  l00011538
l00011524_ds_t:
	r5 = r5 + r5
	goto l00011550
	// succ:  l00011550
l00011538:
	r8 = r8 + r8
	r8 = r22 + r8
	v128 = Mem0[r8 + 32:word16]
	r8 = (word32) v128
	r5 = r5 - r8
	branch Test(GT,r5) l00011538_ds_t
	// succ:  l00011538_ds_f l00011538_ds_t
l00011538_ds_f:
	r23 = r23 + 0x00000010
	goto l00011550
	// succ:  l00011550
l00011538_ds_t:
	r23 = r23 + 0x00000010
	goto l00011554
	// succ:  l00011554
l00011550:
	r23 = r11
	// succ:  l00011554
l00011554:
	r18 = r23 & 0x0000001F
	r5 = r26
	branch Test(EQ,r18) l00011554_ds_t
	// succ:  l00011554_ds_f l00011554_ds_t
l00011554_ds_f:
	r5 = r5
	goto l00011564
	// succ:  l00011564
l00011554_ds_t:
	r5 = r5
	goto l00011570
	// succ:  l00011570
l00011564:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011564_ds_t
	// succ:  l00011564_ds_f l00011564_ds_t
l00011564_ds_f:
	r5 = r5 + r5
	goto l00011570
	// succ:  l00011570
l00011564_ds_t:
	r5 = r5 + r5
	goto l00011564
	// succ:  l00011564
l00011570:
	r11 = 0x00000354
	r30 = r30 + r5
	r18 = cond(r11 -u r30)
	branch Test(GE,r18) l00011570_ds_t
	// succ:  l00011570_ds_f l00011570_ds_t
l00011570_ds_f:
	r19 = 0x00000250
	goto l00011584
	// succ:  l00011584
l00011570_ds_t:
	r19 = 0x00000250
	goto l0001158C
	// succ:  l0001158C
l00011584:
	r12 = Mem0[r1 + 88:word32]
	branch Test(NE,r12) l00010F44
	// succ:  l0001158C l00010F44
l0001158C:
	r18 = cond(r19 -u r30)
	branch Test(GE,r18) l0001158C_ds_t
	// succ:  l0001158C_ds_f l0001158C_ds_t
l0001158C_ds_f:
	r11 = Mem0[r1 + 68:word32]
	goto l00011598
	// succ:  l00011598
l0001158C_ds_t:
	r11 = Mem0[r1 + 68:word32]
	goto l000115A0
	// succ:  l000115A0
l00011598:
	r31 = Mem0[r1 + 84:word32]
	branch Test(NE,r31) l00010F44
	// succ:  l000115A0 l00010F44
l000115A0:
	r8 = r7 + r7
	r8 = r8 + r8
	r21 = r7
	r5 = r11 + r8
	v129 = SLICE(r23, byte, 0)
	Mem0[r8 + r11:byte] = v129
	r11 = r29 - r11
	r8 = r11
	r8 = r11 >> 1
	C = cond(r8)
	r8 = r8 >> 1
	C = cond(r8)
	v130 = SLICE(r27, byte, 0)
	Mem0[r5 + 1:byte] = v130
	v131 = SLICE(r8, word16, 0)
	Mem0[r5 + 2:word16] = v131
	// succ:  l000115CC
l000115CC:
	r11 = r3
	// succ:  l000115D0
l000115D0:
	r10 = r10 + 0x00000002
	goto l00011114
	// succ:  l00011114
l000115D8:
	r7 = 0x00000000
	r12 = 0x00000060
	goto l00011150
	// succ:  l00011150
l000115E4:
	v49 = Mem0[r1 + 38:word16]
	r11 = (word32) v49
	branch Test(NE,r11) l000115E4_ds_t
	// succ:  l000115E4_ds_f l000115E4_ds_t
l000115E4_ds_f:
	r9 = 0x0000000F
	goto l000115F0
	// succ:  l000115F0
l000115E4_ds_t:
	r9 = 0x0000000F
	goto l00010F64
	// succ:  l00010F64
l000115F0:
	v50 = Mem0[r1 + 40:word16]
	r3 = (word32) v50
	branch Test(NE,r3) l000115F0_ds_t
	// succ:  l000115F0_ds_f l000115F0_ds_t
l000115F0_ds_f:
	v51 = Mem0[r1 + 42:word16]
	r12 = (word32) v51
	goto l000115FC
	// succ:  l000115FC
l000115F0_ds_t:
	v51 = Mem0[r1 + 42:word16]
	r12 = (word32) v51
	goto l00011764
	// succ:  l00011764
l000115FC:
	r19 = 0x00000002
	r4 = 0x00000003
	branch Test(NE,r12) l000115FC_ds_t
	// succ:  l000115FC_ds_f l000115FC_ds_t
l000115FC_ds_f:
	r3 = r19 - r11
	goto l0001160C
	// succ:  l0001160C
l000115FC_ds_t:
	r3 = r19 - r11
	goto l00010C54
	// succ:  l00010C54
l0001160C:
	r12 = r9 ^ 0x00000004
	branch Test(EQ,r12) l0001160C_ds_t
	// succ:  l0001160C_ds_f l0001160C_ds_t
l0001160C_ds_f:
	r4 = r9
	goto l00011618
	// succ:  l00011618
l0001160C_ds_t:
	r4 = r9
	goto l00010C54
	// succ:  l00010C54
l00011618:
	v52 = Mem0[r1 + 44:word16]
	r3 = (word32) v52
	goto l00010B58
	// succ:  l00010B58
l00011620:
	r4 = 0x00000003
	r3 = 0x00000002
	goto l00010C54
	// succ:  l00010C54
l0001162C:
	r9 = 0x0000000E
	r19 = 0x00000002
	// succ:  l00011634
l00011634:
	r4 = r9
	// succ:  l00011638
l00011638:
	r3 = r19 - r11
	goto l00010C54
	// succ:  l00010C54
l00011640:
	v137 = Mem0[r1 + 38:word16]
	r11 = (word32) v137
	branch Test(EQ,r11) l00011640_ds_t
	// succ:  l00011640_ds_f l00011640_ds_t
l00011640_ds_f:
	r9 = 0x00000007
	goto l0001164C
	// succ:  l0001164C
l00011640_ds_t:
	r9 = 0x00000007
	goto l000115F0
	// succ:  l000115F0
l0001164C:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l00011654:
	v53 = Mem0[r1 + 38:word16]
	r11 = (word32) v53
	branch Test(EQ,r11) l00011654_ds_t
	// succ:  l00011654_ds_f l00011654_ds_t
l00011654_ds_f:
	r9 = 0x0000000D
	goto l00011660
	// succ:  l00011660
l00011654_ds_t:
	r9 = 0x0000000D
	goto l000115F0
	// succ:  l000115F0
l00011660:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l00011668:
	v141 = Mem0[r1 + 38:word16]
	r11 = (word32) v141
	branch Test(EQ,r11) l00011668_ds_t
	// succ:  l00011668_ds_f l00011668_ds_t
l00011668_ds_f:
	r9 = 0x0000000C
	goto l00011674
	// succ:  l00011674
l00011668_ds_t:
	r9 = 0x0000000C
	goto l000115F0
	// succ:  l000115F0
l00011674:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l0001167C:
	v140 = Mem0[r1 + 38:word16]
	r11 = (word32) v140
	branch Test(EQ,r11) l0001167C_ds_t
	// succ:  l0001167C_ds_f l0001167C_ds_t
l0001167C_ds_f:
	r9 = 0x0000000B
	goto l00011688
	// succ:  l00011688
l0001167C_ds_t:
	r9 = 0x0000000B
	goto l000115F0
	// succ:  l000115F0
l00011688:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l00011690:
	branch Test(EQ,r3) l00011690_ds_t
	// succ:  l00011690_ds_f l00011690_ds_t
l00011690_ds_f:
	r8 = Mem0[r1 + 92:word32]
	goto l00011698
	// succ:  l00011698
l00011690_ds_t:
	r8 = Mem0[r1 + 92:word32]
	goto l000116B4
	// succ:  l000116B4
l00011698:
	r3 = r3 + r3
	r3 = r3 + r3
	r19 = 0x00000040
	r5 = r29 + r3
	v110 = SLICE(r19, byte, 0)
	Mem0[r3 + r29:byte] = v110
	v111 = SLICE(r20, byte, 0)
	Mem0[r5 + 1:byte] = v111
	v112 = SLICE(r4, word16, 0)
	Mem0[r5 + 2:word16] = v112
	// succ:  l000116B4
l000116B4:
	r31 = Mem0[r1 + 68:word32]
	r3 = r30 + r30
	r3 = r3 + r3
	r3 = r31 + r3
	Mem0[r8:word32] = r3
	r3 = Mem0[r1 + 168:word32]
	Mem0[r3:word32] = r27
	r3 = 0x00000000
	goto l00010AFC
	// succ:  l00010AFC
l000116D8:
	r3 = r12 - r11
	goto l00010C54
	// succ:  l00010C54
l000116E0:
	v139 = Mem0[r1 + 38:word16]
	r11 = (word32) v139
	branch Test(EQ,r11) l000116E0_ds_t
	// succ:  l000116E0_ds_f l000116E0_ds_t
l000116E0_ds_f:
	r9 = 0x0000000A
	goto l000116EC
	// succ:  l000116EC
l000116E0_ds_t:
	r9 = 0x0000000A
	goto l000115F0
	// succ:  l000115F0
l000116EC:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l000116F4:
	v54 = Mem0[r1 + 38:word16]
	r11 = (word32) v54
	branch Test(EQ,r11) l000116F4_ds_t
	// succ:  l000116F4_ds_f l000116F4_ds_t
l000116F4_ds_f:
	r9 = 0x00000009
	goto l00011700
	// succ:  l00011700
l000116F4_ds_t:
	r9 = 0x00000009
	goto l000115F0
	// succ:  l000115F0
l00011700:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l00011708:
	r3 = r31 - r11
	goto l00010C54
	// succ:  l00010C54
l00011710:
	r9 = 0x0000000E
	r3 = r4
	goto l00010C54
	// succ:  l00010C54
l0001171C:
	v138 = Mem0[r1 + 38:word16]
	r11 = (word32) v138
	branch Test(EQ,r11) l0001171C_ds_t
	// succ:  l0001171C_ds_f l0001171C_ds_t
l0001171C_ds_f:
	r9 = 0x00000008
	goto l00011728
	// succ:  l00011728
l0001171C_ds_t:
	r9 = 0x00000008
	goto l000115F0
	// succ:  l000115F0
l00011728:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l00011730:
	r9 = 0x00000001
	r4 = r9
	goto l00010F68
	// succ:  l00010F68
l0001173C:
	v136 = Mem0[r1 + 38:word16]
	r11 = (word32) v136
	branch Test(EQ,r11) l0001173C_ds_t
	// succ:  l0001173C_ds_f l0001173C_ds_t
l0001173C_ds_f:
	r9 = 0x00000006
	goto l00011748
	// succ:  l00011748
l0001173C_ds_t:
	r9 = 0x00000006
	goto l000115F0
	// succ:  l000115F0
l00011748:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l00011750:
	v135 = Mem0[r1 + 38:word16]
	r11 = (word32) v135
	branch Test(EQ,r11) l00011750_ds_t
	// succ:  l00011750_ds_f l00011750_ds_t
l00011750_ds_f:
	r9 = 0x00000005
	goto l0001175C
	// succ:  l0001175C
l00011750_ds_t:
	r9 = 0x00000005
	goto l000115F0
	// succ:  l000115F0
l0001175C:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l00011764:
	r4 = 0x00000002
	r3 = r4 - r11
	goto l00010C54
	// succ:  l00010C54
l00011770:
	r4 = 0x00000004
	r3 = r12 - r11
	goto l00010C54
	// succ:  l00010C54
l0001177C:
	v134 = Mem0[r1 + 38:word16]
	r11 = (word32) v134
	branch Test(EQ,r11) l0001177C_ds_t
	// succ:  l0001177C_ds_f l0001177C_ds_t
l0001177C_ds_f:
	r9 = 0x00000004
	goto l00011788
	// succ:  l00011788
l0001177C_ds_t:
	r9 = 0x00000004
	goto l000115F0
	// succ:  l000115F0
l00011788:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l00011790:
	r4 = 0x00000005
	r3 = r31 - r11
	goto l00010C54
	// succ:  l00010C54
l0001179C:
	v132 = Mem0[r1 + 38:word16]
	r11 = (word32) v132
	branch Test(NE,r11) l0001179C_ds_t
	// succ:  l0001179C_ds_f l0001179C_ds_t
l0001179C_ds_f:
	v133 = Mem0[r1 + 40:word16]
	r12 = (word32) v133
	goto l000117A8
	// succ:  l000117A8
l0001179C_ds_t:
	v133 = Mem0[r1 + 40:word16]
	r12 = (word32) v133
	goto l00010F60
	// succ:  l00010F60
l000117A8:
	r9 = 0x00000003
	r4 = r9
	branch Test(EQ,r12) l000117A8_ds_t
	// succ:  l000117A8_ds_f l000117A8_ds_t
l000117A8_ds_f:
	r3 = 0x00000002
	goto l000117B8
	// succ:  l000117B8
l000117A8_ds_t:
	r3 = 0x00000002
	goto l00010C58
	// succ:  l00010C58
l000117B8:
	r4 = r3
	goto l00010C58
	// succ:  l00010C58
l000117C0:
	r9 = 0x00000002
	r4 = r9
	branch Test(EQ,r11) l000117C0_ds_t
	// succ:  l000117C0_ds_f l000117C0_ds_t
l000117C0_ds_f:
	r3 = r9
	goto l000117D0
	// succ:  l000117D0
l000117C0_ds_t:
	r3 = r9
	goto l00010C54
	// succ:  l00010C54
l000117D0:
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l000117D8:
	r23 = r8
	goto l00011554
	// succ:  l00011554
l000117E0:
	r3 = r19 - r11
	goto l00010C54
	// succ:  l00010C54
l000117E8:
	r3 = r12 - r11
	goto l00010C54
	// succ:  l00010C54
l000117F0:
	r3 = r31 - r11
	goto l00010C54
	// succ:  l00010C54
l000117F8:
	r3 = r19 - r11
	goto l00010C54
	// succ:  l00010C54
l00011800:
	r3 = r31 - r11
	goto l00010C54
	// succ:  l00010C54
l00011808:
	r3 = r12 - r11
	goto l00010C54
	// succ:  l00010C54
l00011810:
	r9 = 0x0000000E
	r4 = 0x00000001
	goto l00010F68
	// succ:  l00010F68
l0001181C:
	r3 = r19 - r11
	goto l00010C54
	// succ:  l00010C54
l00011824:
	r3 = r12 - r11
	goto l00010C54
	// succ:  l00010C54
l0001182C:
	r4 = 0x0000000E
	goto l00010C54
	// succ:  l00010C54
l00011834:
	r12 = 0xFFFFAA00
	r19 = 0xFFFFAA40
	Mem0[r1 + 88:word32] = r7
	Mem0[r1 + 76:word32] = r12
	Mem0[r1 + 80:word32] = r19
	Mem0[r1 + 84:word32] = r3
	r28 = 0x00000101
	goto l000110E4
	// succ:  l000110E4
fn000109C0_exit:


// fn0001185C
// Return size: 0
define fn0001185C
fn0001185C_entry:
	r1 = fp
	// succ:  l0001185C
l0001185C:
	r1 = r1 + 0xFFFFFFC8
	Mem0[r1 + 4:word32] = r19
	Mem0[r1 + 8:word32] = r20
	Mem0[r1 + 12:word32] = r21
	Mem0[r1 + 16:word32] = r22
	Mem0[r1 + 20:word32] = r23
	Mem0[r1 + 24:word32] = r24
	Mem0[r1 + 28:word32] = r25
	Mem0[r1 + 32:word32] = r26
	Mem0[r1 + 36:word32] = r27
	Mem0[r1 + 40:word32] = r28
	Mem0[r1 + 44:word32] = r29
	Mem0[r1 + 48:word32] = r30
	Mem0[r1 + 52:word32] = r31
	v18 = Mem0[r6 + 2:word16]
	r8 = (word32) v18
	branch Test(EQ,r8) l0001185C_ds_t
	// succ:  l0001185C_ds_f l0001185C_ds_t
l0001185C_ds_f:
	r28 = 0x00000003
	goto l000118A0
	// succ:  l000118A0
l0001185C_ds_t:
	r28 = 0x00000003
	goto l000121A4
	// succ:  l000121A4
l000118A0:
	r28 = 0x00000004
	r9 = 0x00000007
	goto l000118A8
	// succ:  l000118A8
l000118A0_ds_f:
	r7 = r7 + r7
	goto l000118B0
	// succ:  l000118B0
l000118A0_ds_t:
	r7 = r7 + r7
	goto l00011AD4
	// succ:  l00011AD4
l000118A8:
	branch Test(LT,r7) l000118A0_ds_t
	goto l000118A0_ds_f
	// succ:  l000118A0_ds_f l000118A0_ds_t
l000118B0:
	r3 = 0x00000000
	r7 = r7 + r7
	r12 = r3
	r7 = r7 + 0x0000000A
	r10 = r6 + 0x00000006
	r29 = 0xFFFFFFFF
	r6 = r6 + r7
	r20 = 0x00000003
	r19 = 0x0000008A
	r24 = 0x00000004
	r23 = 0x00000007
	r25 = 0x00000006
	r22 = 0x0000000A
	r27 = 0x00000009
	r26 = 0x0000000D
	r21 = 0x0000000E
	goto l000118F0
	// succ:  l000118F0
l000118B0_ds_f:
	v27 = Mem0[r10:word16]
	r11 = (word32) v27
	goto l00011900
	// succ:  l00011900
l000118B0_ds_t:
	v27 = Mem0[r10:word16]
	r11 = (word32) v27
	goto l00011B0C
	// succ:  l00011B0C
l000118F0:
	r4 = r3 + 0x00000001
	r18 = cond(r4 - r9)
	branch Test(GE,r18) l000118B0_ds_t
	goto l000118B0_ds_f
	// succ:  l000118B0_ds_f l000118B0_ds_t
l00011900:
	r7 = r11 ^ r8
	branch Test(EQ,r7) l0001218C
	// succ:  l00011908 l0001218C
l00011908:
	r9 = Mem0[r5 + 5820:word32]
	r18 = cond(r4 - r28)
	branch Test(GE,r18) l00011908_ds_t
	// succ:  l00011908_ds_f l00011908_ds_t
l00011908_ds_f:
	v29 = Mem0[r5 + 5816:word16]
	r7 = (word32) v29
	goto l00011918
	// succ:  l00011918
l00011908_ds_t:
	v29 = Mem0[r5 + 5816:word16]
	r7 = (word32) v29
	goto l00011B14
	// succ:  l00011B14
l00011918:
	r4 = r8 + r8
	r4 = r4 + r4
	r4 = r5 + r4
	v30 = Mem0[r4 + 2684:word16]
	r29 = (word32) v30
	v31 = Mem0[r4 + 2686:word16]
	r28 = (word32) v31
	r18 = r9 & 0x0000001F
	r30 = r29
	branch Test(EQ,r18) l00011918_ds_t
	// succ:  l00011918_ds_f l00011918_ds_t
l00011918_ds_f:
	r30 = r30
	goto l0001193C
	// succ:  l0001193C
l00011918_ds_t:
	r30 = r30
	goto l00011948
	// succ:  l00011948
l0001193C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0001193C_ds_t
	// succ:  l0001193C_ds_f l0001193C_ds_t
l0001193C_ds_f:
	r30 = r30 + r30
	goto l00011948
	// succ:  l00011948
l0001193C_ds_t:
	r30 = r30 + r30
	goto l0001193C
	// succ:  l0001193C
l00011948:
	r7 = r30 | r7
	r30 = 0x00000010
	v32 = SLICE(r7, int16, 0)
	r7 = (int32) v32
	r31 = r30 - r28
	r30 = r7 & 0xFFFFFFFF
	r18 = cond(r31 - r9)
	branch Test(LT,r18) l00011EEC
	// succ:  l00011968 l00011EEC
l00011968:
	r9 = r28 + r9
	v33 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v33
	Mem0[r5 + 5820:word32] = r9
	// succ:  l00011974
l00011974:
	branch Test(EQ,r3) l00011AA4
	// succ:  l00011978 l00011AA4
l00011978:
	v34 = Mem0[r4 + 2684:word16]
	r29 = (word32) v34
	v35 = Mem0[r4 + 2686:word16]
	r7 = (word32) v35
	r18 = r9 & 0x0000001F
	r28 = r29
	branch Test(EQ,r18) l00011978_ds_t
	// succ:  l00011978_ds_f l00011978_ds_t
l00011978_ds_f:
	r28 = r28
	goto l00011990
	// succ:  l00011990
l00011978_ds_t:
	r28 = r28
	goto l0001199C
	// succ:  l0001199C
l00011990:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011990_ds_t
	// succ:  l00011990_ds_f l00011990_ds_t
l00011990_ds_f:
	r28 = r28 + r28
	goto l0001199C
	// succ:  l0001199C
l00011990_ds_t:
	r28 = r28 + r28
	goto l00011990
	// succ:  l00011990
l0001199C:
	r28 = r28 | r30
	r30 = 0x00000010
	v36 = SLICE(r28, int16, 0)
	r28 = (int32) v36
	r31 = r30 - r7
	r30 = r28 & 0xFFFFFFFF
	r18 = cond(r31 - r9)
	branch Test(LT,r18) l000120E8
	// succ:  l000119BC l000120E8
l000119BC:
	r7 = r7 + r9
	v37 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v37
	Mem0[r5 + 5820:word32] = r7
	// succ:  l000119C8
l000119C8:
	r3 = r3 ^ 0x00000001
	branch Test(EQ,r3) l00011AA4
	// succ:  l000119D0 l00011AA4
l000119D0:
	v38 = Mem0[r4 + 2684:word16]
	r28 = (word32) v38
	v39 = Mem0[r4 + 2686:word16]
	r9 = (word32) v39
	r4 = 0x00000010
	r18 = r7 & 0x0000001F
	r3 = r28
	branch Test(EQ,r18) l000119D0_ds_t
	// succ:  l000119D0_ds_f l000119D0_ds_t
l000119D0_ds_f:
	r3 = r3
	goto l000119EC
	// succ:  l000119EC
l000119D0_ds_t:
	r3 = r3
	goto l000119F8
	// succ:  l000119F8
l000119EC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000119EC_ds_t
	// succ:  l000119EC_ds_f l000119EC_ds_t
l000119EC_ds_f:
	r3 = r3 + r3
	goto l000119F8
	// succ:  l000119F8
l000119EC_ds_t:
	r3 = r3 + r3
	goto l000119EC
	// succ:  l000119EC
l000119F8:
	r3 = r3 | r30
	v40 = SLICE(r3, int16, 0)
	r3 = (int32) v40
	r29 = r4 - r9
	r4 = r3 & 0xFFFFFFFF
	r18 = cond(r29 - r7)
	branch Test(GE,r18) l000119F8_ds_t
	// succ:  l000119F8_ds_f l000119F8_ds_t
l000119F8_ds_f:
	r7 = r9 + r7
	goto l00011A18
	// succ:  l00011A18
l000119F8_ds_t:
	r7 = r9 + r7
	goto l00012180
	// succ:  l00012180
l00011A18:
	r7 = Mem0[r5 + 20:word32]
	r29 = Mem0[r5 + 8:word32]
	v41 = SLICE(r4, word16, 0)
	Mem0[r5 + 5816:word16] = v41
	r4 = r7 + 0x00000001
	Mem0[r5 + 20:word32] = r4
	v42 = SLICE(r3, byte, 0)
	Mem0[r7 + r29:byte] = v42
	r3 = Mem0[r5 + 20:word32]
	v43 = Mem0[r5 + 5816:word16]
	r29 = (word32) v43
	r4 = Mem0[r5 + 8:word32]
	r7 = r3 + 0x00000001
	Mem0[r5 + 20:word32] = r7
	r7 = r29
	r7 = r29 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	v45 = SLICE(r7, byte, 0)
	Mem0[r3 + r4:byte] = v45
	r3 = Mem0[r5 + 5820:word32]
	r7 = r9 + 0xFFFFFFF0
	r9 = 0x00000010
	r7 = r7 + r3
	r4 = r9 - r3
	r18 = r4 & 0x0000001F
	r3 = r28
	branch Test(EQ,r18) l00011A18_ds_t
	// succ:  l00011A18_ds_f l00011A18_ds_t
l00011A18_ds_f:
	r3 = r3
	goto l00011A90
	// succ:  l00011A90
l00011A18_ds_t:
	r3 = r3
	goto l00011A9C
	// succ:  l00011A9C
l00011A90:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011A90_ds_t
	// succ:  l00011A90_ds_f l00011A90_ds_t
l00011A90_ds_f:
	r3 = r3 >> 1
	C = cond(r3)
	goto l00011A9C
	// succ:  l00011A9C
l00011A90_ds_t:
	r3 = r3 >> 1
	C = cond(r3)
	goto l00011A90
	// succ:  l00011A90
l00011A9C:
	Mem0[r5 + 5820:word32] = r7
	v46 = SLICE(r3, word16, 0)
	Mem0[r5 + 5816:word16] = v46
	// succ:  l00011AA4
l00011AA4:
	branch Test(EQ,r11) l00011AA4_ds_t
	// succ:  l00011AA4_ds_f l00011AA4_ds_t
l00011AA4_ds_f:
	r3 = r12
	goto l00011AAC
	// succ:  l00011AAC
l00011AA4_ds_t:
	r3 = r12
	goto l00011DB0
	// succ:  l00011DB0
l00011AAC:
	r3 = r11 ^ r8
	branch Test(EQ,r3) l00011AAC_ds_t
	// succ:  l00011AAC_ds_f l00011AAC_ds_t
l00011AAC_ds_f:
	r29 = r8
	goto l00011AB8
	// succ:  l00011AB8
l00011AAC_ds_t:
	r29 = r8
	goto l00011EE0
	// succ:  l00011EE0
l00011AB8:
	r28 = r24
	r9 = r23
	r3 = r12
	goto l00011AC4
	// succ:  l00011AC4
l00011AB8_ds_f:
	r8 = r11
	goto l00011AD4
	// succ:  l00011AD4
l00011AB8_ds_t:
	r8 = r11
	goto l000118F0
	// succ:  l000118F0
l00011AC4:
	r10 = r10 + 0x00000004
	r4 = r6 ^ r10
	branch Test(NE,r4) l00011AB8_ds_t
	goto l00011AB8_ds_f
	// succ:  l00011AB8_ds_f l00011AB8_ds_t
l00011AD4:
	r19 = Mem0[r1 + 4:word32]
	r21 = Mem0[r1 + 12:word32]
	r22 = Mem0[r1 + 16:word32]
	r23 = Mem0[r1 + 20:word32]
	r24 = Mem0[r1 + 24:word32]
	r25 = Mem0[r1 + 28:word32]
	r26 = Mem0[r1 + 32:word32]
	r27 = Mem0[r1 + 36:word32]
	r28 = Mem0[r1 + 40:word32]
	r29 = Mem0[r1 + 44:word32]
	r30 = Mem0[r1 + 48:word32]
	r31 = Mem0[r1 + 52:word32]
	r1 = r1 + 0x00000038
	return
	// succ:  fn0001185C_exit
l00011B0C:
	r9 = Mem0[r5 + 5820:word32]
	v123 = Mem0[r5 + 5816:word16]
	r7 = (word32) v123
	// succ:  l00011B14
l00011B14:
	branch Test(EQ,r8) l00011B14_ds_t
	// succ:  l00011B14_ds_f l00011B14_ds_t
l00011B14_ds_f:
	v59 = SLICE(r7, int16, 0)
	r7 = (int32) v59
	goto l00011B1C
	// succ:  l00011B1C
l00011B14_ds_t:
	v59 = SLICE(r7, int16, 0)
	r7 = (int32) v59
	goto l00011DC0
	// succ:  l00011DC0
l00011B1C:
	r29 = r8 ^ r29
	branch Test(EQ,r29) l00011B1C_ds_t
	// succ:  l00011B1C_ds_f l00011B1C_ds_t
l00011B1C_ds_f:
	r30 = 0x00000010
	goto l00011B28
	// succ:  l00011B28
l00011B1C_ds_t:
	r30 = 0x00000010
	goto l00011C0C
	// succ:  l00011C0C
l00011B28:
	r4 = r8 + r8
	r4 = r4 + r4
	r4 = r5 + r4
	v60 = Mem0[r4 + 2684:word16]
	r28 = (word32) v60
	v61 = Mem0[r4 + 2686:word16]
	r29 = (word32) v61
	r18 = r9 & 0x0000001F
	r4 = r28
	branch Test(EQ,r18) l00011B28_ds_t
	// succ:  l00011B28_ds_f l00011B28_ds_t
l00011B28_ds_f:
	r4 = r4
	goto l00011B4C
	// succ:  l00011B4C
l00011B28_ds_t:
	r4 = r4
	goto l00011B58
	// succ:  l00011B58
l00011B4C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011B4C_ds_t
	// succ:  l00011B4C_ds_f l00011B4C_ds_t
l00011B4C_ds_f:
	r4 = r4 + r4
	goto l00011B58
	// succ:  l00011B58
l00011B4C_ds_t:
	r4 = r4 + r4
	goto l00011B4C
	// succ:  l00011B4C
l00011B58:
	r7 = r7 | r4
	v62 = SLICE(r7, int16, 0)
	r7 = (int32) v62
	r4 = r30 - r29
	r30 = r7 & 0xFFFFFFFF
	r18 = cond(r4 - r9)
	branch Test(GE,r18) l00011B58_ds_t
	// succ:  l00011B58_ds_f l00011B58_ds_t
l00011B58_ds_f:
	r9 = r9 + r29
	goto l00011B78
	// succ:  l00011B78
l00011B58_ds_t:
	r9 = r9 + r29
	goto l00012194
	// succ:  l00012194
l00011B78:
	r4 = Mem0[r5 + 20:word32]
	r9 = Mem0[r5 + 8:word32]
	v63 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v63
	r30 = r4 + 0x00000001
	Mem0[r5 + 20:word32] = r30
	v64 = SLICE(r7, byte, 0)
	Mem0[r4 + r9:byte] = v64
	r4 = Mem0[r5 + 20:word32]
	v65 = Mem0[r5 + 5816:word16]
	r30 = (word32) v65
	r7 = Mem0[r5 + 8:word32]
	r9 = r4 + 0x00000001
	Mem0[r5 + 20:word32] = r9
	r9 = r30
	r9 = r30 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	v66 = SLICE(r9, byte, 0)
	Mem0[r4 + r7:byte] = v66
	r9 = Mem0[r5 + 5820:word32]
	r7 = 0x00000010
	r29 = r29 + 0xFFFFFFF0
	r4 = r3
	r3 = r7 - r9
	r9 = r29 + r9
	r18 = r3 & 0x0000001F
	r7 = r28
	branch Test(EQ,r18) l00011B78_ds_t
	// succ:  l00011B78_ds_f l00011B78_ds_t
l00011B78_ds_f:
	r7 = r7
	goto l00011BF4
	// succ:  l00011BF4
l00011B78_ds_t:
	r7 = r7
	goto l00011C00
	// succ:  l00011C00
l00011BF4:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011BF4_ds_t
	// succ:  l00011BF4_ds_f l00011BF4_ds_t
l00011BF4_ds_f:
	r7 = r7 >> 1
	C = cond(r7)
	goto l00011C00
	// succ:  l00011C00
l00011BF4_ds_t:
	r7 = r7 >> 1
	C = cond(r7)
	goto l00011BF4
	// succ:  l00011BF4
l00011C00:
	Mem0[r5 + 5820:word32] = r9
	v67 = SLICE(r7, word16, 0)
	Mem0[r5 + 5816:word16] = v67
	v68 = SLICE(r7, int16, 0)
	r7 = (int32) v68
	// succ:  l00011C0C
l00011C0C:
	v99 = Mem0[r5 + 2748:word16]
	r29 = (word32) v99
	v100 = Mem0[r5 + 2750:word16]
	r3 = (word32) v100
	r18 = r9 & 0x0000001F
	r28 = r29
	branch Test(EQ,r18) l00011C0C_ds_t
	// succ:  l00011C0C_ds_f l00011C0C_ds_t
l00011C0C_ds_f:
	r28 = r28
	goto l00011C24
	// succ:  l00011C24
l00011C0C_ds_t:
	r28 = r28
	goto l00011C30
	// succ:  l00011C30
l00011C24:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011C24_ds_t
	// succ:  l00011C24_ds_f l00011C24_ds_t
l00011C24_ds_f:
	r28 = r28 + r28
	goto l00011C30
	// succ:  l00011C30
l00011C24_ds_t:
	r28 = r28 + r28
	goto l00011C24
	// succ:  l00011C24
l00011C30:
	r7 = r7 | r28
	r28 = 0x00000010
	v101 = SLICE(r7, int16, 0)
	r7 = (int32) v101
	r30 = r28 - r3
	r28 = r7 & 0xFFFFFFFF
	r18 = cond(r30 - r9)
	branch Test(GE,r18) l000120D8
	// succ:  l00011C50 l000120D8
l00011C50:
	r9 = Mem0[r5 + 20:word32]
	r30 = Mem0[r5 + 8:word32]
	v102 = SLICE(r28, word16, 0)
	Mem0[r5 + 5816:word16] = v102
	r28 = r9 + 0x00000001
	Mem0[r5 + 20:word32] = r28
	v103 = SLICE(r7, byte, 0)
	Mem0[r9 + r30:byte] = v103
	r7 = Mem0[r5 + 20:word32]
	v104 = Mem0[r5 + 5816:word16]
	r30 = (word32) v104
	r9 = Mem0[r5 + 8:word32]
	r28 = r7 + 0x00000001
	Mem0[r5 + 20:word32] = r28
	r28 = r30
	r28 = r30 >>u 1
	C = cond(r28)
	r28 = r28 >>u 1
	C = cond(r28)
	r28 = r28 >>u 1
	C = cond(r28)
	r28 = r28 >>u 1
	C = cond(r28)
	r28 = r28 >>u 1
	C = cond(r28)
	r28 = r28 >>u 1
	C = cond(r28)
	r28 = r28 >>u 1
	C = cond(r28)
	r28 = r28 >>u 1
	C = cond(r28)
	v105 = SLICE(r28, byte, 0)
	Mem0[r7 + r9:byte] = v105
	r7 = Mem0[r5 + 5820:word32]
	r30 = 0x00000010
	r3 = r3 + 0xFFFFFFF0
	r9 = r30 - r7
	r18 = r9 & 0x0000001F
	r28 = r29
	branch Test(EQ,r18) l00011C50_ds_t
	// succ:  l00011C50_ds_f l00011C50_ds_t
l00011C50_ds_f:
	r28 = r28
	goto l00011CC4
	// succ:  l00011CC4
l00011C50_ds_t:
	r28 = r28
	goto l00011CD0
	// succ:  l00011CD0
l00011CC4:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011CC4_ds_t
	// succ:  l00011CC4_ds_f l00011CC4_ds_t
l00011CC4_ds_f:
	r28 = r28 >> 1
	C = cond(r28)
	goto l00011CD0
	// succ:  l00011CD0
l00011CC4_ds_t:
	r28 = r28 >> 1
	C = cond(r28)
	goto l00011CC4
	// succ:  l00011CC4
l00011CD0:
	r3 = r3 + r7
	r28 = r28 & 0xFFFFFFFF
	v106 = SLICE(r28, word16, 0)
	Mem0[r5 + 5816:word16] = v106
	Mem0[r5 + 5820:word32] = r3
	goto l00011CE4
	// succ:  l00011CE4
l00011CD0_ds_f:
	v107 = SLICE(r28, int16, 0)
	r28 = (int32) v107
	goto l00011CF0
	// succ:  l00011CF0
l00011CD0_ds_t:
	v107 = SLICE(r28, int16, 0)
	r28 = (int32) v107
	goto l0001209C
	// succ:  l0001209C
l00011CE4:
	r18 = cond(r21 - r3)
	branch Test(GE,r18) l00011CD0_ds_t
	goto l00011CD0_ds_f
	// succ:  l00011CD0_ds_f l00011CD0_ds_t
l00011CF0:
	r9 = Mem0[r5 + 20:word32]
	r4 = r4 + 0xFFFFFFFD
	r4 = r4 & 0xFFFFFFFF
	r18 = r3 & 0x0000001F
	r7 = r4
	branch Test(EQ,r18) l00011CF0_ds_t
	// succ:  l00011CF0_ds_f l00011CF0_ds_t
l00011CF0_ds_f:
	r7 = r7
	goto l00011D10
	// succ:  l00011D10
l00011CF0_ds_t:
	r7 = r7
	goto l00011D1C
	// succ:  l00011D1C
l00011D10:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011D10_ds_t
	// succ:  l00011D10_ds_f l00011D10_ds_t
l00011D10_ds_f:
	r7 = r7 + r7
	goto l00011D1C
	// succ:  l00011D1C
l00011D10_ds_t:
	r7 = r7 + r7
	goto l00011D10
	// succ:  l00011D10
l00011D1C:
	r29 = Mem0[r5 + 8:word32]
	r28 = r28 | r7
	v108 = SLICE(r28, int16, 0)
	r28 = (int32) v108
	r3 = r9 + 0x00000001
	v109 = SLICE(r28, word16, 0)
	Mem0[r5 + 5816:word16] = v109
	Mem0[r5 + 20:word32] = r3
	v110 = SLICE(r28, byte, 0)
	Mem0[r9 + r29:byte] = v110
	r3 = Mem0[r5 + 20:word32]
	v111 = Mem0[r5 + 5816:word16]
	r28 = (word32) v111
	r7 = Mem0[r5 + 8:word32]
	r9 = r3 + 0x00000001
	Mem0[r5 + 20:word32] = r9
	r9 = r28
	r9 = r28 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	v112 = SLICE(r9, byte, 0)
	Mem0[r3 + r7:byte] = v112
	r3 = Mem0[r5 + 5820:word32]
	r7 = 0x00000010
	r9 = r7 - r3
	r3 = r3 + 0xFFFFFFF2
	r18 = r9 & 0x0000001F
	r7 = r4
	branch Test(EQ,r18) l00011D1C_ds_t
	// succ:  l00011D1C_ds_f l00011D1C_ds_t
l00011D1C_ds_f:
	r7 = r7
	goto l00011D94
	// succ:  l00011D94
l00011D1C_ds_t:
	r7 = r7
	goto l00011DA0
	// succ:  l00011DA0
l00011D94:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011D94_ds_t
	// succ:  l00011D94_ds_f l00011D94_ds_t
l00011D94_ds_f:
	r7 = r7 >> 1
	C = cond(r7)
	goto l00011DA0
	// succ:  l00011DA0
l00011D94_ds_t:
	r7 = r7 >> 1
	C = cond(r7)
	goto l00011D94
	// succ:  l00011D94
l00011DA0:
	Mem0[r5 + 5820:word32] = r3
	branch Test(NE,r11) l00011DA0_ds_t
	// succ:  l00011DA0_ds_f l00011DA0_ds_t
l00011DA0_ds_f:
	v113 = SLICE(r7, word16, 0)
	Mem0[r5 + 5816:word16] = v113
	goto l00011DAC
	// succ:  l00011DAC
l00011DA0_ds_t:
	v113 = SLICE(r7, word16, 0)
	Mem0[r5 + 5816:word16] = v113
	goto l00011AAC
	// succ:  l00011AAC
l00011DAC:
	r3 = r12
	// succ:  l00011DB0
l00011DB0:
	r29 = r8
	r28 = r20
	r9 = r19
	goto l00011AC4
	// succ:  l00011AC4
l00011DC0:
	r18 = cond(r22 - r4)
	branch Test(LT,r18) l00011F84
	// succ:  l00011DC8 l00011F84
l00011DC8:
	v69 = Mem0[r5 + 2752:word16]
	r29 = (word32) v69
	v70 = Mem0[r5 + 2754:word16]
	r28 = (word32) v70
	r18 = r9 & 0x0000001F
	r30 = r29
	branch Test(EQ,r18) l00011DC8_ds_t
	// succ:  l00011DC8_ds_f l00011DC8_ds_t
l00011DC8_ds_f:
	r30 = r30
	goto l00011DE0
	// succ:  l00011DE0
l00011DC8_ds_t:
	r30 = r30
	goto l00011DEC
	// succ:  l00011DEC
l00011DE0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011DE0_ds_t
	// succ:  l00011DE0_ds_f l00011DE0_ds_t
l00011DE0_ds_f:
	r30 = r30 + r30
	goto l00011DEC
	// succ:  l00011DEC
l00011DE0_ds_t:
	r30 = r30 + r30
	goto l00011DE0
	// succ:  l00011DE0
l00011DEC:
	r7 = r7 | r30
	r30 = 0x00000010
	v71 = SLICE(r7, int16, 0)
	r7 = (int32) v71
	r31 = r30 - r28
	r30 = r7 & 0xFFFFFFFF
	r18 = cond(r31 - r9)
	branch Test(LT,r18) l00011DEC_ds_t
	// succ:  l00011DEC_ds_f l00011DEC_ds_t
l00011DEC_ds_f:
	r9 = r28 + r9
	goto l00011E10
	// succ:  l00011E10
l00011DEC_ds_t:
	r9 = r28 + r9
	goto l00012288
	// succ:  l00012288
l00011E10:
	v72 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v72
	Mem0[r5 + 5820:word32] = r9
	r18 = cond(r26 - r9)
	branch Test(GE,r18) l00011E10_ds_t
	// succ:  l00011E10_ds_f l00011E10_ds_t
l00011E10_ds_f:
	v73 = SLICE(r30, int16, 0)
	r30 = (int32) v73
	goto l00011E24
	// succ:  l00011E24
l00011E10_ds_t:
	v73 = SLICE(r30, int16, 0)
	r30 = (int32) v73
	goto l00012328
	// succ:  l00012328
l00011E24:
	r7 = Mem0[r5 + 20:word32]
	r3 = r3 + 0xFFFFFFFE
	r3 = r3 & 0xFFFFFFFF
	r28 = Mem0[r5 + 8:word32]
	r18 = r9 & 0x0000001F
	r4 = r3
	branch Test(EQ,r18) l00011E24_ds_t
	// succ:  l00011E24_ds_f l00011E24_ds_t
l00011E24_ds_f:
	r4 = r4
	goto l00011E48
	// succ:  l00011E48
l00011E24_ds_t:
	r4 = r4
	goto l00011E54
	// succ:  l00011E54
l00011E48:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011E48_ds_t
	// succ:  l00011E48_ds_f l00011E48_ds_t
l00011E48_ds_f:
	r4 = r4 + r4
	goto l00011E54
	// succ:  l00011E54
l00011E48_ds_t:
	r4 = r4 + r4
	goto l00011E48
	// succ:  l00011E48
l00011E54:
	r30 = r30 | r4
	v74 = SLICE(r30, int16, 0)
	r30 = (int32) v74
	r4 = r7 + 0x00000001
	v75 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v75
	Mem0[r5 + 20:word32] = r4
	v76 = SLICE(r30, byte, 0)
	Mem0[r7 + r28:byte] = v76
	r4 = Mem0[r5 + 20:word32]
	v77 = Mem0[r5 + 5816:word16]
	r28 = (word32) v77
	r7 = Mem0[r5 + 8:word32]
	r9 = r4 + 0x00000001
	Mem0[r5 + 20:word32] = r9
	r9 = r28
	r9 = r28 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	v78 = SLICE(r9, byte, 0)
	Mem0[r4 + r7:byte] = v78
	r4 = Mem0[r5 + 5820:word32]
	r7 = 0x00000010
	r9 = r7 - r4
	r4 = r4 + 0xFFFFFFF3
	r18 = r9 & 0x0000001F
	r7 = r3
	branch Test(EQ,r18) l00011E54_ds_t
	// succ:  l00011E54_ds_f l00011E54_ds_t
l00011E54_ds_f:
	r7 = r7
	goto l00011EC8
	// succ:  l00011EC8
l00011E54_ds_t:
	r7 = r7
	goto l00011ED4
	// succ:  l00011ED4
l00011EC8:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011EC8_ds_t
	// succ:  l00011EC8_ds_f l00011EC8_ds_t
l00011EC8_ds_f:
	r7 = r7 >> 1
	C = cond(r7)
	goto l00011ED4
	// succ:  l00011ED4
l00011EC8_ds_t:
	r7 = r7 >> 1
	C = cond(r7)
	goto l00011EC8
	// succ:  l00011EC8
l00011ED4:
	Mem0[r5 + 5820:word32] = r4
	v79 = SLICE(r7, word16, 0)
	Mem0[r5 + 5816:word16] = v79
	goto l00011AA4
	// succ:  l00011AA4
l00011EE0:
	r28 = r20
	r9 = r25
	goto l00011AC4
	// succ:  l00011AC4
l00011EEC:
	r9 = Mem0[r5 + 20:word32]
	r31 = Mem0[r5 + 8:word32]
	v54 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v54
	r30 = r9 + 0x00000001
	Mem0[r5 + 20:word32] = r30
	v55 = SLICE(r7, byte, 0)
	Mem0[r9 + r31:byte] = v55
	r7 = Mem0[r5 + 20:word32]
	v56 = Mem0[r5 + 5816:word16]
	r31 = (word32) v56
	r9 = Mem0[r5 + 8:word32]
	r30 = r7 + 0x00000001
	Mem0[r5 + 20:word32] = r30
	r30 = r31
	r30 = r31 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	v57 = SLICE(r30, byte, 0)
	Mem0[r7 + r9:byte] = v57
	r7 = Mem0[r5 + 5820:word32]
	r30 = 0x00000010
	r9 = r28 + 0xFFFFFFF0
	r28 = r30 - r7
	r18 = r28 & 0x0000001F
	r30 = r29
	branch Test(EQ,r18) l00011EEC_ds_t
	// succ:  l00011EEC_ds_f l00011EEC_ds_t
l00011EEC_ds_f:
	r30 = r30
	goto l00011F60
	// succ:  l00011F60
l00011EEC_ds_t:
	r30 = r30
	goto l00011F6C
	// succ:  l00011F6C
l00011F60:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011F60_ds_t
	// succ:  l00011F60_ds_f l00011F60_ds_t
l00011F60_ds_f:
	r30 = r30 >> 1
	C = cond(r30)
	goto l00011F6C
	// succ:  l00011F6C
l00011F60_ds_t:
	r30 = r30 >> 1
	C = cond(r30)
	goto l00011F60
	// succ:  l00011F60
l00011F6C:
	r9 = r9 + r7
	r30 = r30 & 0xFFFFFFFF
	v58 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v58
	Mem0[r5 + 5820:word32] = r9
	goto l00011974
	// succ:  l00011974
l00011F84:
	v88 = Mem0[r5 + 2756:word16]
	r29 = (word32) v88
	v89 = Mem0[r5 + 2758:word16]
	r28 = (word32) v89
	r18 = r9 & 0x0000001F
	r30 = r29
	branch Test(EQ,r18) l00011F84_ds_t
	// succ:  l00011F84_ds_f l00011F84_ds_t
l00011F84_ds_f:
	r30 = r30
	goto l00011F9C
	// succ:  l00011F9C
l00011F84_ds_t:
	r30 = r30
	goto l00011FA8
	// succ:  l00011FA8
l00011F9C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00011F9C_ds_t
	// succ:  l00011F9C_ds_f l00011F9C_ds_t
l00011F9C_ds_f:
	r30 = r30 + r30
	goto l00011FA8
	// succ:  l00011FA8
l00011F9C_ds_t:
	r30 = r30 + r30
	goto l00011F9C
	// succ:  l00011F9C
l00011FA8:
	r7 = r7 | r30
	r30 = 0x00000010
	v90 = SLICE(r7, int16, 0)
	r7 = (int32) v90
	r31 = r30 - r28
	r30 = r7 & 0xFFFFFFFF
	r18 = cond(r31 - r9)
	branch Test(LT,r18) l00011FA8_ds_t
	// succ:  l00011FA8_ds_f l00011FA8_ds_t
l00011FA8_ds_f:
	r9 = r28 + r9
	goto l00011FCC
	// succ:  l00011FCC
l00011FA8_ds_t:
	r9 = r28 + r9
	goto l000121AC
	// succ:  l000121AC
l00011FCC:
	v91 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v91
	Mem0[r5 + 5820:word32] = r9
	r18 = cond(r27 - r9)
	branch Test(GE,r18) l00011FCC_ds_t
	// succ:  l00011FCC_ds_f l00011FCC_ds_t
l00011FCC_ds_f:
	v92 = SLICE(r30, int16, 0)
	r30 = (int32) v92
	goto l00011FE0
	// succ:  l00011FE0
l00011FCC_ds_t:
	v92 = SLICE(r30, int16, 0)
	r30 = (int32) v92
	goto l0001224C
	// succ:  l0001224C
l00011FE0:
	r7 = Mem0[r5 + 20:word32]
	r3 = r3 + 0xFFFFFFF6
	r3 = r3 & 0xFFFFFFFF
	r28 = Mem0[r5 + 8:word32]
	r18 = r9 & 0x0000001F
	r4 = r3
	branch Test(EQ,r18) l00011FE0_ds_t
	// succ:  l00011FE0_ds_f l00011FE0_ds_t
l00011FE0_ds_f:
	r4 = r4
	goto l00012004
	// succ:  l00012004
l00011FE0_ds_t:
	r4 = r4
	goto l00012010
	// succ:  l00012010
l00012004:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00012004_ds_t
	// succ:  l00012004_ds_f l00012004_ds_t
l00012004_ds_f:
	r4 = r4 + r4
	goto l00012010
	// succ:  l00012010
l00012004_ds_t:
	r4 = r4 + r4
	goto l00012004
	// succ:  l00012004
l00012010:
	r4 = r30 | r4
	v93 = SLICE(r4, int16, 0)
	r4 = (int32) v93
	r9 = r7 + 0x00000001
	v94 = SLICE(r4, word16, 0)
	Mem0[r5 + 5816:word16] = v94
	Mem0[r5 + 20:word32] = r9
	v95 = SLICE(r4, byte, 0)
	Mem0[r7 + r28:byte] = v95
	r4 = Mem0[r5 + 20:word32]
	v96 = Mem0[r5 + 5816:word16]
	r28 = (word32) v96
	r7 = Mem0[r5 + 8:word32]
	r9 = r4 + 0x00000001
	Mem0[r5 + 20:word32] = r9
	r9 = r28
	r9 = r28 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	v97 = SLICE(r9, byte, 0)
	Mem0[r4 + r7:byte] = v97
	r4 = Mem0[r5 + 5820:word32]
	r7 = 0x00000010
	r9 = r7 - r4
	r4 = r4 + 0xFFFFFFF7
	r18 = r9 & 0x0000001F
	r7 = r3
	branch Test(EQ,r18) l00012010_ds_t
	// succ:  l00012010_ds_f l00012010_ds_t
l00012010_ds_f:
	r7 = r7
	goto l00012084
	// succ:  l00012084
l00012010_ds_t:
	r7 = r7
	goto l00012090
	// succ:  l00012090
l00012084:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00012084_ds_t
	// succ:  l00012084_ds_f l00012084_ds_t
l00012084_ds_f:
	r7 = r7 >> 1
	C = cond(r7)
	goto l00012090
	// succ:  l00012090
l00012084_ds_t:
	r7 = r7 >> 1
	C = cond(r7)
	goto l00012084
	// succ:  l00012084
l00012090:
	Mem0[r5 + 5820:word32] = r4
	v98 = SLICE(r7, word16, 0)
	Mem0[r5 + 5816:word16] = v98
	goto l00011AA4
	// succ:  l00011AA4
l0001209C:
	r4 = r4 + 0xFFFFFFFD
	r4 = r4 & 0xFFFFFFFF
	r18 = r3 & 0x0000001F
	r7 = r4
	branch Test(EQ,r18) l0001209C_ds_t
	// succ:  l0001209C_ds_f l0001209C_ds_t
l0001209C_ds_f:
	r7 = r7
	goto l000120B8
	// succ:  l000120B8
l0001209C_ds_t:
	r7 = r7
	goto l000120C4
	// succ:  l000120C4
l000120B8:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000120B8_ds_t
	// succ:  l000120B8_ds_f l000120B8_ds_t
l000120B8_ds_f:
	r7 = r7 + r7
	goto l000120C4
	// succ:  l000120C4
l000120B8_ds_t:
	r7 = r7 + r7
	goto l000120B8
	// succ:  l000120B8
l000120C4:
	r3 = r3 + 0x00000002
	r28 = r28 | r7
	v114 = SLICE(r28, word16, 0)
	Mem0[r5 + 5816:word16] = v114
	Mem0[r5 + 5820:word32] = r3
	goto l00011AA4
	// succ:  l00011AA4
l000120D8:
	r3 = r3 + r9
	v115 = SLICE(r28, word16, 0)
	Mem0[r5 + 5816:word16] = v115
	Mem0[r5 + 5820:word32] = r3
	goto l00011CE4
	// succ:  l00011CE4
l000120E8:
	r9 = Mem0[r5 + 20:word32]
	r31 = Mem0[r5 + 8:word32]
	v48 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v48
	r30 = r9 + 0x00000001
	Mem0[r5 + 20:word32] = r30
	v49 = SLICE(r28, byte, 0)
	Mem0[r9 + r31:byte] = v49
	r9 = Mem0[r5 + 20:word32]
	v50 = Mem0[r5 + 5816:word16]
	r31 = (word32) v50
	r28 = Mem0[r5 + 8:word32]
	r30 = r9 + 0x00000001
	Mem0[r5 + 20:word32] = r30
	r30 = r31
	r30 = r31 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	v51 = SLICE(r30, byte, 0)
	Mem0[r9 + r28:byte] = v51
	r9 = Mem0[r5 + 5820:word32]
	r30 = 0x00000010
	r7 = r7 + 0xFFFFFFF0
	r28 = r30 - r9
	r18 = r28 & 0x0000001F
	r30 = r29
	branch Test(EQ,r18) l000120E8_ds_t
	// succ:  l000120E8_ds_f l000120E8_ds_t
l000120E8_ds_f:
	r30 = r30
	goto l0001215C
	// succ:  l0001215C
l000120E8_ds_t:
	r30 = r30
	goto l00012168
	// succ:  l00012168
l0001215C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0001215C_ds_t
	// succ:  l0001215C_ds_f l0001215C_ds_t
l0001215C_ds_f:
	r30 = r30 >> 1
	C = cond(r30)
	goto l00012168
	// succ:  l00012168
l0001215C_ds_t:
	r30 = r30 >> 1
	C = cond(r30)
	goto l0001215C
	// succ:  l0001215C
l00012168:
	r7 = r7 + r9
	r30 = r30 & 0xFFFFFFFF
	v52 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v52
	Mem0[r5 + 5820:word32] = r7
	goto l000119C8
	// succ:  l000119C8
l00012180:
	v47 = SLICE(r4, word16, 0)
	Mem0[r5 + 5816:word16] = v47
	Mem0[r5 + 5820:word32] = r7
	goto l00011AA4
	// succ:  l00011AA4
l0001218C:
	r3 = r4
	goto l00011AC4
	// succ:  l00011AC4
l00012194:
	r4 = r3
	v80 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v80
	Mem0[r5 + 5820:word32] = r9
	goto l00011C0C
	// succ:  l00011C0C
l000121A4:
	r9 = 0x0000008A
	goto l000118A8
	// succ:  l000118A8
l000121AC:
	r9 = Mem0[r5 + 20:word32]
	r31 = Mem0[r5 + 8:word32]
	v117 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v117
	r30 = r9 + 0x00000001
	Mem0[r5 + 20:word32] = r30
	v118 = SLICE(r7, byte, 0)
	Mem0[r9 + r31:byte] = v118
	r7 = Mem0[r5 + 20:word32]
	v119 = Mem0[r5 + 5816:word16]
	r31 = (word32) v119
	r9 = Mem0[r5 + 8:word32]
	r30 = r7 + 0x00000001
	Mem0[r5 + 20:word32] = r30
	r30 = r31
	r30 = r31 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	v120 = SLICE(r30, byte, 0)
	Mem0[r7 + r9:byte] = v120
	r7 = Mem0[r5 + 5820:word32]
	r30 = 0x00000010
	r9 = r28 + 0xFFFFFFF0
	r28 = r30 - r7
	r18 = r28 & 0x0000001F
	r30 = r29
	branch Test(EQ,r18) l000121AC_ds_t
	// succ:  l000121AC_ds_f l000121AC_ds_t
l000121AC_ds_f:
	r30 = r30
	goto l00012220
	// succ:  l00012220
l000121AC_ds_t:
	r30 = r30
	goto l0001222C
	// succ:  l0001222C
l00012220:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00012220_ds_t
	// succ:  l00012220_ds_f l00012220_ds_t
l00012220_ds_f:
	r30 = r30 >> 1
	C = cond(r30)
	goto l0001222C
	// succ:  l0001222C
l00012220_ds_t:
	r30 = r30 >> 1
	C = cond(r30)
	goto l00012220
	// succ:  l00012220
l0001222C:
	r9 = r9 + r7
	r30 = r30 & 0xFFFFFFFF
	v121 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v121
	Mem0[r5 + 5820:word32] = r9
	r18 = cond(r27 - r9)
	branch Test(LT,r18) l0001222C_ds_t
	// succ:  l0001222C_ds_f l0001222C_ds_t
l0001222C_ds_f:
	v122 = SLICE(r30, int16, 0)
	r30 = (int32) v122
	goto l0001224C
	// succ:  l0001224C
l0001222C_ds_t:
	v122 = SLICE(r30, int16, 0)
	r30 = (int32) v122
	goto l00011FE0
	// succ:  l00011FE0
l0001224C:
	r4 = r4 + 0xFFFFFFF5
	r3 = r4 & 0xFFFFFFFF
	r18 = r9 & 0x0000001F
	r4 = r3
	branch Test(EQ,r18) l0001224C_ds_t
	// succ:  l0001224C_ds_f l0001224C_ds_t
l0001224C_ds_f:
	r4 = r4
	goto l00012268
	// succ:  l00012268
l0001224C_ds_t:
	r4 = r4
	goto l00012274
	// succ:  l00012274
l00012268:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00012268_ds_t
	// succ:  l00012268_ds_f l00012268_ds_t
l00012268_ds_f:
	r4 = r4 + r4
	goto l00012274
	// succ:  l00012274
l00012268_ds_t:
	r4 = r4 + r4
	goto l00012268
	// succ:  l00012268
l00012274:
	r9 = r9 + 0x00000007
	r4 = r30 | r4
	v116 = SLICE(r4, word16, 0)
	Mem0[r5 + 5816:word16] = v116
	Mem0[r5 + 5820:word32] = r9
	goto l00011AA4
	// succ:  l00011AA4
l00012288:
	r9 = Mem0[r5 + 20:word32]
	r31 = Mem0[r5 + 8:word32]
	v82 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v82
	r30 = r9 + 0x00000001
	Mem0[r5 + 20:word32] = r30
	v83 = SLICE(r7, byte, 0)
	Mem0[r9 + r31:byte] = v83
	r7 = Mem0[r5 + 20:word32]
	v84 = Mem0[r5 + 5816:word16]
	r31 = (word32) v84
	r9 = Mem0[r5 + 8:word32]
	r30 = r7 + 0x00000001
	Mem0[r5 + 20:word32] = r30
	r30 = r31
	r30 = r31 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	r30 = r30 >>u 1
	C = cond(r30)
	v85 = SLICE(r30, byte, 0)
	Mem0[r7 + r9:byte] = v85
	r7 = Mem0[r5 + 5820:word32]
	r30 = 0x00000010
	r9 = r28 + 0xFFFFFFF0
	r28 = r30 - r7
	r18 = r28 & 0x0000001F
	r30 = r29
	branch Test(EQ,r18) l00012288_ds_t
	// succ:  l00012288_ds_f l00012288_ds_t
l00012288_ds_f:
	r30 = r30
	goto l000122FC
	// succ:  l000122FC
l00012288_ds_t:
	r30 = r30
	goto l00012308
	// succ:  l00012308
l000122FC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000122FC_ds_t
	// succ:  l000122FC_ds_f l000122FC_ds_t
l000122FC_ds_f:
	r30 = r30 >> 1
	C = cond(r30)
	goto l00012308
	// succ:  l00012308
l000122FC_ds_t:
	r30 = r30 >> 1
	C = cond(r30)
	goto l000122FC
	// succ:  l000122FC
l00012308:
	r9 = r9 + r7
	r30 = r30 & 0xFFFFFFFF
	v86 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v86
	Mem0[r5 + 5820:word32] = r9
	r18 = cond(r26 - r9)
	branch Test(LT,r18) l00012308_ds_t
	// succ:  l00012308_ds_f l00012308_ds_t
l00012308_ds_f:
	v87 = SLICE(r30, int16, 0)
	r30 = (int32) v87
	goto l00012328
	// succ:  l00012328
l00012308_ds_t:
	v87 = SLICE(r30, int16, 0)
	r30 = (int32) v87
	goto l00011E24
	// succ:  l00011E24
l00012328:
	r4 = r4 + 0xFFFFFFFD
	r4 = r4 & 0xFFFFFFFF
	r18 = r9 & 0x0000001F
	r3 = r4
	branch Test(EQ,r18) l00012328_ds_t
	// succ:  l00012328_ds_f l00012328_ds_t
l00012328_ds_f:
	r3 = r3
	goto l00012344
	// succ:  l00012344
l00012328_ds_t:
	r3 = r3
	goto l00012350
	// succ:  l00012350
l00012344:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00012344_ds_t
	// succ:  l00012344_ds_f l00012344_ds_t
l00012344_ds_f:
	r3 = r3 + r3
	goto l00012350
	// succ:  l00012350
l00012344_ds_t:
	r3 = r3 + r3
	goto l00012344
	// succ:  l00012344
l00012350:
	r9 = r9 + 0x00000003
	r30 = r30 | r3
	v81 = SLICE(r30, word16, 0)
	Mem0[r5 + 5816:word16] = v81
	Mem0[r5 + 5820:word32] = r9
	goto l00011AA4
	// succ:  l00011AA4
fn0001185C_exit:


// fn00012364
// Return size: 0
define fn00012364
fn00012364_entry:
	r1 = fp
	// succ:  l00012364
l00012364:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1 + 16:word32] = r22
	v6 = Mem0[r5 + 5816:word16]
	r3 = (word32) v6
	r22 = Mem0[r5 + 5792:word32]
	Mem0[r1 + 4:word32] = r19
	Mem0[r1 + 8:word32] = r20
	Mem0[r1 + 12:word32] = r21
	Mem0[r1 + 20:word32] = r23
	Mem0[r1 + 24:word32] = r24
	r9 = Mem0[r5 + 5820:word32]
	branch Test(EQ,r22) l00012364_ds_t
	// succ:  l00012364_ds_f l00012364_ds_t
l00012364_ds_f:
	v13 = SLICE(r3, int16, 0)
	r4 = (int32) v13
	goto l00012394
	// succ:  l00012394
l00012364_ds_t:
	v13 = SLICE(r3, int16, 0)
	r4 = (int32) v13
	goto l000127D4
	// succ:  l000127D4
l00012394:
	r12 = 0xFFFFABD8
	r20 = 0xFFFFACD8
	r8 = 0x00000000
	r11 = 0x000000FF
	goto l000124AC
	// succ:  l000124AC
l000123B0:
	r19 = r19 + r19
	r19 = r19 + r19
	r4 = r6 + r19
	v75 = Mem0[r19 + r6:word16]
	r21 = (word32) v75
	v76 = Mem0[r4 + 2:word16]
	r19 = (word32) v76
	r18 = r9 & 0x0000001F
	r4 = r21
	branch Test(EQ,r18) l000123B0_ds_t
	// succ:  l000123B0_ds_f l000123B0_ds_t
l000123B0_ds_f:
	r4 = r4
	goto l000123D4
	// succ:  l000123D4
l000123B0_ds_t:
	r4 = r4
	goto l000123E0
	// succ:  l000123E0
l000123D4:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000123D4_ds_t
	// succ:  l000123D4_ds_f l000123D4_ds_t
l000123D4_ds_f:
	r4 = r4 + r4
	goto l000123E0
	// succ:  l000123E0
l000123D4_ds_t:
	r4 = r4 + r4
	goto l000123D4
	// succ:  l000123D4
l000123E0:
	r4 = r3 | r4
	r3 = 0x00000010
	v77 = SLICE(r4, int16, 0)
	r4 = (int32) v77
	r8 = r3 - r19
	r3 = r4 & 0xFFFFFFFF
	r18 = cond(r8 - r9)
	branch Test(GE,r18) l000123E0_ds_t
	// succ:  l000123E0_ds_f l000123E0_ds_t
l000123E0_ds_f:
	r9 = r9 + r19
	goto l00012404
	// succ:  l00012404
l000123E0_ds_t:
	r9 = r9 + r19
	goto l000128A0
	// succ:  l000128A0
l00012404:
	r8 = Mem0[r5 + 20:word32]
	r9 = Mem0[r5 + 8:word32]
	v78 = SLICE(r3, word16, 0)
	Mem0[r5 + 5816:word16] = v78
	r3 = r8 + 0x00000001
	Mem0[r5 + 20:word32] = r3
	v79 = SLICE(r4, byte, 0)
	Mem0[r8 + r9:byte] = v79
	r3 = Mem0[r5 + 20:word32]
	v80 = Mem0[r5 + 5816:word16]
	r9 = (word32) v80
	r4 = Mem0[r5 + 8:word32]
	r8 = r3 + 0x00000001
	Mem0[r5 + 20:word32] = r8
	r8 = r9
	r8 = r9 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	v81 = SLICE(r8, byte, 0)
	Mem0[r3 + r4:byte] = v81
	r9 = Mem0[r5 + 5820:word32]
	r22 = Mem0[r5 + 5792:word32]
	r4 = 0x00000010
	r3 = r4 - r9
	r19 = r19 + 0xFFFFFFF0
	r18 = r3 & 0x0000001F
	r4 = r21
	branch Test(EQ,r18) l00012404_ds_t
	// succ:  l00012404_ds_f l00012404_ds_t
l00012404_ds_f:
	r4 = r4
	goto l0001247C
	// succ:  l0001247C
l00012404_ds_t:
	r4 = r4
	goto l00012488
	// succ:  l00012488
l0001247C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0001247C_ds_t
	// succ:  l0001247C_ds_f l0001247C_ds_t
l0001247C_ds_f:
	r4 = r4 >> 1
	C = cond(r4)
	goto l00012488
	// succ:  l00012488
l0001247C_ds_t:
	r4 = r4 >> 1
	C = cond(r4)
	goto l0001247C
	// succ:  l0001247C
l00012488:
	r3 = r4 & 0xFFFFFFFF
	r9 = r19 + r9
	v72 = SLICE(r3, word16, 0)
	Mem0[r5 + 5816:word16] = v72
	Mem0[r5 + 5820:word32] = r9
	v73 = SLICE(r4, int16, 0)
	r4 = (int32) v73
	// succ:  l000124A0
l000124A0:
	r18 = cond(r10 -u r22)
	branch Test(GE,r18) l000124A0_ds_t
	// succ:  l000124A0_ds_f l000124A0_ds_t
l000124A0_ds_f:
	r8 = r10
	goto l000124AC
	// succ:  l000124AC
l000124A0_ds_t:
	r8 = r10
	goto l000127D4
	// succ:  l000127D4
l000124AC:
	r19 = Mem0[r5 + 5796:word32]
	r10 = r8 + r8
	r4 = Mem0[r5 + 5784:word32]
	v27 = Mem0[r10 + r19:word16]
	r21 = (word32) v27
	v28 = SLICE(r3, int16, 0)
	r3 = (int32) v28
	r10 = r8 + 0x00000001
	branch Test(EQ,r21) l000124AC_ds_t
	// succ:  l000124AC_ds_f l000124AC_ds_t
l000124AC_ds_f:
	v29 = Mem0[r8 + r4:byte]
	r19 = (word32) v29
	goto l000124CC
	// succ:  l000124CC
l000124AC_ds_t:
	v29 = Mem0[r8 + r4:byte]
	r19 = (word32) v29
	goto l000123B0
	// succ:  l000123B0
l000124CC:
	v30 = Mem0[r19 + r12:byte]
	r23 = (word32) v30
	r8 = r23 + 0x00000101
	r8 = r8 + r8
	r8 = r8 + r8
	r4 = r6 + r8
	v31 = Mem0[r8 + r6:word16]
	r24 = (word32) v31
	v32 = Mem0[r4 + 2:word16]
	r22 = (word32) v32
	r4 = 0x00000010
	r18 = r9 & 0x0000001F
	r8 = r24
	branch Test(EQ,r18) l000124CC_ds_t
	// succ:  l000124CC_ds_f l000124CC_ds_t
l000124CC_ds_f:
	r8 = r8
	goto l000124FC
	// succ:  l000124FC
l000124CC_ds_t:
	r8 = r8
	goto l00012508
	// succ:  l00012508
l000124FC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000124FC_ds_t
	// succ:  l000124FC_ds_f l000124FC_ds_t
l000124FC_ds_f:
	r8 = r8 + r8
	goto l00012508
	// succ:  l00012508
l000124FC_ds_t:
	r8 = r8 + r8
	goto l000124FC
	// succ:  l000124FC
l00012508:
	r8 = r3 | r8
	v33 = SLICE(r8, int16, 0)
	r8 = (int32) v33
	r3 = r4 - r22
	r4 = r8 & 0xFFFFFFFF
	r18 = cond(r3 - r9)
	branch Test(GE,r18) l000128AC
	// succ:  l00012524 l000128AC
l00012524:
	r3 = Mem0[r5 + 20:word32]
	r9 = Mem0[r5 + 8:word32]
	v34 = SLICE(r4, word16, 0)
	Mem0[r5 + 5816:word16] = v34
	r4 = r3 + 0x00000001
	Mem0[r5 + 20:word32] = r4
	v35 = SLICE(r8, byte, 0)
	Mem0[r3 + r9:byte] = v35
	r3 = Mem0[r5 + 20:word32]
	v36 = Mem0[r5 + 5816:word16]
	r9 = (word32) v36
	r4 = Mem0[r5 + 8:word32]
	r8 = r3 + 0x00000001
	Mem0[r5 + 20:word32] = r8
	r8 = r9
	r8 = r9 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	v38 = SLICE(r8, byte, 0)
	Mem0[r3 + r4:byte] = v38
	r3 = Mem0[r5 + 5820:word32]
	r4 = 0x00000010
	r22 = r22 + 0xFFFFFFF0
	r8 = r4 - r3
	r18 = r8 & 0x0000001F
	r4 = r24
	branch Test(EQ,r18) l00012524_ds_t
	// succ:  l00012524_ds_f l00012524_ds_t
l00012524_ds_f:
	r4 = r4
	goto l00012598
	// succ:  l00012598
l00012524_ds_t:
	r4 = r4
	goto l000125A4
	// succ:  l000125A4
l00012598:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00012598_ds_t
	// succ:  l00012598_ds_f l00012598_ds_t
l00012598_ds_f:
	r4 = r4 >> 1
	C = cond(r4)
	goto l000125A4
	// succ:  l000125A4
l00012598_ds_t:
	r4 = r4 >> 1
	C = cond(r4)
	goto l00012598
	// succ:  l00012598
l000125A4:
	r22 = r22 + r3
	r4 = r4 & 0xFFFFFFFF
	v39 = SLICE(r4, word16, 0)
	Mem0[r5 + 5816:word16] = v39
	Mem0[r5 + 5820:word32] = r22
	goto l000125B8
	// succ:  l000125B8
l000125A4_ds_f:
	v40 = SLICE(r4, int16, 0)
	r4 = (int32) v40
	goto l000125D4
	// succ:  l000125D4
l000125A4_ds_t:
	v40 = SLICE(r4, int16, 0)
	r4 = (int32) v40
	goto l000126B8
	// succ:  l000126B8
l000125B8:
	r3 = r23 + r23
	r3 = r3 + r3
	r8 = r3 + 0xFFFFB4A8
	r8 = Mem0[r8:word32]
	branch Test(EQ,r8) l000125A4_ds_t
	goto l000125A4_ds_f
	// succ:  l000125A4_ds_f l000125A4_ds_t
l000125D4:
	r3 = r3 + 0xFFFFAB64
	r3 = Mem0[r3:word32]
	r23 = 0x00000010
	r3 = r19 - r3
	r3 = r3 & 0xFFFFFFFF
	r18 = r22 & 0x0000001F
	r9 = r3
	branch Test(EQ,r18) l000125D4_ds_t
	// succ:  l000125D4_ds_f l000125D4_ds_t
l000125D4_ds_f:
	r9 = r9
	goto l00012600
	// succ:  l00012600
l000125D4_ds_t:
	r9 = r9
	goto l0001260C
	// succ:  l0001260C
l00012600:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00012600_ds_t
	// succ:  l00012600_ds_f l00012600_ds_t
l00012600_ds_f:
	r9 = r9 + r9
	goto l0001260C
	// succ:  l0001260C
l00012600_ds_t:
	r9 = r9 + r9
	goto l00012600
	// succ:  l00012600
l0001260C:
	r4 = r4 | r9
	v41 = SLICE(r4, int16, 0)
	r4 = (int32) v41
	r9 = r23 - r8
	r19 = r4 & 0xFFFFFFFF
	r18 = cond(r9 - r22)
	branch Test(GE,r18) l0001260C_ds_t
	// succ:  l0001260C_ds_f l0001260C_ds_t
l0001260C_ds_f:
	r22 = r22 + r8
	goto l0001262C
	// succ:  l0001262C
l0001260C_ds_t:
	r22 = r22 + r8
	goto l00012980
	// succ:  l00012980
l0001262C:
	r9 = Mem0[r5 + 20:word32]
	r22 = Mem0[r5 + 8:word32]
	v42 = SLICE(r19, word16, 0)
	Mem0[r5 + 5816:word16] = v42
	r19 = r9 + 0x00000001
	Mem0[r5 + 20:word32] = r19
	v43 = SLICE(r4, byte, 0)
	Mem0[r9 + r22:byte] = v43
	r4 = Mem0[r5 + 20:word32]
	v44 = Mem0[r5 + 5816:word16]
	r22 = (word32) v44
	r9 = Mem0[r5 + 8:word32]
	r19 = r4 + 0x00000001
	Mem0[r5 + 20:word32] = r19
	r19 = r22
	r19 = r22 >>u 1
	C = cond(r19)
	r19 = r19 >>u 1
	C = cond(r19)
	r19 = r19 >>u 1
	C = cond(r19)
	r19 = r19 >>u 1
	C = cond(r19)
	r19 = r19 >>u 1
	C = cond(r19)
	r19 = r19 >>u 1
	C = cond(r19)
	r19 = r19 >>u 1
	C = cond(r19)
	r19 = r19 >>u 1
	C = cond(r19)
	v45 = SLICE(r19, byte, 0)
	Mem0[r4 + r9:byte] = v45
	r22 = Mem0[r5 + 5820:word32]
	r9 = r8 + 0xFFFFFFF0
	r19 = r23 - r22
	r22 = r9 + r22
	r18 = r19 & 0x0000001F
	r4 = r3
	branch Test(EQ,r18) l0001262C_ds_t
	// succ:  l0001262C_ds_f l0001262C_ds_t
l0001262C_ds_f:
	r4 = r4
	goto l000126A0
	// succ:  l000126A0
l0001262C_ds_t:
	r4 = r4
	goto l000126AC
	// succ:  l000126AC
l000126A0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000126A0_ds_t
	// succ:  l000126A0_ds_f l000126A0_ds_t
l000126A0_ds_f:
	r4 = r4 >> 1
	C = cond(r4)
	goto l000126AC
	// succ:  l000126AC
l000126A0_ds_t:
	r4 = r4 >> 1
	C = cond(r4)
	goto l000126A0
	// succ:  l000126A0
l000126AC:
	Mem0[r5 + 5820:word32] = r22
	v46 = SLICE(r4, word16, 0)
	Mem0[r5 + 5816:word16] = v46
	v47 = SLICE(r4, int16, 0)
	r4 = (int32) v47
	// succ:  l000126B8
l000126B8:
	r21 = r21 + 0xFFFFFFFF
	r18 = cond(r11 -u r21)
	branch Test(LT,r18) l000128CC
	// succ:  l000126C4 l000128CC
l000126C4:
	v54 = Mem0[r21 + r20:byte]
	r8 = (word32) v54
	goto l000126C8
	// succ:  l000126C8
l000126C4_ds_f:
	r3 = r3
	goto l000126EC
	// succ:  l000126EC
l000126C4_ds_t:
	r3 = r3
	goto l000126F8
	// succ:  l000126F8
l000126C8:
	r8 = r8 + r8
	r3 = r8 + r8
	v55 = Mem0[r3 + r7:word16]
	r19 = (word32) v55
	r9 = r7 + r3
	v56 = Mem0[r9 + 2:word16]
	r9 = (word32) v56
	r18 = r22 & 0x0000001F
	r3 = r19
	branch Test(EQ,r18) l000126C4_ds_t
	goto l000126C4_ds_f
	// succ:  l000126C4_ds_f l000126C4_ds_t
l000126EC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000126EC_ds_t
	// succ:  l000126EC_ds_f l000126EC_ds_t
l000126EC_ds_f:
	r3 = r3 + r3
	goto l000126F8
	// succ:  l000126F8
l000126EC_ds_t:
	r3 = r3 + r3
	goto l000126EC
	// succ:  l000126EC
l000126F8:
	r4 = r4 | r3
	r3 = 0x00000010
	v57 = SLICE(r4, int16, 0)
	r4 = (int32) v57
	r23 = r3 - r9
	r3 = r4 & 0xFFFFFFFF
	r18 = cond(r23 - r22)
	branch Test(GE,r18) l000128BC
	// succ:  l00012718 l000128BC
l00012718:
	r22 = Mem0[r5 + 20:word32]
	r23 = Mem0[r5 + 8:word32]
	v58 = SLICE(r3, word16, 0)
	Mem0[r5 + 5816:word16] = v58
	r3 = r22 + 0x00000001
	Mem0[r5 + 20:word32] = r3
	v59 = SLICE(r4, byte, 0)
	Mem0[r22 + r23:byte] = v59
	r3 = Mem0[r5 + 20:word32]
	v60 = Mem0[r5 + 5816:word16]
	r23 = (word32) v60
	r4 = Mem0[r5 + 8:word32]
	r22 = r3 + 0x00000001
	Mem0[r5 + 20:word32] = r22
	r22 = r23
	r22 = r23 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	r22 = r22 >>u 1
	C = cond(r22)
	v61 = SLICE(r22, byte, 0)
	Mem0[r3 + r4:byte] = v61
	r4 = Mem0[r5 + 5820:word32]
	r23 = 0x00000010
	r9 = r9 + 0xFFFFFFF0
	r22 = r23 - r4
	r18 = r22 & 0x0000001F
	r3 = r19
	branch Test(EQ,r18) l00012718_ds_t
	// succ:  l00012718_ds_f l00012718_ds_t
l00012718_ds_f:
	r3 = r3
	goto l0001278C
	// succ:  l0001278C
l00012718_ds_t:
	r3 = r3
	goto l00012798
	// succ:  l00012798
l0001278C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0001278C_ds_t
	// succ:  l0001278C_ds_f l0001278C_ds_t
l0001278C_ds_f:
	r3 = r3 >> 1
	C = cond(r3)
	goto l00012798
	// succ:  l00012798
l0001278C_ds_t:
	r3 = r3 >> 1
	C = cond(r3)
	goto l0001278C
	// succ:  l0001278C
l00012798:
	r9 = r9 + r4
	r3 = r3 & 0xFFFFFFFF
	v62 = SLICE(r3, word16, 0)
	Mem0[r5 + 5816:word16] = v62
	Mem0[r5 + 5820:word32] = r9
	goto l000127AC
	// succ:  l000127AC
l00012798_ds_f:
	v63 = SLICE(r3, int16, 0)
	r4 = (int32) v63
	goto l000127C4
	// succ:  l000127C4
l00012798_ds_t:
	v63 = SLICE(r3, int16, 0)
	r4 = (int32) v63
	goto l00012840
	// succ:  l00012840
l000127AC:
	r8 = r8 + r8
	r4 = r8 + 0xFFFFB430
	r19 = Mem0[r4:word32]
	branch Test(NE,r19) l00012798_ds_t
	goto l00012798_ds_f
	// succ:  l00012798_ds_f l00012798_ds_t
l000127C4:
	r22 = Mem0[r5 + 5792:word32]
	r18 = cond(r10 -u r22)
	branch Test(LT,r18) l000127C4_ds_t
	// succ:  l000127C4_ds_f l000127C4_ds_t
l000127C4_ds_f:
	r8 = r10
	goto l000127D4
	// succ:  l000127D4
l000127C4_ds_t:
	r8 = r10
	goto l000124AC
	// succ:  l000124AC
l000127D4:
	v20 = Mem0[r6 + 1024:word16]
	r7 = (word32) v20
	v21 = Mem0[r6 + 1026:word16]
	r3 = (word32) v21
	r18 = r9 & 0x0000001F
	r6 = r7
	branch Test(EQ,r18) l000127D4_ds_t
	// succ:  l000127D4_ds_f l000127D4_ds_t
l000127D4_ds_f:
	r6 = r6
	goto l000127EC
	// succ:  l000127EC
l000127D4_ds_t:
	r6 = r6
	goto l000127F8
	// succ:  l000127F8
l000127EC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000127EC_ds_t
	// succ:  l000127EC_ds_f l000127EC_ds_t
l000127EC_ds_f:
	r6 = r6 + r6
	goto l000127F8
	// succ:  l000127F8
l000127EC_ds_t:
	r6 = r6 + r6
	goto l000127EC
	// succ:  l000127EC
l000127F8:
	r4 = r4 | r6
	r6 = 0x00000010
	v23 = SLICE(r4, int16, 0)
	r4 = (int32) v23
	r8 = r6 - r3
	r6 = r4 & 0xFFFFFFFF
	r18 = cond(r8 - r9)
	branch Test(LT,r18) l000127F8_ds_t
	// succ:  l000127F8_ds_f l000127F8_ds_t
l000127F8_ds_f:
	r19 = Mem0[r1 + 4:word32]
	goto l0001281C
	// succ:  l0001281C
l000127F8_ds_t:
	r19 = Mem0[r1 + 4:word32]
	goto l0001298C
	// succ:  l0001298C
l0001281C:
	r21 = Mem0[r1 + 12:word32]
	r22 = Mem0[r1 + 16:word32]
	r23 = Mem0[r1 + 20:word32]
	r24 = Mem0[r1 + 24:word32]
	r9 = r3 + r9
	v24 = SLICE(r6, word16, 0)
	Mem0[r5 + 5816:word16] = v24
	Mem0[r5 + 5820:word32] = r9
	r1 = r1 + 0x0000001C
	return
	// succ:  fn00012364_exit
l00012840:
	r8 = r8 + 0xFFFFAAEC
	r8 = Mem0[r8:word32]
	r22 = 0x00000010
	r8 = r21 - r8
	r8 = r8 & 0xFFFFFFFF
	r18 = r9 & 0x0000001F
	r3 = r8
	branch Test(EQ,r18) l00012840_ds_t
	// succ:  l00012840_ds_f l00012840_ds_t
l00012840_ds_f:
	r3 = r3
	goto l0001286C
	// succ:  l0001286C
l00012840_ds_t:
	r3 = r3
	goto l00012878
	// succ:  l00012878
l0001286C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0001286C_ds_t
	// succ:  l0001286C_ds_f l0001286C_ds_t
l0001286C_ds_f:
	r3 = r3 + r3
	goto l00012878
	// succ:  l00012878
l0001286C_ds_t:
	r3 = r3 + r3
	goto l0001286C
	// succ:  l0001286C
l00012878:
	r4 = r4 | r3
	v65 = SLICE(r4, int16, 0)
	r4 = (int32) v65
	r21 = r22 - r19
	r3 = r4 & 0xFFFFFFFF
	r18 = cond(r21 - r9)
	branch Test(LT,r18) l00012878_ds_t
	// succ:  l00012878_ds_f l00012878_ds_t
l00012878_ds_f:
	r23 = 0x00000010
	goto l00012898
	// succ:  l00012898
l00012878_ds_t:
	r23 = 0x00000010
	goto l000128FC
	// succ:  l000128FC
l00012898:
	r22 = Mem0[r5 + 5792:word32]
	r9 = r9 + r19
	// succ:  l000128A0
l000128A0:
	v66 = SLICE(r3, word16, 0)
	Mem0[r5 + 5816:word16] = v66
	Mem0[r5 + 5820:word32] = r9
	goto l000124A0
	// succ:  l000124A0
l000128AC:
	r22 = r22 + r9
	v64 = SLICE(r4, word16, 0)
	Mem0[r5 + 5816:word16] = v64
	Mem0[r5 + 5820:word32] = r22
	goto l000125B8
	// succ:  l000125B8
l000128BC:
	r9 = r9 + r22
	v67 = SLICE(r3, word16, 0)
	Mem0[r5 + 5816:word16] = v67
	Mem0[r5 + 5820:word32] = r9
	goto l000127AC
	// succ:  l000127AC
l000128CC:
	r3 = r21
	r3 = r21 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 + 0xFFFFACD8
	v74 = Mem0[r3 + 256:byte]
	r8 = (word32) v74
	goto l000126C8
	// succ:  l000126C8
l000128FC:
	r9 = Mem0[r5 + 20:word32]
	r21 = Mem0[r5 + 8:word32]
	v68 = SLICE(r3, word16, 0)
	Mem0[r5 + 5816:word16] = v68
	r3 = r9 + 0x00000001
	Mem0[r5 + 20:word32] = r3
	v69 = SLICE(r4, byte, 0)
	Mem0[r9 + r21:byte] = v69
	r3 = Mem0[r5 + 20:word32]
	v70 = Mem0[r5 + 5816:word16]
	r21 = (word32) v70
	r4 = Mem0[r5 + 8:word32]
	r9 = r3 + 0x00000001
	Mem0[r5 + 20:word32] = r9
	r9 = r21
	r9 = r21 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	v71 = SLICE(r9, byte, 0)
	Mem0[r3 + r4:byte] = v71
	r9 = Mem0[r5 + 5820:word32]
	r19 = r19 + 0xFFFFFFF0
	r3 = r23 - r9
	r18 = r3 & 0x0000001F
	r4 = r8
	branch Test(EQ,r18) l000128FC_ds_t
	// succ:  l000128FC_ds_f l000128FC_ds_t
l000128FC_ds_f:
	r4 = r4
	goto l0001296C
	// succ:  l0001296C
l000128FC_ds_t:
	r4 = r4
	goto l00012978
	// succ:  l00012978
l0001296C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l0001296C_ds_t
	// succ:  l0001296C_ds_f l0001296C_ds_t
l0001296C_ds_f:
	r4 = r4 >> 1
	C = cond(r4)
	goto l00012978
	// succ:  l00012978
l0001296C_ds_t:
	r4 = r4 >> 1
	C = cond(r4)
	goto l0001296C
	// succ:  l0001296C
l00012978:
	r22 = Mem0[r5 + 5792:word32]
	goto l00012488
	// succ:  l00012488
l00012980:
	v53 = SLICE(r19, word16, 0)
	Mem0[r5 + 5816:word16] = v53
	Mem0[r5 + 5820:word32] = r22
	goto l000126B8
	// succ:  l000126B8
l0001298C:
	r8 = Mem0[r5 + 20:word32]
	r9 = Mem0[r5 + 8:word32]
	v48 = SLICE(r6, word16, 0)
	Mem0[r5 + 5816:word16] = v48
	r6 = r8 + 0x00000001
	Mem0[r5 + 20:word32] = r6
	v49 = SLICE(r4, byte, 0)
	Mem0[r8 + r9:byte] = v49
	r4 = Mem0[r5 + 20:word32]
	v50 = Mem0[r5 + 5816:word16]
	r9 = (word32) v50
	r6 = Mem0[r5 + 8:word32]
	r8 = r4 + 0x00000001
	Mem0[r5 + 20:word32] = r8
	r8 = r9
	r8 = r9 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	v51 = SLICE(r8, byte, 0)
	Mem0[r4 + r6:byte] = v51
	r4 = Mem0[r5 + 5820:word32]
	r19 = Mem0[r1 + 4:word32]
	r21 = Mem0[r1 + 12:word32]
	r22 = Mem0[r1 + 16:word32]
	r23 = Mem0[r1 + 20:word32]
	r24 = Mem0[r1 + 24:word32]
	r8 = 0x00000010
	r3 = r3 + 0xFFFFFFF0
	r3 = r3 + r4
	r6 = r8 - r4
	r18 = r6 & 0x0000001F
	r4 = r7
	branch Test(EQ,r18) l0001298C_ds_t
	// succ:  l0001298C_ds_f l0001298C_ds_t
l0001298C_ds_f:
	r4 = r4
	goto l00012A18
	// succ:  l00012A18
l0001298C_ds_t:
	r4 = r4
	goto l00012A24
	// succ:  l00012A24
l00012A18:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00012A18_ds_t
	// succ:  l00012A18_ds_f l00012A18_ds_t
l00012A18_ds_f:
	r4 = r4 >> 1
	C = cond(r4)
	goto l00012A24
	// succ:  l00012A24
l00012A18_ds_t:
	r4 = r4 >> 1
	C = cond(r4)
	goto l00012A18
	// succ:  l00012A18
l00012A24:
	Mem0[r5 + 5820:word32] = r3
	v52 = SLICE(r4, word16, 0)
	Mem0[r5 + 5816:word16] = v52
	r1 = r1 + 0x0000001C
	return
	// succ:  fn00012364_exit
fn00012364_exit:


// fn00012A34
// Return size: 0
define fn00012A34
fn00012A34_entry:
	r1 = fp
	// succ:  l00012A34
l00012A34:
	r1 = r1 + 0xFFFFFF80
	Mem0[r1 + 76:word32] = r19
	Mem0[r1:word32] = r15
	Mem0[r1 + 80:word32] = r20
	Mem0[r1 + 84:word32] = r21
	Mem0[r1 + 88:word32] = r22
	Mem0[r1 + 92:word32] = r23
	Mem0[r1 + 96:word32] = r24
	Mem0[r1 + 100:word32] = r25
	Mem0[r1 + 104:word32] = r26
	Mem0[r1 + 108:word32] = r27
	Mem0[r1 + 112:word32] = r28
	Mem0[r1 + 116:word32] = r29
	Mem0[r1 + 120:word32] = r30
	Mem0[r1 + 124:word32] = r31
	r3 = Mem0[r6 + 8:word32]
	r21 = Mem0[r6:word32]
	Mem0[r1 + 136:word32] = r6
	r24 = Mem0[r3 + 12:word32]
	r7 = Mem0[r3:word32]
	r3 = 0x0000023D
	Mem0[r5 + 5204:word32] = r3
	Mem0[r5 + 5200:word32] = r0
	branch Test(LE,r24) l00012A34_ds_t
	// succ:  l00012A34_ds_f l00012A34_ds_t
l00012A34_ds_f:
	r19 = r5
	goto l00012A98
	// succ:  l00012A98
l00012A34_ds_t:
	r19 = r5
	goto l00013654
	// succ:  l00013654
l00012A98:
	r20 = r24 + 0x00001458
	r6 = r21
	r3 = r5 + 0x00001458
	r9 = r5 + r20
	r5 = 0xFFFFEBA8
	r4 = 0x00000000
	r22 = 0xFFFFFFFF
	r10 = r5 - r19
	goto l00012AB8
	// succ:  l00012AB8
l00012A98_ds_f:
	r8 = r10 + r3
	goto l00012AC4
	// succ:  l00012AC4
l00012A98_ds_t:
	r8 = r10 + r3
	goto l00012FB0
	// succ:  l00012FB0
l00012AB8:
	v25 = Mem0[r6:word16]
	r5 = (word32) v25
	branch Test(EQ,r5) l00012A98_ds_t
	goto l00012A98_ds_f
	// succ:  l00012A98_ds_f l00012A98_ds_t
l00012AC4:
	r4 = r4 + 0x00000001
	r5 = r4 + 0x000002D7
	r5 = r5 + r5
	Mem0[r19 + 5200:word32] = r4
	r5 = r5 + r5
	Mem0[r5 + r19:word32] = r8
	v27 = SLICE(r0, byte, 0)
	Mem0[r3:byte] = v27
	r3 = r3 + 0x00000001
	r5 = r9 ^ r3
	r22 = r8
	branch Test(NE,r5) l00012AC4_ds_t
	// succ:  l00012AC4_ds_f l00012AC4_ds_t
l00012AC4_ds_f:
	r6 = r6 + 0x00000004
	goto l00012AF4
	// succ:  l00012AF4
l00012AC4_ds_t:
	r6 = r6 + 0x00000004
	goto l00012AB8
	// succ:  l00012AB8
l00012AF4:
	branch Test(EQ,r7) l00012AF4_ds_t
	// succ:  l00012AF4_ds_f l00012AF4_ds_t
l00012AF4_ds_f:
	r5 = r4 + 0x000002D8
	goto l00012AFC
	// succ:  l00012AFC
l00012AF4_ds_t:
	r5 = r4 + 0x000002D8
	goto l00012FCC
	// succ:  l00012FCC
l00012AFC:
	r6 = r4 + 0x000002D8
	r6 = r6 + r6
	r6 = r6 + r6
	r10 = 0x00000001
	r6 = r19 + r6
	r9 = 0x00000000
	r11 = r10
	goto l00012B74
	// succ:  l00012B74
l00012B1C:
	r18 = cond(r10 - r22)
	branch Test(LT,r18) l00012B38
	// succ:  l00012B24 l00012B38
l00012B24:
	r22 = r22 + 0x00000001
	r3 = r22 + r22
	r5 = r22
	r3 = r3 + r3
	r8 = r21 + r3
	// succ:  l00012B38
l00012B38:
	r4 = r4 + 0x00000001
	Mem0[r19 + 5200:word32] = r4
	Mem0[r6:word32] = r5
	v138 = SLICE(r11, word16, 0)
	Mem0[r8:word16] = v138
	r5 = r19 + r5
	v139 = SLICE(r0, byte, 0)
	Mem0[r5 + 5208:byte] = v139
	r3 = r7 + r3
	v140 = Mem0[r3 + 2:word16]
	r8 = (word32) v140
	r5 = Mem0[r19 + 5800:word32]
	r3 = Mem0[r19 + 5804:word32]
	r6 = r6 + 0x00000004
	r5 = r5 + 0xFFFFFFFF
	r3 = r3 - r8
	Mem0[r19 + 5800:word32] = r5
	Mem0[r19 + 5804:word32] = r3
	// succ:  l00012B74
l00012B74:
	r5 = r9
	r8 = r21
	r18 = cond(r10 - r4)
	branch Test(GE,r18) l00012B74_ds_t
	// succ:  l00012B74_ds_f l00012B74_ds_t
l00012B74_ds_f:
	r3 = r9
	goto l00012B88
	// succ:  l00012B88
l00012B74_ds_t:
	r3 = r9
	goto l00012B1C
	// succ:  l00012B1C
l00012B88:
	r26 = r4 >> 1
	C = cond(r26)
	goto l00012B8C
	// succ:  l00012B8C
l00012B88_ds_f:
	r8 = r11
	goto l00012BB8
	// succ:  l00012BB8
l00012B88_ds_t:
	r8 = r11
	goto l0001356C
	// succ:  l0001356C
l00012B8C:
	r10 = r26 + 0x000002D7
	r3 = Mem0[r1 + 136:word32]
	r10 = r10 + r10
	r10 = r10 + r10
	Mem0[r3 + 4:word32] = r22
	r10 = r19 + r10
	r11 = r26 + r26
	// succ:  l00012BA8
l00012BA8:
	r12 = Mem0[r10:word32]
	r18 = cond(r4 - r11)
	branch Test(LT,r18) l00012B88_ds_t
	goto l00012B88_ds_f
	// succ:  l00012B88_ds_f l00012B88_ds_t
l00012BB8:
	r3 = r12 + r12
	r3 = r3 + r3
	v32 = Mem0[r3 + r21:word16]
	r9 = (word32) v32
	r5 = r26
	r23 = r19 + r12
	goto l00012BEC
	// succ:  l00012BEC
l00012BD0:
	r3 = r3 + r3
	r3 = r3 + r3
	Mem0[r3 + r19:word32] = r25
	r8 = r6 + r6
	r18 = cond(r4 - r8)
	branch Test(LT,r18) l00012BD0_ds_t
	// succ:  l00012BD0_ds_f l00012BD0_ds_t
l00012BD0_ds_f:
	r5 = r6
	goto l00012BEC
	// succ:  l00012BEC
l00012BD0_ds_t:
	r5 = r6
	goto l00012C6C
	// succ:  l00012C6C
l00012BEC:
	r3 = r8 + r8
	r3 = r3 + r3
	r3 = r19 + r3
	r25 = Mem0[r3 + 2908:word32]
	r6 = r8
	r7 = r25 + r25
	r7 = r7 + r7
	r18 = cond(r8 - r4)
	branch Test(GE,r18) l00012BEC_ds_t
	// succ:  l00012BEC_ds_f l00012BEC_ds_t
l00012BEC_ds_f:
	v33 = Mem0[r7 + r21:word16]
	r7 = (word32) v33
	goto l00012C14
	// succ:  l00012C14
l00012BEC_ds_t:
	v33 = Mem0[r7 + r21:word16]
	r7 = (word32) v33
	goto l00012C40
	// succ:  l00012C40
l00012C14:
	r27 = Mem0[r3 + 2912:word32]
	r3 = r27 + r27
	r3 = r3 + r3
	v34 = Mem0[r3 + r21:word16]
	r3 = (word32) v34
	r18 = cond(r3 -u r7)
	branch Test(LT,r18) l00012C14_ds_t
	// succ:  l00012C14_ds_f l00012C14_ds_t
l00012C14_ds_f:
	r6 = r8 + 0x00000001
	goto l00012C30
	// succ:  l00012C30
l00012C14_ds_t:
	r6 = r8 + 0x00000001
	goto l00012F38
	// succ:  l00012F38
l00012C30:
	r28 = r3 ^ r7
	branch Test(EQ,r28) l00012C30_ds_t
	// succ:  l00012C30_ds_f l00012C30_ds_t
l00012C30_ds_f:
	r29 = r19 + r27
	goto l00012C3C
	// succ:  l00012C3C
l00012C30_ds_t:
	r29 = r19 + r27
	goto l00012F84
	// succ:  l00012F84
l00012C3C:
	r6 = r8
	// succ:  l00012C40
l00012C40:
	r18 = cond(r9 -u r7)
	branch Test(LT,r18) l00012C40_ds_t
	// succ:  l00012C40_ds_f l00012C40_ds_t
l00012C40_ds_f:
	r7 = r9 ^ r7
	goto l00012C4C
	// succ:  l00012C4C
l00012C40_ds_t:
	r7 = r9 ^ r7
	goto l00012C6C
	// succ:  l00012C6C
l00012C4C:
	branch Test(NE,r7) l00012C4C_ds_t
	// succ:  l00012C4C_ds_f l00012C4C_ds_t
l00012C4C_ds_f:
	r3 = r5 + 0x000002D7
	goto l00012C54
	// succ:  l00012C54
l00012C4C_ds_t:
	r3 = r5 + 0x000002D7
	goto l00012BD0
	// succ:  l00012BD0
l00012C54:
	r3 = r19 + r25
	v135 = Mem0[r23 + 5208:byte]
	r7 = (word32) v135
	v136 = Mem0[r3 + 5208:byte]
	r3 = (word32) v136
	r18 = cond(r3 -u r7)
	branch Test(LT,r18) l00012C54_ds_t
	// succ:  l00012C54_ds_f l00012C54_ds_t
l00012C54_ds_f:
	r3 = r5 + 0x000002D7
	goto l00012C6C
	// succ:  l00012C6C
l00012C54_ds_t:
	r3 = r5 + 0x000002D7
	goto l00012BD0
	// succ:  l00012BD0
l00012C6C:
	r3 = r5 + 0x000002D7
	r3 = r3 + r3
	r3 = r3 + r3
	Mem0[r3 + r19:word32] = r12
	r26 = r26 + 0xFFFFFFFF
	r10 = r10 + 0xFFFFFFFC
	branch Test(NE,r26) l00012C6C_ds_t
	// succ:  l00012C6C_ds_f l00012C6C_ds_t
l00012C6C_ds_f:
	r11 = r11 + 0xFFFFFFFE
	goto l00012C8C
	// succ:  l00012C8C
l00012C6C_ds_t:
	r11 = r11 + 0xFFFFFFFE
	goto l00012BA8
	// succ:  l00012BA8
l00012C8C:
	r3 = r4 + 0x000002D7
	// succ:  l00012C90
l00012C90:
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r19 + r3
	Mem0[r1 + 68:word32] = r26
	r26 = r3
	r30 = Mem0[r19 + 5204:word32]
	Mem0[r1 + 64:word32] = r22
	r22 = Mem0[r26:word32]
	r28 = r30 + 0x000002D5
	r28 = r28 + r28
	r4 = r4 + 0xFFFFFFFF
	r25 = r24 + r24
	r28 = r28 + r28
	r12 = Mem0[r19 + 2912:word32]
	r27 = r4 ^ 0x00000001
	Mem0[r19 + 2912:word32] = r22
	r25 = r25 + r25
	r20 = r19 + r20
	branch Test(EQ,r27) l00012C90_ds_t
	// succ:  l00012C90_ds_f l00012C90_ds_t
l00012C90_ds_f:
	r28 = r19 + r28
	goto l00012CE0
	// succ:  l00012CE0
l00012C90_ds_t:
	r28 = r19 + r28
	goto l00012F18
	// succ:  l00012F18
l00012CE0:
	r3 = r22 + r22
	r3 = r3 + r3
	v35 = Mem0[r3 + r21:word16]
	r9 = (word32) v35
	r7 = 0x00000002
	r3 = 0x00000001
	r23 = r19 + r22
	goto l00012D1C
	// succ:  l00012D1C
l00012CFC:
	r3 = r3 + 0x000002D7
	// succ:  l00012D00
l00012D00:
	r3 = r3 + r3
	r3 = r3 + r3
	Mem0[r3 + r19:word32] = r10
	r7 = r6 + r6
	r18 = cond(r4 - r7)
	branch Test(LT,r18) l00012D00_ds_t
	// succ:  l00012D00_ds_f l00012D00_ds_t
l00012D00_ds_f:
	r3 = r6
	goto l00012D1C
	// succ:  l00012D1C
l00012D00_ds_t:
	r3 = r6
	goto l00012D9C
	// succ:  l00012D9C
l00012D1C:
	r5 = r7 + r7
	r5 = r5 + r5
	r5 = r19 + r5
	r10 = Mem0[r5 + 2908:word32]
	r6 = r7
	r8 = r10 + r10
	r8 = r8 + r8
	r18 = cond(r7 - r4)
	branch Test(GE,r18) l00012D1C_ds_t
	// succ:  l00012D1C_ds_f l00012D1C_ds_t
l00012D1C_ds_f:
	v36 = Mem0[r8 + r21:word16]
	r8 = (word32) v36
	goto l00012D44
	// succ:  l00012D44
l00012D1C_ds_t:
	v36 = Mem0[r8 + r21:word16]
	r8 = (word32) v36
	goto l00012D70
	// succ:  l00012D70
l00012D44:
	r11 = Mem0[r5 + 2912:word32]
	r5 = r11 + r11
	r5 = r5 + r5
	v37 = Mem0[r5 + r21:word16]
	r5 = (word32) v37
	r18 = cond(r5 -u r8)
	branch Test(LT,r18) l00012D44_ds_t
	// succ:  l00012D44_ds_f l00012D44_ds_t
l00012D44_ds_f:
	r6 = r7 + 0x00000001
	goto l00012D60
	// succ:  l00012D60
l00012D44_ds_t:
	r6 = r7 + 0x00000001
	goto l00012F2C
	// succ:  l00012F2C
l00012D60:
	r29 = r5 ^ r8
	branch Test(EQ,r29) l00012D60_ds_t
	// succ:  l00012D60_ds_f l00012D60_ds_t
l00012D60_ds_f:
	r31 = r19 + r11
	goto l00012D6C
	// succ:  l00012D6C
l00012D60_ds_t:
	r31 = r19 + r11
	goto l00012F44
	// succ:  l00012F44
l00012D6C:
	r6 = r7
	// succ:  l00012D70
l00012D70:
	r18 = cond(r9 -u r8)
	branch Test(LT,r18) l00012D70_ds_t
	// succ:  l00012D70_ds_f l00012D70_ds_t
l00012D70_ds_f:
	r8 = r9 ^ r8
	goto l00012D7C
	// succ:  l00012D7C
l00012D70_ds_t:
	r8 = r9 ^ r8
	goto l00012D9C
	// succ:  l00012D9C
l00012D7C:
	branch Test(NE,r8) l00012D7C_ds_t
	// succ:  l00012D7C_ds_f l00012D7C_ds_t
l00012D7C_ds_f:
	r5 = r19 + r10
	goto l00012D84
	// succ:  l00012D84
l00012D7C_ds_t:
	r5 = r19 + r10
	goto l00012CFC
	// succ:  l00012CFC
l00012D84:
	v131 = Mem0[r23 + 5208:byte]
	r7 = (word32) v131
	v132 = Mem0[r5 + 5208:byte]
	r5 = (word32) v132
	r18 = cond(r5 -u r7)
	branch Test(LT,r18) l00012D84_ds_t
	// succ:  l00012D84_ds_f l00012D84_ds_t
l00012D84_ds_f:
	r3 = r3 + 0x000002D7
	goto l00012D98
	// succ:  l00012D98
l00012D84_ds_t:
	r3 = r3 + 0x000002D7
	goto l00012D00
	// succ:  l00012D00
l00012D98:
	r3 = r3 + 0xFFFFFD29
	// succ:  l00012D9C
l00012D9C:
	r3 = r3 + 0x000002D7
	r3 = r3 + r3
	r3 = r3 + r3
	Mem0[r3 + r19:word32] = r22
	r5 = Mem0[r19 + 2912:word32]
	r3 = r12 + r12
	r3 = r3 + r3
	r6 = r5 + r5
	r6 = r6 + r6
	v42 = Mem0[r3 + r21:word16]
	r7 = (word32) v42
	v43 = Mem0[r6 + r21:word16]
	r8 = (word32) v43
	r23 = r30 + 0xFFFFFFFE
	Mem0[r28 + 4:word32] = r12
	Mem0[r19 + 5204:word32] = r23
	Mem0[r28:word32] = r5
	r7 = r7 + r8
	v44 = SLICE(r7, word16, 0)
	Mem0[r25 + r21:word16] = v44
	r12 = r19 + r12
	r5 = r19 + r5
	v45 = Mem0[r12 + 5208:byte]
	r7 = (word32) v45
	v46 = Mem0[r5 + 5208:byte]
	r5 = (word32) v46
	r3 = r21 + r3
	r18 = cond(r7 -u r5)
	branch Test(LT,r18) l00012D9C_ds_t
	// succ:  l00012D9C_ds_f l00012D9C_ds_t
l00012D9C_ds_f:
	r6 = r21 + r6
	goto l00012E00
	// succ:  l00012E00
l00012D9C_ds_t:
	r6 = r21 + r6
	goto l00012FA4
	// succ:  l00012FA4
l00012E00:
	r5 = r7 + 0x00000001
	r5 = r5 & 0x000000FF
	goto l00012E08
	// succ:  l00012E08
l00012E00_ds_f:
	r8 = r24 + 0x00000001
	goto l00012E28
	// succ:  l00012E28
l00012E00_ds_t:
	r8 = r24 + 0x00000001
	goto l00013058
	// succ:  l00013058
l00012E08:
	v47 = SLICE(r5, byte, 0)
	Mem0[r20:byte] = v47
	r5 = r24 & 0xFFFFFFFF
	v48 = SLICE(r5, word16, 0)
	Mem0[r6 + 2:word16] = v48
	v49 = SLICE(r5, word16, 0)
	Mem0[r3 + 2:word16] = v49
	Mem0[r19 + 2912:word32] = r24
	branch Test(EQ,r27) l00012E00_ds_t
	goto l00012E00_ds_f
	// succ:  l00012E00_ds_f l00012E00_ds_t
l00012E28:
	v50 = Mem0[r25 + r21:word16]
	r9 = (word32) v50
	r5 = 0x00000001
	r10 = 0x00000002
	goto l00012E58
	// succ:  l00012E58
l00012E38:
	r5 = r5 + 0x000002D7
	// succ:  l00012E3C
l00012E3C:
	r5 = r5 + r5
	r5 = r5 + r5
	Mem0[r5 + r19:word32] = r11
	r10 = r6 + r6
	r18 = cond(r4 - r10)
	branch Test(LT,r18) l00012E3C_ds_t
	// succ:  l00012E3C_ds_f l00012E3C_ds_t
l00012E3C_ds_f:
	r5 = r6
	goto l00012E58
	// succ:  l00012E58
l00012E3C_ds_t:
	r5 = r6
	goto l00012ED8
	// succ:  l00012ED8
l00012E58:
	r3 = r10 + r10
	r3 = r3 + r3
	r3 = r19 + r3
	r11 = Mem0[r3 + 2908:word32]
	r6 = r10
	r7 = r11 + r11
	r7 = r7 + r7
	r18 = cond(r10 - r4)
	branch Test(GE,r18) l00012E58_ds_t
	// succ:  l00012E58_ds_f l00012E58_ds_t
l00012E58_ds_f:
	v51 = Mem0[r7 + r21:word16]
	r7 = (word32) v51
	goto l00012E80
	// succ:  l00012E80
l00012E58_ds_t:
	v51 = Mem0[r7 + r21:word16]
	r7 = (word32) v51
	goto l00012EAC
	// succ:  l00012EAC
l00012E80:
	r12 = Mem0[r3 + 2912:word32]
	r3 = r12 + r12
	r3 = r3 + r3
	v52 = Mem0[r3 + r21:word16]
	r3 = (word32) v52
	r18 = cond(r3 -u r7)
	branch Test(LT,r18) l00012E80_ds_t
	// succ:  l00012E80_ds_f l00012E80_ds_t
l00012E80_ds_f:
	r6 = r10 + 0x00000001
	goto l00012E9C
	// succ:  l00012E9C
l00012E80_ds_t:
	r6 = r10 + 0x00000001
	goto l00012F20
	// succ:  l00012F20
l00012E9C:
	r22 = r3 ^ r7
	branch Test(EQ,r22) l00012E9C_ds_t
	// succ:  l00012E9C_ds_f l00012E9C_ds_t
l00012E9C_ds_f:
	r27 = r19 + r12
	goto l00012EA8
	// succ:  l00012EA8
l00012E9C_ds_t:
	r27 = r19 + r12
	goto l00012F64
	// succ:  l00012F64
l00012EA8:
	r6 = r10
	// succ:  l00012EAC
l00012EAC:
	r18 = cond(r9 -u r7)
	branch Test(LT,r18) l00012EAC_ds_t
	// succ:  l00012EAC_ds_f l00012EAC_ds_t
l00012EAC_ds_f:
	r7 = r9 ^ r7
	goto l00012EB8
	// succ:  l00012EB8
l00012EAC_ds_t:
	r7 = r9 ^ r7
	goto l00012ED8
	// succ:  l00012ED8
l00012EB8:
	branch Test(NE,r7) l00012EB8_ds_t
	// succ:  l00012EB8_ds_f l00012EB8_ds_t
l00012EB8_ds_f:
	r3 = r19 + r11
	goto l00012EC0
	// succ:  l00012EC0
l00012EB8_ds_t:
	r3 = r19 + r11
	goto l00012E38
	// succ:  l00012E38
l00012EC0:
	v129 = Mem0[r20:byte]
	r7 = (word32) v129
	v130 = Mem0[r3 + 5208:byte]
	r3 = (word32) v130
	r18 = cond(r3 -u r7)
	branch Test(LT,r18) l00012EC0_ds_t
	// succ:  l00012EC0_ds_f l00012EC0_ds_t
l00012EC0_ds_f:
	r5 = r5 + 0x000002D7
	goto l00012ED4
	// succ:  l00012ED4
l00012EC0_ds_t:
	r5 = r5 + 0x000002D7
	goto l00012E3C
	// succ:  l00012E3C
l00012ED4:
	r5 = r5 + 0xFFFFFD29
	// succ:  l00012ED8
l00012ED8:
	r3 = r5 + 0x000002D7
	r3 = r3 + r3
	r3 = r3 + r3
	Mem0[r3 + r19:word32] = r24
	r26 = r26 + 0xFFFFFFFC
	r22 = Mem0[r26:word32]
	r4 = r4 + 0xFFFFFFFF
	r12 = Mem0[r19 + 2912:word32]
	r27 = r4 ^ 0x00000001
	Mem0[r19 + 2912:word32] = r22
	r25 = r25 + 0x00000004
	r20 = r20 + 0x00000001
	r28 = r28 + 0xFFFFFFF8
	r30 = r23
	branch Test(NE,r27) l00012ED8_ds_t
	// succ:  l00012ED8_ds_f l00012ED8_ds_t
l00012ED8_ds_f:
	r24 = r8
	goto l00012F18
	// succ:  l00012F18
l00012ED8_ds_t:
	r24 = r8
	goto l00012CE0
	// succ:  l00012CE0
l00012F18:
	r3 = r4
	goto l00012D9C
	// succ:  l00012D9C
l00012F20:
	r7 = r3
	r11 = r12
	goto l00012EAC
	// succ:  l00012EAC
l00012F2C:
	r8 = r5
	r10 = r11
	goto l00012D70
	// succ:  l00012D70
l00012F38:
	r7 = r3
	r25 = r27
	goto l00012C40
	// succ:  l00012C40
l00012F44:
	r29 = r19 + r10
	v40 = Mem0[r31 + 5208:byte]
	r31 = (word32) v40
	v41 = Mem0[r29 + 5208:byte]
	r29 = (word32) v41
	r18 = cond(r29 -u r31)
	branch Test(GE,r18) l00013048
	// succ:  l00012F58 l00013048
l00012F58:
	r8 = r5
	r6 = r7
	goto l00012D70
	// succ:  l00012D70
l00012F64:
	r22 = r19 + r11
	v56 = Mem0[r27 + 5208:byte]
	r27 = (word32) v56
	v57 = Mem0[r22 + 5208:byte]
	r22 = (word32) v57
	r18 = cond(r22 -u r27)
	branch Test(GE,r18) l00013040
	// succ:  l00012F78 l00013040
l00012F78:
	r7 = r3
	r6 = r10
	goto l00012EAC
	// succ:  l00012EAC
l00012F84:
	r28 = r19 + r25
	v38 = Mem0[r29 + 5208:byte]
	r29 = (word32) v38
	v39 = Mem0[r28 + 5208:byte]
	r28 = (word32) v39
	r18 = cond(r28 -u r29)
	branch Test(GE,r18) l00013050
	// succ:  l00012F98 l00013050
l00012F98:
	r7 = r3
	r6 = r8
	goto l00012C40
	// succ:  l00012C40
l00012FA4:
	r5 = r5 + 0x00000001
	r5 = r5 & 0x000000FF
	goto l00012E08
	// succ:  l00012E08
l00012FB0:
	r3 = r3 + 0x00000001
	v137 = SLICE(r5, word16, 0)
	Mem0[r6 + 2:word16] = v137
	r5 = r3 ^ r9
	branch Test(NE,r5) l00012FB0_ds_t
	// succ:  l00012FB0_ds_f l00012FB0_ds_t
l00012FB0_ds_f:
	r6 = r6 + 0x00000004
	goto l00012FC4
	// succ:  l00012FC4
l00012FB0_ds_t:
	r6 = r6 + 0x00000004
	goto l00012AB8
	// succ:  l00012AB8
l00012FC4:
	branch Test(NE,r7) l00012FC4_ds_t
	// succ:  l00012FC4_ds_f l00012FC4_ds_t
l00012FC4_ds_f:
	r5 = r4 + 0x000002D8
	goto l00012FCC
	// succ:  l00012FCC
l00012FC4_ds_t:
	r5 = r4 + 0x000002D8
	goto l00012AFC
	// succ:  l00012AFC
l00012FCC:
	r5 = r5 + r5
	r8 = 0x00000001
	r5 = r5 + r5
	r9 = r8
	r5 = r19 + r5
	goto l00013028
	// succ:  l00013028
l00012FE4:
	r18 = cond(r8 - r22)
	branch Test(LT,r18) l00013000
	// succ:  l00012FEC l00013000
l00012FEC:
	r22 = r22 + 0x00000001
	r6 = r22 + r22
	r3 = r22
	r6 = r6 + r6
	r6 = r21 + r6
	// succ:  l00013000
l00013000:
	r4 = r4 + 0x00000001
	Mem0[r19 + 5200:word32] = r4
	Mem0[r5:word32] = r3
	v133 = SLICE(r9, word16, 0)
	Mem0[r6:word16] = v133
	r3 = r19 + r3
	v134 = SLICE(r0, byte, 0)
	Mem0[r3 + 5208:byte] = v134
	r3 = Mem0[r19 + 5800:word32]
	r5 = r5 + 0x00000004
	r3 = r3 + 0xFFFFFFFF
	Mem0[r19 + 5800:word32] = r3
	// succ:  l00013028
l00013028:
	r3 = r7
	r18 = cond(r8 - r4)
	branch Test(GE,r18) l00013028_ds_t
	// succ:  l00013028_ds_f l00013028_ds_t
l00013028_ds_f:
	r6 = r21
	goto l00013038
	// succ:  l00013038
l00013028_ds_t:
	r6 = r21
	goto l00012FE4
	// succ:  l00012FE4
l00013038:
	r26 = r4 >> 1
	C = cond(r26)
	goto l00012B8C
	// succ:  l00012B8C
l00013040:
	r11 = r12
	goto l00012EAC
	// succ:  l00012EAC
l00013048:
	r10 = r11
	goto l00012D70
	// succ:  l00012D70
l00013050:
	r25 = r27
	goto l00012C40
	// succ:  l00012C40
l00013058:
	r3 = Mem0[r1 + 136:word32]
	r4 = 0x00000001
	r5 = r30 + 0x000002D4
	r8 = Mem0[r3 + 8:word32]
	Mem0[r19 + 5200:word32] = r4
	r4 = Mem0[r1 + 136:word32]
	r3 = r30 + 0xFFFFFFFD
	r5 = r5 + r5
	r31 = Mem0[r4:word32]
	r5 = r5 + r5
	Mem0[r19 + 5204:word32] = r3
	Mem0[r5 + r19:word32] = r24
	r24 = Mem0[r4 + 4:word32]
	r4 = Mem0[r8:word32]
	r6 = r27
	r7 = 0x00000020
	Mem0[r1 + 60:word32] = r4
	r4 = Mem0[r8 + 4:word32]
	r5 = r19 + 0x00000B3C
	r22 = Mem0[r1 + 64:word32]
	r26 = Mem0[r1 + 68:word32]
	Mem0[r1 + 64:word32] = r4
	r29 = Mem0[r8 + 8:word32]
	r28 = Mem0[r8 + 16:word32]
	r15 = 0x000130B8
	r25 = r31 + r25
	call fn00018C64 (retsize: 0;)
	r3 = 0x0000023C
	r18 = cond(r3 - r23)
	branch Test(LT,r18) l00013058_ds_t
	// succ:  l00013058_ds_f l00013058_ds_t
l00013058_ds_f:
	v53 = SLICE(r27, word16, 0)
	Mem0[r25 + 2:word16] = v53
	goto l000130D0
	// succ:  l000130D0
l00013058_ds_t:
	v53 = SLICE(r27, word16, 0)
	Mem0[r25 + 2:word16] = v53
	goto l00013344
	// succ:  l00013344
l000130D0:
	r4 = Mem0[r1 + 60:word32]
	branch Test(EQ,r4) l000130D0_ds_t
	// succ:  l000130D0_ds_f l000130D0_ds_t
l000130D0_ds_f:
	r7 = r23 + 0x000002D7
	goto l000130DC
	// succ:  l000130DC
l000130D0_ds_t:
	r7 = r23 + 0x000002D7
	goto l00013598
	// succ:  l00013598
l000130DC:
	r7 = r7 + r7
	r7 = r7 + r7
	r30 = r19 + r7
	r23 = r19 + 0x00001450
	Mem0[r1 + 72:word32] = r21
	r27 = r26
	r21 = r28
	r28 = r19
	r19 = r30
	Mem0[r1 + 68:word32] = r22
	goto l00013104
	// succ:  l00013104
l000130DC_ds_f:
	r19 = r19 + 0x00000004
	goto l0001313C
	// succ:  l0001313C
l000130DC_ds_t:
	r19 = r19 + 0x00000004
	goto l00013144
	// succ:  l00013144
l00013104:
	r6 = Mem0[r19:word32]
	r22 = r26
	r30 = r6 + r6
	r30 = r30 + r30
	r10 = r31 + r30
	v54 = Mem0[r10 + 2:word16]
	r3 = (word32) v54
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r31 + r3
	v55 = Mem0[r3 + 2:word16]
	r5 = (word32) v55
	r5 = r5 + 0x00000001
	r18 = cond(r21 - r5)
	branch Test(GE,r18) l000130DC_ds_t
	goto l000130DC_ds_f
	// succ:  l000130DC_ds_f l000130DC_ds_t
l0001313C:
	r5 = r21
	r27 = r27 + 0x00000001
	// succ:  l00013144
l00013144:
	r9 = r5 + r5
	v58 = SLICE(r5, word16, 0)
	Mem0[r10 + 2:word16] = v58
	r18 = cond(r24 - r6)
	branch Test(LT,r18) l00013144_ds_t
	// succ:  l00013144_ds_f l00013144_ds_t
l00013144_ds_f:
	r9 = r28 + r9
	goto l00013158
	// succ:  l00013158
l00013144_ds_t:
	r9 = r28 + r9
	goto l000131C0
	// succ:  l000131C0
l00013158:
	v59 = Mem0[r9 + 2876:word16]
	r10 = (word32) v59
	r3 = r6 - r29
	r3 = r3 + r3
	r10 = r10 + 0x00000001
	v60 = SLICE(r10, word16, 0)
	Mem0[r9 + 2876:word16] = v60
	r18 = cond(r6 - r29)
	branch Test(LT,r18) l00013158_ds_t
	// succ:  l00013158_ds_f l00013158_ds_t
l00013158_ds_f:
	r3 = r3 + r3
	goto l00013178
	// succ:  l00013178
l00013158_ds_t:
	r3 = r3 + r3
	goto l00013184
	// succ:  l00013184
l00013178:
	r4 = Mem0[r1 + 64:word32]
	r22 = Mem0[r3 + r4:word32]
	r5 = r5 + r22
	// succ:  l00013184
l00013184:
	v63 = Mem0[r30 + r31:word16]
	r25 = (word32) v63
	r15 = 0x00013188
	r6 = r25
	call fn00017F30 (retsize: 0;)
	r4 = Mem0[r1 + 60:word32]
	r9 = Mem0[r28 + 5800:word32]
	r6 = r25
	r30 = r4 + r30
	v64 = Mem0[r30 + 2:word16]
	r5 = (word32) v64
	r3 = r9 + r3
	Mem0[r28 + 5800:word32] = r3
	r15 = 0x000131AC
	r5 = r5 + r22
	call fn00017F30 (retsize: 0;)
	r4 = Mem0[r28 + 5804:word32]
	r3 = r4 + r3
	Mem0[r28 + 5804:word32] = r3
	// succ:  l000131C0
l000131C0:
	r3 = r19 ^ r23
	branch Test(NE,r3) l000131C0_ds_t
	// succ:  l000131C0_ds_f l000131C0_ds_t
l000131C0_ds_f:
	r22 = Mem0[r1 + 68:word32]
	goto l000131CC
	// succ:  l000131CC
l000131C0_ds_t:
	r22 = Mem0[r1 + 68:word32]
	goto l00013104
	// succ:  l00013104
l000131CC:
	r19 = r28
	r28 = r21
	branch Test(EQ,r27) l000131CC_ds_t
	// succ:  l000131CC_ds_f l000131CC_ds_t
l000131CC_ds_f:
	r21 = Mem0[r1 + 72:word32]
	goto l000131DC
	// succ:  l000131DC
l000131CC_ds_t:
	r21 = Mem0[r1 + 72:word32]
	goto l00013344
	// succ:  l00013344
l000131DC:
	r25 = r28 + 0xFFFFFFFF
	r8 = r28 + r28
	r9 = r28 + 0xFFFFFFFE
	r10 = r28 + 0xFFFFFFFD
	r11 = r28 + 0xFFFFFFFC
	r12 = r28 + 0xFFFFFFFB
	r20 = r28 + 0xFFFFFFFA
	r23 = r28 + 0xFFFFFFF9
	r26 = r28 + 0xFFFFFFF8
	r29 = r28 + 0xFFFFFFF7
	r30 = r28 + 0xFFFFFFF6
	goto l0001332C
	// succ:  l0001332C
l0001320C:
	v110 = Mem0[r5 + 2872:word16]
	r3 = (word32) v110
	r4 = r9
	branch Test(NE,r3) l0001320C_ds_t
	// succ:  l0001320C_ds_f l0001320C_ds_t
l0001320C_ds_f:
	r6 = r25
	goto l0001321C
	// succ:  l0001321C
l0001320C_ds_t:
	r6 = r25
	goto l000132F4
	// succ:  l000132F4
l0001321C:
	v111 = Mem0[r5 + 2870:word16]
	r3 = (word32) v111
	r4 = r10
	branch Test(NE,r3) l0001321C_ds_t
	// succ:  l0001321C_ds_f l0001321C_ds_t
l0001321C_ds_f:
	r6 = r9
	goto l0001322C
	// succ:  l0001322C
l0001321C_ds_t:
	r6 = r9
	goto l000132F4
	// succ:  l000132F4
l0001322C:
	v112 = Mem0[r5 + 2868:word16]
	r3 = (word32) v112
	r4 = r11
	branch Test(NE,r3) l0001322C_ds_t
	// succ:  l0001322C_ds_f l0001322C_ds_t
l0001322C_ds_f:
	r6 = r10
	goto l0001323C
	// succ:  l0001323C
l0001322C_ds_t:
	r6 = r10
	goto l000132F4
	// succ:  l000132F4
l0001323C:
	v113 = Mem0[r5 + 2866:word16]
	r3 = (word32) v113
	r4 = r12
	branch Test(NE,r3) l0001323C_ds_t
	// succ:  l0001323C_ds_f l0001323C_ds_t
l0001323C_ds_f:
	r6 = r11
	goto l0001324C
	// succ:  l0001324C
l0001323C_ds_t:
	r6 = r11
	goto l000132F4
	// succ:  l000132F4
l0001324C:
	v114 = Mem0[r5 + 2864:word16]
	r3 = (word32) v114
	r4 = r20
	branch Test(NE,r3) l0001324C_ds_t
	// succ:  l0001324C_ds_f l0001324C_ds_t
l0001324C_ds_f:
	r6 = r12
	goto l0001325C
	// succ:  l0001325C
l0001324C_ds_t:
	r6 = r12
	goto l000132F4
	// succ:  l000132F4
l0001325C:
	v115 = Mem0[r5 + 2862:word16]
	r3 = (word32) v115
	r4 = r23
	branch Test(NE,r3) l0001325C_ds_t
	// succ:  l0001325C_ds_f l0001325C_ds_t
l0001325C_ds_f:
	r6 = r20
	goto l0001326C
	// succ:  l0001326C
l0001325C_ds_t:
	r6 = r20
	goto l000132F4
	// succ:  l000132F4
l0001326C:
	v116 = Mem0[r5 + 2860:word16]
	r3 = (word32) v116
	r4 = r26
	branch Test(NE,r3) l0001326C_ds_t
	// succ:  l0001326C_ds_f l0001326C_ds_t
l0001326C_ds_f:
	r6 = r23
	goto l0001327C
	// succ:  l0001327C
l0001326C_ds_t:
	r6 = r23
	goto l000132F4
	// succ:  l000132F4
l0001327C:
	v117 = Mem0[r5 + 2858:word16]
	r3 = (word32) v117
	r4 = r29
	branch Test(NE,r3) l0001327C_ds_t
	// succ:  l0001327C_ds_f l0001327C_ds_t
l0001327C_ds_f:
	r6 = r26
	goto l0001328C
	// succ:  l0001328C
l0001327C_ds_t:
	r6 = r26
	goto l000132F4
	// succ:  l000132F4
l0001328C:
	v118 = Mem0[r5 + 2856:word16]
	r3 = (word32) v118
	r4 = r30
	branch Test(NE,r3) l0001328C_ds_t
	// succ:  l0001328C_ds_f l0001328C_ds_t
l0001328C_ds_f:
	r6 = r29
	goto l0001329C
	// succ:  l0001329C
l0001328C_ds_t:
	r6 = r29
	goto l000132F4
	// succ:  l000132F4
l0001329C:
	v119 = Mem0[r5 + 2854:word16]
	r3 = (word32) v119
	r4 = r28 + 0xFFFFFFF5
	branch Test(NE,r3) l0001329C_ds_t
	// succ:  l0001329C_ds_f l0001329C_ds_t
l0001329C_ds_f:
	r6 = r4
	goto l000132AC
	// succ:  l000132AC
l0001329C_ds_t:
	r6 = r4
	goto l0001366C
	// succ:  l0001366C
l000132AC:
	v120 = Mem0[r5 + 2852:word16]
	r3 = (word32) v120
	r4 = r28 + 0xFFFFFFF4
	branch Test(NE,r3) l000132AC_ds_t
	// succ:  l000132AC_ds_f l000132AC_ds_t
l000132AC_ds_f:
	r7 = r4
	goto l000132BC
	// succ:  l000132BC
l000132AC_ds_t:
	r7 = r4
	goto l000132F4
	// succ:  l000132F4
l000132BC:
	v121 = Mem0[r5 + 2850:word16]
	r3 = (word32) v121
	r4 = r28 + 0xFFFFFFF3
	branch Test(NE,r3) l000132BC_ds_t
	// succ:  l000132BC_ds_f l000132BC_ds_t
l000132BC_ds_f:
	r6 = r4
	goto l000132CC
	// succ:  l000132CC
l000132BC_ds_t:
	r6 = r4
	goto l00013664
	// succ:  l00013664
l000132CC:
	v122 = Mem0[r5 + 2848:word16]
	r3 = (word32) v122
	r4 = r28 + 0xFFFFFFF2
	branch Test(NE,r3) l000132CC_ds_t
	// succ:  l000132CC_ds_f l000132CC_ds_t
l000132CC_ds_f:
	r7 = r4
	goto l000132DC
	// succ:  l000132DC
l000132CC_ds_t:
	r7 = r4
	goto l000132F4
	// succ:  l000132F4
l000132DC:
	v123 = Mem0[r5 + 2846:word16]
	r3 = (word32) v123
	r4 = r28 + 0xFFFFFFF1
	branch Test(NE,r3) l000132DC_ds_t
	// succ:  l000132DC_ds_f l000132DC_ds_t
l000132DC_ds_f:
	r6 = r4
	goto l000132EC
	// succ:  l000132EC
l000132DC_ds_t:
	r6 = r4
	goto l00013664
	// succ:  l00013664
l000132EC:
	v124 = Mem0[r5 + 2844:word16]
	r3 = (word32) v124
	r4 = r28 + 0xFFFFFFF0
	// succ:  l000132F4
l000132F4:
	r4 = r4 + 0x0000059E
	r3 = r3 + 0xFFFFFFFF
	r4 = r4 + r4
	r6 = r6 + r6
	v105 = SLICE(r3, word16, 0)
	Mem0[r4 + r19:word16] = v105
	r6 = r19 + r6
	v106 = Mem0[r6 + 2876:word16]
	r3 = (word32) v106
	r27 = r27 + 0xFFFFFFFE
	r3 = r3 + 0x00000002
	v107 = SLICE(r3, word16, 0)
	Mem0[r6 + 2876:word16] = v107
	v108 = Mem0[r5 + 2876:word16]
	r3 = (word32) v108
	r3 = r3 + 0xFFFFFFFF
	branch Test(LE,r27) l000132F4_ds_t
	// succ:  l000132F4_ds_f l000132F4_ds_t
l000132F4_ds_f:
	v109 = SLICE(r3, word16, 0)
	Mem0[r5 + 2876:word16] = v109
	goto l0001332C
	// succ:  l0001332C
l000132F4_ds_t:
	v109 = SLICE(r3, word16, 0)
	Mem0[r5 + 2876:word16] = v109
	goto l000134D4
	// succ:  l000134D4
l0001332C:
	r5 = r19 + r8
	v104 = Mem0[r5 + 2874:word16]
	r3 = (word32) v104
	branch Test(EQ,r3) l0001332C_ds_t
	// succ:  l0001332C_ds_f l0001332C_ds_t
l0001332C_ds_f:
	r4 = r25
	goto l0001333C
	// succ:  l0001333C
l0001332C_ds_t:
	r4 = r25
	goto l0001320C
	// succ:  l0001320C
l0001333C:
	r6 = r28
	goto l000132F4
	// succ:  l000132F4
l00013344:
	v68 = Mem0[r19 + 2876:word16]
	r25 = (word32) v68
	goto l00013348
	// succ:  l00013348
l00013344_ds_f:
	v97 = SLICE(r19, word16, 0)
	Mem0[r1 + 58:word16] = v97
	goto l00013434
	// succ:  l00013434
l00013344_ds_t:
	v97 = SLICE(r19, word16, 0)
	Mem0[r1 + 58:word16] = v97
	goto l00013498
	// succ:  l00013498
l00013348:
	v69 = Mem0[r19 + 2878:word16]
	r24 = (word32) v69
	v70 = Mem0[r19 + 2880:word16]
	r23 = (word32) v70
	r25 = r25 + r25
	r24 = r24 + r25
	r24 = r24 + r24
	v71 = Mem0[r19 + 2882:word16]
	r20 = (word32) v71
	r23 = r23 + r24
	r23 = r23 + r23
	v72 = Mem0[r19 + 2884:word16]
	r12 = (word32) v72
	r20 = r20 + r23
	r20 = r20 + r20
	v73 = Mem0[r19 + 2886:word16]
	r11 = (word32) v73
	r12 = r12 + r20
	r12 = r12 + r12
	v74 = Mem0[r19 + 2888:word16]
	r10 = (word32) v74
	r11 = r11 + r12
	r11 = r11 + r11
	v75 = Mem0[r19 + 2890:word16]
	r9 = (word32) v75
	r10 = r10 + r11
	r10 = r10 + r10
	v76 = Mem0[r19 + 2892:word16]
	r8 = (word32) v76
	r9 = r9 + r10
	r9 = r9 + r9
	v77 = Mem0[r19 + 2894:word16]
	r7 = (word32) v77
	r8 = r8 + r9
	r8 = r8 + r8
	v78 = Mem0[r19 + 2896:word16]
	r6 = (word32) v78
	r7 = r7 + r8
	r7 = r7 + r7
	v79 = Mem0[r19 + 2898:word16]
	r5 = (word32) v79
	r6 = r6 + r7
	r6 = r6 + r6
	v80 = Mem0[r19 + 2900:word16]
	r4 = (word32) v80
	r5 = r5 + r6
	r5 = r5 + r5
	v81 = Mem0[r19 + 2902:word16]
	r3 = (word32) v81
	r4 = r4 + r5
	r4 = r4 + r4
	v82 = Mem0[r19 + 2904:word16]
	r19 = (word32) v82
	r3 = r3 + r4
	r3 = r3 + r3
	r19 = r19 + r3
	r19 = r19 + r19
	v83 = SLICE(r25, word16, 0)
	Mem0[r1 + 30:word16] = v83
	v84 = SLICE(r24, word16, 0)
	Mem0[r1 + 32:word16] = v84
	v85 = SLICE(r23, word16, 0)
	Mem0[r1 + 34:word16] = v85
	v86 = SLICE(r20, word16, 0)
	Mem0[r1 + 36:word16] = v86
	v87 = SLICE(r12, word16, 0)
	Mem0[r1 + 38:word16] = v87
	v88 = SLICE(r11, word16, 0)
	Mem0[r1 + 40:word16] = v88
	v89 = SLICE(r10, word16, 0)
	Mem0[r1 + 42:word16] = v89
	v90 = SLICE(r9, word16, 0)
	Mem0[r1 + 44:word16] = v90
	v91 = SLICE(r8, word16, 0)
	Mem0[r1 + 46:word16] = v91
	v92 = SLICE(r7, word16, 0)
	Mem0[r1 + 48:word16] = v92
	v93 = SLICE(r6, word16, 0)
	Mem0[r1 + 50:word16] = v93
	v94 = SLICE(r5, word16, 0)
	Mem0[r1 + 52:word16] = v94
	v95 = SLICE(r4, word16, 0)
	Mem0[r1 + 54:word16] = v95
	v96 = SLICE(r3, word16, 0)
	Mem0[r1 + 56:word16] = v96
	branch Test(LT,r22) l00013344_ds_t
	goto l00013344_ds_f
	// succ:  l00013344_ds_f l00013344_ds_t
l00013434:
	r22 = r22 + r22
	r22 = r22 + r22
	r3 = r22 + 0x00000006
	r7 = r21 + 0x00000002
	r9 = r1 + 0x0000001C
	r21 = r21 + r3
	r10 = 0x00000000
	goto l00013450
	// succ:  l00013450
l00013434_ds_f:
	r8 = r4 + r4
	goto l0001345C
	// succ:  l0001345C
l00013434_ds_t:
	r8 = r4 + r4
	goto l0001348C
	// succ:  l0001348C
l00013450:
	v98 = Mem0[r7:word16]
	r4 = (word32) v98
	branch Test(EQ,r4) l00013434_ds_t
	goto l00013434_ds_f
	// succ:  l00013434_ds_f l00013434_ds_t
l0001345C:
	v99 = Mem0[r8 + r9:word16]
	r3 = (word32) v99
	r6 = r10
	r5 = r3
	r3 = r3 + 0x00000001
	v100 = SLICE(r3, word16, 0)
	Mem0[r8 + r9:word16] = v100
	// succ:  l00013470
l00013470:
	r3 = r5 & 0x00000001
	r3 = r3 | r6
	r4 = r4 + 0xFFFFFFFF
	r5 = r5 >>u 1
	C = cond(r5)
	branch Test(NE,r4) l00013470_ds_t
	// succ:  l00013470_ds_f l00013470_ds_t
l00013470_ds_f:
	r6 = r3 + r3
	goto l00013488
	// succ:  l00013488
l00013470_ds_t:
	r6 = r3 + r3
	goto l00013470
	// succ:  l00013470
l00013488:
	v101 = SLICE(r3, word16, 0)
	Mem0[r7 - 2:word16] = v101
	// succ:  l0001348C
l0001348C:
	r7 = r7 + 0x00000004
	r3 = r21 ^ r7
	branch Test(NE,r3) l00013450
	// succ:  l00013498 l00013450
l00013498:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 76:word32]
	r21 = Mem0[r1 + 84:word32]
	r22 = Mem0[r1 + 88:word32]
	r23 = Mem0[r1 + 92:word32]
	r24 = Mem0[r1 + 96:word32]
	r25 = Mem0[r1 + 100:word32]
	r26 = Mem0[r1 + 104:word32]
	r27 = Mem0[r1 + 108:word32]
	r28 = Mem0[r1 + 112:word32]
	r29 = Mem0[r1 + 116:word32]
	r30 = Mem0[r1 + 120:word32]
	r31 = Mem0[r1 + 124:word32]
	r1 = r1 + 0x00000080
	return
	// succ:  fn00012A34_exit
l000134D4:
	branch Test(EQ,r28) l000134D4_ds_t
	// succ:  l000134D4_ds_f l000134D4_ds_t
l000134D4_ds_f:
	r26 = r28 + 0x0000059E
	goto l000134DC
	// succ:  l000134DC
l000134D4_ds_t:
	r26 = r28 + 0x0000059E
	goto l00013344
	// succ:  l00013344
l000134DC:
	r26 = r26 + r26
	r26 = r19 + r26
	r30 = 0x0000023D
	// succ:  l000134E8
l000134E8:
	v125 = Mem0[r26:word16]
	r27 = (word32) v125
	branch Test(EQ,r27) l00013550
	// succ:  l000134F0 l00013550
l000134F0:
	r23 = r30 + 0x000002D6
	r23 = r23 + r23
	r23 = r23 + r23
	r23 = r19 + r23
	goto l00013500
	// succ:  l00013500
l000134F0_ds_f:
	r29 = r31 + r3
	goto l0001351C
	// succ:  l0001351C
l000134F0_ds_t:
	r29 = r31 + r3
	goto l00013564
	// succ:  l00013564
l00013500:
	r4 = Mem0[r23:word32]
	r30 = r30 + 0xFFFFFFFF
	r3 = r4 + r4
	r3 = r3 + r3
	r18 = cond(r24 - r4)
	branch Test(LT,r18) l000134F0_ds_t
	goto l000134F0_ds_f
	// succ:  l000134F0_ds_f l000134F0_ds_t
l0001351C:
	v126 = Mem0[r29 + 2:word16]
	r4 = (word32) v126
	r27 = r27 + 0xFFFFFFFF
	r5 = r28 - r4
	r4 = r4 ^ r28
	branch Test(EQ,r4) l0001351C_ds_t
	// succ:  l0001351C_ds_f l0001351C_ds_t
l0001351C_ds_f:
	r23 = r23 + 0xFFFFFFFC
	goto l00013534
	// succ:  l00013534
l0001351C_ds_t:
	r23 = r23 + 0xFFFFFFFC
	goto l0001354C
	// succ:  l0001354C
l00013534:
	r15 = 0x00013534
	v127 = Mem0[r3 + r31:word16]
	r6 = (word32) v127
	call fn00017F30 (retsize: 0;)
	r4 = Mem0[r19 + 5800:word32]
	r3 = r4 + r3
	Mem0[r19 + 5800:word32] = r3
	v128 = SLICE(r28, word16, 0)
	Mem0[r29 + 2:word16] = v128
	// succ:  l0001354C
l0001354C:
	branch Test(NE,r27) l00013500
	// succ:  l00013550 l00013500
l00013550:
	r28 = r25
	branch Test(EQ,r25) l00013550_ds_t
	// succ:  l00013550_ds_f l00013550_ds_t
l00013550_ds_f:
	r26 = r26 + 0xFFFFFFFE
	goto l0001355C
	// succ:  l0001355C
l00013550_ds_t:
	r26 = r26 + 0xFFFFFFFE
	goto l00013344
	// succ:  l00013344
l0001355C:
	r25 = r25 + 0xFFFFFFFF
	goto l000134E8
	// succ:  l000134E8
l00013564:
	r23 = r23 + 0xFFFFFFFC
	goto l00013500
	// succ:  l00013500
l0001356C:
	r5 = r26
	r26 = r26 + 0xFFFFFFFF
	r10 = r10 + 0xFFFFFFFC
	r3 = r5 + 0x000002D7
	r3 = r3 + r3
	r3 = r3 + r3
	Mem0[r3 + r19:word32] = r12
	branch Test(NE,r26) l0001356C_ds_t
	// succ:  l0001356C_ds_f l0001356C_ds_t
l0001356C_ds_f:
	r11 = r11 + 0xFFFFFFFE
	goto l00013590
	// succ:  l00013590
l0001356C_ds_t:
	r11 = r11 + 0xFFFFFFFE
	goto l00012BA8
	// succ:  l00012BA8
l00013590:
	r3 = r4 + 0x000002D7
	goto l00012C90
	// succ:  l00012C90
l00013598:
	r23 = r23 + 0x000002D7
	r23 = r23 + r23
	r27 = r26
	r26 = Mem0[r1 + 64:word32]
	r23 = r23 + r23
	r25 = r19 + r23
	r23 = r19 + 0x00001450
	// succ:  l000135B4
l000135B4:
	r5 = Mem0[r25:word32]
	r4 = r5 + r5
	r4 = r4 + r4
	r8 = r31 + r4
	v61 = Mem0[r8 + 2:word16]
	r3 = (word32) v61
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r31 + r3
	v62 = Mem0[r3 + 2:word16]
	r6 = (word32) v62
	r6 = r6 + 0x00000001
	r18 = cond(r28 - r6)
	branch Test(GE,r18) l000135EC
	// succ:  l000135E4 l000135EC
l000135E4:
	r6 = r28
	r27 = r27 + 0x00000001
	// succ:  l000135EC
l000135EC:
	r7 = r6 + r6
	v65 = SLICE(r6, word16, 0)
	Mem0[r8 + 2:word16] = v65
	r18 = cond(r24 - r5)
	branch Test(LT,r18) l000135EC_ds_t
	// succ:  l000135EC_ds_f l000135EC_ds_t
l000135EC_ds_f:
	r7 = r19 + r7
	goto l00013600
	// succ:  l00013600
l000135EC_ds_t:
	r7 = r19 + r7
	goto l0001363C
	// succ:  l0001363C
l00013600:
	v66 = Mem0[r7 + 2876:word16]
	r8 = (word32) v66
	r3 = r5 - r29
	r3 = r3 + r3
	r8 = r8 + 0x00000001
	v67 = SLICE(r8, word16, 0)
	Mem0[r7 + 2876:word16] = v67
	r18 = cond(r5 - r29)
	branch Test(LT,r18) l00013600_ds_t
	// succ:  l00013600_ds_f l00013600_ds_t
l00013600_ds_f:
	r3 = r3 + r3
	goto l00013620
	// succ:  l00013620
l00013600_ds_t:
	r3 = r3 + r3
	goto l00013628
	// succ:  l00013628
l00013620:
	r3 = Mem0[r3 + r26:word32]
	r6 = r6 + r3
	// succ:  l00013628
l00013628:
	r15 = 0x00013628
	v103 = Mem0[r4 + r31:word16]
	r5 = (word32) v103
	call fn00017F30 (retsize: 0;)
	r4 = Mem0[r19 + 5800:word32]
	r3 = r4 + r3
	Mem0[r19 + 5800:word32] = r3
	// succ:  l0001363C
l0001363C:
	r25 = r25 + 0x00000004
	r3 = r25 ^ r23
	branch Test(NE,r3) l000135B4
	// succ:  l00013648 l000135B4
l00013648:
	branch Test(NE,r27) l000131DC
	// succ:  l0001364C l000131DC
l0001364C:
	v102 = Mem0[r19 + 2876:word16]
	r25 = (word32) v102
	goto l00013348
	// succ:  l00013348
l00013654:
	r4 = 0x00000000
	r22 = 0xFFFFFFFF
	r20 = r24 + 0x00001458
	goto l00012AF4
	// succ:  l00012AF4
l00013664:
	r6 = r7
	goto l000132F4
	// succ:  l000132F4
l0001366C:
	r6 = r30
	goto l000132F4
	// succ:  l000132F4
fn00012A34_exit:


// fn0001371C
// Return size: 0
define fn0001371C
fn0001371C_entry:
	r1 = fp
	// succ:  l0001371C
l0001371C:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1:word32] = r15
	v8 = Mem0[r5 + 5816:word16]
	r4 = (word32) v8
	r3 = Mem0[r5 + 5820:word32]
	r10 = Mem0[r5 + 20:word32]
	r11 = Mem0[r5 + 8:word32]
	r8 = r8 & 0xFFFFFFFF
	r19 = r5
	r18 = r3 & 0x0000001F
	r5 = r8
	branch Test(EQ,r18) l0001371C_ds_t
	// succ:  l0001371C_ds_f l0001371C_ds_t
l0001371C_ds_f:
	r5 = r5
	goto l00013758
	// succ:  l00013758
l0001371C_ds_t:
	r5 = r5
	goto l00013764
	// succ:  l00013764
l00013758:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00013758_ds_t
	// succ:  l00013758_ds_f l00013758_ds_t
l00013758_ds_f:
	r5 = r5 + r5
	goto l00013764
	// succ:  l00013764
l00013758_ds_t:
	r5 = r5 + r5
	goto l00013758
	// succ:  l00013758
l00013764:
	r5 = r5 | r4
	v14 = SLICE(r5, int16, 0)
	r5 = (int32) v14
	r12 = 0x0000000D
	r21 = r7
	r9 = r10 + 0x00000001
	r7 = r5 & 0xFFFFFFFF
	r18 = cond(r12 - r3)
	branch Test(LT,r18) l00013764_ds_t
	// succ:  l00013764_ds_f l00013764_ds_t
l00013764_ds_f:
	r4 = r11 + r10
	goto l0001378C
	// succ:  l0001378C
l00013764_ds_t:
	r4 = r11 + r10
	goto l000138F8
	// succ:  l000138F8
l0001378C:
	r3 = r3 + 0x00000003
	v18 = SLICE(r7, word16, 0)
	Mem0[r19 + 5816:word16] = v18
	Mem0[r19 + 5820:word32] = r3
	// succ:  l00013798
l00013798:
	r5 = 0x00000008
	r18 = cond(r5 - r3)
	branch Test(LT,r18) l000138A0
	// succ:  l000137A4 l000138A0
l000137A4:
	branch Test(LE,r3) l000137C0
	// succ:  l000137A8 l000137C0
l000137A8:
	Mem0[r19 + 20:word32] = r9
	v19 = SLICE(r7, byte, 0)
	Mem0[r4:byte] = v19
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r9 = r3 + 0x00000001
	r4 = r4 + r3
	// succ:  l000137C0
l000137C0:
	Mem0[r19 + 20:word32] = r9
	v21 = SLICE(r0, word16, 0)
	Mem0[r19 + 5816:word16] = v21
	Mem0[r19 + 5820:word32] = r0
	r5 = r21 & 0x000000FF
	v22 = SLICE(r5, byte, 0)
	Mem0[r4:byte] = v22
	r4 = Mem0[r19 + 20:word32]
	r7 = Mem0[r19 + 8:word32]
	r3 = r21 & 0xFFFFFFFF
	r8 = r4 + 0x00000001
	Mem0[r19 + 20:word32] = r8
	r8 = r3
	r8 = r3 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	v24 = SLICE(r8, byte, 0)
	Mem0[r4 + r7:byte] = v24
	r4 = Mem0[r19 + 20:word32]
	r7 = Mem0[r19 + 8:word32]
	r5 = r5 ^ 0xFFFFFFFF
	r8 = r4 + 0x00000001
	Mem0[r19 + 20:word32] = r8
	v25 = SLICE(r5, byte, 0)
	Mem0[r4 + r7:byte] = v25
	r4 = Mem0[r19 + 20:word32]
	r5 = Mem0[r19 + 8:word32]
	r3 = r3 ^ 0xFFFFFF00
	r7 = r4 + 0x00000001
	Mem0[r19 + 20:word32] = r7
	r7 = r3
	r7 = r3 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	v26 = SLICE(r7, byte, 0)
	Mem0[r4 + r5:byte] = v26
	r5 = Mem0[r19 + 8:word32]
	r3 = Mem0[r19 + 20:word32]
	r7 = r21
	r15 = 0x00013878
	r5 = r5 + r3
	call fn00018C34 (retsize: 0;)
	r3 = Mem0[r19 + 20:word32]
	r21 = r3 + r21
	Mem0[r19 + 20:word32] = r21
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn0001371C_exit
l000138A0:
	Mem0[r19 + 20:word32] = r9
	v27 = SLICE(r7, byte, 0)
	Mem0[r4:byte] = v27
	r3 = Mem0[r19 + 20:word32]
	v28 = Mem0[r19 + 5816:word16]
	r7 = (word32) v28
	r4 = Mem0[r19 + 8:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	r5 = r7
	r5 = r7 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	v29 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v29
	r3 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 8:word32]
	r9 = r3 + 0x00000001
	r4 = r4 + r3
	goto l000137C0
	// succ:  l000137C0
l000138F8:
	Mem0[r19 + 20:word32] = r9
	v30 = SLICE(r7, word16, 0)
	Mem0[r19 + 5816:word16] = v30
	v31 = SLICE(r5, byte, 0)
	Mem0[r10 + r11:byte] = v31
	r3 = Mem0[r19 + 20:word32]
	v32 = Mem0[r19 + 5816:word16]
	r7 = (word32) v32
	r4 = Mem0[r19 + 8:word32]
	r5 = r3 + 0x00000001
	Mem0[r19 + 20:word32] = r5
	r5 = r7
	r5 = r7 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	v33 = SLICE(r5, byte, 0)
	Mem0[r3 + r4:byte] = v33
	r3 = Mem0[r19 + 5820:word32]
	r5 = Mem0[r19 + 20:word32]
	r7 = 0x00000010
	r4 = Mem0[r19 + 8:word32]
	r9 = r7 - r3
	r18 = r9 & 0x0000001F
	r7 = r8
	branch Test(EQ,r18) l000138F8_ds_t
	// succ:  l000138F8_ds_f l000138F8_ds_t
l000138F8_ds_f:
	r7 = r7
	goto l00013964
	// succ:  l00013964
l000138F8_ds_t:
	r7 = r7
	goto l00013970
	// succ:  l00013970
l00013964:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00013964_ds_t
	// succ:  l00013964_ds_f l00013964_ds_t
l00013964_ds_f:
	r7 = r7 >> 1
	C = cond(r7)
	goto l00013970
	// succ:  l00013970
l00013964_ds_t:
	r7 = r7 >> 1
	C = cond(r7)
	goto l00013964
	// succ:  l00013964
l00013970:
	r3 = r3 + 0xFFFFFFF3
	r7 = r7 & 0xFFFFFFFF
	v34 = SLICE(r7, word16, 0)
	Mem0[r19 + 5816:word16] = v34
	Mem0[r19 + 5820:word32] = r3
	r9 = r5 + 0x00000001
	r4 = r4 + r5
	goto l00013798
	// succ:  l00013798
fn0001371C_exit:


// fn00014C9C
// Return size: 0
define fn00014C9C
fn00014C9C_entry:
	r1 = fp
	// succ:  l00014C9C
l00014C9C:
	r1 = r1 + 0xFFFFFFC8
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 52:word32] = r26
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	r3 = r7 ^ 0x00000001
	r23 = r5
	r23 = r5 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r23 = r23 >>u 1
	C = cond(r23)
	r26 = r5 & 0xFFFFFFFF
	branch Test(EQ,r3) l00014C9C_ds_t
	// succ:  l00014C9C_ds_f l00014C9C_ds_t
l00014C9C_ds_f:
	r22 = r6
	goto l00014D18
	// succ:  l00014D18
l00014C9C_ds_t:
	r22 = r6
	goto l00014E4C
	// succ:  l00014E4C
l00014D18:
	branch Test(EQ,r6) l00014D18_ds_t
	// succ:  l00014D18_ds_f l00014D18_ds_t
l00014D18_ds_f:
	r3 = 0x00000001
	goto l00014D20
	// succ:  l00014D20
l00014D18_ds_t:
	r3 = 0x00000001
	goto l00014EC8
	// succ:  l00014EC8
l00014D20:
	r3 = 0x0000000F
	r18 = cond(r3 -u r7)
	branch Test(GE,r18) l00014D20_ds_t
	// succ:  l00014D20_ds_f l00014D20_ds_t
l00014D20_ds_f:
	r24 = r7
	goto l00014D30
	// succ:  l00014D30
l00014D20_ds_t:
	r24 = r7
	goto l00014EF0
	// succ:  l00014EF0
l00014D30:
	r21 = 0x000015AF
	r18 = cond(r21 -u r7)
	branch Test(GE,r18) l00014D30_ds_t
	// succ:  l00014D30_ds_f l00014D30_ds_t
l00014D30_ds_f:
	r25 = r7
	goto l00014D40
	// succ:  l00014D40
l00014D30_ds_t:
	r25 = r7
	goto l00015098
	// succ:  l00015098
l00014D40:
	r19 = 0xFFFFFFF1
	// succ:  l00014D48
l00014D48:
	r25 = r24 + 0xFFFFEA50
	r6 = r22 + 0x000015B0
	// succ:  l00014D50
l00014D50:
	v18 = Mem0[r22:byte]
	r4 = (word32) v18
	v19 = Mem0[r22 + 1:byte]
	r5 = (word32) v19
	v21 = Mem0[r22 + 2:byte]
	r9 = (word32) v21
	r3 = r4 + r26
	v23 = Mem0[r22 + 3:byte]
	r8 = (word32) v23
	v24 = Mem0[r22 + 4:byte]
	r7 = (word32) v24
	r5 = r5 + r3
	r9 = r9 + r5
	v25 = Mem0[r22 + 5:byte]
	r4 = (word32) v25
	r3 = r3 + r5
	r8 = r8 + r9
	v26 = Mem0[r22 + 6:byte]
	r5 = (word32) v26
	r3 = r3 + r9
	r7 = r7 + r8
	v27 = Mem0[r22 + 7:byte]
	r9 = (word32) v27
	r3 = r3 + r8
	r4 = r4 + r7
	v28 = Mem0[r22 + 8:byte]
	r8 = (word32) v28
	r3 = r3 + r7
	v30 = Mem0[r22 + 9:byte]
	r10 = (word32) v30
	r5 = r5 + r4
	r3 = r3 + r4
	v31 = Mem0[r22 + 10:byte]
	r7 = (word32) v31
	r9 = r9 + r5
	r5 = r3 + r5
	v32 = Mem0[r22 + 11:byte]
	r4 = (word32) v32
	r3 = r8 + r9
	r5 = r5 + r9
	r10 = r10 + r3
	v33 = Mem0[r22 + 12:byte]
	r9 = (word32) v33
	r5 = r5 + r3
	v34 = Mem0[r22 + 13:byte]
	r8 = (word32) v34
	r3 = r7 + r10
	r5 = r5 + r10
	v35 = Mem0[r22 + 14:byte]
	r7 = (word32) v35
	r4 = r4 + r3
	r5 = r5 + r3
	r9 = r9 + r4
	v36 = Mem0[r22 + 15:byte]
	r3 = (word32) v36
	r4 = r5 + r4
	r8 = r8 + r9
	r4 = r4 + r9
	r5 = r7 + r8
	r4 = r4 + r8
	r26 = r3 + r5
	r4 = r4 + r5
	r22 = r22 + 0x00000010
	r4 = r4 + r26
	r3 = r22 ^ r6
	branch Test(NE,r3) l00014D50_ds_t
	// succ:  l00014D50_ds_f l00014D50_ds_t
l00014D50_ds_f:
	r23 = r23 + r4
	goto l00014E1C
	// succ:  l00014E1C
l00014D50_ds_t:
	r23 = r23 + r4
	goto l00014D50
	// succ:  l00014D50
l00014E1C:
	r5 = r26
	r15 = 0x00014E20
	r6 = r19
	call fn00018030 (retsize: 0;)
	r5 = r23
	r6 = r19
	r15 = 0x00014E30
	r26 = r3
	call fn00018030 (retsize: 0;)
	r18 = cond(r21 -u r25)
	branch Test(GE,r18) l00014E1C_ds_t
	// succ:  l00014E1C_ds_f l00014E1C_ds_t
l00014E1C_ds_f:
	r23 = r3
	goto l00014E44
	// succ:  l00014E44
l00014E1C_ds_t:
	r23 = r3
	goto l00015084
	// succ:  l00015084
l00014E44:
	r24 = r25
	goto l00014D48
	// succ:  l00014D48
l00014E4C:
	v37 = Mem0[r6:byte]
	r3 = (word32) v37
	r4 = 0xFFFFFFF0
	r26 = r3 + r26
	r18 = cond(r4 -u r26)
	branch Test(LT,r18) l00015304
	// succ:  l00014E64 l00015304
l00014E64:
	r3 = 0xFFFFFFF0
	r23 = r26 + r23
	r18 = cond(r3 -u r23)
	branch Test(GE,r18) l00014E64_ds_t
	// succ:  l00014E64_ds_f l00014E64_ds_t
l00014E64_ds_f:
	r3 = r23 + r23
	goto l00014E7C
	// succ:  l00014E7C
l00014E64_ds_t:
	r3 = r23 + r23
	goto l00014E88
	// succ:  l00014E88
l00014E7C:
	r23 = r23 + 0x0000000F
	// succ:  l00014E84
l00014E84:
	r3 = r23 + r23
	// succ:  l00014E88
l00014E88:
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 | r26
	// succ:  l00014EC8
l00014EC8:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r1 = r1 + 0x00000038
	return
	// succ:  fn00014C9C_exit
l00014EF0:
	branch Test(EQ,r7) l00014EF0_ds_t
	// succ:  l00014EF0_ds_f l00014EF0_ds_t
l00014EF0_ds_f:
	r3 = r7 ^ 0x00000002
	goto l00014EF8
	// succ:  l00014EF8
l00014EF0_ds_t:
	r3 = r7 ^ 0x00000002
	goto l00015010
	// succ:  l00015010
l00014EF8:
	v69 = Mem0[r6:byte]
	r5 = (word32) v69
	v70 = Mem0[r6 + 1:byte]
	r4 = (word32) v70
	r26 = r26 + r5
	r23 = r23 + r26
	r26 = r26 + r4
	branch Test(EQ,r3) l00014EF8_ds_t
	// succ:  l00014EF8_ds_f l00014EF8_ds_t
l00014EF8_ds_f:
	r23 = r23 + r26
	goto l00014F14
	// succ:  l00014F14
l00014EF8_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014F14:
	v71 = Mem0[r6 + 2:byte]
	r4 = (word32) v71
	r3 = r7 ^ 0x00000003
	r26 = r26 + r4
	branch Test(EQ,r3) l00014F14_ds_t
	// succ:  l00014F14_ds_f l00014F14_ds_t
l00014F14_ds_f:
	r23 = r23 + r26
	goto l00014F28
	// succ:  l00014F28
l00014F14_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014F28:
	v72 = Mem0[r6 + 3:byte]
	r4 = (word32) v72
	r3 = r7 ^ 0x00000004
	r26 = r26 + r4
	branch Test(EQ,r3) l00014F28_ds_t
	// succ:  l00014F28_ds_f l00014F28_ds_t
l00014F28_ds_f:
	r23 = r23 + r26
	goto l00014F3C
	// succ:  l00014F3C
l00014F28_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014F3C:
	v73 = Mem0[r6 + 4:byte]
	r4 = (word32) v73
	r3 = r7 ^ 0x00000005
	r26 = r26 + r4
	branch Test(EQ,r3) l00014F3C_ds_t
	// succ:  l00014F3C_ds_f l00014F3C_ds_t
l00014F3C_ds_f:
	r23 = r23 + r26
	goto l00014F50
	// succ:  l00014F50
l00014F3C_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014F50:
	v74 = Mem0[r6 + 5:byte]
	r4 = (word32) v74
	r3 = r7 ^ 0x00000006
	r26 = r26 + r4
	branch Test(EQ,r3) l00014F50_ds_t
	// succ:  l00014F50_ds_f l00014F50_ds_t
l00014F50_ds_f:
	r23 = r23 + r26
	goto l00014F64
	// succ:  l00014F64
l00014F50_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014F64:
	v75 = Mem0[r6 + 6:byte]
	r4 = (word32) v75
	r3 = r7 ^ 0x00000007
	r26 = r26 + r4
	branch Test(EQ,r3) l00014F64_ds_t
	// succ:  l00014F64_ds_f l00014F64_ds_t
l00014F64_ds_f:
	r23 = r23 + r26
	goto l00014F78
	// succ:  l00014F78
l00014F64_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014F78:
	v76 = Mem0[r6 + 7:byte]
	r4 = (word32) v76
	r3 = r7 ^ 0x00000008
	r26 = r26 + r4
	branch Test(EQ,r3) l00014F78_ds_t
	// succ:  l00014F78_ds_f l00014F78_ds_t
l00014F78_ds_f:
	r23 = r23 + r26
	goto l00014F8C
	// succ:  l00014F8C
l00014F78_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014F8C:
	v77 = Mem0[r6 + 8:byte]
	r4 = (word32) v77
	r3 = r7 ^ 0x00000009
	r26 = r26 + r4
	branch Test(EQ,r3) l00014F8C_ds_t
	// succ:  l00014F8C_ds_f l00014F8C_ds_t
l00014F8C_ds_f:
	r23 = r23 + r26
	goto l00014FA0
	// succ:  l00014FA0
l00014F8C_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014FA0:
	v78 = Mem0[r6 + 9:byte]
	r4 = (word32) v78
	r3 = r7 ^ 0x0000000A
	r26 = r26 + r4
	branch Test(EQ,r3) l00014FA0_ds_t
	// succ:  l00014FA0_ds_f l00014FA0_ds_t
l00014FA0_ds_f:
	r23 = r23 + r26
	goto l00014FB4
	// succ:  l00014FB4
l00014FA0_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014FB4:
	v79 = Mem0[r6 + 10:byte]
	r4 = (word32) v79
	r3 = r7 ^ 0x0000000B
	r26 = r26 + r4
	branch Test(EQ,r3) l00014FB4_ds_t
	// succ:  l00014FB4_ds_f l00014FB4_ds_t
l00014FB4_ds_f:
	r23 = r23 + r26
	goto l00014FC8
	// succ:  l00014FC8
l00014FB4_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014FC8:
	v80 = Mem0[r6 + 11:byte]
	r4 = (word32) v80
	r3 = r7 ^ 0x0000000C
	r26 = r26 + r4
	branch Test(EQ,r3) l00014FC8_ds_t
	// succ:  l00014FC8_ds_f l00014FC8_ds_t
l00014FC8_ds_f:
	r23 = r23 + r26
	goto l00014FDC
	// succ:  l00014FDC
l00014FC8_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014FDC:
	v81 = Mem0[r6 + 12:byte]
	r4 = (word32) v81
	r3 = r7 ^ 0x0000000D
	r26 = r26 + r4
	branch Test(EQ,r3) l00014FDC_ds_t
	// succ:  l00014FDC_ds_f l00014FDC_ds_t
l00014FDC_ds_f:
	r23 = r23 + r26
	goto l00014FF0
	// succ:  l00014FF0
l00014FDC_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00014FF0:
	v82 = Mem0[r6 + 13:byte]
	r3 = (word32) v82
	r24 = r7 ^ 0x0000000E
	r26 = r26 + r3
	branch Test(EQ,r24) l00014FF0_ds_t
	// succ:  l00014FF0_ds_f l00014FF0_ds_t
l00014FF0_ds_f:
	r23 = r23 + r26
	goto l00015004
	// succ:  l00015004
l00014FF0_ds_t:
	r23 = r23 + r26
	goto l00015010
	// succ:  l00015010
l00015004:
	v83 = Mem0[r6 + 14:byte]
	r3 = (word32) v83
	r26 = r26 + r3
	r23 = r23 + r26
	// succ:  l00015010
l00015010:
	r3 = 0xFFFFFFF0
	r18 = cond(r3 -u r26)
	branch Test(GE,r18) l00015028
	// succ:  l00015020 l00015028
l00015020:
	r26 = r26 + 0x0000000F
	// succ:  l00015028
l00015028:
	r6 = 0xFFFFFFF1
	r15 = 0x00015030
	r5 = r23
	call fn00018030 (retsize: 0;)
	r4 = r3
	r4 = r3 + r3
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r3 = r4 | r26
	goto l00014EC8
	// succ:  l00014EC8
l00015084:
	branch Test(EQ,r25) l00015084_ds_t
	// succ:  l00015084_ds_f l00015084_ds_t
l00015084_ds_f:
	r3 = r23 + r23
	goto l0001508C
	// succ:  l0001508C
l00015084_ds_t:
	r3 = r23 + r23
	goto l00014E88
	// succ:  l00014E88
l0001508C:
	r3 = 0x0000000F
	r18 = cond(r3 -u r25)
	branch Test(GE,r18) l00015310
	// succ:  l00015098 l00015310
l00015098:
	r3 = r25 + 0xFFFFFFF0
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r5 = r4 + 0x00000001
	r5 = r5 + r5
	r5 = r5 + r5
	r5 = r5 + r5
	r5 = r5 + r5
	r5 = r22 + r5
	// succ:  l000150C8
l000150C8:
	v38 = Mem0[r22:byte]
	r3 = (word32) v38
	v39 = Mem0[r22 + 1:byte]
	r9 = (word32) v39
	v40 = Mem0[r22 + 2:byte]
	r8 = (word32) v40
	r3 = r3 + r26
	v41 = Mem0[r22 + 3:byte]
	r7 = (word32) v41
	v42 = Mem0[r22 + 4:byte]
	r6 = (word32) v42
	r9 = r9 + r3
	r8 = r8 + r9
	v43 = Mem0[r22 + 5:byte]
	r10 = (word32) v43
	r3 = r3 + r9
	r7 = r7 + r8
	v44 = Mem0[r22 + 6:byte]
	r9 = (word32) v44
	r3 = r3 + r8
	r6 = r6 + r7
	v45 = Mem0[r22 + 7:byte]
	r8 = (word32) v45
	r3 = r3 + r7
	r10 = r10 + r6
	v46 = Mem0[r22 + 8:byte]
	r7 = (word32) v46
	r3 = r3 + r6
	r9 = r9 + r10
	v47 = Mem0[r22 + 9:byte]
	r6 = (word32) v47
	r3 = r3 + r10
	r8 = r8 + r9
	v48 = Mem0[r22 + 10:byte]
	r10 = (word32) v48
	r3 = r3 + r9
	r7 = r7 + r8
	v49 = Mem0[r22 + 11:byte]
	r9 = (word32) v49
	r3 = r3 + r8
	r6 = r6 + r7
	v50 = Mem0[r22 + 12:byte]
	r8 = (word32) v50
	r3 = r3 + r7
	r10 = r10 + r6
	v51 = Mem0[r22 + 13:byte]
	r7 = (word32) v51
	r3 = r3 + r6
	r9 = r9 + r10
	v52 = Mem0[r22 + 14:byte]
	r6 = (word32) v52
	r3 = r3 + r10
	v53 = Mem0[r22 + 15:byte]
	r26 = (word32) v53
	r8 = r8 + r9
	r3 = r3 + r9
	r7 = r7 + r8
	r3 = r3 + r8
	r6 = r6 + r7
	r3 = r3 + r7
	r26 = r26 + r6
	r3 = r3 + r6
	r22 = r22 + 0x00000010
	r3 = r3 + r26
	r6 = r22 ^ r5
	branch Test(NE,r6) l000150C8_ds_t
	// succ:  l000150C8_ds_f l000150C8_ds_t
l000150C8_ds_f:
	r23 = r23 + r3
	goto l00015194
	// succ:  l00015194
l000150C8_ds_t:
	r23 = r23 + r3
	goto l000150C8
	// succ:  l000150C8
l00015194:
	r24 = r25 + 0xFFFFFFEF
	r25 = r25 & 0x0000000F
	r3 = r4
	r3 = r4 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	branch Test(EQ,r25) l00015194_ds_t
	// succ:  l00015194_ds_f l00015194_ds_t
l00015194_ds_f:
	r24 = r24 - r3
	goto l000151B8
	// succ:  l000151B8
l00015194_ds_t:
	r24 = r24 - r3
	goto l000152D8
	// succ:  l000152D8
l000151B8:
	v54 = Mem0[r22:byte]
	r3 = (word32) v54
	r26 = r26 + r3
	branch Test(EQ,r24) l000151B8_ds_t
	// succ:  l000151B8_ds_f l000151B8_ds_t
l000151B8_ds_f:
	r23 = r23 + r26
	goto l000151C8
	// succ:  l000151C8
l000151B8_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l000151C8:
	v55 = Mem0[r22 + 1:byte]
	r4 = (word32) v55
	r3 = r24 ^ 0x00000001
	r26 = r26 + r4
	branch Test(EQ,r3) l000151C8_ds_t
	// succ:  l000151C8_ds_f l000151C8_ds_t
l000151C8_ds_f:
	r23 = r23 + r26
	goto l000151DC
	// succ:  l000151DC
l000151C8_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l000151DC:
	v56 = Mem0[r22 + 2:byte]
	r4 = (word32) v56
	r3 = r24 ^ 0x00000002
	r26 = r26 + r4
	branch Test(EQ,r3) l000151DC_ds_t
	// succ:  l000151DC_ds_f l000151DC_ds_t
l000151DC_ds_f:
	r23 = r23 + r26
	goto l000151F0
	// succ:  l000151F0
l000151DC_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l000151F0:
	v57 = Mem0[r22 + 3:byte]
	r4 = (word32) v57
	r3 = r24 ^ 0x00000003
	r26 = r26 + r4
	branch Test(EQ,r3) l000151F0_ds_t
	// succ:  l000151F0_ds_f l000151F0_ds_t
l000151F0_ds_f:
	r23 = r23 + r26
	goto l00015204
	// succ:  l00015204
l000151F0_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l00015204:
	v58 = Mem0[r22 + 4:byte]
	r4 = (word32) v58
	r3 = r24 ^ 0x00000004
	r26 = r26 + r4
	branch Test(EQ,r3) l00015204_ds_t
	// succ:  l00015204_ds_f l00015204_ds_t
l00015204_ds_f:
	r23 = r23 + r26
	goto l00015218
	// succ:  l00015218
l00015204_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l00015218:
	v59 = Mem0[r22 + 5:byte]
	r4 = (word32) v59
	r3 = r24 ^ 0x00000005
	r26 = r26 + r4
	branch Test(EQ,r3) l00015218_ds_t
	// succ:  l00015218_ds_f l00015218_ds_t
l00015218_ds_f:
	r23 = r23 + r26
	goto l0001522C
	// succ:  l0001522C
l00015218_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l0001522C:
	v60 = Mem0[r22 + 6:byte]
	r4 = (word32) v60
	r3 = r24 ^ 0x00000006
	r26 = r26 + r4
	branch Test(EQ,r3) l0001522C_ds_t
	// succ:  l0001522C_ds_f l0001522C_ds_t
l0001522C_ds_f:
	r23 = r23 + r26
	goto l00015240
	// succ:  l00015240
l0001522C_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l00015240:
	v61 = Mem0[r22 + 7:byte]
	r4 = (word32) v61
	r3 = r24 ^ 0x00000007
	r26 = r26 + r4
	branch Test(EQ,r3) l00015240_ds_t
	// succ:  l00015240_ds_f l00015240_ds_t
l00015240_ds_f:
	r23 = r23 + r26
	goto l00015254
	// succ:  l00015254
l00015240_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l00015254:
	v62 = Mem0[r22 + 8:byte]
	r4 = (word32) v62
	r3 = r24 ^ 0x00000008
	r26 = r26 + r4
	branch Test(EQ,r3) l00015254_ds_t
	// succ:  l00015254_ds_f l00015254_ds_t
l00015254_ds_f:
	r23 = r23 + r26
	goto l00015268
	// succ:  l00015268
l00015254_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l00015268:
	v63 = Mem0[r22 + 9:byte]
	r4 = (word32) v63
	r3 = r24 ^ 0x00000009
	r26 = r26 + r4
	branch Test(EQ,r3) l00015268_ds_t
	// succ:  l00015268_ds_f l00015268_ds_t
l00015268_ds_f:
	r23 = r23 + r26
	goto l0001527C
	// succ:  l0001527C
l00015268_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l0001527C:
	v64 = Mem0[r22 + 10:byte]
	r4 = (word32) v64
	r3 = r24 ^ 0x0000000A
	r26 = r26 + r4
	branch Test(EQ,r3) l0001527C_ds_t
	// succ:  l0001527C_ds_f l0001527C_ds_t
l0001527C_ds_f:
	r23 = r23 + r26
	goto l00015290
	// succ:  l00015290
l0001527C_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l00015290:
	v65 = Mem0[r22 + 11:byte]
	r4 = (word32) v65
	r3 = r24 ^ 0x0000000B
	r26 = r26 + r4
	branch Test(EQ,r3) l00015290_ds_t
	// succ:  l00015290_ds_f l00015290_ds_t
l00015290_ds_f:
	r23 = r23 + r26
	goto l000152A4
	// succ:  l000152A4
l00015290_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l000152A4:
	v66 = Mem0[r22 + 12:byte]
	r4 = (word32) v66
	r3 = r24 ^ 0x0000000C
	r26 = r26 + r4
	branch Test(EQ,r3) l000152A4_ds_t
	// succ:  l000152A4_ds_f l000152A4_ds_t
l000152A4_ds_f:
	r23 = r23 + r26
	goto l000152B8
	// succ:  l000152B8
l000152A4_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l000152B8:
	v67 = Mem0[r22 + 13:byte]
	r3 = (word32) v67
	r24 = r24 ^ 0x0000000D
	r26 = r26 + r3
	branch Test(EQ,r24) l000152B8_ds_t
	// succ:  l000152B8_ds_f l000152B8_ds_t
l000152B8_ds_f:
	r23 = r23 + r26
	goto l000152CC
	// succ:  l000152CC
l000152B8_ds_t:
	r23 = r23 + r26
	goto l000152D8
	// succ:  l000152D8
l000152CC:
	v68 = Mem0[r22 + 14:byte]
	r3 = (word32) v68
	r26 = r26 + r3
	r23 = r23 + r26
	// succ:  l000152D8
l000152D8:
	r6 = 0xFFFFFFF1
	r15 = 0x000152E0
	r5 = r26
	call fn00018030 (retsize: 0;)
	r5 = r23
	r6 = 0xFFFFFFF1
	r15 = 0x000152F4
	r26 = r3
	call fn00018030 (retsize: 0;)
	r23 = r3
	goto l00014E84
	// succ:  l00014E84
l00015304:
	r26 = r26 + 0x0000000F
	goto l00014E64
	// succ:  l00014E64
l00015310:
	r24 = r24 + 0xFFFFEA4F
	goto l000151B8
	// succ:  l000151B8
fn00014C9C_exit:


// fn00015318
// Return size: 0
define fn00015318
fn00015318_entry:
	r1 = fp
	// succ:  l00015318
l00015318:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x00015320
	call fn00014C9C (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn00015318_exit
fn00015318_exit:


// fn000156B4
// Return size: 0
define fn000156B4
fn000156B4_entry:
	r1 = fp
	// succ:  l000156B4
l000156B4:
	r8 = r5 + r5
	r8 = r8 + r8
	r8 = r8 + r8
	r8 = r8 + r8
	r8 = r8 + r8
	r8 = r8 + r8
	r8 = r8 + r8
	r3 = r5
	r3 = r5 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r9 = __rcr(r5, 1, C)
	C = cond(r9)
	r9 = __rcr(r9, 1, C)
	C = cond(r9)
	r9 = __rcr(r9, 1, C)
	C = cond(r9)
	r9 = __rcr(r9, 1, C)
	C = cond(r9)
	r9 = __rcr(r9, 1, C)
	C = cond(r9)
	r9 = __rcr(r9, 1, C)
	C = cond(r9)
	r9 = __rcr(r9, 1, C)
	C = cond(r9)
	r9 = __rcr(r9, 1, C)
	C = cond(r9)
	r9 = __rcr(r9, 1, C)
	C = cond(r9)
	r9 = r9 & 0xFF000000
	r4 = r5
	r4 = r5 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r3 = r3 + r9
	r4 = r4 & 0xFFFFFF00
	r8 = r8 + r8
	r3 = r3 + r4
	r8 = r8 & 0x00FF0000
	r3 = r3 + r8
	branch Test(EQ,r7) l000156B4_ds_t
	// succ:  l000156B4_ds_f l000156B4_ds_t
l000156B4_ds_f:
	r4 = r3 ^ 0xFFFFFFFF
	goto l000157AC
	// succ:  l000157AC
l000156B4_ds_t:
	r4 = r3 ^ 0xFFFFFFFF
	goto l00015884
	// succ:  l00015884
l000157AC:
	r3 = r6 & 0x00000003
	branch Test(NE,r3) l000157AC_ds_t
	// succ:  l000157AC_ds_f l000157AC_ds_t
l000157AC_ds_f:
	r6 = r6 + 0x00000001
	goto l000157B8
	// succ:  l000157B8
l000157AC_ds_t:
	r6 = r6 + 0x00000001
	goto l000157D0
	// succ:  l000157D0
l000157B8:
	r6 = r6 + 0xFFFFFFFF
	r3 = 0x0000001F
	goto l0001597C
	// succ:  l0001597C
l000157C4:
	branch Test(EQ,r5) l000157C4_ds_t
	// succ:  l000157C4_ds_f l000157C4_ds_t
l000157C4_ds_f:
	r3 = 0x0000001F
	goto l000157CC
	// succ:  l000157CC
l000157C4_ds_t:
	r3 = 0x0000001F
	goto l0001597C
	// succ:  l0001597C
l000157CC:
	r6 = r6 + 0x00000001
	// succ:  l000157D0
l000157D0:
	r3 = r4 + r4
	v16 = Mem0[r6 - 1:byte]
	r8 = (word32) v16
	r3 = r3 + r3
	r3 = r3 + r3
	r5 = r4
	r5 = r4 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r3 = r3 + r3
	r5 = r5 ^ r8
	r4 = r5
	r4 = r5 + r5
	r4 = r4 + r4
	r3 = r3 + r3
	r4 = r4 + 0xFFFFC5D0
	r4 = Mem0[r4:word32]
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r7 = r7 + 0xFFFFFFFF
	r5 = r6 & 0x00000003
	branch Test(NE,r7) l000157D0_ds_t
	// succ:  l000157D0_ds_f l000157D0_ds_t
l000157D0_ds_f:
	r4 = r4 ^ r3
	goto l00015884
	// succ:  l00015884
l000157D0_ds_t:
	r4 = r4 ^ r3
	goto l000157C4
	// succ:  l000157C4
l00015884:
	r3 = r4 ^ 0xFFFFFFFF
	r4 = r3 + r3
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r5 = r3
	r5 = r3 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r4 = r4 + r4
	r6 = r3
	r6 = r3 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r7 = __rcr(r3, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = __rcr(r7, 1, C)
	C = cond(r7)
	r7 = r7 & 0xFF000000
	r4 = r4 + r4
	r3 = r5 + r7
	r5 = r6 & 0xFFFFFF00
	r3 = r3 + r5
	r4 = r4 & 0x00FF0000
	r3 = r3 + r4
	return
	// succ:  fn000156B4_exit
l0001597C:
	r18 = cond(r3 -u r7)
	branch Test(GE,r18) l0001597C_ds_t
	// succ:  l0001597C_ds_f l0001597C_ds_t
l0001597C_ds_f:
	r8 = 0x00000003
	goto l00015988
	// succ:  l00015988
l0001597C_ds_t:
	r8 = 0x00000003
	goto l000162F4
	// succ:  l000162F4
l00015988:
	r3 = r7 + 0xFFFFFFE0
	r5 = r3
	r5 = r3 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 + 0x00000001
	r5 = r5 + r5
	r5 = r5 + r5
	r5 = r5 + r5
	r5 = r5 + r5
	r5 = r5 + r5
	r5 = r6 + r5
	// succ:  l000159C0
l000159C0:
	r3 = Mem0[r6:word32]
	r11 = Mem0[r6 + 4:word32]
	r10 = Mem0[r6 + 8:word32]
	r3 = r4 ^ r3
	r4 = r3 & 0x000000FF
	r9 = r4
	r9 = r4 + r4
	r9 = r9 + r9
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r9 = r9 + 0xFFFFC5D0
	r8 = r4
	r8 = r4 + r4
	r8 = r8 + r8
	r8 = r8 + 0xFFFFD1D0
	r4 = Mem0[r9:word32]
	r12 = Mem0[r8:word32]
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 & 0x000003FC
	r8 = r3
	r8 = r3 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r3 = r9 + 0xFFFFC9D0
	r8 = r8 & 0x000003FC
	r3 = Mem0[r3:word32]
	r8 = r8 + 0xFFFFCDD0
	r8 = Mem0[r8:word32]
	r4 = r4 ^ r12
	r4 = r4 ^ r11
	r4 = r4 ^ r3
	r4 = r8 ^ r4
	r8 = r4 & 0x000000FF
	r9 = r4
	r9 = r4 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r3 = r8
	r3 = r8 + r8
	r3 = r3 + r3
	r8 = r9
	r8 = r9 + r9
	r8 = r8 + r8
	r3 = r3 + 0xFFFFC5D0
	r8 = r8 + 0xFFFFD1D0
	r11 = Mem0[r8:word32]
	r3 = Mem0[r3:word32]
	r9 = r4
	r9 = r4 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 & 0x000003FC
	r8 = r4
	r8 = r4 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r9 = r9 + 0xFFFFC9D0
	r4 = r8 & 0x000003FC
	r4 = r4 + 0xFFFFCDD0
	r8 = Mem0[r9:word32]
	r4 = Mem0[r4:word32]
	r3 = r3 ^ r11
	r3 = r3 ^ r10
	r3 = r3 ^ r8
	r4 = r4 ^ r3
	r8 = r4 & 0x000000FF
	r9 = r4
	r9 = r4 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r3 = r8
	r3 = r8 + r8
	r3 = r3 + r3
	r8 = r9
	r8 = r9 + r9
	r8 = r8 + r8
	r3 = r3 + 0xFFFFC5D0
	r8 = r8 + 0xFFFFD1D0
	r11 = Mem0[r8:word32]
	r3 = Mem0[r3:word32]
	r9 = r4
	r9 = r4 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 & 0x000003FC
	r10 = Mem0[r6 + 12:word32]
	r8 = r4
	r8 = r4 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r9 = r9 + 0xFFFFC9D0
	r4 = r8 & 0x000003FC
	r4 = r4 + 0xFFFFCDD0
	r8 = Mem0[r9:word32]
	r4 = Mem0[r4:word32]
	r3 = r3 ^ r11
	r3 = r3 ^ r10
	r3 = r3 ^ r8
	r4 = r4 ^ r3
	r8 = r4 & 0x000000FF
	r9 = r4
	r9 = r4 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r3 = r8
	r3 = r8 + r8
	r3 = r3 + r3
	r8 = r9
	r8 = r9 + r9
	r8 = r8 + r8
	r3 = r3 + 0xFFFFC5D0
	r8 = r8 + 0xFFFFD1D0
	r11 = Mem0[r8:word32]
	r3 = Mem0[r3:word32]
	r9 = r4
	r9 = r4 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 & 0x000003FC
	r10 = Mem0[r6 + 16:word32]
	r8 = r4
	r8 = r4 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r9 = r9 + 0xFFFFC9D0
	r4 = r8 & 0x000003FC
	r4 = r4 + 0xFFFFCDD0
	r8 = Mem0[r9:word32]
	r4 = Mem0[r4:word32]
	r3 = r3 ^ r11
	r3 = r3 ^ r10
	r3 = r3 ^ r8
	r4 = r4 ^ r3
	r8 = r4 & 0x000000FF
	r9 = r4
	r9 = r4 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r3 = r8
	r3 = r8 + r8
	r3 = r3 + r3
	r8 = r9
	r8 = r9 + r9
	r8 = r8 + r8
	r3 = r3 + 0xFFFFC5D0
	r8 = r8 + 0xFFFFD1D0
	r11 = Mem0[r8:word32]
	r3 = Mem0[r3:word32]
	r9 = r4
	r9 = r4 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 & 0x000003FC
	r10 = Mem0[r6 + 20:word32]
	r8 = r4
	r8 = r4 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r9 = r9 + 0xFFFFC9D0
	r4 = r8 & 0x000003FC
	r4 = r4 + 0xFFFFCDD0
	r8 = Mem0[r9:word32]
	r4 = Mem0[r4:word32]
	r3 = r3 ^ r11
	r3 = r3 ^ r10
	r3 = r3 ^ r8
	r4 = r4 ^ r3
	r8 = r4 & 0x000000FF
	r9 = r4
	r9 = r4 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r3 = r8
	r3 = r8 + r8
	r3 = r3 + r3
	r8 = r9
	r8 = r9 + r9
	r8 = r8 + r8
	r3 = r3 + 0xFFFFC5D0
	r8 = r8 + 0xFFFFD1D0
	r11 = Mem0[r8:word32]
	r3 = Mem0[r3:word32]
	r9 = r4
	r9 = r4 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 & 0x000003FC
	r10 = Mem0[r6 + 24:word32]
	r8 = r4
	r8 = r4 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r9 = r9 + 0xFFFFC9D0
	r4 = r8 & 0x000003FC
	r9 = Mem0[r9:word32]
	r4 = r4 + 0xFFFFCDD0
	r8 = Mem0[r4:word32]
	r3 = r3 ^ r11
	r3 = r3 ^ r10
	r3 = r3 ^ r9
	r8 = r8 ^ r3
	r4 = r8 & 0x000000FF
	r3 = r8
	r3 = r8 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 & 0x000003FC
	r3 = r3 + 0xFFFFCDD0
	r9 = r4
	r9 = r4 + r4
	r9 = r9 + r9
	r4 = r8
	r4 = r8 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r9 = r9 + 0xFFFFC5D0
	r10 = r4
	r10 = r4 + r4
	r10 = r10 + r10
	r10 = r10 + 0xFFFFD1D0
	r4 = Mem0[r3:word32]
	r6 = r6 + 0x00000020
	r3 = Mem0[r9:word32]
	r9 = r8
	r9 = r8 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r10 = Mem0[r10:word32]
	r8 = r9 & 0x000003FC
	r8 = r8 + 0xFFFFC9D0
	r9 = Mem0[r6 - 4:word32]
	r8 = Mem0[r8:word32]
	r3 = r3 ^ r10
	r3 = r3 ^ r9
	r3 = r3 ^ r8
	r3 = r4 ^ r3
	r4 = r3 & 0x000000FF
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r8 = r4
	r8 = r4 + r4
	r8 = r8 + r8
	r10 = r3
	r10 = r3 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r4 = r9
	r4 = r9 + r9
	r4 = r4 + r4
	r8 = r8 + 0xFFFFC5D0
	r4 = r4 + 0xFFFFD1D0
	r10 = r10 & 0x000003FC
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r11 = Mem0[r4:word32]
	r8 = Mem0[r8:word32]
	r9 = r9 & 0x000003FC
	r10 = r10 + 0xFFFFC9D0
	r9 = r9 + 0xFFFFCDD0
	r3 = Mem0[r10:word32]
	r4 = Mem0[r9:word32]
	r8 = r8 ^ r11
	r3 = r8 ^ r3
	r8 = r6 ^ r5
	branch Test(NE,r8) l000159C0_ds_t
	// succ:  l000159C0_ds_f l000159C0_ds_t
l000159C0_ds_f:
	r4 = r4 ^ r3
	goto l000162EC
	// succ:  l000162EC
l000159C0_ds_t:
	r4 = r4 ^ r3
	goto l000159C0
	// succ:  l000159C0
l000162EC:
	r7 = r7 & 0x0000001F
	r8 = 0x00000003
	// succ:  l000162F4
l000162F4:
	r18 = cond(r8 -u r7)
	branch Test(GE,r18) l000162F4_ds_t
	// succ:  l000162F4_ds_f l000162F4_ds_t
l000162F4_ds_f:
	r5 = r7 + 0xFFFFFFFC
	goto l00016300
	// succ:  l00016300
l000162F4_ds_t:
	r5 = r7 + 0xFFFFFFFC
	goto l00016B50
	// succ:  l00016B50
l00016300:
	r3 = Mem0[r6:word32]
	r3 = r4 ^ r3
	r10 = r3 & 0x000000FF
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r4 = r10
	r4 = r10 + r10
	r4 = r4 + r4
	r11 = r9
	r11 = r9 + r9
	r11 = r11 + r11
	r4 = r4 + 0xFFFFC5D0
	r11 = r11 + 0xFFFFD1D0
	r10 = r3
	r10 = r3 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 >>u 1
	C = cond(r10)
	r10 = r10 & 0x000003FC
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r10 = r10 + 0xFFFFC9D0
	r3 = Mem0[r11:word32]
	r9 = r9 & 0x000003FC
	r11 = Mem0[r4:word32]
	r9 = r9 + 0xFFFFCDD0
	r10 = Mem0[r10:word32]
	r4 = Mem0[r9:word32]
	r3 = r3 ^ r11
	r3 = r3 ^ r10
	r18 = cond(r8 -u r5)
	branch Test(GE,r18) l00016300_ds_t
	// succ:  l00016300_ds_f l00016300_ds_t
l00016300_ds_f:
	r4 = r3 ^ r4
	goto l0001642C
	// succ:  l0001642C
l00016300_ds_t:
	r4 = r3 ^ r4
	goto l00016B40
	// succ:  l00016B40
l0001642C:
	r3 = Mem0[r6 + 4:word32]
	r10 = r7 + 0xFFFFFFF8
	r3 = r4 ^ r3
	r9 = r3 & 0x000000FF
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r11 = r9
	r11 = r9 + r9
	r11 = r11 + r11
	r12 = r4
	r12 = r4 + r4
	r12 = r12 + r12
	r11 = r11 + 0xFFFFC5D0
	r12 = r12 + 0xFFFFD1D0
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 & 0x000003FC
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r4 = r4 + 0xFFFFC9D0
	r3 = Mem0[r12:word32]
	r9 = r9 & 0x000003FC
	r12 = Mem0[r11:word32]
	r9 = r9 + 0xFFFFCDD0
	r11 = Mem0[r4:word32]
	r4 = Mem0[r9:word32]
	r3 = r3 ^ r12
	r3 = r3 ^ r11
	r18 = cond(r8 -u r10)
	branch Test(GE,r18) l0001642C_ds_t
	// succ:  l0001642C_ds_f l0001642C_ds_t
l0001642C_ds_f:
	r4 = r3 ^ r4
	goto l0001655C
	// succ:  l0001655C
l0001642C_ds_t:
	r4 = r3 ^ r4
	goto l00016B40
	// succ:  l00016B40
l0001655C:
	r3 = Mem0[r6 + 8:word32]
	r10 = r7 + 0xFFFFFFF4
	r3 = r4 ^ r3
	r9 = r3 & 0x000000FF
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r11 = r9
	r11 = r9 + r9
	r11 = r11 + r11
	r12 = r4
	r12 = r4 + r4
	r12 = r12 + r12
	r11 = r11 + 0xFFFFC5D0
	r12 = r12 + 0xFFFFD1D0
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 & 0x000003FC
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r4 = r4 + 0xFFFFC9D0
	r3 = Mem0[r12:word32]
	r9 = r9 & 0x000003FC
	r12 = Mem0[r11:word32]
	r9 = r9 + 0xFFFFCDD0
	r11 = Mem0[r4:word32]
	r4 = Mem0[r9:word32]
	r3 = r3 ^ r12
	r3 = r3 ^ r11
	r18 = cond(r8 -u r10)
	branch Test(GE,r18) l0001655C_ds_t
	// succ:  l0001655C_ds_f l0001655C_ds_t
l0001655C_ds_f:
	r4 = r3 ^ r4
	goto l0001668C
	// succ:  l0001668C
l0001655C_ds_t:
	r4 = r3 ^ r4
	goto l00016B40
	// succ:  l00016B40
l0001668C:
	r3 = Mem0[r6 + 12:word32]
	r10 = r7 + 0xFFFFFFF0
	r3 = r4 ^ r3
	r9 = r3 & 0x000000FF
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r11 = r9
	r11 = r9 + r9
	r11 = r11 + r11
	r12 = r4
	r12 = r4 + r4
	r12 = r12 + r12
	r11 = r11 + 0xFFFFC5D0
	r12 = r12 + 0xFFFFD1D0
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 & 0x000003FC
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r4 = r4 + 0xFFFFC9D0
	r3 = Mem0[r12:word32]
	r9 = r9 & 0x000003FC
	r12 = Mem0[r11:word32]
	r9 = r9 + 0xFFFFCDD0
	r11 = Mem0[r4:word32]
	r4 = Mem0[r9:word32]
	r3 = r3 ^ r12
	r3 = r3 ^ r11
	r18 = cond(r8 -u r10)
	branch Test(GE,r18) l0001668C_ds_t
	// succ:  l0001668C_ds_f l0001668C_ds_t
l0001668C_ds_f:
	r4 = r3 ^ r4
	goto l000167BC
	// succ:  l000167BC
l0001668C_ds_t:
	r4 = r3 ^ r4
	goto l00016B40
	// succ:  l00016B40
l000167BC:
	r3 = Mem0[r6 + 16:word32]
	r10 = r7 + 0xFFFFFFEC
	r3 = r4 ^ r3
	r9 = r3 & 0x000000FF
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r11 = r9
	r11 = r9 + r9
	r11 = r11 + r11
	r12 = r4
	r12 = r4 + r4
	r12 = r12 + r12
	r11 = r11 + 0xFFFFC5D0
	r12 = r12 + 0xFFFFD1D0
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 & 0x000003FC
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r4 = r4 + 0xFFFFC9D0
	r3 = Mem0[r12:word32]
	r9 = r9 & 0x000003FC
	r12 = Mem0[r11:word32]
	r9 = r9 + 0xFFFFCDD0
	r11 = Mem0[r4:word32]
	r4 = Mem0[r9:word32]
	r3 = r3 ^ r12
	r3 = r3 ^ r11
	r18 = cond(r8 -u r10)
	branch Test(GE,r18) l000167BC_ds_t
	// succ:  l000167BC_ds_f l000167BC_ds_t
l000167BC_ds_f:
	r4 = r3 ^ r4
	goto l000168EC
	// succ:  l000168EC
l000167BC_ds_t:
	r4 = r3 ^ r4
	goto l00016B40
	// succ:  l00016B40
l000168EC:
	r3 = Mem0[r6 + 20:word32]
	r10 = r7 + 0xFFFFFFE8
	r3 = r4 ^ r3
	r9 = r3 & 0x000000FF
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r11 = r9
	r11 = r9 + r9
	r11 = r11 + r11
	r12 = r4
	r12 = r4 + r4
	r12 = r12 + r12
	r11 = r11 + 0xFFFFC5D0
	r12 = r12 + 0xFFFFD1D0
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 & 0x000003FC
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r4 = r4 + 0xFFFFC9D0
	r3 = Mem0[r12:word32]
	r9 = r9 & 0x000003FC
	r12 = Mem0[r11:word32]
	r9 = r9 + 0xFFFFCDD0
	r11 = Mem0[r4:word32]
	r4 = Mem0[r9:word32]
	r3 = r3 ^ r12
	r3 = r3 ^ r11
	r18 = cond(r8 -u r10)
	branch Test(GE,r18) l000168EC_ds_t
	// succ:  l000168EC_ds_f l000168EC_ds_t
l000168EC_ds_f:
	r4 = r3 ^ r4
	goto l00016A1C
	// succ:  l00016A1C
l000168EC_ds_t:
	r4 = r3 ^ r4
	goto l00016B40
	// succ:  l00016B40
l00016A1C:
	r3 = Mem0[r6 + 24:word32]
	r3 = r4 ^ r3
	r8 = r3 & 0x000000FF
	r4 = r8
	r4 = r8 + r8
	r4 = r4 + r4
	r9 = r3
	r9 = r3 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r9 = r9 >>u 1
	C = cond(r9)
	r8 = r3
	r8 = r3 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r4 = r4 + 0xFFFFC5D0
	r10 = r8
	r10 = r8 + r8
	r10 = r10 + r10
	r9 = r9 & 0x000003FC
	r10 = r10 + 0xFFFFD1D0
	r8 = r3
	r8 = r3 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r4 = Mem0[r4:word32]
	r8 = r8 & 0x000003FC
	r10 = Mem0[r10:word32]
	r9 = r9 + 0xFFFFC9D0
	r8 = r8 + 0xFFFFCDD0
	r3 = Mem0[r9:word32]
	r8 = Mem0[r8:word32]
	r4 = r4 ^ r10
	r3 = r4 ^ r3
	r4 = r8 ^ r3
	// succ:  l00016B40
l00016B40:
	r5 = r5 & 0xFFFFFFFC
	r5 = r5 + 0x00000004
	r6 = r6 + r5
	r7 = r7 & 0x00000003
	// succ:  l00016B50
l00016B50:
	branch Test(EQ,r7) l00016B50_ds_t
	// succ:  l00016B50_ds_f l00016B50_ds_t
l00016B50_ds_f:
	r5 = r4 + r4
	goto l00016B58
	// succ:  l00016B58
l00016B50_ds_t:
	r5 = r4 + r4
	goto l00015884
	// succ:  l00015884
l00016B58:
	v17 = Mem0[r6:byte]
	r3 = (word32) v17
	r5 = r5 + r5
	r5 = r5 + r5
	r8 = r4
	r8 = r4 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r5 = r5 + r5
	r4 = r3 ^ r8
	r3 = r4
	r3 = r4 + r4
	r3 = r3 + r3
	r5 = r5 + r5
	r3 = r3 + 0xFFFFC5D0
	r4 = Mem0[r3:word32]
	r5 = r5 + r5
	r5 = r5 + r5
	r5 = r5 + r5
	r3 = r7 + 0xFFFFFFFF
	branch Test(EQ,r3) l00016B58_ds_t
	// succ:  l00016B58_ds_f l00016B58_ds_t
l00016B58_ds_f:
	r4 = r5 ^ r4
	goto l00016C04
	// succ:  l00016C04
l00016B58_ds_t:
	r4 = r5 ^ r4
	goto l00015884
	// succ:  l00015884
l00016C04:
	r5 = r4 + r4
	v18 = Mem0[r6 + 1:byte]
	r3 = (word32) v18
	r5 = r5 + r5
	r5 = r5 + r5
	r8 = r4
	r8 = r4 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r8 = r8 >>u 1
	C = cond(r8)
	r5 = r5 + r5
	r4 = r3 ^ r8
	r3 = r4
	r3 = r4 + r4
	r3 = r3 + r3
	r5 = r5 + r5
	r3 = r3 + 0xFFFFC5D0
	r3 = Mem0[r3:word32]
	r5 = r5 + r5
	r5 = r5 + r5
	r5 = r5 + r5
	r7 = r7 ^ 0x00000002
	branch Test(EQ,r7) l00016C04_ds_t
	// succ:  l00016C04_ds_f l00016C04_ds_t
l00016C04_ds_f:
	r4 = r5 ^ r3
	goto l00016CB4
	// succ:  l00016CB4
l00016C04_ds_t:
	r4 = r5 ^ r3
	goto l00015884
	// succ:  l00015884
l00016CB4:
	r5 = r4 + r4
	v19 = Mem0[r6 + 2:byte]
	r6 = (word32) v19
	r5 = r5 + r5
	r5 = r5 + r5
	r3 = r4
	r3 = r4 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r5 = r5 + r5
	r4 = r3 ^ r6
	r3 = r4
	r3 = r4 + r4
	r3 = r3 + r3
	r5 = r5 + r5
	r3 = r3 + 0xFFFFC5D0
	r3 = Mem0[r3:word32]
	r5 = r5 + r5
	r5 = r5 + r5
	r5 = r5 + r5
	r4 = r3 ^ r5
	goto l00015884
	// succ:  l00015884
fn000156B4_exit:


// fn00016D60
// Return size: 0
define fn00016D60
fn00016D60_entry:
	r1 = fp
	// succ:  l00016D60
l00016D60:
	branch Test(LE,r7) l00017004
	// succ:  l00016D64 l00017004
l00016D64:
	r3 = 0xFFFF8320
	r1 = r1 + 0xFFFFFEFC
	r4 = r1 + 0x00000008
	Mem0[r1 + 4:word32] = r3
	r11 = r1 + 0x00000084
	r3 = 0x00000001
	// succ:  l00016D80
l00016D80:
	Mem0[r4:word32] = r3
	r4 = r4 + 0x00000004
	r12 = r11 ^ r4
	branch Test(NE,r12) l00016D80_ds_t
	// succ:  l00016D80_ds_f l00016D80_ds_t
l00016D80_ds_f:
	r3 = r3 + r3
	goto l00016D94
	// succ:  l00016D94
l00016D80_ds_t:
	r3 = r3 + r3
	goto l00016D80
	// succ:  l00016D80
l00016D94:
	r3 = r1 + r12
	goto l00016D98
	// succ:  l00016D98
l00016D94_ds_f:
	r9 = r3
	goto l00016DA4
	// succ:  l00016DA4
l00016D94_ds_t:
	r9 = r3
	goto l00016DC8
	// succ:  l00016DC8
l00016D98:
	r3 = Mem0[r3 + 4:word32]
	branch Test(EQ,r3) l00016D94_ds_t
	goto l00016D94_ds_f
	// succ:  l00016D94_ds_f l00016D94_ds_t
l00016DA4:
	r9 = 0x00000000
	r4 = r1 + 0x00000004
	// succ:  l00016DAC
l00016DAC:
	r8 = r3 & 0x00000001
	branch Test(EQ,r8) l00016F38
	// succ:  l00016DB4 l00016F38
l00016DB4:
	r8 = Mem0[r4:word32]
	r3 = r3 >>u 1
	C = cond(r3)
	r4 = r4 + 0x00000004
	branch Test(NE,r3) l00016DB4_ds_t
	// succ:  l00016DB4_ds_f l00016DB4_ds_t
l00016DB4_ds_f:
	r9 = r9 ^ r8
	goto l00016DC8
	// succ:  l00016DC8
l00016DB4_ds_t:
	r9 = r9 ^ r8
	goto l00016DAC
	// succ:  l00016DAC
l00016DC8:
	Mem0[r12 + r11:word32] = r9
	r12 = r12 + 0x00000004
	r10 = r12 ^ 0x00000080
	branch Test(NE,r10) l00016DC8_ds_t
	// succ:  l00016DC8_ds_f l00016DC8_ds_t
l00016DC8_ds_f:
	r3 = r1 + r12
	goto l00016DDC
	// succ:  l00016DDC
l00016DC8_ds_t:
	r3 = r1 + r12
	goto l00016D98
	// succ:  l00016D98
l00016DDC:
	r3 = Mem0[r10 + r11:word32]
	goto l00016DE0
	// succ:  l00016DE0
l00016DDC_ds_f:
	r9 = r3
	goto l00016DE8
	// succ:  l00016DE8
l00016DDC_ds_t:
	r9 = r3
	goto l00016E0C
	// succ:  l00016E0C
l00016DE0:
	branch Test(EQ,r3) l00016DDC_ds_t
	goto l00016DDC_ds_f
	// succ:  l00016DDC_ds_f l00016DDC_ds_t
l00016DE8:
	r4 = r11
	r9 = 0x00000000
	// succ:  l00016DF0
l00016DF0:
	r8 = r3 & 0x00000001
	branch Test(EQ,r8) l00016F5C
	// succ:  l00016DF8 l00016F5C
l00016DF8:
	r8 = Mem0[r4:word32]
	r3 = r3 >>u 1
	C = cond(r3)
	r4 = r4 + 0x00000004
	branch Test(NE,r3) l00016DF8_ds_t
	// succ:  l00016DF8_ds_f l00016DF8_ds_t
l00016DF8_ds_f:
	r9 = r9 ^ r8
	goto l00016E0C
	// succ:  l00016E0C
l00016DF8_ds_t:
	r9 = r9 ^ r8
	goto l00016DF0
	// succ:  l00016DF0
l00016E0C:
	r3 = r1 + r10
	r10 = r10 + 0x00000004
	Mem0[r3 + 4:word32] = r9
	r3 = r10 ^ 0x00000080
	branch Test(NE,r3) l00016DDC
	// succ:  l00016E20 l00016DDC
l00016E20:
	r10 = 0x00000000
	goto l00016E24
	// succ:  l00016E24
l00016E20_ds_f:
	r9 = r3
	goto l00016E34
	// succ:  l00016E34
l00016E20_ds_t:
	r9 = r3
	goto l00016E58
	// succ:  l00016E58
l00016E24:
	r3 = r1 + r10
	r3 = Mem0[r3 + 4:word32]
	branch Test(EQ,r3) l00016E20_ds_t
	goto l00016E20_ds_f
	// succ:  l00016E20_ds_f l00016E20_ds_t
l00016E34:
	r9 = 0x00000000
	r4 = r1 + 0x00000004
	// succ:  l00016E3C
l00016E3C:
	r8 = r3 & 0x00000001
	branch Test(EQ,r8) l00016EEC
	// succ:  l00016E44 l00016EEC
l00016E44:
	r8 = Mem0[r4:word32]
	r3 = r3 >>u 1
	C = cond(r3)
	r4 = r4 + 0x00000004
	branch Test(NE,r3) l00016E44_ds_t
	// succ:  l00016E44_ds_f l00016E44_ds_t
l00016E44_ds_f:
	r9 = r9 ^ r8
	goto l00016E58
	// succ:  l00016E58
l00016E44_ds_t:
	r9 = r9 ^ r8
	goto l00016E3C
	// succ:  l00016E3C
l00016E58:
	Mem0[r10 + r11:word32] = r9
	r10 = r10 + 0x00000004
	r3 = r10 ^ 0x00000080
	branch Test(NE,r3) l00016E24
	// succ:  l00016E68 l00016E24
l00016E68:
	r4 = r7 & 0x00000001
	// succ:  l00016E6C
l00016E6C:
	branch Test(NE,r4) l00016F84
	// succ:  l00016E70 l00016F84
l00016E70:
	r12 = r7 >> 1
	C = cond(r12)
	branch Test(EQ,r12) l00016E70_ds_t
	// succ:  l00016E70_ds_f l00016E70_ds_t
l00016E70_ds_f:
	r3 = r5 ^ r6
	goto l00016E7C
	// succ:  l00016E7C
l00016E70_ds_t:
	r3 = r5 ^ r6
	goto l00016EE4
	// succ:  l00016EE4
l00016E7C:
	r10 = 0x00000000
	goto l00016E80
	// succ:  l00016E80
l00016E7C_ds_f:
	r9 = r3
	goto l00016E8C
	// succ:  l00016E8C
l00016E7C_ds_t:
	r9 = r3
	goto l00016EB0
	// succ:  l00016EB0
l00016E80:
	r3 = Mem0[r10 + r11:word32]
	branch Test(EQ,r3) l00016E7C_ds_t
	goto l00016E7C_ds_f
	// succ:  l00016E7C_ds_f l00016E7C_ds_t
l00016E8C:
	r4 = r11
	r9 = 0x00000000
	// succ:  l00016E94
l00016E94:
	r8 = r3 & 0x00000001
	branch Test(EQ,r8) l00016F10
	// succ:  l00016E9C l00016F10
l00016E9C:
	r8 = Mem0[r4:word32]
	r3 = r3 >>u 1
	C = cond(r3)
	r4 = r4 + 0x00000004
	branch Test(NE,r3) l00016E9C_ds_t
	// succ:  l00016E9C_ds_f l00016E9C_ds_t
l00016E9C_ds_f:
	r9 = r9 ^ r8
	goto l00016EB0
	// succ:  l00016EB0
l00016E9C_ds_t:
	r9 = r9 ^ r8
	goto l00016E94
	// succ:  l00016E94
l00016EB0:
	r3 = r1 + r10
	r10 = r10 + 0x00000004
	Mem0[r3 + 4:word32] = r9
	r3 = r10 ^ 0x00000080
	branch Test(NE,r3) l00016E80
	// succ:  l00016EC4 l00016E80
l00016EC4:
	r12 = r12 & 0x00000001
	// succ:  l00016EC8
l00016EC8:
	branch Test(NE,r12) l00016FC4
	// succ:  l00016ECC l00016FC4
l00016ECC:
	r3 = r7
	r3 = r7 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	branch Test(NE,r3) l00016ECC_ds_t
	// succ:  l00016ECC_ds_f l00016ECC_ds_t
l00016ECC_ds_f:
	r7 = r3
	goto l00016EE0
	// succ:  l00016EE0
l00016ECC_ds_t:
	r7 = r3
	goto l00016E20
	// succ:  l00016E20
l00016EE0:
	r3 = r5 ^ r6
	// succ:  l00016EE4
l00016EE4:
	r1 = r1 + 0x00000104
	return
	// succ:  fn00016D60_exit
l00016EEC:
	r3 = r3 >>u 1
	C = cond(r3)
	branch Test(NE,r3) l00016EEC_ds_t
	// succ:  l00016EEC_ds_f l00016EEC_ds_t
l00016EEC_ds_f:
	r4 = r4 + 0x00000004
	goto l00016EF8
	// succ:  l00016EF8
l00016EEC_ds_t:
	r4 = r4 + 0x00000004
	goto l00016E3C
	// succ:  l00016E3C
l00016EF8:
	Mem0[r10 + r11:word32] = r9
	r10 = r10 + 0x00000004
	r3 = r10 ^ 0x00000080
	branch Test(NE,r3) l00016E24
	// succ:  l00016F08 l00016E24
l00016F08:
	r4 = r7 & 0x00000001
	goto l00016E6C
	// succ:  l00016E6C
l00016F10:
	r3 = r3 >>u 1
	C = cond(r3)
	branch Test(NE,r3) l00016F10_ds_t
	// succ:  l00016F10_ds_f l00016F10_ds_t
l00016F10_ds_f:
	r4 = r4 + 0x00000004
	goto l00016F1C
	// succ:  l00016F1C
l00016F10_ds_t:
	r4 = r4 + 0x00000004
	goto l00016E94
	// succ:  l00016E94
l00016F1C:
	r3 = r1 + r10
	r10 = r10 + 0x00000004
	Mem0[r3 + 4:word32] = r9
	r3 = r10 ^ 0x00000080
	branch Test(NE,r3) l00016E80
	// succ:  l00016F30 l00016E80
l00016F30:
	r12 = r12 & 0x00000001
	goto l00016EC8
	// succ:  l00016EC8
l00016F38:
	r3 = r3 >>u 1
	C = cond(r3)
	branch Test(NE,r3) l00016F38_ds_t
	// succ:  l00016F38_ds_f l00016F38_ds_t
l00016F38_ds_f:
	r4 = r4 + 0x00000004
	goto l00016F44
	// succ:  l00016F44
l00016F38_ds_t:
	r4 = r4 + 0x00000004
	goto l00016DAC
	// succ:  l00016DAC
l00016F44:
	Mem0[r12 + r11:word32] = r9
	r12 = r12 + 0x00000004
	r10 = r12 ^ 0x00000080
	branch Test(NE,r10) l00016D94
	// succ:  l00016F54 l00016D94
l00016F54:
	r3 = Mem0[r10 + r11:word32]
	goto l00016DE0
	// succ:  l00016DE0
l00016F5C:
	r3 = r3 >>u 1
	C = cond(r3)
	branch Test(NE,r3) l00016F5C_ds_t
	// succ:  l00016F5C_ds_f l00016F5C_ds_t
l00016F5C_ds_f:
	r4 = r4 + 0x00000004
	goto l00016F68
	// succ:  l00016F68
l00016F5C_ds_t:
	r4 = r4 + 0x00000004
	goto l00016DF0
	// succ:  l00016DF0
l00016F68:
	r3 = r1 + r10
	r10 = r10 + 0x00000004
	Mem0[r3 + 4:word32] = r9
	r3 = r10 ^ 0x00000080
	branch Test(NE,r3) l00016DDC
	// succ:  l00016F7C l00016DDC
l00016F7C:
	r10 = 0x00000000
	goto l00016E24
	// succ:  l00016E24
l00016F84:
	branch Test(EQ,r5) l00016F84_ds_t
	// succ:  l00016F84_ds_f l00016F84_ds_t
l00016F84_ds_f:
	r4 = r11
	goto l00016F8C
	// succ:  l00016F8C
l00016F84_ds_t:
	r4 = r11
	goto l00016E70
	// succ:  l00016E70
l00016F8C:
	r8 = r5 & 0x00000001
	branch Test(EQ,r8) l00016FB0
	// succ:  l00016F94 l00016FB0
l00016F94:
	r8 = Mem0[r4:word32]
	r5 = r5 >>u 1
	C = cond(r5)
	r4 = r4 + 0x00000004
	branch Test(NE,r5) l00016F94_ds_t
	// succ:  l00016F94_ds_f l00016F94_ds_t
l00016F94_ds_f:
	r3 = r3 ^ r8
	goto l00016FA8
	// succ:  l00016FA8
l00016F94_ds_t:
	r3 = r3 ^ r8
	goto l00016F8C
	// succ:  l00016F8C
l00016FA8:
	r5 = r3
	goto l00016E70
	// succ:  l00016E70
l00016FB0:
	r5 = r5 >>u 1
	C = cond(r5)
	branch Test(NE,r5) l00016FB0_ds_t
	// succ:  l00016FB0_ds_f l00016FB0_ds_t
l00016FB0_ds_f:
	r4 = r4 + 0x00000004
	goto l00016FBC
	// succ:  l00016FBC
l00016FB0_ds_t:
	r4 = r4 + 0x00000004
	goto l00016F8C
	// succ:  l00016F8C
l00016FBC:
	r5 = r3
	goto l00016E70
	// succ:  l00016E70
l00016FC4:
	branch Test(EQ,r5) l00016ECC
	// succ:  l00016FC8 l00016ECC
l00016FC8:
	r4 = r1 + 0x00000004
	// succ:  l00016FCC
l00016FCC:
	r8 = r5 & 0x00000001
	branch Test(EQ,r8) l00016FF0
	// succ:  l00016FD4 l00016FF0
l00016FD4:
	r8 = Mem0[r4:word32]
	r5 = r5 >>u 1
	C = cond(r5)
	r4 = r4 + 0x00000004
	branch Test(NE,r5) l00016FD4_ds_t
	// succ:  l00016FD4_ds_f l00016FD4_ds_t
l00016FD4_ds_f:
	r3 = r3 ^ r8
	goto l00016FE8
	// succ:  l00016FE8
l00016FD4_ds_t:
	r3 = r3 ^ r8
	goto l00016FCC
	// succ:  l00016FCC
l00016FE8:
	r5 = r3
	goto l00016ECC
	// succ:  l00016ECC
l00016FF0:
	r5 = r5 >>u 1
	C = cond(r5)
	branch Test(NE,r5) l00016FF0_ds_t
	// succ:  l00016FF0_ds_f l00016FF0_ds_t
l00016FF0_ds_f:
	r4 = r4 + 0x00000004
	goto l00016FFC
	// succ:  l00016FFC
l00016FF0_ds_t:
	r4 = r4 + 0x00000004
	goto l00016FCC
	// succ:  l00016FCC
l00016FFC:
	r5 = r3
	goto l00016ECC
	// succ:  l00016ECC
l00017004:
	r3 = r5
	return
	// succ:  fn00016D60_exit
fn00016D60_exit:


// fn00017044
// Return size: 0
define fn00017044
fn00017044_entry:
	r1 = fp
	// succ:  l00017044
l00017044:
	branch Test(EQ,r6) l00017064
	// succ:  l00017048 l00017064
l00017048:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x00017050
	call fn000156B4 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn00017044_exit
l00017064:
	r3 = r6
	return
	// succ:  fn00017044_exit
fn00017044_exit:


// fn00017F30
// Return size: 0
define fn00017F30
fn00017F30_entry:
	r1 = fp
	// succ:  l00017F30
l00017F30:
	r3 = 0x00000000
	branch Test(EQ,r5) l00017F80
	// succ:  l00017F38 l00017F80
l00017F38:
	branch Test(EQ,r6) l00017F80
	// succ:  l00017F3C l00017F80
l00017F3C:
	branch Test(GE,r5) l00017F3C_ds_t
	// succ:  l00017F3C_ds_f l00017F3C_ds_t
l00017F3C_ds_f:
	r4 = r5 ^ r6
	goto l00017F44
	// succ:  l00017F44
l00017F3C_ds_t:
	r4 = r5 ^ r6
	goto l00017F48
	// succ:  l00017F48
l00017F44:
	r5 = -r5
	// succ:  l00017F48
l00017F48:
	branch Test(GE,r6) l00017F50
	// succ:  l00017F4C l00017F50
l00017F4C:
	r6 = -r6
	// succ:  l00017F50
l00017F50:
	goto l00017F58
	// succ:  l00017F58
l00017F54:
	r5 = r5 + r5
	C = cond(r5)
	// succ:  l00017F58
l00017F58:
	r6 = r6 >>u 1
	C = cond(r6)
	r7 = (word32) C
	branch Test(EQ,r7) l00017F54
	// succ:  l00017F64 l00017F54
l00017F64:
	branch Test(NE,r6) l00017F64_ds_t
	// succ:  l00017F64_ds_f l00017F64_ds_t
l00017F64_ds_f:
	r3 = r3 + r5
	C = cond(r3)
	goto l00017F6C
	// succ:  l00017F6C
l00017F64_ds_t:
	r3 = r3 + r5
	C = cond(r3)
	goto l00017F54
	// succ:  l00017F54
l00017F6C:
	branch Test(LT,r4) l00017F78
	// succ:  l00017F70 l00017F78
l00017F70:
	return
	// succ:  fn00017F30_exit
l00017F78:
	r3 = -r3
	return
	// succ:  fn00017F30_exit
l00017F80:
	r3 = 0x00000000
	return
	// succ:  fn00017F30_exit
fn00017F30_exit:


// fn00017F88
// Return size: 0
define fn00017F88
fn00017F88_entry:
	r1 = fp
	// succ:  l00017F88
l00017F88:
	r1 = r1 + 0xFFFFFFF4
	Mem0[r1:word32] = r29
	Mem0[r1 + 4:word32] = r30
	Mem0[r1 + 8:word32] = r31
	branch Test(EQ,r6) l00018018
	// succ:  l00017F9C l00018018
l00017F9C:
	branch Test(EQ,r5) l00017F9C_ds_t
	// succ:  l00017F9C_ds_f l00017F9C_ds_t
l00017F9C_ds_f:
	r30 = 0x00000000
	goto l00017FA4
	// succ:  l00017FA4
l00017F9C_ds_t:
	r30 = 0x00000000
	goto l00018018
	// succ:  l00018018
l00017FA4:
	r29 = 0x00000020
	r18 = r6 - r5
	C = cond(r18)
	branch Test(EQ,r18) l00017FA4_ds_t
	// succ:  l00017FA4_ds_f l00017FA4_ds_t
l00017FA4_ds_f:
	r3 = 0x00000001
	goto l00017FB4
	// succ:  l00017FB4
l00017FA4_ds_t:
	r3 = 0x00000001
	goto l0001801C
	// succ:  l0001801C
l00017FB4:
	r18 = r5 ^ r6
	branch Test(GE,r18) l00017FB4_ds_t
	// succ:  l00017FB4_ds_f l00017FB4_ds_t
l00017FB4_ds_f:
	r3 = 0x00000000
	goto l00017FC0
	// succ:  l00017FC0
l00017FB4_ds_t:
	r3 = 0x00000000
	goto l00017FC8
	// succ:  l00017FC8
l00017FC0:
	branch Test(LT,r6) l0001801C
	// succ:  l00017FC4 l0001801C
l00017FC4:
	goto l00017FD0
	// succ:  l00017FD0
l00017FC8:
	r18 = r5 - r6
	C = cond(r18)
	branch Test(LT,r18) l0001801C
	// succ:  l00017FD0 l0001801C
l00017FD0:
	branch Test(GT,r6) l00017FDC
	// succ:  l00017FD4 l00017FDC
l00017FD4:
	r3 = 0x00000001
	goto l0001801C
	// succ:  l0001801C
l00017FDC:
	branch Test(LT,r5) l00017FEC
	// succ:  l00017FE0 l00017FEC
l00017FE0:
	r5 = r5 + r5
	C = cond(r5)
	branch Test(GT,r5) l00017FE0_ds_t
	// succ:  l00017FE0_ds_f l00017FE0_ds_t
l00017FE0_ds_f:
	r29 = r29 + 0xFFFFFFFF
	goto l00017FEC
	// succ:  l00017FEC
l00017FE0_ds_t:
	r29 = r29 + 0xFFFFFFFF
	goto l00017FE0
	// succ:  l00017FE0
l00017FEC:
	r5 = r5 + r5
	C = cond(r5)
	r30 = r30 + r30 + C
	C = cond(r30)
	r31 = r30 - r6
	C = cond(r31)
	branch Test(LT,r31) l00018004
	// succ:  l00017FFC l00018004
l00017FFC:
	r30 = r31
	r3 = r3 + 0x00000001
	// succ:  l00018004
l00018004:
	r29 = r29 + 0xFFFFFFFF
	branch Test(EQ,r29) l00018014
	// succ:  l0001800C l00018014
l0001800C:
	r3 = r3 + r3
	C = cond(r3)
	goto l00017FEC
	// succ:  l00017FEC
l00018014:
	goto l0001801C
	// succ:  l0001801C
l00018018:
	r3 = 0x00000000
	// succ:  l0001801C
l0001801C:
	r29 = Mem0[r1:word32]
	r30 = Mem0[r1 + 4:word32]
	r31 = Mem0[r1 + 8:word32]
	r1 = r1 + 0x0000000C
	return
	// succ:  fn00017F88_exit
fn00017F88_exit:


// fn00018030
// Return size: 0
define fn00018030
fn00018030_entry:
	r1 = fp
	// succ:  l00018030
l00018030:
	r1 = r1 + 0xFFFFFFF4
	Mem0[r1:word32] = r29
	Mem0[r1 + 4:word32] = r30
	Mem0[r1 + 8:word32] = r31
	branch Test(EQ,r6) l000180D4
	// succ:  l00018044 l000180D4
l00018044:
	branch Test(EQ,r5) l00018044_ds_t
	// succ:  l00018044_ds_f l00018044_ds_t
l00018044_ds_f:
	r3 = 0x00000000
	goto l0001804C
	// succ:  l0001804C
l00018044_ds_t:
	r3 = 0x00000000
	goto l000180D4
	// succ:  l000180D4
l0001804C:
	r30 = 0x00000000
	r29 = 0x00000020
	r18 = r6 - r5
	C = cond(r18)
	branch Test(EQ,r18) l000180D8
	// succ:  l0001805C l000180D8
l0001805C:
	r18 = r5 ^ r6
	branch Test(GE,r18) l0001805C_ds_t
	// succ:  l0001805C_ds_f l0001805C_ds_t
l0001805C_ds_f:
	r3 = r5
	goto l00018068
	// succ:  l00018068
l0001805C_ds_t:
	r3 = r5
	goto l00018070
	// succ:  l00018070
l00018068:
	branch Test(LT,r6) l000180D8
	// succ:  l0001806C l000180D8
l0001806C:
	goto l00018078
	// succ:  l00018078
l00018070:
	r18 = r6 - r5
	C = cond(r18)
	branch Test(GT,r18) l000180D8
	// succ:  l00018078 l000180D8
l00018078:
	branch Test(GT,r6) l00018078_ds_t
	// succ:  l00018078_ds_f l00018078_ds_t
l00018078_ds_f:
	r3 = 0x00000000
	goto l00018080
	// succ:  l00018080
l00018078_ds_t:
	r3 = 0x00000000
	goto l00018098
	// succ:  l00018098
l00018080:
	r18 = 0xFFFFFFFF
	r5 = r5 & r18
	r6 = r6 & r18
	r3 = r5 - r6
	C = cond(r3)
	goto l000180D8
	// succ:  l000180D8
l00018098:
	branch Test(LT,r5) l000180A8
	// succ:  l0001809C l000180A8
l0001809C:
	r5 = r5 + r5
	C = cond(r5)
	branch Test(GE,r5) l0001809C_ds_t
	// succ:  l0001809C_ds_f l0001809C_ds_t
l0001809C_ds_f:
	r29 = r29 + 0xFFFFFFFF
	goto l000180A8
	// succ:  l000180A8
l0001809C_ds_t:
	r29 = r29 + 0xFFFFFFFF
	goto l0001809C
	// succ:  l0001809C
l000180A8:
	r5 = r5 + r5
	C = cond(r5)
	r3 = r3 + r3 + C
	C = cond(r3)
	r31 = r3 - r6
	C = cond(r31)
	branch Test(LT,r31) l000180C0
	// succ:  l000180B8 l000180C0
l000180B8:
	r3 = r31
	r30 = r30 + 0x00000001
	// succ:  l000180C0
l000180C0:
	r29 = r29 + 0xFFFFFFFF
	branch Test(EQ,r29) l000180D0
	// succ:  l000180C8 l000180D0
l000180C8:
	r30 = r30 + r30
	C = cond(r30)
	goto l000180A8
	// succ:  l000180A8
l000180D0:
	goto l000180D8
	// succ:  l000180D8
l000180D4:
	r3 = 0x00000000
	// succ:  l000180D8
l000180D8:
	r29 = Mem0[r1:word32]
	r30 = Mem0[r1 + 4:word32]
	r31 = Mem0[r1 + 8:word32]
	r1 = r1 + 0x0000000C
	return
	// succ:  fn00018030_exit
fn00018030_exit:


// fn000180F8
// Return size: 0
define fn000180F8
fn000180F8_entry:
	r1 = fp
	// succ:  l000180F8
l000180F8:
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn000180F8_exit
fn000180F8_exit:


// fn00018150
// Return size: 0
define fn00018150
fn00018150_entry:
	r1 = fp
	// succ:  l00018150
l00018150:
	Mem0[r1 + 8:word32] = r6
	Mem0[r1 + 12:word32] = r7
	Mem0[r1 + 16:word32] = r8
	Mem0[r1 + 20:word32] = r9
	Mem0[r1 + 24:word32] = r10
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00018150_exit
fn00018150_exit:


// fn000181D0
// Return size: 0
define fn000181D0
fn000181D0_entry:
	r1 = fp
	// succ:  l000181D0
l000181D0:
	Mem0[r1 + 12:word32] = r7
	Mem0[r1 + 16:word32] = r8
	Mem0[r1 + 20:word32] = r9
	Mem0[r1 + 24:word32] = r10
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn000181D0_exit
fn000181D0_exit:


// fn0001831C
// Return size: 0
define fn0001831C
fn0001831C_entry:
	r1 = fp
	// succ:  l0001831C
l0001831C:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	Mem0[r19 + 24:word32] = r8
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0001831C_exit
fn0001831C_exit:


// fn000187F4
// Return size: 0
define fn000187F4
fn000187F4_entry:
	r1 = fp
	// succ:  l000187F4
l000187F4:
	return
	// succ:  fn000187F4_exit
fn000187F4_exit:


// fn0001881C
// Return size: 0
define fn0001881C
fn0001881C_entry:
	r1 = fp
	// succ:  l0001881C
l0001881C:
	return
	// succ:  fn0001881C_exit
fn0001881C_exit:


// fn000188F0
// Return size: 0
define fn000188F0
fn000188F0_entry:
	r1 = fp
	// succ:  l000188F0
l000188F0:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn000188F0_exit
fn000188F0_exit:


// fn00018918
// Return size: 0
define fn00018918
fn00018918_entry:
	r1 = fp
	// succ:  l00018918
l00018918:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00018918_exit
fn00018918_exit:


// fn00018C34
// Return size: 0
define fn00018C34
fn00018C34_entry:
	r1 = fp
	// succ:  l00018C34
l00018C34:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00018C34_exit
fn00018C34_exit:


// fn00018C64
// Return size: 0
define fn00018C64
fn00018C64_entry:
	r1 = fp
	// succ:  l00018C64
l00018C64:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00018C64_exit
fn00018C64_exit:


// fn00018C94
// Return size: 0
define fn00018C94
fn00018C94_entry:
	r1 = fp
	// succ:  l00018C94
l00018C94:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00018C94_exit
fn00018C94_exit:


// fn00018CC4
// Return size: 0
define fn00018CC4
fn00018CC4_entry:
	r1 = fp
	// succ:  l00018CC4
l00018CC4:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00018CC4_exit
fn00018CC4_exit:


// fn00018E00
// Return size: 0
define fn00018E00
fn00018E00_entry:
	r1 = fp
	// succ:  l00018E00
l00018E00:
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00018E00_exit
fn00018E00_exit:


// fn00018EE4
// Return size: 0
define fn00018EE4
fn00018EE4_entry:
	r1 = fp
	// succ:  l00018EE4
l00018EE4:
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00018EE4_exit
fn00018EE4_exit:


// fn00018FBC
// Return size: 0
define fn00018FBC
fn00018FBC_entry:
	r1 = fp
	// succ:  l00018FBC
l00018FBC:
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00018FBC_exit
fn00018FBC_exit:


// fn0001908C
// Return size: 0
define fn0001908C
fn0001908C_entry:
	r1 = fp
	// succ:  l0001908C
l0001908C:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0001908C_exit
fn0001908C_exit:


// fn000190F0
// Return size: 0
define fn000190F0
fn000190F0_entry:
	r1 = fp
	// succ:  l000190F0
l000190F0:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn000190F0_exit
fn000190F0_exit:


// fn00019120
// Return size: 0
define fn00019120
fn00019120_entry:
	r1 = fp
	// succ:  l00019120
l00019120:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00019120_exit
fn00019120_exit:


// fn00019150
// Return size: 0
define fn00019150
fn00019150_entry:
	r1 = fp
	// succ:  l00019150
l00019150:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn00019150_exit
fn00019150_exit:


// fn00019980
// Return size: 0
define fn00019980
fn00019980_entry:
	r1 = fp
	// succ:  l00019980
l00019980:
	r5 = 0xFFFF8E64
	r3 = 0xFFFF8E64
	r3 = r3 ^ r5
	branch Test(EQ,r3) l000199C0
	// succ:  l00019998 l000199C0
l00019998:
	r3 = 0x00000000
	branch Test(EQ,r3) l000199C0
	// succ:  l000199A4 l000199C0
l000199A4:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x000199AC
	call 0x000199AC + r3 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn00019980_exit
l000199C0:
	return
	// succ:  fn00019980_exit
fn00019980_exit:


// fn000199C8
// Return size: 0
define fn000199C8
fn000199C8_entry:
	r1 = fp
	// succ:  l000199C8
l000199C8:
	r5 = 0xFFFF8E64
	r3 = 0xFFFF8E64
	r3 = r3 - r5
	r4 = r3
	r4 = r3 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r6 = r4
	r6 = r4 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 + r4
	r6 = r6 >> 1
	C = cond(r6)
	branch Test(EQ,r6) l00019A9C
	// succ:  l00019A74 l00019A9C
l00019A74:
	r3 = 0x00000000
	branch Test(EQ,r3) l00019A9C
	// succ:  l00019A80 l00019A9C
l00019A80:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x00019A88
	call 0x00019A88 + r3 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn000199C8_exit
l00019A9C:
	return
	// succ:  fn000199C8_exit
fn000199C8_exit:


// fn00019BC8
// Return size: 0
define fn00019BC8
fn00019BC8_entry:
	r1 = fp
	// succ:  l00019BC8
l00019BC8:
	r7 = Mem0[0x00008EA4:word32]
	r6 = 0x000069AC
	r5 = Mem0[0x00008EB8:word32]
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x00019BEC
	call fn0002EB28 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x000069C4
	r7 = 0x0000000C
	r15 = 0x00019C0C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x000069D4
	r7 = 0x00000025
	r15 = 0x00019C2C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x000069FC
	r7 = 0x00000038
	r15 = 0x00019C4C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006A38
	r7 = 0x00000035
	r15 = 0x00019C6C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006A70
	r7 = 0x00000028
	r15 = 0x00019C8C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006A9C
	r7 = 0x0000004D
	r15 = 0x00019CAC
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006AEC
	r7 = 0x0000002E
	r15 = 0x00019CCC
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006B1C
	r7 = 0x00000022
	r15 = 0x00019CEC
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006B40
	r7 = 0x00000037
	r15 = 0x00019D0C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006B78
	r7 = 0x00000047
	r15 = 0x00019D2C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006BC0
	r7 = 0x00000040
	r15 = 0x00019D4C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006C04
	r7 = 0x00000021
	r15 = 0x00019D6C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006C28
	r7 = 0x0000002C
	r15 = 0x00019D8C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006C58
	r7 = 0x00000034
	r15 = 0x00019DAC
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006C90
	r7 = 0x0000001D
	r15 = 0x00019DCC
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006CB0
	r7 = 0x00000043
	r15 = 0x00019DEC
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006CF4
	r7 = 0x00000033
	r15 = 0x00019E0C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006D28
	r7 = 0x0000002E
	r15 = 0x00019E2C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006D58
	r7 = 0x0000002B
	r15 = 0x00019E4C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r8 = Mem0[0x00008EB8:word32]
	r5 = 0x00006D84
	r7 = 0x00000016
	r15 = 0x00019E6C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r5 = 0x00006D9C
	r8 = Mem0[0x00008EB8:word32]
	r7 = 0x00000038
	r15 = 0x00019E8C
	r6 = 0x00000001
	call fn0002F128 (retsize: 0;)
	r15 = 0x00019E98
	r5 = 0x00000001
	call fn0002F274 (retsize: 0;)
	r1 = r1 + 0xFFFFFFA8
	Mem0[r1:word32] = r15
	Mem0[r1 + 40:word32] = r19
	Mem0[r1 + 44:word32] = r21
	Mem0[r1 + 48:word32] = r22
	Mem0[r1 + 52:word32] = r23
	Mem0[r1 + 56:word32] = r24
	Mem0[r1 + 60:word32] = r25
	Mem0[r1 + 64:word32] = r26
	Mem0[r1 + 68:word32] = r27
	Mem0[r1 + 72:word32] = r28
	Mem0[r1 + 76:word32] = r29
	Mem0[r1 + 80:word32] = r30
	Mem0[r1 + 84:word32] = r31
	r3 = Mem0[r5:word32]
	r4 = 0x00000001
	Mem0[0x00008EA0:word32] = r0
	Mem0[0x00008E9C:word32] = r4
	Mem0[0x00008E88:word32] = r0
	Mem0[0x00008E8C:word32] = r0
	Mem0[0x00008E90:word32] = r0
	r18 = cond(r4 - r6)
	branch Test(GE,r18) l00019BC8_ds_t
	// succ:  l00019BC8_ds_f l00019BC8_ds_t
l00019BC8_ds_f:
	Mem0[r3 + 104:word32] = r0
	goto l00019F14
	// succ:  l00019F14
l00019BC8_ds_t:
	Mem0[r3 + 104:word32] = r0
	goto l0001A1C0
	// succ:  l0001A1C0
l00019F14:
	r25 = 0x00000000
	r24 = r8
	r21 = r7
	r22 = r6
	r23 = r5
	r26 = r25
	r30 = r4
	r28 = 0xFFFF8E88
	r29 = 0x00000078
	// succ:  l00019F3C
l00019F3C:
	r19 = r30 + r30
	r31 = r19 + r19
	r19 = Mem0[r31 + r21:word32]
	v24 = Mem0[r19:byte]
	r3 = (word32) v24
	v25 = SLICE(r3, int8, 0)
	r3 = (int32) v25
	r3 = r3 ^ 0x0000002D
	branch Test(EQ,r3) l00019FBC
	// succ:  l00019F58 l00019FBC
l00019F58:
	branch Test(EQ,r24) l00019F58_ds_t
	// succ:  l00019F58_ds_f l00019F58_ds_t
l00019F58_ds_f:
	r3 = r30
	goto l00019F60
	// succ:  l00019F60
l00019F58_ds_t:
	r3 = r30
	goto l00019F80
	// succ:  l00019F80
l00019F60:
	branch Test(NE,r26) l0001A074
	// succ:  l00019F64 l0001A074
l00019F64:
	branch Test(EQ,r25) l00019F64_ds_t
	// succ:  l00019F64_ds_f l00019F64_ds_t
l00019F64_ds_f:
	r15 = Mem0[r1:word32]
	goto l00019F6C
	// succ:  l00019F6C
l00019F64_ds_t:
	r15 = Mem0[r1:word32]
	goto l00019F84
	// succ:  l00019F84
l00019F6C:
	r6 = r25
	// succ:  l00019F70
l00019F70:
	r15 = 0x00019F70
	r5 = r23
	call fn0001AAB0 (retsize: 0;)
	branch Test(EQ,r3) l0001A1B8
	// succ:  l00019F7C l0001A1B8
l00019F7C:
	r3 = r30
	// succ:  l00019F80
l00019F80:
	r15 = Mem0[r1:word32]
	// succ:  l00019F84
l00019F84:
	r19 = Mem0[r1 + 40:word32]
	r21 = Mem0[r1 + 44:word32]
	r22 = Mem0[r1 + 48:word32]
	r23 = Mem0[r1 + 52:word32]
	r24 = Mem0[r1 + 56:word32]
	r25 = Mem0[r1 + 60:word32]
	r26 = Mem0[r1 + 64:word32]
	r27 = Mem0[r1 + 68:word32]
	r28 = Mem0[r1 + 72:word32]
	r29 = Mem0[r1 + 76:word32]
	r30 = Mem0[r1 + 80:word32]
	r31 = Mem0[r1 + 84:word32]
	r1 = r1 + 0x00000058
	return
	// succ:  fn00019BC8_exit
l00019FBC:
	r19 = r19 + 0x00000001
	r6 = 0x00006E0C
	r5 = r19
	r15 = 0x00019FCC
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(NE,r3) l00019FBC_ds_t
	// succ:  l00019FBC_ds_f l00019FBC_ds_t
l00019FBC_ds_f:
	r27 = r3
	goto l00019FDC
	// succ:  l00019FDC
l00019FBC_ds_t:
	r27 = r3
	goto l0001A374
	// succ:  l0001A374
l00019FDC:
	r6 = 0x00006E44
	r5 = r19
	r15 = 0x00019FE8
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l00019FDC_ds_t
	// succ:  l00019FDC_ds_f l00019FDC_ds_t
l00019FDC_ds_f:
	r5 = r19
	goto l00019FF8
	// succ:  l00019FF8
l00019FDC_ds_t:
	r5 = r19
	goto l0001A030
	// succ:  l0001A030
l00019FF8:
	r30 = r30 + 0x00000001
	r18 = cond(r30 - r22)
	branch Test(GE,r18) l00019FF8_ds_t
	// succ:  l00019FF8_ds_f l00019FF8_ds_t
l00019FF8_ds_f:
	r31 = r31 + 0x00000004
	goto l0001A008
	// succ:  l0001A008
l00019FF8_ds_t:
	r31 = r31 + 0x00000004
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A008:
	r6 = 0x00006E4C
	r5 = Mem0[r31 + r21:word32]
	r15 = 0x0001A014
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A08C
	// succ:  l0001A020 l0001A08C
l0001A020:
	Mem0[0x00008E9C:word32] = r27
	r30 = r30 + 0x00000001
	goto l0001A068
	// succ:  l0001A068
l0001A030:
	r6 = 0x00006E64
	r15 = 0x0001A038
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A030_ds_t
	// succ:  l0001A030_ds_f l0001A030_ds_t
l0001A030_ds_f:
	r5 = r19
	goto l0001A048
	// succ:  l0001A048
l0001A030_ds_t:
	r5 = r19
	goto l0001A0B8
	// succ:  l0001A0B8
l0001A048:
	r3 = Mem0[0x00008E84:word32]
	branch Test(EQ,r3) l0001A128
	// succ:  l0001A054 l0001A128
l0001A054:
	r5 = Mem0[r23:word32]
	// succ:  l0001A058
l0001A058:
	r3 = Mem0[r5 + 104:word32]
	r3 = r3 + 0x00000001
	Mem0[r5 + 104:word32] = r3
	// succ:  l0001A064
l0001A064:
	r30 = r30 + 0x00000001
	// succ:  l0001A068
l0001A068:
	r18 = cond(r30 - r22)
	branch Test(LT,r18) l00019F3C
	// succ:  l0001A070 l00019F3C
l0001A070:
	goto l00019F58
	// succ:  l00019F58
l0001A074:
	r15 = 0x0001A074
	r5 = r23
	call fn0001E93C (retsize: 0;)
	branch Test(NE,r25) l0001A074_ds_t
	// succ:  l0001A074_ds_f l0001A074_ds_t
l0001A074_ds_f:
	r6 = r25
	goto l0001A084
	// succ:  l0001A084
l0001A074_ds_t:
	r6 = r25
	goto l00019F70
	// succ:  l00019F70
l0001A084:
	r3 = r30
	goto l00019F80
	// succ:  l00019F80
l0001A08C:
	r6 = 0x00006E54
	r5 = Mem0[r31 + r21:word32]
	r15 = 0x0001A098
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A08C_ds_t
	// succ:  l0001A08C_ds_f l0001A08C_ds_t
l0001A08C_ds_f:
	r3 = 0x00000001
	goto l0001A0A8
	// succ:  l0001A0A8
l0001A08C_ds_t:
	r3 = 0x00000001
	goto l0001A168
	// succ:  l0001A168
l0001A0A8:
	Mem0[0x00008E9C:word32] = r3
	r30 = r30 + 0x00000001
	goto l0001A068
	// succ:  l0001A068
l0001A0B8:
	r6 = 0x00006E6C
	r15 = 0x0001A0C0
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(NE,r3) l0001A0B8_ds_t
	// succ:  l0001A0B8_ds_f l0001A0B8_ds_t
l0001A0B8_ds_f:
	r5 = r19
	goto l0001A0D0
	// succ:  l0001A0D0
l0001A0B8_ds_t:
	r5 = r19
	goto l0001A048
	// succ:  l0001A048
l0001A0D0:
	r6 = 0x00006EDC
	r15 = 0x0001A0D8
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A0D0_ds_t
	// succ:  l0001A0D0_ds_f l0001A0D0_ds_t
l0001A0D0_ds_f:
	r5 = r19
	goto l0001A0E8
	// succ:  l0001A0E8
l0001A0D0_ds_t:
	r5 = r19
	goto l0001A194
	// succ:  l0001A194
l0001A0E8:
	r30 = r30 + 0x00000001
	r18 = cond(r30 - r22)
	branch Test(GE,r18) l0001A0E8_ds_t
	// succ:  l0001A0E8_ds_f l0001A0E8_ds_t
l0001A0E8_ds_f:
	r31 = r31 + 0x00000004
	goto l0001A0F8
	// succ:  l0001A0F8
l0001A0E8_ds_t:
	r31 = r31 + 0x00000004
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A0F8:
	r6 = 0x00006EE4
	r5 = Mem0[r31 + r21:word32]
	r15 = 0x0001A104
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A0F8_ds_t
	// succ:  l0001A0F8_ds_f l0001A0F8_ds_t
l0001A0F8_ds_f:
	r3 = 0x00000001
	goto l0001A114
	// succ:  l0001A114
l0001A0F8_ds_t:
	r3 = 0x00000001
	goto l0001A1C8
	// succ:  l0001A1C8
l0001A114:
	r5 = Mem0[r28:word32]
	r18 = cond(r3 -u r5)
	branch Test(LT,r18) l0001A3C4
	// succ:  l0001A120 l0001A3C4
l0001A120:
	Mem0[r28:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A128:
	r8 = 0x00006E74
	r7 = 0x00006E98
	r6 = 0x00006EA8
	r5 = Mem0[0x00008EB8:word32]
	r15 = 0x0001A14C
	call fn0002EB28 (retsize: 0;)
	r3 = 0x00000001
	Mem0[0x00008E84:word32] = r3
	r5 = Mem0[r23:word32]
	goto l0001A058
	// succ:  l0001A058
l0001A168:
	r6 = 0x00006E60
	r5 = Mem0[r31 + r21:word32]
	r15 = 0x0001A174
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A168_ds_t
	// succ:  l0001A168_ds_f l0001A168_ds_t
l0001A168_ds_f:
	r3 = 0x00000002
	goto l0001A184
	// succ:  l0001A184
l0001A168_ds_t:
	r3 = 0x00000002
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A184:
	Mem0[0x00008E9C:word32] = r3
	r30 = r30 + 0x00000001
	goto l0001A068
	// succ:  l0001A068
l0001A194:
	r6 = 0x00006EFC
	r15 = 0x0001A19C
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A194_ds_t
	// succ:  l0001A194_ds_f l0001A194_ds_t
l0001A194_ds_f:
	r5 = r19
	goto l0001A1AC
	// succ:  l0001A1AC
l0001A194_ds_t:
	r5 = r19
	goto l0001A1F8
	// succ:  l0001A1F8
l0001A1AC:
	r3 = 0x00000001
	// succ:  l0001A1B0
l0001A1B0:
	Mem0[r28 + 8:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A1B8:
	r15 = 0x0001A1B8
	call fn00019BC8 (retsize: 0;)
l0001A1C0:
	r30 = r4
	goto l00019F7C
	// succ:  l00019F7C
l0001A1C8:
	r6 = 0x00006EF0
	r5 = Mem0[r31 + r21:word32]
	r15 = 0x0001A1D4
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A1B8
	// succ:  l0001A1E0 l0001A1B8
l0001A1E0:
	r3 = Mem0[r28:word32]
	r3 = r3 & 0xFFFFFFFD
	branch Test(NE,r3) l0001A1E0_ds_t
	// succ:  l0001A1E0_ds_f l0001A1E0_ds_t
l0001A1E0_ds_f:
	r3 = 0x00000002
	goto l0001A1F0
	// succ:  l0001A1F0
l0001A1E0_ds_t:
	r3 = 0x00000002
	goto l0001A3C4
	// succ:  l0001A3C4
l0001A1F0:
	Mem0[r28:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A1F8:
	r6 = 0x00006F08
	r15 = 0x0001A200
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(NE,r3) l0001A1F8_ds_t
	// succ:  l0001A1F8_ds_f l0001A1F8_ds_t
l0001A1F8_ds_f:
	r3 = 0x00000001
	goto l0001A210
	// succ:  l0001A210
l0001A1F8_ds_t:
	r3 = 0x00000001
	goto l0001A1B0
	// succ:  l0001A1B0
l0001A210:
	r6 = 0x00006F14
	r5 = r19
	r15 = 0x0001A21C
	r7 = 0x00000003
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A210_ds_t
	// succ:  l0001A210_ds_f l0001A210_ds_t
l0001A210_ds_f:
	r5 = r19
	goto l0001A22C
	// succ:  l0001A22C
l0001A210_ds_t:
	r5 = r19
	goto l0001A2F8
	// succ:  l0001A2F8
l0001A22C:
	r30 = r30 + 0x00000001
	r18 = cond(r30 - r22)
	branch Test(GE,r18) l0001A22C_ds_t
	// succ:  l0001A22C_ds_f l0001A22C_ds_t
l0001A22C_ds_f:
	v29 = SLICE(r29, byte, 0)
	Mem0[r1 + 37:byte] = v29
	goto l0001A23C
	// succ:  l0001A23C
l0001A22C_ds_t:
	v29 = SLICE(r29, byte, 0)
	Mem0[r1 + 37:byte] = v29
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A23C:
	r19 = r21 + r31
	r6 = 0x00006F20
	r5 = Mem0[r19 + 4:word32]
	r8 = r1 + 0x00000025
	r15 = 0x0001A254
	r7 = r1 + 0x00000020
	call fn0002EE08 (retsize: 0;)
	branch Test(LE,r3) l0001A23C_ds_t
	// succ:  l0001A23C_ds_f l0001A23C_ds_t
l0001A23C_ds_f:
	v30 = Mem0[r1 + 37:byte]
	r3 = (word32) v30
	goto l0001A264
	// succ:  l0001A264
l0001A23C_ds_t:
	v30 = Mem0[r1 + 37:byte]
	r3 = (word32) v30
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A264:
	r3 = r3 & 0xFFFFFFDF
	v31 = SLICE(r3, int8, 0)
	r3 = (int32) v31
	r3 = r3 ^ 0x0000004D
	branch Test(NE,r3) l0001A264_ds_t
	// succ:  l0001A264_ds_f l0001A264_ds_t
l0001A264_ds_f:
	r5 = Mem0[r1 + 32:word32]
	goto l0001A278
	// succ:  l0001A278
l0001A264_ds_t:
	r5 = Mem0[r1 + 32:word32]
	goto l0001A2B4
	// succ:  l0001A2B4
l0001A278:
	r3 = r5 + r5
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 - r5
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 - r5
	r6 = r3 + r3
	r6 = r6 + r6
	r6 = r6 + r6
	r3 = r3 + r6
	r5 = r3 + r5
	Mem0[r1 + 32:word32] = r5
	// succ:  l0001A2B4
l0001A2B4:
	r3 = r5 + r5
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 - r5
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 - r5
	r6 = r3 + r3
	r6 = r6 + r6
	r7 = Mem0[r23 + 4:word32]
	r6 = r6 + r6
	r3 = r3 + r6
	r3 = r3 + r5
	Mem0[r7 + 44:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A2F8:
	r6 = 0x00006F28
	r15 = 0x0001A300
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A2F8_ds_t
	// succ:  l0001A2F8_ds_f l0001A2F8_ds_t
l0001A2F8_ds_f:
	r5 = r19
	goto l0001A310
	// succ:  l0001A310
l0001A2F8_ds_t:
	r5 = r19
	goto l0001A31C
	// succ:  l0001A31C
l0001A310:
	r3 = 0x00000001
	// succ:  l0001A314
l0001A314:
	Mem0[r23 + 228:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A31C:
	r6 = 0x00006F34
	r15 = 0x0001A324
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(NE,r3) l0001A31C_ds_t
	// succ:  l0001A31C_ds_f l0001A31C_ds_t
l0001A31C_ds_f:
	r3 = 0x00000001
	goto l0001A334
	// succ:  l0001A334
l0001A31C_ds_t:
	r3 = 0x00000001
	goto l0001A314
	// succ:  l0001A314
l0001A334:
	r6 = 0x00006F40
	r5 = r19
	r15 = 0x0001A340
	r7 = 0x00000004
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A334_ds_t
	// succ:  l0001A334_ds_f l0001A334_ds_t
l0001A334_ds_f:
	r5 = r19
	goto l0001A350
	// succ:  l0001A350
l0001A334_ds_t:
	r5 = r19
	goto l0001A3A4
	// succ:  l0001A3A4
l0001A350:
	r30 = r30 + 0x00000001
	r18 = cond(r30 - r22)
	branch Test(GE,r18) l0001A350_ds_t
	// succ:  l0001A350_ds_f l0001A350_ds_t
l0001A350_ds_f:
	r19 = r21 + r31
	goto l0001A360
	// succ:  l0001A360
l0001A350_ds_t:
	r19 = r21 + r31
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A360:
	r19 = Mem0[r19 + 4:word32]
	Mem0[0x00008EA0:word32] = r19
	r30 = r30 + 0x00000001
	goto l0001A068
	// succ:  l0001A068
l0001A374:
	r5 = Mem0[0x00008EB8:word32]
	r7 = Mem0[0x00008EA4:word32]
	r6 = 0x00006E18
	r15 = 0x0001A390
	call fn0002EB28 (retsize: 0;)
	r15 = 0x0001A39C
	r5 = 0x00000001
	call fn0002F274 (retsize: 0;)
	goto l0001A3A4
	// succ:  l0001A3A4
l0001A374_ds_f:
	r5 = r19
	goto l0001A3BC
	// succ:  l0001A3BC
l0001A374_ds_t:
	r5 = r19
	goto l0001A3D0
	// succ:  l0001A3D0
l0001A3A4:
	r6 = 0x00006F48
	r15 = 0x0001A3AC
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A374_ds_t
	goto l0001A374_ds_f
	// succ:  l0001A374_ds_f l0001A374_ds_t
l0001A3BC:
	r26 = 0x00000001
	goto l0001A064
	// succ:  l0001A064
l0001A3C4:
	r15 = 0x0001A3C8
	call fn0002FFD0 (retsize: 0;)
l0001A3D0:
	r6 = 0x00006F54
	r15 = 0x0001A3D8
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A3D0_ds_t
	// succ:  l0001A3D0_ds_f l0001A3D0_ds_t
l0001A3D0_ds_f:
	r5 = r19
	goto l0001A3E8
	// succ:  l0001A3E8
l0001A3D0_ds_t:
	r5 = r19
	goto l0001A450
	// succ:  l0001A450
l0001A3E8:
	r30 = r30 + 0x00000001
	r18 = cond(r30 - r22)
	branch Test(GE,r18) l0001A3E8_ds_t
	// succ:  l0001A3E8_ds_f l0001A3E8_ds_t
l0001A3E8_ds_f:
	v26 = SLICE(r29, byte, 0)
	Mem0[r1 + 36:byte] = v26
	goto l0001A3F8
	// succ:  l0001A3F8
l0001A3E8_ds_t:
	v26 = SLICE(r29, byte, 0)
	Mem0[r1 + 36:byte] = v26
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A3F8:
	r19 = r21 + r31
	r6 = 0x00006F20
	r5 = Mem0[r19 + 4:word32]
	r8 = r1 + 0x00000024
	r15 = 0x0001A410
	r7 = r1 + 0x0000001C
	call fn0002EE08 (retsize: 0;)
	branch Test(LE,r3) l0001A1B8
	// succ:  l0001A41C l0001A1B8
l0001A41C:
	r5 = Mem0[r1 + 28:word32]
	r3 = 0xFFFFFFFF
	r18 = cond(r3 -u r5)
	branch Test(LT,r18) l0001A41C_ds_t
	// succ:  l0001A41C_ds_f l0001A41C_ds_t
l0001A41C_ds_f:
	v27 = Mem0[r1 + 36:byte]
	r3 = (word32) v27
	goto l0001A434
	// succ:  l0001A434
l0001A41C_ds_t:
	v27 = Mem0[r1 + 36:byte]
	r3 = (word32) v27
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A434:
	r3 = r3 & 0xFFFFFFDF
	v28 = SLICE(r3, int8, 0)
	r3 = (int32) v28
	r3 = r3 ^ 0x00000042
	branch Test(NE,r3) l0001A574
	// succ:  l0001A444 l0001A574
l0001A444:
	Mem0[r23 + 244:word32] = r5
	Mem0[r23 + 248:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A450:
	r6 = 0x00006F5C
	r15 = 0x0001A458
	r7 = 0x00000002
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A450_ds_t
	// succ:  l0001A450_ds_f l0001A450_ds_t
l0001A450_ds_f:
	r5 = r19
	goto l0001A468
	// succ:  l0001A468
l0001A450_ds_t:
	r5 = r19
	goto l0001A544
	// succ:  l0001A544
l0001A468:
	r30 = r30 + 0x00000001
	r18 = cond(r30 - r22)
	branch Test(GE,r18) l0001A468_ds_t
	// succ:  l0001A468_ds_f l0001A468_ds_t
l0001A468_ds_f:
	r31 = r31 + 0x00000004
	goto l0001A478
	// succ:  l0001A478
l0001A468_ds_t:
	r31 = r31 + 0x00000004
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A478:
	r6 = 0x00006F64
	r5 = Mem0[r31 + r21:word32]
	r15 = 0x0001A484
	r7 = 0x00000002
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A4BC
	// succ:  l0001A490 l0001A4BC
l0001A490:
	r3 = Mem0[r28:word32]
	r5 = -r3
	r5 = r5 | r3
	branch Test(GE,r5) l0001A490_ds_t
	// succ:  l0001A490_ds_f l0001A490_ds_t
l0001A490_ds_f:
	r3 = r3 ^ 0x00000005
	goto l0001A4A4
	// succ:  l0001A4A4
l0001A490_ds_t:
	r3 = r3 ^ 0x00000005
	goto l0001A4B0
	// succ:  l0001A4B0
l0001A4A4:
	r5 = -r3
	r3 = r5 | r3
	branch Test(LT,r3) l0001A3C4
	// succ:  l0001A4B0 l0001A3C4
l0001A4B0:
	r3 = 0x00000005
	Mem0[r28:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A4BC:
	r6 = 0x00006F68
	r5 = Mem0[r31 + r21:word32]
	r15 = 0x0001A4C8
	r7 = 0x00000003
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A500
	// succ:  l0001A4D4 l0001A500
l0001A4D4:
	r3 = Mem0[r28:word32]
	r5 = -r3
	r5 = r5 | r3
	branch Test(GE,r5) l0001A4D4_ds_t
	// succ:  l0001A4D4_ds_f l0001A4D4_ds_t
l0001A4D4_ds_f:
	r3 = r3 ^ 0x00000006
	goto l0001A4E8
	// succ:  l0001A4E8
l0001A4D4_ds_t:
	r3 = r3 ^ 0x00000006
	goto l0001A4F4
	// succ:  l0001A4F4
l0001A4E8:
	r5 = -r3
	r3 = r5 | r3
	branch Test(LT,r3) l0001A3C4
	// succ:  l0001A4F4 l0001A3C4
l0001A4F4:
	r3 = 0x00000006
	Mem0[r28:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A500:
	r6 = 0x00006F6C
	r5 = Mem0[r31 + r21:word32]
	r15 = 0x0001A50C
	r7 = 0x00000003
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A1B8
	// succ:  l0001A518 l0001A1B8
l0001A518:
	r3 = Mem0[r28:word32]
	r5 = -r3
	r5 = r5 | r3
	branch Test(GE,r5) l0001A518_ds_t
	// succ:  l0001A518_ds_f l0001A518_ds_t
l0001A518_ds_f:
	r3 = r3 ^ 0x00000007
	goto l0001A52C
	// succ:  l0001A52C
l0001A518_ds_t:
	r3 = r3 ^ 0x00000007
	goto l0001A538
	// succ:  l0001A538
l0001A52C:
	r5 = -r3
	r3 = r5 | r3
	branch Test(LT,r3) l0001A3C4
	// succ:  l0001A538 l0001A3C4
l0001A538:
	r3 = 0x00000007
	Mem0[r28:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A544:
	r6 = 0x00006F70
	r15 = 0x0001A54C
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A544_ds_t
	// succ:  l0001A544_ds_f l0001A544_ds_t
l0001A544_ds_f:
	r5 = r19
	goto l0001A55C
	// succ:  l0001A55C
l0001A544_ds_t:
	r5 = r19
	goto l0001A57C
	// succ:  l0001A57C
l0001A55C:
	r30 = r30 + 0x00000001
	r18 = cond(r30 - r22)
	branch Test(GE,r18) l0001A55C_ds_t
	// succ:  l0001A55C_ds_f l0001A55C_ds_t
l0001A55C_ds_f:
	r19 = r21 + r31
	goto l0001A56C
	// succ:  l0001A56C
l0001A55C_ds_t:
	r19 = r21 + r31
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A56C:
	r25 = Mem0[r19 + 4:word32]
	goto l0001A064
	// succ:  l0001A064
l0001A574:
	Mem0[r23 + 248:word32] = r5
	goto l0001A064
	// succ:  l0001A064
l0001A57C:
	r6 = 0x00006F78
	r15 = 0x0001A584
	r7 = 0x00000001
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A57C_ds_t
	// succ:  l0001A57C_ds_f l0001A57C_ds_t
l0001A57C_ds_f:
	r5 = r19
	goto l0001A594
	// succ:  l0001A594
l0001A57C_ds_t:
	r5 = r19
	goto l0001A5C0
	// succ:  l0001A5C0
l0001A594:
	r3 = Mem0[r28:word32]
	r5 = -r3
	r5 = r5 | r3
	branch Test(GE,r5) l0001A594_ds_t
	// succ:  l0001A594_ds_f l0001A594_ds_t
l0001A594_ds_f:
	r3 = r3 ^ 0x00000003
	goto l0001A5A8
	// succ:  l0001A5A8
l0001A594_ds_t:
	r3 = r3 ^ 0x00000003
	goto l0001A5B4
	// succ:  l0001A5B4
l0001A5A8:
	r5 = -r3
	r3 = r5 | r3
	branch Test(LT,r3) l0001A3C4
	// succ:  l0001A5B4 l0001A3C4
l0001A5B4:
	r3 = 0x00000003
	Mem0[r28:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A5C0:
	r6 = 0x00006F84
	r15 = 0x0001A5C8
	r7 = 0x00000006
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A5C0_ds_t
	// succ:  l0001A5C0_ds_f l0001A5C0_ds_t
l0001A5C0_ds_f:
	r5 = r19
	goto l0001A5D8
	// succ:  l0001A5D8
l0001A5C0_ds_t:
	r5 = r19
	goto l0001A5F0
	// succ:  l0001A5F0
l0001A5D8:
	r3 = Mem0[r28:word32]
	r3 = r3 & 0xFFFFFFFB
	branch Test(NE,r3) l0001A5D8_ds_t
	// succ:  l0001A5D8_ds_f l0001A5D8_ds_t
l0001A5D8_ds_f:
	r3 = 0x00000004
	goto l0001A5E8
	// succ:  l0001A5E8
l0001A5D8_ds_t:
	r3 = 0x00000004
	goto l0001A3C4
	// succ:  l0001A3C4
l0001A5E8:
	Mem0[r28:word32] = r3
	goto l0001A064
	// succ:  l0001A064
l0001A5F0:
	r6 = 0x00006F90
	r15 = 0x0001A5F8
	r7 = 0x00000003
	call fn0001B134 (retsize: 0;)
	branch Test(EQ,r3) l0001A5F0_ds_t
	// succ:  l0001A5F0_ds_f l0001A5F0_ds_t
l0001A5F0_ds_f:
	r3 = 0x00000001
	goto l0001A608
	// succ:  l0001A608
l0001A5F0_ds_t:
	r3 = 0x00000001
	goto l0001A1B8
	// succ:  l0001A1B8
l0001A608:
	Mem0[r28 + 4:word32] = r3
	goto l0001A064
	// succ:  l0001A064
fn00019BC8_exit:


// fn0001A610
// Return size: 0
define fn0001A610
fn0001A610_entry:
	r1 = fp
	// succ:  l0001A610
l0001A610:
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r15 = 0x0001A620
	r19 = r5
	call fn0002EF80 (retsize: 0;)
	r4 = r3 ^ 0x00000023
	branch Test(EQ,r4) l0001A610_ds_t
	// succ:  l0001A610_ds_f l0001A610_ds_t
l0001A610_ds_f:
	r15 = Mem0[r1:word32]
	goto l0001A634
	// succ:  l0001A634
l0001A610_ds_t:
	r15 = Mem0[r1:word32]
	goto l0001A6C8
	// succ:  l0001A6C8
l0001A634:
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn0001A610_exit
l0001A640:
	r4 = r5
	r4 = r5 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(EQ,r4) l0001A640_ds_t
	// succ:  l0001A640_ds_f l0001A640_ds_t
l0001A640_ds_f:
	r15 = Mem0[r1:word32]
	goto l0001A6C8
	// succ:  l0001A6C8
l0001A640_ds_t:
	r15 = Mem0[r1:word32]
	goto l0001A634
	// succ:  l0001A634
l0001A6C8:
	r15 = 0x0001A6CC
	r5 = r19
	call fn0002EF80 (retsize: 0;)
	r7 = r3 ^ 0x0000000A
	r6 = r3 ^ 0xFFFFFFFF
	r4 = -r7
	r5 = -r6
	r4 = r4 | r7
	branch Test(LT,r4) l0001A6C8_ds_t
	// succ:  l0001A6C8_ds_f l0001A6C8_ds_t
l0001A6C8_ds_f:
	r5 = r5 | r6
	goto l0001A6F0
	// succ:  l0001A6F0
l0001A6C8_ds_t:
	r5 = r5 | r6
	goto l0001A640
	// succ:  l0001A640
l0001A6F0:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn0001A610_exit
fn0001A610_exit:


// fn0001A700
// Return size: 0
define fn0001A700
fn0001A700_entry:
	r1 = fp
	// succ:  l0001A700
l0001A700:
	r1 = r1 + 0xFFFFFFCC
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 48:word32] = r25
	r21 = r5
	r24 = r6
	r23 = r7
	goto l0001A744
	// succ:  l0001A744
l0001A730:
	r15 = 0x0001A734
	call fn0002F940 (retsize: 0;)
	branch Test(EQ,r3) l0001A730_ds_t
	// succ:  l0001A730_ds_f l0001A730_ds_t
l0001A730_ds_f:
	r22 = r19 + 0xFFFFFFD0
	goto l0001A744
	// succ:  l0001A744
l0001A730_ds_t:
	r22 = r19 + 0xFFFFFFD0
	goto l0001A788
	// succ:  l0001A788
l0001A744:
	r15 = 0x0001A744
	r5 = r21
	call fn0001A610 (retsize: 0;)
	r19 = r3
	r5 = r3
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(NE,r3) l0001A744_ds_t
	// succ:  l0001A744_ds_f l0001A744_ds_t
l0001A744_ds_f:
	r4 = 0xFFFFFFFF
	goto l0001A760
	// succ:  l0001A760
l0001A744_ds_t:
	r4 = 0xFFFFFFFF
	goto l0001A730
	// succ:  l0001A730
l0001A760:
	Mem0[r23:word32] = r4
	// succ:  l0001A764
l0001A764:
	r15 = Mem0[r1:word32]
	// succ:  l0001A768
l0001A768:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn0001A700_exit
l0001A788:
	r25 = 0x00000009
	r18 = cond(r25 -u r22)
	branch Test(GE,r18) l0001A7A8
	// succ:  l0001A794 l0001A7A8
l0001A794:
	Mem0[r23:word32] = r19
	goto l0001A7DC
	// succ:  l0001A7DC
l0001A79C:
	r18 = cond(r25 -u r5)
	branch Test(LT,r18) l0001A7CC
	// succ:  l0001A7A4 l0001A7CC
l0001A7A4:
	r22 = r5 + r4
	// succ:  l0001A7A8
l0001A7A8:
	r15 = 0x0001A7A8
	r5 = r21
	call fn0001A610 (retsize: 0;)
	r4 = r22 + r22
	r4 = r4 + r4
	r4 = r4 + r22
	r6 = r3 ^ 0xFFFFFFFF
	r5 = r3 + 0xFFFFFFD0
	branch Test(NE,r6) l0001A7A8_ds_t
	// succ:  l0001A7A8_ds_f l0001A7A8_ds_t
l0001A7A8_ds_f:
	r4 = r4 + r4
	goto l0001A7CC
	// succ:  l0001A7CC
l0001A7A8_ds_t:
	r4 = r4 + r4
	goto l0001A79C
	// succ:  l0001A79C
l0001A7CC:
	Mem0[r24:word32] = r22
	Mem0[r23:word32] = r3
	r3 = 0x00000001
	goto l0001A764
	// succ:  l0001A764
l0001A7DC:
	r15 = Mem0[r1:word32]
	goto l0001A768
	// succ:  l0001A768
fn0001A700_exit:


// fn0001A7E4
// Return size: 0
define fn0001A7E4
fn0001A7E4_entry:
	r1 = fp
	// succ:  l0001A7E4
l0001A7E4:
	r1 = r1 + 0xFFFFFFD8
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	r21 = r5
	r15 = 0x0001A7FC
	r22 = r7
	call fn0001A700 (retsize: 0;)
	branch Test(EQ,r3) l0001A7E4_ds_t
	// succ:  l0001A7E4_ds_f l0001A7E4_ds_t
l0001A7E4_ds_f:
	r15 = Mem0[r1:word32]
	goto l0001A80C
	// succ:  l0001A80C
l0001A7E4_ds_t:
	r15 = Mem0[r1:word32]
	goto l0001A898
	// succ:  l0001A898
l0001A80C:
	r19 = Mem0[r22:word32]
	r3 = r19 ^ 0xFFFFFFFF
	branch Test(NE,r3) l0001A834
	// succ:  l0001A818 l0001A834
l0001A818:
	r19 = 0xFFFFFFFF
	goto l0001A878
	// succ:  l0001A878
l0001A820:
	r15 = 0x0001A820
	call fn0001A610 (retsize: 0;)
	r19 = r3
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r3) l0001A818
	// succ:  l0001A834 l0001A818
l0001A834:
	r15 = 0x0001A838
	r5 = r19
	call fn0002F940 (retsize: 0;)
	branch Test(NE,r3) l0001A834_ds_t
	// succ:  l0001A834_ds_f l0001A834_ds_t
l0001A834_ds_f:
	r5 = r21
	goto l0001A848
	// succ:  l0001A848
l0001A834_ds_t:
	r5 = r21
	goto l0001A820
	// succ:  l0001A820
l0001A848:
	r3 = r19 + 0xFFFFFFD0
	r4 = 0x00000009
	r18 = cond(r4 -u r3)
	branch Test(LT,r18) l0001A848_ds_t
	// succ:  l0001A848_ds_f l0001A848_ds_t
l0001A848_ds_f:
	r6 = r21
	goto l0001A85C
	// succ:  l0001A85C
l0001A848_ds_t:
	r6 = r21
	goto l0001A8B0
	// succ:  l0001A8B0
l0001A85C:
	r15 = 0x0001A860
	r5 = r19
	call fn0002EF2C (retsize: 0;)
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r3) l0001A85C_ds_t
	// succ:  l0001A85C_ds_f l0001A85C_ds_t
l0001A85C_ds_f:
	r15 = Mem0[r1:word32]
	goto l0001A874
	// succ:  l0001A874
l0001A85C_ds_t:
	r15 = Mem0[r1:word32]
	goto l0001A898
	// succ:  l0001A898
l0001A874:
	r19 = 0x00000020
	// succ:  l0001A878
l0001A878:
	Mem0[r22:word32] = r19
	// succ:  l0001A87C
l0001A87C:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r3 = 0x00000001
	r1 = r1 + 0x00000028
	return
	// succ:  fn0001A7E4_exit
l0001A898:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r3 = 0x00000000
	r1 = r1 + 0x00000028
	return
	// succ:  fn0001A7E4_exit
l0001A8B0:
	r3 = r19 ^ 0x0000003B
	branch Test(EQ,r3) l0001A8B0_ds_t
	// succ:  l0001A8B0_ds_f l0001A8B0_ds_t
l0001A8B0_ds_f:
	r3 = r19 ^ 0x0000003A
	goto l0001A8BC
	// succ:  l0001A8BC
l0001A8B0_ds_t:
	r3 = r19 ^ 0x0000003A
	goto l0001A878
	// succ:  l0001A878
l0001A8BC:
	branch Test(NE,r3) l0001A874
	// succ:  l0001A8C0 l0001A874
l0001A8C0:
	Mem0[r22:word32] = r19
	goto l0001A87C
	// succ:  l0001A87C
fn0001A7E4_exit:


// fn0001AAB0
// Return size: 0
define fn0001AAB0
fn0001AAB0_entry:
	r1 = fp
	// succ:  l0001AAB0
l0001AAB0:
	r1 = r1 + 0xFFFFF1A8
	Mem0[r1 + 3656:word32] = r25
	r25 = r6
	Mem0[r1 + 3664:word32] = r27
	r6 = 0x00006FDC
	r27 = r5
	r5 = r25
	Mem0[r1 + 3648:word32] = r23
	Mem0[r1:word32] = r15
	Mem0[r1 + 3636:word32] = r19
	Mem0[r1 + 3640:word32] = r21
	Mem0[r1 + 3644:word32] = r22
	Mem0[r1 + 3652:word32] = r24
	Mem0[r1 + 3660:word32] = r26
	r15 = 0x0001AAF0
	Mem0[r1 + 3668:word32] = r28
	call fn0002F0A0 (retsize: 0;)
	branch Test(EQ,r3) l0001AAB0_ds_t
	// succ:  l0001AAB0_ds_f l0001AAB0_ds_t
l0001AAB0_ds_f:
	r23 = r3
	goto l0001AB00
	// succ:  l0001AB00
l0001AAB0_ds_t:
	r23 = r3
	goto l0001ABE0
	// succ:  l0001ABE0
l0001AB00:
	r24 = r1 + 0x00000024
	r26 = 0x00000000
	r28 = 0x0000003F
	goto l0001AB0C
	// succ:  l0001AB0C
l0001AB00_ds_f:
	r19 = r3
	goto l0001AB24
	// succ:  l0001AB24
l0001AB00_ds_t:
	r19 = r3
	goto l0001ADB0
	// succ:  l0001ADB0
l0001AB0C:
	r5 = r23
	r7 = r1 + 0x00000E30
	r15 = 0x0001AB14
	r6 = r1 + 0x00000E2C
	call fn0001A7E4 (retsize: 0;)
	branch Test(EQ,r3) l0001AB00_ds_t
	goto l0001AB00_ds_f
	// succ:  l0001AB00_ds_f l0001AB00_ds_t
l0001AB24:
	r19 = r26 ^ 0x00000064
	branch Test(EQ,r19) l0001AB24_ds_t
	// succ:  l0001AB24_ds_f l0001AB24_ds_t
l0001AB24_ds_f:
	r4 = Mem0[r1 + 3628:word32]
	goto l0001AB30
	// succ:  l0001AB30
l0001AB24_ds_t:
	r4 = Mem0[r1 + 3628:word32]
	goto l0001ADEC
	// succ:  l0001ADEC
l0001AB30:
	r3 = Mem0[r1 + 3632:word32]
	r22 = r24
	Mem0[r24 - 4:word32] = r4
	r4 = r3 ^ 0x00000020
	branch Test(NE,r4) l0001AB30_ds_t
	// succ:  l0001AB30_ds_f l0001AB30_ds_t
l0001AB30_ds_f:
	r21 = 0x00000001
	goto l0001AB48
	// succ:  l0001AB48
l0001AB30_ds_t:
	r21 = 0x00000001
	goto l0001AC08
	// succ:  l0001AC08
l0001AB48:
	r5 = r23
	r21 = r21 + 0x00000001
	r7 = r1 + 0x00000E30
	r6 = r1 + 0x00000E2C
	r15 = 0x0001AB58
	r19 = r21 ^ 0x00000004
	call fn0001A7E4 (retsize: 0;)
	branch Test(EQ,r3) l0001AB48_ds_t
	// succ:  l0001AB48_ds_f l0001AB48_ds_t
l0001AB48_ds_f:
	r4 = Mem0[r1 + 3628:word32]
	goto l0001AB68
	// succ:  l0001AB68
l0001AB48_ds_t:
	r4 = Mem0[r1 + 3628:word32]
	goto l0001ACD4
	// succ:  l0001ACD4
l0001AB68:
	r3 = Mem0[r1 + 3632:word32]
	r22 = r22 + 0x00000004
	Mem0[r22 - 4:word32] = r4
	r4 = r3 ^ 0x00000020
	branch Test(NE,r4) l0001AB68_ds_t
	// succ:  l0001AB68_ds_f l0001AB68_ds_t
l0001AB68_ds_f:
	r4 = r3 ^ 0x0000003A
	goto l0001AB80
	// succ:  l0001AB80
l0001AB68_ds_t:
	r4 = r3 ^ 0x0000003A
	goto l0001AC0C
	// succ:  l0001AC0C
l0001AB80:
	branch Test(NE,r19) l0001AB48
	// succ:  l0001AB84 l0001AB48
l0001AB84:
	r5 = Mem0[0x00008EB8:word32]
	r6 = 0x000070A0
	r15 = 0x0001AB98
	r7 = r25
	call fn0002EB28 (retsize: 0;)
	r15 = 0x0001ABA4
	r5 = r23
	call fn0002F0CC (retsize: 0;)
	r3 = r19
	// succ:  l0001ABB0
l0001ABB0:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 3636:word32]
	r21 = Mem0[r1 + 3640:word32]
	r22 = Mem0[r1 + 3644:word32]
	r23 = Mem0[r1 + 3648:word32]
	r24 = Mem0[r1 + 3652:word32]
	r25 = Mem0[r1 + 3656:word32]
	r26 = Mem0[r1 + 3660:word32]
	r27 = Mem0[r1 + 3664:word32]
	r28 = Mem0[r1 + 3668:word32]
	r1 = r1 + 0x00000E58
	return
	// succ:  fn0001AAB0_exit
l0001ABE0:
	r7 = r25
	r6 = 0x00007058
	r5 = Mem0[0x00008EB8:word32]
	r15 = 0x0001ABF8
	r19 = r3
	call fn0002EB28 (retsize: 0;)
	r3 = r19
	goto l0001ABB0
	// succ:  l0001ABB0
l0001AC08:
	r4 = r3 ^ 0x0000003A
	// succ:  l0001AC0C
l0001AC0C:
	branch Test(EQ,r4) l0001AC0C_ds_t
	// succ:  l0001AC0C_ds_f l0001AC0C_ds_t
l0001AC0C_ds_f:
	Mem0[r24 - 8:word32] = r21
	goto l0001AC14
	// succ:  l0001AC14
l0001AC0C_ds_t:
	Mem0[r24 - 8:word32] = r21
	goto l0001AD08
	// succ:  l0001AD08
l0001AC14:
	Mem0[r24 + 12:word32] = r0
	Mem0[r24 + 16:word32] = r28
	Mem0[r24 + 20:word32] = r0
	Mem0[r24 + 24:word32] = r0
	goto l0001AC24
	// succ:  l0001AC24
l0001AC14_ds_f:
	r24 = r24 + 0x00000024
	goto l0001AC38
	// succ:  l0001AC38
l0001AC14_ds_t:
	r24 = r24 + 0x00000024
	goto l0001ACCC
	// succ:  l0001ACCC
l0001AC24:
	r5 = r3 ^ 0x0000003B
	r4 = -r5
	r4 = r4 | r5
	branch Test(GE,r4) l0001AC14_ds_t
	goto l0001AC14_ds_f
	// succ:  l0001AC14_ds_f l0001AC14_ds_t
l0001AC38:
	r3 = r3 ^ 0xFFFFFFFF
	r4 = -r3
	r3 = r4 | r3
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l0001AC38_ds_t
	// succ:  l0001AC38_ds_f l0001AC38_ds_t
l0001AC38_ds_f:
	r7 = r25
	goto l0001ACCC
	// succ:  l0001ACCC
l0001AC38_ds_t:
	r7 = r25
	goto l0001ACD8
	// succ:  l0001ACD8
l0001ACCC:
	r26 = r26 + 0x00000001
	goto l0001AB0C
	// succ:  l0001AB0C
l0001ACD4:
	r7 = r25
	// succ:  l0001ACD8
l0001ACD8:
	r6 = 0x000070CC
	r5 = Mem0[0x00008EB8:word32]
	r15 = 0x0001ACEC
	r19 = 0x00000000
	call fn0002EB28 (retsize: 0;)
	r15 = 0x0001ACF8
	r5 = r23
	call fn0002F0CC (retsize: 0;)
	r3 = r19
	goto l0001ABB0
	// succ:  l0001ABB0
l0001AD08:
	r5 = r23
	r7 = r1 + 0x00000E30
	r15 = 0x0001AD10
	r6 = r1 + 0x00000E2C
	call fn0001A7E4 (retsize: 0;)
	branch Test(EQ,r3) l0001AD08_ds_t
	// succ:  l0001AD08_ds_f l0001AD08_ds_t
l0001AD08_ds_f:
	r7 = r25
	goto l0001AD20
	// succ:  l0001AD20
l0001AD08_ds_t:
	r7 = r25
	goto l0001ACD8
	// succ:  l0001ACD8
l0001AD20:
	r3 = Mem0[r1 + 3632:word32]
	r3 = r3 ^ 0x00000020
	branch Test(NE,r3) l0001AD20_ds_t
	// succ:  l0001AD20_ds_f l0001AD20_ds_t
l0001AD20_ds_f:
	r7 = r1 + 0x00000E30
	goto l0001AD30
	// succ:  l0001AD30
l0001AD20_ds_t:
	r7 = r1 + 0x00000E30
	goto l0001ACD4
	// succ:  l0001ACD4
l0001AD30:
	r3 = Mem0[r1 + 3628:word32]
	r5 = r23
	r6 = r1 + 0x00000E2C
	r15 = 0x0001AD3C
	Mem0[r24 + 12:word32] = r3
	call fn0001A7E4 (retsize: 0;)
	branch Test(EQ,r3) l0001AD30_ds_t
	// succ:  l0001AD30_ds_f l0001AD30_ds_t
l0001AD30_ds_f:
	r7 = r25
	goto l0001AD4C
	// succ:  l0001AD4C
l0001AD30_ds_t:
	r7 = r25
	goto l0001ACD8
	// succ:  l0001ACD8
l0001AD4C:
	r3 = Mem0[r1 + 3632:word32]
	r3 = r3 ^ 0x00000020
	branch Test(NE,r3) l0001AD4C_ds_t
	// succ:  l0001AD4C_ds_f l0001AD4C_ds_t
l0001AD4C_ds_f:
	r4 = Mem0[r1 + 3628:word32]
	goto l0001AD5C
	// succ:  l0001AD5C
l0001AD4C_ds_t:
	r4 = Mem0[r1 + 3628:word32]
	goto l0001ACD8
	// succ:  l0001ACD8
l0001AD5C:
	r5 = r23
	r7 = r1 + 0x00000E30
	r6 = r1 + 0x00000E2C
	r15 = 0x0001AD68
	Mem0[r24 + 16:word32] = r4
	call fn0001A7E4 (retsize: 0;)
	branch Test(EQ,r3) l0001AD5C_ds_t
	// succ:  l0001AD5C_ds_f l0001AD5C_ds_t
l0001AD5C_ds_f:
	r7 = r25
	goto l0001AD78
	// succ:  l0001AD78
l0001AD5C_ds_t:
	r7 = r25
	goto l0001ACD8
	// succ:  l0001ACD8
l0001AD78:
	r3 = Mem0[r1 + 3632:word32]
	r3 = r3 ^ 0x00000020
	branch Test(NE,r3) l0001AD78_ds_t
	// succ:  l0001AD78_ds_f l0001AD78_ds_t
l0001AD78_ds_f:
	r7 = r1 + 0x00000E30
	goto l0001AD88
	// succ:  l0001AD88
l0001AD78_ds_t:
	r7 = r1 + 0x00000E30
	goto l0001ACD4
	// succ:  l0001ACD4
l0001AD88:
	r3 = Mem0[r1 + 3628:word32]
	r5 = r23
	r6 = r1 + 0x00000E2C
	r15 = 0x0001AD94
	Mem0[r24 + 20:word32] = r3
	call fn0001A7E4 (retsize: 0;)
	branch Test(EQ,r3) l0001AD88_ds_t
	// succ:  l0001AD88_ds_f l0001AD88_ds_t
l0001AD88_ds_f:
	r4 = Mem0[r1 + 3628:word32]
	goto l0001ADA4
	// succ:  l0001ADA4
l0001AD88_ds_t:
	r4 = Mem0[r1 + 3628:word32]
	goto l0001ACD4
	// succ:  l0001ACD4
l0001ADA4:
	r3 = Mem0[r1 + 3632:word32]
	Mem0[r24 + 24:word32] = r4
	goto l0001AC24
	// succ:  l0001AC24
l0001ADB0:
	r3 = Mem0[r1 + 3632:word32]
	r3 = r3 ^ 0xFFFFFFFF
	branch Test(EQ,r3) l0001AE1C
	// succ:  l0001ADBC l0001AE1C
l0001ADBC:
	r6 = 0x00007038
	r5 = Mem0[0x00008EB8:word32]
	r15 = 0x0001ADD0
	r7 = r25
	call fn0002EB28 (retsize: 0;)
	r15 = 0x0001ADDC
	r5 = r23
	call fn0002F0CC (retsize: 0;)
	r3 = r19
	goto l0001ABB0
	// succ:  l0001ABB0
l0001ADEC:
	r6 = 0x0000707C
	r5 = Mem0[0x00008EB8:word32]
	r15 = 0x0001AE00
	r7 = r25
	call fn0002EB28 (retsize: 0;)
	r15 = 0x0001AE0C
	r5 = r23
	call fn0002F0CC (retsize: 0;)
	r3 = r19
	goto l0001ABB0
	// succ:  l0001ABB0
l0001AE1C:
	branch Test(EQ,r26) l0001AE6C
	// succ:  l0001AE20 l0001AE6C
l0001AE20:
	r19 = r26 + r26
	r19 = r19 + r19
	r19 = r19 + r19
	r3 = Mem0[r27 + 4:word32]
	r19 = r19 + r26
	r19 = r19 + r19
	r19 = r19 + r19
	r5 = r27
	r7 = r19
	r3 = Mem0[r3:word32]
	r15 = 0x0001AE48
	r6 = 0x00000001
	call 0x0001AE48 + r3 (retsize: 0;)
	r7 = r19
	r5 = r3
	r15 = 0x0001AE5C
	r6 = r1 + 0x0000001C
	call fn0002F60C (retsize: 0;)
	Mem0[r27 + 216:word32] = r3
	Mem0[r27 + 212:word32] = r26
	// succ:  l0001AE6C
l0001AE6C:
	r5 = r23
	r15 = 0x0001AE74
	r19 = 0x00000001
	call fn0002F0CC (retsize: 0;)
	r3 = r19
	goto l0001ABB0
	// succ:  l0001ABB0
fn0001AAB0_exit:


// fn0001B134
// Return size: 0
define fn0001B134
fn0001B134_entry:
	r1 = fp
	// succ:  l0001B134
l0001B134:
	r1 = r1 + 0xFFFFFFCC
	Mem0[r1 + 48:word32] = r25
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	v11 = Mem0[r5:byte]
	r19 = (word32) v11
	v12 = SLICE(r19, int8, 0)
	r19 = (int32) v12
	branch Test(EQ,r19) l0001B134_ds_t
	// succ:  l0001B134_ds_f l0001B134_ds_t
l0001B134_ds_f:
	r25 = r7
	goto l0001B164
	// succ:  l0001B164
l0001B134_ds_t:
	r25 = r7
	goto l0001B1F4
	// succ:  l0001B1F4
l0001B164:
	v15 = Mem0[r6:byte]
	r21 = (word32) v15
	v16 = SLICE(r21, int8, 0)
	r21 = (int32) v16
	branch Test(EQ,r21) l0001B164_ds_t
	// succ:  l0001B164_ds_f l0001B164_ds_t
l0001B164_ds_f:
	r24 = r6
	goto l0001B174
	// succ:  l0001B174
l0001B164_ds_t:
	r24 = r6
	goto l0001B1CC
	// succ:  l0001B1CC
l0001B174:
	r23 = r5
	r22 = 0x00000000
	goto l0001B19C
	// succ:  l0001B19C
l0001B180:
	v19 = Mem0[r22 + r23:byte]
	r19 = (word32) v19
	v20 = SLICE(r19, int8, 0)
	r19 = (int32) v20
	branch Test(EQ,r19) l0001B1F8
	// succ:  l0001B18C l0001B1F8
l0001B18C:
	v21 = Mem0[r22 + r24:byte]
	r21 = (word32) v21
	v22 = SLICE(r21, int8, 0)
	r21 = (int32) v22
	branch Test(EQ,r21) l0001B18C_ds_t
	// succ:  l0001B18C_ds_f l0001B18C_ds_t
l0001B18C_ds_f:
	r3 = 0x00000000
	goto l0001B19C
	// succ:  l0001B19C
l0001B18C_ds_t:
	r3 = 0x00000000
	goto l0001B1D0
	// succ:  l0001B1D0
l0001B19C:
	r5 = r19
	r15 = 0x0001B1A4
	r22 = r22 + 0x00000001
	call fn0002F9E0 (retsize: 0;)
	branch Test(EQ,r3) l0001B19C_ds_t
	// succ:  l0001B19C_ds_f l0001B19C_ds_t
l0001B19C_ds_f:
	r5 = r19
	goto l0001B1B4
	// succ:  l0001B1B4
l0001B19C_ds_t:
	r5 = r19
	goto l0001B1C4
	// succ:  l0001B1C4
l0001B1B4:
	r15 = 0x0001B1B8
	call fn0002FA08 (retsize: 0;)
	r19 = r3
	// succ:  l0001B1C4
l0001B1C4:
	r19 = r19 ^ r21
	branch Test(EQ,r19) l0001B180
	// succ:  l0001B1CC l0001B180
l0001B1CC:
	r3 = 0x00000000
	// succ:  l0001B1D0
l0001B1D0:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn0001B134_exit
l0001B1F4:
	r22 = r19
	goto l0001B1F8
	// succ:  l0001B1F8
l0001B1F4_ds_f:
	r21 = 0x00000001
	goto l0001B204
	// succ:  l0001B204
l0001B1F4_ds_t:
	r21 = 0x00000001
	goto l0001B20C
	// succ:  l0001B20C
l0001B1F8:
	r18 = cond(r22 - r25)
	branch Test(LT,r18) l0001B1F4_ds_t
	goto l0001B1F4_ds_f
	// succ:  l0001B1F4_ds_f l0001B1F4_ds_t
l0001B204:
	r3 = r21
	goto l0001B1D0
	// succ:  l0001B1D0
l0001B20C:
	r21 = 0x00000000
	r3 = r21
	goto l0001B1D0
	// succ:  l0001B1D0
fn0001B134_exit:


// fn0001B238
// Return size: 0
define fn0001B238
fn0001B238_entry:
	r1 = fp
	// succ:  l0001B238
l0001B238:
	r3 = Mem0[r5 + 28:word32]
	r6 = Mem0[r5 + 32:word32]
	r4 = Mem0[r5 + 56:word32]
	Mem0[r5 + 32:word32] = r3
	branch Test(LE,r4) l0001B238_ds_t
	// succ:  l0001B238_ds_f l0001B238_ds_t
l0001B238_ds_f:
	Mem0[r5 + 28:word32] = r6
	goto l0001B250
	// succ:  l0001B250
l0001B238_ds_t:
	Mem0[r5 + 28:word32] = r6
	goto l0001B2A4
	// succ:  l0001B2A4
l0001B250:
	r3 = r4 + r4
	r4 = r3 + r4
	r3 = r4 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 - r4
	r7 = Mem0[r5 + 64:word32]
	r3 = r3 + r3
	r3 = r3 + r3
	r6 = r3 + 0x00000008
	r4 = r7 + 0x0000000C
	r3 = r7 + 0x00000008
	r7 = r7 + r6
	// succ:  l0001B284
l0001B284:
	r8 = Mem0[r4:word32]
	r6 = Mem0[r3:word32]
	r3 = r3 + 0x00000054
	Mem0[r3 - 84:word32] = r8
	Mem0[r4:word32] = r6
	r6 = r3 ^ r7
	branch Test(NE,r6) l0001B284_ds_t
	// succ:  l0001B284_ds_f l0001B284_ds_t
l0001B284_ds_f:
	r4 = r4 + 0x00000054
	goto l0001B2A4
	// succ:  l0001B2A4
l0001B284_ds_t:
	r4 = r4 + 0x00000054
	goto l0001B284
	// succ:  l0001B284
l0001B2A4:
	r10 = r5 + 0x00000044
	r11 = r5 + 0x00000054
	// succ:  l0001B2AC
l0001B2AC:
	r6 = Mem0[r10:word32]
	branch Test(EQ,r6) l0001B310
	// succ:  l0001B2B4 l0001B310
l0001B2B4:
	r7 = 0x00000000
	r7 = r7 + 0x00000001
	r3 = r7 ^ 0x00000008
	r9 = r6 + 0x00000020
	r8 = r6 + 0x00000004
	branch Test(EQ,r3) l0001B2B4_ds_t
	// succ:  l0001B2B4_ds_f l0001B2B4_ds_t
l0001B2B4_ds_f:
	r6 = r6 + 0x00000024
	goto l0001B2D0
	// succ:  l0001B2D0
l0001B2B4_ds_t:
	r6 = r6 + 0x00000024
	goto l0001B310
	// succ:  l0001B310
l0001B2D0:
	r4 = r8
	r3 = r9
	// succ:  l0001B2D8
l0001B2D8:
	r12 = Mem0[r4:word32]
	r5 = Mem0[r3:word32]
	r3 = r3 + 0x00000004
	Mem0[r3 - 4:word32] = r12
	Mem0[r4:word32] = r5
	r5 = r3 ^ r6
	branch Test(NE,r5) l0001B2D8_ds_t
	// succ:  l0001B2D8_ds_f l0001B2D8_ds_t
l0001B2D8_ds_f:
	r4 = r4 + 0x00000020
	goto l0001B2F8
	// succ:  l0001B2F8
l0001B2D8_ds_t:
	r4 = r4 + 0x00000020
	goto l0001B2D8
	// succ:  l0001B2D8
l0001B2F8:
	r7 = r7 + 0x00000001
	r3 = r7 ^ 0x00000008
	r9 = r9 + 0x00000020
	r8 = r8 + 0x00000004
	branch Test(NE,r3) l0001B2F8_ds_t
	// succ:  l0001B2F8_ds_f l0001B2F8_ds_t
l0001B2F8_ds_f:
	r6 = r6 + 0x00000024
	goto l0001B310
	// succ:  l0001B310
l0001B2F8_ds_t:
	r6 = r6 + 0x00000024
	goto l0001B2D0
	// succ:  l0001B2D0
l0001B310:
	r10 = r10 + 0x00000004
	r3 = r10 ^ r11
	branch Test(NE,r3) l0001B2AC
	// succ:  l0001B31C l0001B2AC
l0001B31C:
	return
	// succ:  fn0001B238_exit
fn0001B238_exit:


// fn0001BB58
// Return size: 0
define fn0001BB58
fn0001BB58_entry:
	r1 = fp
	goto l0001BB58
	// succ:  l0001BB58
l0001BB50_ds_f:
	r29 = r29 + 0x00000004
	goto l0001BB6C
	// succ:  l0001BB6C
l0001BB50_ds_t:
	r29 = r29 + 0x00000004
	goto l0001BB68_thunk_fn0001CC8C
	// succ:  l0001BB68_thunk_fn0001CC8C
l0001BB58:
	r31 = r31 + 0x00000001
	r30 = r30 + 0x00000054
	r18 = cond(r31 - r21)
	branch Test(LT,r18) l0001BB50_ds_t
	goto l0001BB50_ds_f
	// succ:  l0001BB50_ds_f l0001BB50_ds_t
l0001BB68_thunk_fn0001CC8C:
	call fn0001CC8C (retsize: 0;)
	return
	// succ:  fn0001BB58_exit
l0001BB6C:
	r15 = Mem0[r1:word32]
	// succ:  l0001BB70
l0001BB70:
	r19 = Mem0[r1 + 88:word32]
	r21 = Mem0[r1 + 96:word32]
	r22 = Mem0[r1 + 100:word32]
	r23 = Mem0[r1 + 104:word32]
	r24 = Mem0[r1 + 108:word32]
	r25 = Mem0[r1 + 112:word32]
	r26 = Mem0[r1 + 116:word32]
	r27 = Mem0[r1 + 120:word32]
	r28 = Mem0[r1 + 124:word32]
	r29 = Mem0[r1 + 128:word32]
	r30 = Mem0[r1 + 132:word32]
	r31 = Mem0[r1 + 136:word32]
	r1 = r1 + 0x0000008C
	return
	// succ:  fn0001BB58_exit
fn0001BB58_exit:


// fn0001CC00
// Return size: 0
define fn0001CC00
fn0001CC00_entry:
	r1 = fp
	goto l0001CC00
	// succ:  l0001CC00
l0001BB70_in_fn0001CC00:
	r19 = Mem0[r1 + 88:word32]
	r21 = Mem0[r1 + 96:word32]
	r22 = Mem0[r1 + 100:word32]
	r23 = Mem0[r1 + 104:word32]
	r24 = Mem0[r1 + 108:word32]
	r25 = Mem0[r1 + 112:word32]
	r26 = Mem0[r1 + 116:word32]
	r27 = Mem0[r1 + 120:word32]
	r28 = Mem0[r1 + 124:word32]
	r29 = Mem0[r1 + 128:word32]
	r30 = Mem0[r1 + 132:word32]
	r31 = Mem0[r1 + 136:word32]
	r1 = r1 + 0x0000008C
	return
	// succ:  fn0001CC00_exit
l0001CA74:
	r20 = Mem0[r1 + 28:word32]
	r6 = Mem0[r1 + 32:word32]
	r28 = Mem0[r20 + 64:word32]
	r28 = r28 + r22
	r27 = Mem0[r28 + 12:word32]
	r15 = 0x0001CA8C
	r5 = r27
	call fn0002E908 (retsize: 0;)
	r23 = r3
	r3 = Mem0[r28 + 32:word32]
	branch Test(EQ,r3) l0001CA74_ds_t
	// succ:  l0001CA74_ds_f l0001CA74_ds_t
l0001CA74_ds_f:
	r8 = r27
	goto l0001CAA4
	// succ:  l0001CAA4
l0001CA74_ds_t:
	r8 = r27
	goto l0001CC2C
	// succ:  l0001CC2C
l0001CAA4:
	r29 = 0x00000000
	r3 = Mem0[r25 + 4:word32]
	// succ:  l0001CAAC
l0001CAAC:
	r4 = Mem0[r1 + 48:word32]
	r9 = r31
	r3 = Mem0[r3 + 32:word32]
	r7 = r29
	r6 = Mem0[r19 + r4:word32]
	r15 = 0x0001CAC0
	r5 = r25
	call 0x0001CAC0 + r3 (retsize: 0;)
	r26 = r3
	r3 = Mem0[r25 + 4:word32]
	r9 = r24
	r8 = Mem0[r28 + 12:word32]
	r18 = cond(r29 -u r23)
	branch Test(GE,r18) l0001CAAC_ds_t
	// succ:  l0001CAAC_ds_f l0001CAAC_ds_t
l0001CAAC_ds_f:
	r3 = Mem0[r3 + 32:word32]
	goto l0001CAE4
	// succ:  l0001CAE4
l0001CAAC_ds_t:
	r3 = Mem0[r3 + 32:word32]
	goto l0001CC08
	// succ:  l0001CC08
l0001CAE4:
	r20 = Mem0[r1 + 40:word32]
	r5 = r25
	r7 = r23 - r29
	r6 = Mem0[r19 + r20:word32]
	r15 = 0x0001CAF4
	r7 = r7 - r8
	call 0x0001CAF4 + r3 (retsize: 0;)
	r10 = Mem0[r28 + 12:word32]
	// succ:  l0001CB00
l0001CB00:
	branch Test(LE,r10) l0001CB44
	// succ:  l0001CB04 l0001CB44
l0001CB04:
	r27 = 0x00000000
	r21 = r27
	// succ:  l0001CB0C
l0001CB0C:
	r6 = Mem0[r27 + r26:word32]
	r18 = cond(r29 -u r23)
	branch Test(LT,r18) l0001CB0C_ds_t
	// succ:  l0001CB0C_ds_f l0001CB0C_ds_t
l0001CB0C_ds_f:
	r7 = Mem0[r28 + 28:word32]
	goto l0001CB1C
	// succ:  l0001CB1C
l0001CB0C_ds_t:
	r7 = Mem0[r28 + 28:word32]
	goto l0001CB60
	// succ:  l0001CB60
l0001CB1C:
	r5 = Mem0[r27 + r3:word32]
	r15 = 0x0001CB24
	Mem0[r1 + 84:word32] = r3
	call fn0002CDCC (retsize: 0;)
	r10 = Mem0[r28 + 12:word32]
	r3 = Mem0[r1 + 84:word32]
	// succ:  l0001CB34
l0001CB34:
	r21 = r21 + 0x00000001
	// succ:  l0001CB38
l0001CB38:
	r18 = cond(r21 - r10)
	branch Test(LT,r18) l0001CB38_ds_t
	// succ:  l0001CB38_ds_f l0001CB38_ds_t
l0001CB38_ds_f:
	r27 = r27 + 0x00000004
	goto l0001CB44
	// succ:  l0001CB44
l0001CB38_ds_t:
	r27 = r27 + 0x00000004
	goto l0001CB0C
	// succ:  l0001CB0C
l0001CB44:
	r3 = Mem0[r28 + 32:word32]
	r29 = r29 + r10
	r18 = cond(r29 -u r3)
	branch Test(GE,r18) l0001CB44_ds_t
	// succ:  l0001CB44_ds_f l0001CB44_ds_t
l0001CB44_ds_f:
	r8 = r10
	goto l0001CB58
	// succ:  l0001CB58
l0001CB44_ds_t:
	r8 = r10
	goto l0001CC24
	// succ:  l0001CC24
l0001CB58:
	r3 = Mem0[r25 + 4:word32]
	goto l0001CAAC
	// succ:  l0001CAAC
l0001CB60:
	r4 = r10 - r21
	r4 = r4 + 0xFFFFFFFF
	r4 = r4 + r4
	r4 = r4 + r4
	branch Test(EQ,r7) l0001CB60_ds_t
	// succ:  l0001CB60_ds_f l0001CB60_ds_t
l0001CB60_ds_f:
	r11 = Mem0[r4 + r3:word32]
	goto l0001CB7C
	// succ:  l0001CB7C
l0001CB60_ds_t:
	r11 = Mem0[r4 + r3:word32]
	goto l0001CB34
	// succ:  l0001CB34
l0001CB7C:
	r4 = r7 + 0x00000001
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r9 = r6
	r4 = r4 + r4
	r8 = r11 + 0x00000080
	r11 = r11 + r4
	// succ:  l0001CBA8
l0001CBA8:
	r7 = r9
	r6 = r8 + 0xFFFFFF80
	// succ:  l0001CBB0
l0001CBB0:
	r4 = 0x00000000
	// succ:  l0001CBB4
l0001CBB4:
	v25 = Mem0[r4 + r6:word16]
	r5 = (word32) v25
	v26 = SLICE(r5, word16, 0)
	Mem0[r4 + r7:word16] = v26
	r4 = r4 + 0x00000002
	r5 = r4 ^ 0x00000010
	branch Test(NE,r5) l0001CBB4
	// succ:  l0001CBC8 l0001CBB4
l0001CBC8:
	v27 = Mem0[r4 + r6:word16]
	r5 = (word32) v27
	r5 = -r5
	v28 = SLICE(r5, word16, 0)
	Mem0[r4 + r7:word16] = v28
	r4 = r4 + 0x00000002
	r5 = r4 ^ 0x00000020
	branch Test(NE,r5) l0001CBC8
	// succ:  l0001CBE0 l0001CBC8
l0001CBE0:
	r6 = r6 + 0x00000020
	r4 = r6 ^ r8
	branch Test(NE,r4) l0001CBE0_ds_t
	// succ:  l0001CBE0_ds_f l0001CBE0_ds_t
l0001CBE0_ds_f:
	r7 = r7 + 0x00000020
	goto l0001CBF0
	// succ:  l0001CBF0
l0001CBE0_ds_t:
	r7 = r7 + 0x00000020
	goto l0001CBB0
	// succ:  l0001CBB0
l0001CBF0:
	r8 = r8 + 0x00000080
	r4 = r11 ^ r8
	branch Test(NE,r4) l0001CBF0_ds_t
	// succ:  l0001CBF0_ds_f l0001CBF0_ds_t
l0001CBF0_ds_f:
	r9 = r9 + 0x00000080
	goto l0001CC00
	// succ:  l0001CC00
l0001CBF0_ds_t:
	r9 = r9 + 0x00000080
	goto l0001CBA8
	// succ:  l0001CBA8
l0001CC00:
	r21 = r21 + 0x00000001
	goto l0001CB38
	// succ:  l0001CB38
l0001CC08:
	r4 = Mem0[r1 + 40:word32]
	r7 = r29
	r5 = r25
	r15 = 0x0001CC14
	r6 = Mem0[r19 + r4:word32]
	call 0x0001CC14 + r3 (retsize: 0;)
	r10 = Mem0[r28 + 12:word32]
	goto l0001CB00
	// succ:  l0001CB00
l0001CC24:
	r20 = Mem0[r1 + 28:word32]
	r21 = Mem0[r20 + 56:word32]
	goto l0001CC2C
	// succ:  l0001CC2C
l0001CC24_ds_f:
	r19 = r19 + 0x00000004
	goto l0001CC40
	// succ:  l0001CC40
l0001CC24_ds_t:
	r19 = r19 + 0x00000004
	goto l0001CA74
	// succ:  l0001CA74
l0001CC2C:
	r30 = r30 + 0x00000001
	r22 = r22 + 0x00000054
	r18 = cond(r30 - r21)
	branch Test(LT,r18) l0001CC24_ds_t
	goto l0001CC24_ds_f
	// succ:  l0001CC24_ds_f l0001CC24_ds_t
l0001CC40:
	r15 = Mem0[r1:word32]
	goto l0001BB70_in_fn0001CC00
	// succ:  l0001BB70_in_fn0001CC00
fn0001CC00_exit:


// fn0001CC5C
// Return size: 0
define fn0001CC5C
fn0001CC5C_entry:
	r1 = fp
	goto l0001CC5C
	// succ:  l0001CC5C
l0001BB6C_in_fn0001CC5C:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 88:word32]
	r21 = Mem0[r1 + 96:word32]
	r22 = Mem0[r1 + 100:word32]
	r23 = Mem0[r1 + 104:word32]
	r24 = Mem0[r1 + 108:word32]
	r25 = Mem0[r1 + 112:word32]
	r26 = Mem0[r1 + 116:word32]
	r27 = Mem0[r1 + 120:word32]
	r28 = Mem0[r1 + 124:word32]
	r29 = Mem0[r1 + 128:word32]
	r30 = Mem0[r1 + 132:word32]
	r31 = Mem0[r1 + 136:word32]
	r1 = r1 + 0x0000008C
	return
	// succ:  fn0001CC5C_exit
l0001CC5C:
	r30 = r30 + r30
	r30 = r30 + r30
	r15 = 0x0001CC68
	r6 = r30
	call fn0002E960 (retsize: 0;)
	r4 = Mem0[r1 + 28:word32]
	Mem0[r1 + 32:word32] = r3
	r21 = Mem0[r4 + 56:word32]
	branch Test(LE,r21) l0001CC5C_ds_t
	// succ:  l0001CC5C_ds_f l0001CC5C_ds_t
l0001CC5C_ds_f:
	r29 = 0x00000000
	goto l0001CC84
	// succ:  l0001CC84
l0001CC5C_ds_t:
	r29 = 0x00000000
	goto l0001BB6C_in_fn0001CC5C
	// succ:  l0001BB6C_in_fn0001CC5C
l0001CC84:
	r30 = r29
	r31 = r29
	// succ:  l0001CC88_thunk_fn0001CC8C
l0001CC88_thunk_fn0001CC8C:
	call fn0001CC8C (retsize: 0;)
	return
	// succ:  fn0001CC5C_exit
fn0001CC5C_exit:


// fn0001CC8C
// Return size: 0
define fn0001CC8C
fn0001CC8C_entry:
	r1 = fp
	// succ:  l0001CC8C
l0001CC8C:
	r20 = Mem0[r1 + 28:word32]
	r6 = Mem0[r1 + 32:word32]
	r23 = Mem0[r20 + 64:word32]
	r23 = r23 + r30
	r19 = Mem0[r23 + 12:word32]
	r15 = 0x0001CCA4
	r5 = r19
	call fn0002E908 (retsize: 0;)
	r22 = r3
	r3 = Mem0[r23 + 32:word32]
	branch Test(EQ,r3) l0001CC8C_ds_t
	// succ:  l0001CC8C_ds_f l0001CC8C_ds_t
l0001CC8C_ds_f:
	r3 = r22 + r22
	goto l0001CCB8_thunk_fn0001CCBC
	// succ:  l0001CCB8_thunk_fn0001CCBC
l0001CC8C_ds_t:
	r3 = r22 + r22
	// succ:  l0001CCB8_thunk_fn0001BB58
l0001CCB8_thunk_fn0001BB58:
	call fn0001BB58 (retsize: 0;)
	return
	// succ:  fn0001CC8C_exit
l0001CCB8_thunk_fn0001CCBC:
	call fn0001CCBC (retsize: 0;)
	return
	// succ:  fn0001CC8C_exit
fn0001CC8C_exit:


// fn0001CC98
// Return size: 0
define fn0001CC98
fn0001CC98_entry:
	r1 = fp
	// succ:  l0001CC98
l0001CC98:
	r23 = r23 + r30
	r19 = Mem0[r23 + 12:word32]
	r15 = 0x0001CCA4
	r5 = r19
	call fn0002E908 (retsize: 0;)
	r22 = r3
	r3 = Mem0[r23 + 32:word32]
	branch Test(EQ,r3) l0001CC98_ds_t
	// succ:  l0001CC98_ds_f l0001CC98_ds_t
l0001CC98_ds_f:
	r3 = r22 + r22
	goto l0001CCB8_thunk_fn0001CCBC
	// succ:  l0001CCB8_thunk_fn0001CCBC
l0001CC98_ds_t:
	r3 = r22 + r22
	// succ:  l0001CCB8_thunk_fn0001BB58
l0001CCB8_thunk_fn0001BB58:
	call fn0001BB58 (retsize: 0;)
	return
	// succ:  fn0001CC98_exit
l0001CCB8_thunk_fn0001CCBC:
	call fn0001CCBC (retsize: 0;)
	return
	// succ:  fn0001CC98_exit
fn0001CC98_exit:


// fn0001CCBC
// Return size: 0
define fn0001CCBC
fn0001CCBC_entry:
	r1 = fp
	goto l0001CCBC_thunk_fn0001BB58
	// succ:  l0001CCBC_thunk_fn0001BB58
l0001CCBC:
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r8 = r19
	r3 = r3 + 0xFFFFFF80
	r21 = 0x00000000
	Mem0[r1 + 36:word32] = r3
	r4 = Mem0[r1 + 48:word32]
	goto l0001CCE4_thunk_fn0001CCE8
	// succ:  l0001CCE4_thunk_fn0001CCE8
l0001CCBC_thunk_fn0001BB58:
	call fn0001BB58 (retsize: 0;)
	return
	// succ:  fn0001CCBC_exit
l0001CCE4_thunk_fn0001CCE8:
	call fn0001CCE8 (retsize: 0;)
	return
	// succ:  fn0001CCBC_exit
fn0001CCBC_exit:


// fn0001CCC4
// Return size: 0
define fn0001CCC4
fn0001CCC4_entry:
	r1 = fp
	// succ:  l0001CCC4
l0001CCC4:
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r8 = r19
	r3 = r3 + 0xFFFFFF80
	r21 = 0x00000000
	Mem0[r1 + 36:word32] = r3
	r4 = Mem0[r1 + 48:word32]
	// succ:  l0001CCE4_thunk_fn0001CCE8
l0001CCE4_thunk_fn0001CCE8:
	call fn0001CCE8 (retsize: 0;)
	return
	// succ:  fn0001CCC4_exit
fn0001CCC4_exit:


// fn0001CCE8
// Return size: 0
define fn0001CCE8
fn0001CCE8_entry:
	r1 = fp
	// succ:  l0001CCE8
l0001CCE8:
	r3 = Mem0[r25 + 4:word32]
	r9 = 0x00000001
	// succ:  l0001CCEC_thunk_fn0001CCF0
l0001CCEC_thunk_fn0001CCF0:
	call fn0001CCF0 (retsize: 0;)
	return
	// succ:  fn0001CCE8_exit
fn0001CCE8_exit:


// fn0001CCF0
// Return size: 0
define fn0001CCF0
fn0001CCF0_entry:
	r1 = fp
	// succ:  l0001CCF0
l0001CCF0:
	r6 = Mem0[r29 + r4:word32]
	r3 = Mem0[r3 + 32:word32]
	r7 = r21
	r15 = 0x0001CCFC
	r5 = r25
	call 0x0001CCFC + r3 (retsize: 0;)
	r4 = Mem0[r23 + 12:word32]
	branch Test(LE,r4) l0001CE3C
	goto l0001CD0C
	// succ:  l0001CD0C l0001CD08_thunk_fn0001CE14
l0001CD08_thunk_fn0001CE14:
	call fn0001CE14 (retsize: 0;)
	return
	// succ:  fn0001CCF0_exit
l0001CD0C:
	r19 = r21 + r21
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r24 = r3
	r3 = Mem0[r23 + 28:word32]
	r19 = r19 + r19
	r19 = r19 + r19
	r27 = 0x00000000
	// succ:  l0001CD30_thunk_fn0001CE14
l0001CD30_thunk_fn0001CE14:
	call fn0001CE14 (retsize: 0;)
	return
	// succ:  fn0001CCF0_exit
fn0001CCF0_exit:


// fn0001CE14
// Return size: 0
define fn0001CE14
fn0001CE14_entry:
	r1 = fp
	goto l0001CE14
	// succ:  l0001CE14
l0001BB50:
	r20 = Mem0[r1 + 28:word32]
	r21 = Mem0[r20 + 56:word32]
	// succ:  l0001BB54_thunk_fn0001BB58
l0001BB54_thunk_fn0001BB58:
	call fn0001BB58 (retsize: 0;)
	return
	// succ:  fn0001CE14_exit
l0001CD34:
	branch Test(EQ,r3) l0001CE28
	// succ:  l0001CD38 l0001CE28
l0001CD38:
	r20 = Mem0[r1 + 36:word32]
	r28 = 0x00000000
	r8 = Mem0[r23 + 8:word32]
	r26 = r20 - r19
	goto l0001CD48
	// succ:  l0001CD48
l0001CD38_ds_f:
	r11 = r8 + r28
	goto l0001CD74
	// succ:  l0001CD74
l0001CD38_ds_t:
	r11 = r8 + r28
	goto l0001CE14
	// succ:  l0001CE14
l0001CD48:
	r3 = Mem0[r25 + 4:word32]
	r4 = Mem0[r1 + 40:word32]
	r9 = 0x00000000
	r3 = Mem0[r3 + 32:word32]
	r7 = r28
	r6 = Mem0[r29 + r4:word32]
	r15 = 0x0001CD60
	r5 = r25
	call 0x0001CD60 + r3 (retsize: 0;)
	r8 = Mem0[r23 + 8:word32]
	branch Test(LE,r8) l0001CD38_ds_t
	goto l0001CD38_ds_f
	// succ:  l0001CD38_ds_f l0001CD38_ds_t
l0001CD74:
	r9 = r28 + r28
	r4 = r11 + r11
	r9 = r9 + r9
	r4 = r4 + r4
	r9 = r9 + r9
	r4 = r4 + r4
	r9 = r9 + r9
	r4 = r4 + r4
	r10 = Mem0[r24:word32]
	r9 = r9 + r9
	r4 = r4 + r4
	r9 = r9 + r9
	r4 = r4 + r4
	r9 = r9 + r9
	r4 = r4 + r4
	r9 = r10 + r9
	r10 = r10 + r4
	goto l0001CDB8
	// succ:  l0001CDB8
l0001CD74_ds_f:
	r7 = Mem0[r3:word32]
	goto l0001CDC4
	// succ:  l0001CDC4
l0001CD74_ds_t:
	r7 = Mem0[r3:word32]
	goto l0001CE58
	// succ:  l0001CE58
l0001CDB8:
	r18 = cond(r21 -u r22)
	branch Test(LT,r18) l0001CD74_ds_t
	goto l0001CD74_ds_f
	// succ:  l0001CD74_ds_f l0001CD74_ds_t
l0001CDC4:
	r12 = r9
	r20 = r7 + r19
	r28 = r9 + 0x00000010
	// succ:  l0001CDD0
l0001CDD0:
	r4 = r12
	r5 = r20
	r7 = r12 + 0x00000080
	// succ:  l0001CDDC
l0001CDDC:
	v26 = Mem0[r5:word16]
	r6 = (word32) v26
	r4 = r4 + 0x00000010
	v27 = SLICE(r6, word16, 0)
	Mem0[r4 - 16:word16] = v27
	r6 = r7 ^ r4
	branch Test(NE,r6) l0001CDDC_ds_t
	// succ:  l0001CDDC_ds_f l0001CDDC_ds_t
l0001CDDC_ds_f:
	r5 = r5 + 0x00000002
	goto l0001CDF4
	// succ:  l0001CDF4
l0001CDDC_ds_t:
	r5 = r5 + 0x00000002
	goto l0001CDDC
	// succ:  l0001CDDC
l0001CDF4:
	r12 = r12 + 0x00000002
	r4 = r28 ^ r12
	branch Test(NE,r4) l0001CDF4_ds_t
	// succ:  l0001CDF4_ds_f l0001CDF4_ds_t
l0001CDF4_ds_f:
	r20 = r20 + 0x00000010
	goto l0001CE04
	// succ:  l0001CE04
l0001CDF4_ds_t:
	r20 = r20 + 0x00000010
	goto l0001CDD0
	// succ:  l0001CDD0
l0001CE04:
	r9 = r9 + 0x00000080
	r4 = r10 ^ r9
	branch Test(NE,r4) l0001CE04_ds_t
	// succ:  l0001CE04_ds_f l0001CE04_ds_t
l0001CE04_ds_f:
	r3 = r3 + 0x00000004
	goto l0001CE14
	// succ:  l0001CE14
l0001CE04_ds_t:
	r3 = r3 + 0x00000004
	goto l0001CDB8
	// succ:  l0001CDB8
l0001CE14:
	r3 = Mem0[r23 + 28:word32]
	goto l0001CE18
	// succ:  l0001CE18
l0001CE14_ds_f:
	r28 = r11
	goto l0001CE24
	// succ:  l0001CE24
l0001CE14_ds_t:
	r28 = r11
	goto l0001CD48
	// succ:  l0001CD48
l0001CE18:
	r18 = cond(r11 -u r3)
	branch Test(LT,r18) l0001CE14_ds_t
	goto l0001CE14_ds_f
	// succ:  l0001CE14_ds_f l0001CE14_ds_t
l0001CE24:
	r4 = Mem0[r23 + 12:word32]
	// succ:  l0001CE28
l0001CE28:
	r27 = r27 + 0x00000001
	r19 = r19 + 0x00000080
	r18 = cond(r27 - r4)
	branch Test(LT,r18) l0001CE28_ds_t
	// succ:  l0001CE28_ds_f l0001CE28_ds_t
l0001CE28_ds_f:
	r24 = r24 + 0x00000004
	goto l0001CE3C
	// succ:  l0001CE3C
l0001CE28_ds_t:
	r24 = r24 + 0x00000004
	goto l0001CD34
	// succ:  l0001CD34
l0001CE3C:
	r3 = Mem0[r23 + 32:word32]
	r21 = r21 + r4
	r18 = cond(r21 -u r3)
	branch Test(GE,r18) l0001CE3C_ds_t
	// succ:  l0001CE3C_ds_f l0001CE3C_ds_t
l0001CE3C_ds_f:
	r8 = r4
	goto l0001CE50
	// succ:  l0001CE50
l0001CE3C_ds_t:
	r8 = r4
	goto l0001BB50
	// succ:  l0001BB50
l0001CE50:
	r4 = Mem0[r1 + 48:word32]
	// succ:  l0001CE50_thunk_fn0001BB58
l0001CE50_thunk_fn0001BB58:
	call fn0001BB58 (retsize: 0;)
	return
	// succ:  fn0001CE14_exit
l0001CE58:
	r12 = r9
	r7 = r7 + r26
	r28 = r9 + 0x00000010
	// succ:  l0001CE64
l0001CE64:
	r4 = r12
	r5 = r7
	r20 = r12 + 0x00000080
	// succ:  l0001CE70
l0001CE70:
	v28 = Mem0[r5:word16]
	r6 = (word32) v28
	r4 = r4 + 0x00000020
	r5 = r5 + 0x00000004
	v29 = SLICE(r6, word16, 0)
	Mem0[r4 - 32:word16] = v29
	v30 = Mem0[r5 - 2:word16]
	r6 = (word32) v30
	r6 = -r6
	v31 = SLICE(r6, word16, 0)
	Mem0[r4 - 16:word16] = v31
	r6 = r20 ^ r4
	branch Test(NE,r6) l0001CE70
	// succ:  l0001CE94 l0001CE70
l0001CE94:
	r12 = r12 + 0x00000002
	r4 = r28 ^ r12
	branch Test(NE,r4) l0001CE94_ds_t
	// succ:  l0001CE94_ds_f l0001CE94_ds_t
l0001CE94_ds_f:
	r7 = r7 + 0x00000010
	goto l0001CEA4
	// succ:  l0001CEA4
l0001CE94_ds_t:
	r7 = r7 + 0x00000010
	goto l0001CE64
	// succ:  l0001CE64
l0001CEA4:
	r9 = r9 + 0x00000080
	r4 = r10 ^ r9
	branch Test(NE,r4) l0001CEA4_ds_t
	// succ:  l0001CEA4_ds_f l0001CEA4_ds_t
l0001CEA4_ds_f:
	r3 = r3 + 0x00000004
	goto l0001CEB4
	// succ:  l0001CEB4
l0001CEA4_ds_t:
	r3 = r3 + 0x00000004
	goto l0001CDB8
	// succ:  l0001CDB8
l0001CEB4:
	r3 = Mem0[r23 + 28:word32]
	goto l0001CE18
	// succ:  l0001CE18
fn0001CE14_exit:


// fn0001D1B8
// Return size: 0
define fn0001D1B8
fn0001D1B8_entry:
	r1 = fp
	// succ:  l0001D1B8
l0001D1B8:
	r3 = r5 + 0x00000044
	r8 = r5 + 0x00000054
	goto l0001D1C0
	// succ:  l0001D1C0
l0001D1B8_ds_f:
	r7 = r3 ^ r8
	goto l0001D1D0
	// succ:  l0001D1D0
l0001D1B8_ds_t:
	r7 = r3 ^ r8
	goto l0001D1D4
	// succ:  l0001D1D4
l0001D1C0:
	r4 = Mem0[r3:word32]
	r3 = r3 + 0x00000004
	branch Test(EQ,r4) l0001D1B8_ds_t
	goto l0001D1B8_ds_f
	// succ:  l0001D1B8_ds_f l0001D1B8_ds_t
l0001D1D0:
	Mem0[r4 + 256:word32] = r6
	// succ:  l0001D1D4
l0001D1D4:
	branch Test(NE,r7) l0001D1C0
	// succ:  l0001D1D8 l0001D1C0
l0001D1D8:
	r5 = r5 + 0x00000064
	// succ:  l0001D1DC
l0001D1DC:
	r4 = Mem0[r3:word32]
	branch Test(EQ,r4) l0001D1E8
	// succ:  l0001D1E4 l0001D1E8
l0001D1E4:
	Mem0[r4 + 548:word32] = r6
	// succ:  l0001D1E8
l0001D1E8:
	r4 = Mem0[r3 + 16:word32]
	r3 = r3 + 0x00000004
	branch Test(EQ,r4) l0001D1E8_ds_t
	// succ:  l0001D1E8_ds_f l0001D1E8_ds_t
l0001D1E8_ds_f:
	r7 = r5 ^ r3
	goto l0001D1F8
	// succ:  l0001D1F8
l0001D1E8_ds_t:
	r7 = r5 ^ r3
	goto l0001D1FC
	// succ:  l0001D1FC
l0001D1F8:
	Mem0[r4 + 548:word32] = r6
	// succ:  l0001D1FC
l0001D1FC:
	branch Test(NE,r7) l0001D1DC
	// succ:  l0001D200 l0001D1DC
l0001D200:
	return
	// succ:  fn0001D1B8_exit
fn0001D1B8_exit:


// fn0001D37C
// Return size: 0
define fn0001D37C
fn0001D37C_entry:
	r1 = fp
	// succ:  l0001D37C
l0001D37C:
	r1 = r1 + 0xFFFFFFD0
	Mem0[r1 + 32:word32] = r19
	Mem0[r1 + 36:word32] = r21
	Mem0[r1 + 40:word32] = r22
	Mem0[r1:word32] = r15
	Mem0[r1 + 44:word32] = r23
	r3 = Mem0[r5 + 276:word32]
	r21 = r5
	r19 = r7
	r22 = r8
	branch Test(EQ,r3) l0001D37C_ds_t
	// succ:  l0001D37C_ds_f l0001D37C_ds_t
l0001D37C_ds_f:
	r4 = Mem0[r5 + 20:word32]
	goto l0001D3AC
	// succ:  l0001D3AC
l0001D37C_ds_t:
	r4 = Mem0[r5 + 20:word32]
	goto l0001D42C
	// succ:  l0001D42C
l0001D3AC:
	r3 = Mem0[r21:word32]
	goto l0001D3B0
	// succ:  l0001D3B0
l0001D3AC_ds_f:
	r23 = Mem0[r3 + 24:word32]
	goto l0001D3F0
	// succ:  l0001D3F0
l0001D3AC_ds_t:
	r23 = Mem0[r3 + 24:word32]
	goto l0001D410
	// succ:  l0001D410
l0001D3B0:
	r7 = 0x00000014
	r5 = r21
	Mem0[r3 + 20:word32] = r7
	r7 = Mem0[r3:word32]
	Mem0[r3 + 24:word32] = r4
	r15 = 0x0001D3C4
	Mem0[r1 + 28:word32] = r6
	call 0x0001D3C4 + r7 (retsize: 0;)
	r6 = Mem0[r1 + 28:word32]
	// succ:  l0001D3D0
l0001D3D0:
	r3 = Mem0[r21 + 400:word32]
	r7 = r22
	r3 = Mem0[r3 + 20:word32]
	r15 = 0x0001D3DC
	r5 = r21
	call 0x0001D3DC + r3 (retsize: 0;)
	r3 = Mem0[r21 + 400:word32]
	branch Test(EQ,r22) l0001D3AC_ds_t
	goto l0001D3AC_ds_f
	// succ:  l0001D3AC_ds_f l0001D3AC_ds_t
l0001D3F0:
	r22 = r19 + r22
	// succ:  l0001D3F4
l0001D3F4:
	v14 = Mem0[r19:byte]
	r6 = (word32) v14
	r5 = r21
	r19 = r19 + 0x00000001
	r15 = 0x0001D400
	v15 = SLICE(r6, int8, 0)
	r6 = (int32) v15
	call 0x0001D400 + r23 (retsize: 0;)
	r3 = r19 ^ r22
	branch Test(NE,r3) l0001D3F4
	// succ:  l0001D410 l0001D3F4
l0001D410:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 32:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r1 = r1 + 0x00000030
	return
	// succ:  fn0001D37C_exit
l0001D42C:
	r3 = r4 + 0xFFFFFF9B
	r5 = 0x00000002
	r18 = cond(r5 -u r3)
	branch Test(GE,r18) l0001D3D0
	// succ:  l0001D43C l0001D3D0
l0001D43C:
	r3 = Mem0[r21:word32]
	goto l0001D3B0
	// succ:  l0001D3B0
fn0001D37C_exit:


// fn0001DE80
// Return size: 0
define fn0001DE80
fn0001DE80_entry:
	r1 = fp
	// succ:  l0001DE80
l0001DE80:
	r1 = r1 + 0xFFFFFFD0
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	r3 = Mem0[r6:word32]
	r22 = r6
	r23 = r5
	r21 = r7
	branch Test(EQ,r3) l0001DE80_ds_t
	// succ:  l0001DE80_ds_f l0001DE80_ds_t
l0001DE80_ds_f:
	r24 = r8
	goto l0001DEB4
	// succ:  l0001DEB4
l0001DE80_ds_t:
	r24 = r8
	goto l0001DF54
	// succ:  l0001DF54
l0001DEB4:
	r6 = r21
	r5 = r3
	r7 = 0x00000022
	r15 = 0x0001DEC4
	r19 = 0x00000000
	call fn0002F60C (retsize: 0;)
	r3 = r21 + 0x00000002
	r7 = r21 + 0x00000022
	// succ:  l0001DED4
l0001DED4:
	v15 = Mem0[r3:word16]
	r4 = (word32) v15
	r3 = r3 + 0x00000002
	r5 = r7 ^ r3
	v16 = SLICE(r4, int16, 0)
	r4 = (int32) v16
	branch Test(NE,r5) l0001DED4_ds_t
	// succ:  l0001DED4_ds_f l0001DED4_ds_t
l0001DED4_ds_f:
	r19 = r19 + r4
	goto l0001DEEC
	// succ:  l0001DEEC
l0001DED4_ds_t:
	r19 = r19 + r4
	goto l0001DED4
	// succ:  l0001DED4
l0001DEEC:
	r3 = r19 + 0xFFFFFFFF
	r4 = 0x000000FF
	r18 = cond(r4 -u r3)
	branch Test(GE,r18) l0001DEEC_ds_t
	// succ:  l0001DEEC_ds_f l0001DEEC_ds_t
l0001DEEC_ds_f:
	r4 = 0x00000008
	goto l0001DF00
	// succ:  l0001DF00
l0001DEEC_ds_t:
	r4 = 0x00000008
	goto l0001DF14
	// succ:  l0001DF14
l0001DF00:
	r3 = Mem0[r23:word32]
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x0001DF0C
	r5 = r23
	call 0x0001DF0C + r3 (retsize: 0;)
l0001DF14:
	r5 = Mem0[r22:word32]
	r6 = r24
	r7 = r19 + r19
	r15 = 0x0001DF24
	r5 = r5 + 0x00000022
	call fn0002F60C (retsize: 0;)
	r3 = Mem0[r22:word32]
	Mem0[r3 + 548:word32] = r0
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r1 = r1 + 0x00000030
	return
	// succ:  fn0001DE80_exit
l0001DF54:
	r15 = 0x0001DF58
	call fn0001CCC4 (retsize: 0;)
	Mem0[r22:word32] = r3
	goto l0001DEB4
	// succ:  l0001DEB4
fn0001DE80_exit:


// fn0001DF68
// Return size: 0
define fn0001DF68
fn0001DF68_entry:
	r1 = fp
	// succ:  l0001DF68
l0001DF68:
	r3 = 0x00000004
	r18 = cond(r3 - r6)
	branch Test(LT,r18) l0001DF68_ds_t
	// succ:  l0001DF68_ds_f l0001DF68_ds_t
l0001DF68_ds_f:
	r4 = r5
	goto l0001DF78
	// succ:  l0001DF78
l0001DF68_ds_t:
	r4 = r5
	goto l0001DFB4
	// succ:  l0001DFB4
l0001DF78:
	branch Test(LE,r6) l0001DF78_ds_t
	// succ:  l0001DF78_ds_f l0001DF78_ds_t
l0001DF78_ds_f:
	Mem0[r5:word32] = r6
	goto l0001DF80
	// succ:  l0001DF80
l0001DF78_ds_t:
	Mem0[r5:word32] = r6
	goto l0001DF9C
	// succ:  l0001DF9C
l0001DF80:
	r3 = r5 + r3
	r4 = 0x00000000
	// succ:  l0001DF88
l0001DF88:
	Mem0[r3:word32] = r4
	r4 = r4 + 0x00000001
	r9 = r6 ^ r4
	branch Test(NE,r9) l0001DF88_ds_t
	// succ:  l0001DF88_ds_f l0001DF88_ds_t
l0001DF88_ds_f:
	r3 = r3 + 0x00000004
	goto l0001DF9C
	// succ:  l0001DF9C
l0001DF88_ds_t:
	r3 = r3 + 0x00000004
	goto l0001DF88
	// succ:  l0001DF88
l0001DF9C:
	Mem0[r5 + 24:word32] = r0
	Mem0[r5 + 20:word32] = r0
	Mem0[r5 + 28:word32] = r7
	Mem0[r5 + 32:word32] = r8
	r3 = r5 + 0x00000024
	return
	// succ:  fn0001DF68_exit
l0001DFB4:
	r9 = 0x00000000
	r10 = 0x00000001
	// succ:  l0001DFBC
l0001DFBC:
	Mem0[r4 + 4:word32] = r9
	r9 = r9 + 0x00000001
	Mem0[r4:word32] = r10
	Mem0[r4 + 20:word32] = r0
	Mem0[r4 + 24:word32] = r0
	Mem0[r4 + 28:word32] = r7
	Mem0[r4 + 32:word32] = r8
	r3 = r6 ^ r9
	branch Test(NE,r3) l0001DFBC_ds_t
	// succ:  l0001DFBC_ds_f l0001DFBC_ds_t
l0001DFBC_ds_f:
	r4 = r4 + 0x00000024
	goto l0001DFE4
	// succ:  l0001DFE4
l0001DFBC_ds_t:
	r4 = r4 + 0x00000024
	goto l0001DFBC
	// succ:  l0001DFBC
l0001DFE4:
	r4 = r9 + r9
	r4 = r4 + r4
	r4 = r4 + r4
	r9 = r4 + r9
	r9 = r9 + r9
	r9 = r9 + r9
	r3 = r5 + r9
	return
	// succ:  fn0001DF68_exit
fn0001DF68_exit:


// fn0001E004
// Return size: 0
define fn0001E004
fn0001E004_entry:
	r1 = fp
	// succ:  l0001E004
l0001E004:
	r1 = r1 + 0xFFFFFFC0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1:word32] = r15
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	Mem0[r1 + 60:word32] = r28
	r4 = Mem0[r5 + 20:word32]
	r21 = r5
	r19 = r6
	r3 = r4 ^ 0x00000064
	r24 = r7
	r25 = r8
	branch Test(EQ,r3) l0001E004_ds_t
	// succ:  l0001E004_ds_f l0001E004_ds_t
l0001E004_ds_f:
	r23 = r9
	goto l0001E050
	// succ:  l0001E050
l0001E004_ds_t:
	r23 = r9
	goto l0001E068
	// succ:  l0001E068
l0001E050:
	r3 = Mem0[r5:word32]
	r6 = 0x00000014
	Mem0[r3 + 20:word32] = r6
	r6 = Mem0[r3:word32]
	r15 = 0x0001E060
	Mem0[r3 + 24:word32] = r4
	call 0x0001E060 + r6 (retsize: 0;)
l0001E068:
	r3 = 0x00000003
	r18 = cond(r3 -u r19)
	branch Test(GE,r18) l0001E068_ds_t
	// succ:  l0001E068_ds_f l0001E068_ds_t
l0001E068_ds_f:
	r4 = 0x0000001F
	goto l0001E078
	// succ:  l0001E078
l0001E068_ds_t:
	r4 = 0x0000001F
	goto l0001E090
	// succ:  l0001E090
l0001E078:
	r3 = Mem0[r21:word32]
	r5 = r21
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x0001E088
	Mem0[r3 + 24:word32] = r19
	call 0x0001E088 + r4 (retsize: 0;)
l0001E090:
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r21 + r19
	r22 = Mem0[r19 + 68:word32]
	branch Test(EQ,r22) l0001E1E0
	// succ:  l0001E0A4 l0001E1E0
l0001E0A4:
	r3 = -r23
	r3 = r3 | r23
	r19 = 0x00000000
	r23 = 0x00000064
	r27 = 0x00000001
	r28 = 0x00007FFF
	r26 = r3
	r26 = r3 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r26 = r26 >>u 1
	C = cond(r26)
	r21 = 0x000000FF
	goto l0001E170
	// succ:  l0001E170
l0001E144:
	branch Test(EQ,r26) l0001E150
	// succ:  l0001E148 l0001E150
l0001E148:
	r18 = cond(r21 - r3)
	branch Test(LT,r18) l0001E160
	// succ:  l0001E150 l0001E160
l0001E150:
	r18 = cond(r28 - r3)
	branch Test(GE,r18) l0001E150_ds_t
	// succ:  l0001E150_ds_f l0001E150_ds_t
l0001E150_ds_f:
	r4 = r3
	goto l0001E15C
	// succ:  l0001E15C
l0001E150_ds_t:
	r4 = r3
	goto l0001E160
	// succ:  l0001E160
l0001E15C:
	r4 = r28
	// succ:  l0001E160
l0001E160:
	Mem0[r19 + r22:word32] = r4
	r19 = r19 + 0x00000004
	r3 = r19 ^ 0x00000100
	branch Test(EQ,r3) l0001E1AC
	// succ:  l0001E170 l0001E1AC
l0001E170:
	r6 = Mem0[r19 + r24:word32]
	r15 = 0x0001E178
	r5 = r25
	call fn0002E908 (retsize: 0;)
	r6 = r23
	r15 = 0x0001E188
	r5 = r3 + 0x00000032
	call fn0002E7D0 (retsize: 0;)
	branch Test(GT,r3) l0001E170_ds_t
	// succ:  l0001E170_ds_f l0001E170_ds_t
l0001E170_ds_f:
	r4 = r21
	goto l0001E198
	// succ:  l0001E198
l0001E170_ds_t:
	r4 = r21
	goto l0001E144
	// succ:  l0001E144
l0001E198:
	r4 = r27
	Mem0[r19 + r22:word32] = r4
	r19 = r19 + 0x00000004
	r3 = r19 ^ 0x00000100
	branch Test(NE,r3) l0001E170
	// succ:  l0001E1AC l0001E170
l0001E1AC:
	Mem0[r22 + 256:word32] = r3
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r28 = Mem0[r1 + 60:word32]
	r1 = r1 + 0x00000040
	return
	// succ:  fn0001E004_exit
l0001E1E0:
	r15 = 0x0001E1E4
	r5 = r21
	call fn0001CC98 (retsize: 0;)
	r22 = r3
	Mem0[r19 + 68:word32] = r3
	goto l0001E0A4
	// succ:  l0001E0A4
fn0001E004_exit:


// fn0001E1F8
// Return size: 0
define fn0001E1F8
fn0001E1F8_entry:
	r1 = fp
	// succ:  l0001E1F8
l0001E1F8:
	r1 = r1 + 0xFFFFFFD8
	Mem0[r1 + 32:word32] = r21
	r21 = r7
	r8 = r6
	r7 = 0x00007634
	r9 = r21
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 36:word32] = r22
	r19 = r6
	r22 = r5
	Mem0[r1:word32] = r15
	r15 = 0x0001E228
	r6 = 0x00000000
	call fn0001E004 (retsize: 0;)
	r9 = r21
	r8 = r19
	r5 = r22
	r7 = 0x00007534
	r15 = 0x0001E244
	r6 = 0x00000001
	call fn0001E004 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r1 = r1 + 0x00000028
	return
	// succ:  fn0001E1F8_exit
fn0001E1F8_exit:


// fn0001E384
// Return size: 0
define fn0001E384
fn0001E384_entry:
	r1 = fp
	// succ:  l0001E384
l0001E384:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1:word32] = r15
	r4 = Mem0[r5 + 20:word32]
	r19 = r5
	r3 = r4 ^ 0x00000064
	branch Test(EQ,r3) l0001E384_ds_t
	// succ:  l0001E384_ds_f l0001E384_ds_t
l0001E384_ds_f:
	r21 = r6
	goto l0001E3A8
	// succ:  l0001E3A8
l0001E384_ds_t:
	r21 = r6
	goto l0001E3C0
	// succ:  l0001E3C0
l0001E3A8:
	r3 = Mem0[r5:word32]
	r6 = 0x00000014
	Mem0[r3 + 20:word32] = r6
	r6 = Mem0[r3:word32]
	r15 = 0x0001E3B8
	Mem0[r3 + 24:word32] = r4
	call 0x0001E3B8 + r6 (retsize: 0;)
l0001E3C0:
	Mem0[r19 + 60:word32] = r21
	Mem0[r19 + 252:word32] = r0
	r3 = 0x00000005
	r18 = cond(r3 -u r21)
	branch Test(LT,r18) l0001E3C0_ds_t
	// succ:  l0001E3C0_ds_f l0001E3C0_ds_t
l0001E3C0_ds_f:
	Mem0[r19 + 272:word32] = r0
	goto l0001E3D8
	// succ:  l0001E3D8
l0001E3C0_ds_t:
	Mem0[r19 + 272:word32] = r0
	goto l0001E6D8
	// succ:  l0001E6D8
l0001E3D8:
	r3 = r21
	r3 = r21 + r21
	r3 = r3 + r3
	r3 = r3 + 0x000071BC
	r3 = Mem0[r3:word32]
	switch (r6) { }
l0001E6D8:
	r3 = Mem0[r19:word32]
	r7 = 0x0000000A
	Mem0[r3 + 20:word32] = r7
	r3 = Mem0[r3:word32]
	r15 = 0x0001E6E8
	r5 = r19
	call 0x0001E6E8 + r3 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn0001E384_exit
fn0001E384_exit:


// fn0001E530
// Return size: 0
define fn0001E530
fn0001E530_entry:
	r1 = fp
	goto l0001E530
	// succ:  l0001E530
l0001E47C:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn0001E530_exit
l0001E530:
	Mem0[r19 + 56:word32] = r7
	r3 = Mem0[r19:word32]
	r4 = 0x0000001A
	r5 = r19
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r6 = 0x0000000A
	Mem0[r3 + 24:word32] = r7
	r15 = 0x0001E550
	Mem0[r3 + 28:word32] = r6
	call 0x0001E550 + r4 (retsize: 0;)
	r7 = Mem0[r19 + 56:word32]
	branch Test(LE,r7) l0001E530_ds_t
	// succ:  l0001E530_ds_f l0001E530_ds_t
l0001E530_ds_f:
	r15 = Mem0[r1:word32]
	goto l0001E564
	// succ:  l0001E564
l0001E530_ds_t:
	r15 = Mem0[r1:word32]
	goto l0001E47C
	// succ:  l0001E47C
l0001E564:
	r3 = Mem0[r19 + 64:word32]
	r4 = 0x00000000
	r5 = 0x00000001
	// succ:  l0001E570
l0001E570:
	Mem0[r3:word32] = r4
	r4 = r4 + 0x00000001
	Mem0[r3 + 8:word32] = r5
	Mem0[r3 + 12:word32] = r5
	Mem0[r3 + 16:word32] = r0
	Mem0[r3 + 20:word32] = r0
	Mem0[r3 + 24:word32] = r0
	r6 = r4 ^ r7
	branch Test(NE,r6) l0001E570_ds_t
	// succ:  l0001E570_ds_f l0001E570_ds_t
l0001E570_ds_f:
	r3 = r3 + 0x00000054
	goto l0001E598
	// succ:  l0001E598
l0001E570_ds_t:
	r3 = r3 + 0x00000054
	goto l0001E570
	// succ:  l0001E570
l0001E598:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn0001E530_exit
fn0001E530_exit:


// fn0001E704
// Return size: 0
define fn0001E704
fn0001E704_entry:
	r1 = fp
	// succ:  l0001E704
l0001E704:
	r6 = Mem0[r5 + 40:word32]
	r1 = r1 + 0xFFFFFFE4
	r3 = 0x00000005
	r18 = cond(r3 -u r6)
	branch Test(LT,r18) l0001E704_ds_t
	// succ:  l0001E704_ds_f l0001E704_ds_t
l0001E704_ds_f:
	Mem0[r1:word32] = r15
	goto l0001E71C
	// succ:  l0001E71C
l0001E704_ds_t:
	Mem0[r1:word32] = r15
	goto l0001E79C
	// succ:  l0001E79C
l0001E71C:
	r3 = r6
	r3 = r6 + r6
	r3 = r3 + r3
	r3 = r3 + 0x000071D4
	r3 = Mem0[r3:word32]
	switch (Mem0[r5 + 40:word32]) { }
l0001E79C:
	r3 = Mem0[r5:word32]
	r4 = 0x00000009
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x0001E7AC
	call 0x0001E7AC + r3 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0001E704_exit
fn0001E704_exit:


// fn0001E7C0
// Return size: 0
define fn0001E7C0
fn0001E7C0_entry:
	r1 = fp
	// succ:  l0001E7C0
l0001E7C0:
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r4 = Mem0[r5 + 20:word32]
	r3 = r4 ^ 0x00000064
	branch Test(EQ,r3) l0001E7C0_ds_t
	// succ:  l0001E7C0_ds_f l0001E7C0_ds_t
l0001E7C0_ds_f:
	r19 = r5
	goto l0001E7DC
	// succ:  l0001E7DC
l0001E7C0_ds_t:
	r19 = r5
	goto l0001E7F4
	// succ:  l0001E7F4
l0001E7DC:
	r3 = Mem0[r5:word32]
	r6 = 0x00000014
	Mem0[r3 + 20:word32] = r6
	r6 = Mem0[r3:word32]
	r15 = 0x0001E7EC
	Mem0[r3 + 24:word32] = r4
	call 0x0001E7EC + r6 (retsize: 0;)
l0001E7F4:
	r6 = Mem0[r19 + 64:word32]
	branch Test(EQ,r6) l0001E7F4_ds_t
	// succ:  l0001E7F4_ds_f l0001E7F4_ds_t
l0001E7F4_ds_f:
	r5 = r19
	goto l0001E800
	// succ:  l0001E800
l0001E7F4_ds_t:
	r5 = r19
	goto l0001E924
	// succ:  l0001E924
l0001E800:
	r5 = r19
	r3 = 0x00000008
	Mem0[r19 + 52:word32] = r3
	r7 = 0x00000001
	r15 = 0x0001E810
	r6 = 0x00000032
	call fn0001E1F8 (retsize: 0;)
	r8 = 0x000074F8
	r7 = 0x00007510
	r5 = r19
	r15 = 0x0001E82C
	r6 = r19 + 0x00000054
	call fn0001DE80 (retsize: 0;)
	r8 = 0x00007390
	r7 = 0x000074D4
	r5 = r19
	r15 = 0x0001E848
	r6 = r19 + 0x00000064
	call fn0001DE80 (retsize: 0;)
	r8 = 0x00007354
	r7 = 0x0000736C
	r5 = r19
	r15 = 0x0001E864
	r6 = r19 + 0x00000058
	call fn0001DE80 (retsize: 0;)
	r7 = 0x00007330
	r5 = r19
	r8 = 0x000071EC
	r15 = 0x0001E880
	r6 = r19 + 0x00000068
	call fn0001DE80 (retsize: 0;)
	r3 = r19 + 0x00000074
	r7 = r19 + 0x00000094
	r6 = 0x00000001
	r5 = 0x00000005
	// succ:  l0001E898
l0001E898:
	v12 = SLICE(r0, word16, 0)
	Mem0[r3:word16] = v12
	v13 = SLICE(r6, word16, 0)
	Mem0[r3 + 32:word16] = v13
	v14 = SLICE(r5, word16, 0)
	Mem0[r3 + 64:word16] = v14
	r3 = r3 + 0x00000002
	r4 = r3 ^ r7
	branch Test(NE,r4) l0001E898
	// succ:  l0001E8B0 l0001E898
l0001E8B0:
	r5 = Mem0[r19 + 52:word32]
	Mem0[r19 + 216:word32] = r4
	Mem0[r19 + 212:word32] = r4
	Mem0[r19 + 220:word32] = r4
	Mem0[r19 + 224:word32] = r4
	r3 = 0x00000008
	r18 = cond(r3 - r5)
	branch Test(GE,r18) l0001E8B0_ds_t
	// succ:  l0001E8B0_ds_f l0001E8B0_ds_t
l0001E8B0_ds_f:
	Mem0[r19 + 228:word32] = r4
	goto l0001E8D4
	// succ:  l0001E8D4
l0001E8B0_ds_t:
	Mem0[r19 + 228:word32] = r4
	goto l0001E8DC
	// succ:  l0001E8DC
l0001E8D4:
	r6 = 0x00000001
	Mem0[r19 + 228:word32] = r6
	// succ:  l0001E8DC
l0001E8DC:
	r3 = 0x00000001
	r5 = r19
	Mem0[r19 + 232:word32] = r0
	Mem0[r19 + 256:word32] = r3
	r3 = 0x00000001
	Mem0[r19 + 264:word32] = r3
	Mem0[r19 + 268:word32] = r3
	Mem0[r19 + 236:word32] = r0
	Mem0[r19 + 240:word32] = r0
	Mem0[r19 + 244:word32] = r0
	// succ:  l0001E904_thunk_fn0001E908
l0001E904_thunk_fn0001E908:
	call fn0001E908 (retsize: 0;)
	return
	// succ:  fn0001E7C0_exit
l0001E924:
	r3 = Mem0[r19 + 4:word32]
	r3 = Mem0[r3:word32]
	r15 = 0x0001E92C
	r7 = 0x00000348
	call 0x0001E92C + r3 (retsize: 0;)
	Mem0[r19 + 64:word32] = r3
	goto l0001E800
	// succ:  l0001E800
fn0001E7C0_exit:


// fn0001E908
// Return size: 0
define fn0001E908
fn0001E908_entry:
	r1 = fp
	// succ:  l0001E908
l0001E908:
	Mem0[r19 + 248:word32] = r0
	r15 = 0x0001E90C
	v6 = SLICE(r0, word16, 0)
	Mem0[r19 + 260:word16] = v6
	call fn0001E704 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn0001E908_exit
fn0001E908_exit:


// fn0001E93C
// Return size: 0
define fn0001E93C
fn0001E93C_entry:
	r1 = fp
	// succ:  l0001E93C
l0001E93C:
	r1 = r1 + 0xFFFFFFD4
	Mem0[r1 + 32:word32] = r21
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	r3 = Mem0[r5 + 20:word32]
	r21 = r5
	r4 = r3 ^ 0x00000064
	branch Test(EQ,r4) l0001E93C_ds_t
	// succ:  l0001E93C_ds_f l0001E93C_ds_t
l0001E93C_ds_f:
	r19 = Mem0[r5 + 56:word32]
	goto l0001E968
	// succ:  l0001E968
l0001E93C_ds_t:
	r19 = Mem0[r5 + 56:word32]
	goto l0001E980
	// succ:  l0001E980
l0001E968:
	r4 = Mem0[r5:word32]
	r6 = 0x00000014
	Mem0[r4 + 20:word32] = r6
	r6 = Mem0[r4:word32]
	r15 = 0x0001E978
	Mem0[r4 + 24:word32] = r3
	call 0x0001E978 + r6 (retsize: 0;)
l0001E980:
	r23 = r19 ^ 0x00000003
	branch Test(EQ,r23) l0001E980_ds_t
	// succ:  l0001E980_ds_f l0001E980_ds_t
l0001E980_ds_f:
	r3 = 0x00000004
	goto l0001E98C
	// succ:  l0001E98C
l0001E980_ds_t:
	r3 = 0x00000004
	goto l0001EB3C
	// succ:  l0001EB3C
l0001E98C:
	r18 = cond(r3 - r19)
	branch Test(GE,r18) l0001E98C_ds_t
	// succ:  l0001E98C_ds_f l0001E98C_ds_t
l0001E98C_ds_f:
	r22 = r19 + r19
	goto l0001E998
	// succ:  l0001E998
l0001E98C_ds_t:
	r22 = r19 + r19
	goto l0001EB4C
	// succ:  l0001EB4C
l0001E998:
	r22 = r22 + r19
	r22 = r22 + r22
	goto l0001E9A0
	// succ:  l0001E9A0
l0001E998_ds_f:
	r3 = 0x0000000A
	goto l0001E9AC
	// succ:  l0001E9AC
l0001E998_ds_t:
	r3 = 0x0000000A
	goto l0001E9BC
	// succ:  l0001E9BC
l0001E9A0:
	r5 = Mem0[r21 + 420:word32]
	branch Test(EQ,r5) l0001E998_ds_t
	goto l0001E998_ds_f
	// succ:  l0001E998_ds_f l0001E998_ds_t
l0001E9AC:
	r3 = Mem0[r21 + 424:word32]
	r18 = cond(r3 - r22)
	branch Test(GE,r18) l0001E9AC_ds_t
	// succ:  l0001E9AC_ds_f l0001E9AC_ds_t
l0001E9AC_ds_f:
	r3 = 0x0000000A
	goto l0001E9BC
	// succ:  l0001E9BC
l0001E9AC_ds_t:
	r3 = 0x0000000A
	// succ:  l0001E9B8_thunk_fn0001EA0C
l0001E9B8_thunk_fn0001EA0C:
	call fn0001EA0C (retsize: 0;)
	return
	// succ:  fn0001E93C_exit
l0001E9BC:
	r18 = cond(r22 - r3)
	branch Test(GE,r18) l0001E9BC_ds_t
	// succ:  l0001E9BC_ds_f l0001E9BC_ds_t
l0001E9BC_ds_f:
	r4 = r22
	goto l0001E9C8
	// succ:  l0001E9C8
l0001E9BC_ds_t:
	r4 = r22
	goto l0001E9CC
	// succ:  l0001E9CC
l0001E9C8:
	r4 = r3
	// succ:  l0001E9CC
l0001E9CC:
	r7 = r4 + r4
	r3 = Mem0[r21 + 4:word32]
	r7 = r7 + r7
	r7 = r7 + r7
	r7 = r7 + r4
	r3 = Mem0[r3:word32]
	r5 = r21
	r8 = r7
	r8 = r7 + r7
	r8 = r8 + r8
	r7 = r8
	Mem0[r21 + 424:word32] = r4
	r15 = 0x0001E9FC
	r6 = 0x00000000
	call 0x0001E9FC + r3 (retsize: 0;)
	r5 = r3
	// succ:  l0001EA04_thunk_fn0001EA08
l0001EA04_thunk_fn0001EA08:
	call fn0001EA08 (retsize: 0;)
	return
	// succ:  fn0001E93C_exit
l0001EB3C:
	r3 = Mem0[r21 + 60:word32]
	r3 = r3 ^ 0x00000003
	branch Test(EQ,r3) l0001EB7C
	// succ:  l0001EB48 l0001EB7C
l0001EB48:
	r22 = r19 + r19
	// succ:  l0001EB4C
l0001EB4C:
	r22 = r22 + r22
	r22 = r22 + 0x00000002
	goto l0001E9A0
	// succ:  l0001E9A0
l0001EB7C:
	r22 = 0x0000000A
	goto l0001E9A0
	// succ:  l0001E9A0
fn0001E93C_exit:


// fn0001EA08
// Return size: 0
define fn0001EA08
fn0001EA08_entry:
	r1 = fp
	// succ:  l0001EA08
l0001EA08:
	Mem0[r21 + 420:word32] = r3
	// succ:  l0001EA08_thunk_fn0001EA0C
l0001EA08_thunk_fn0001EA0C:
	call fn0001EA0C (retsize: 0;)
	return
	// succ:  fn0001EA08_exit
fn0001EA08_exit:


// fn0001EA0C
// Return size: 0
define fn0001EA0C
fn0001EA0C_entry:
	r1 = fp
	goto l0001EA0C
	// succ:  l0001EA0C
l0001EA08_ds_f:
	Mem0[r21 + 212:word32] = r22
	goto l0001EA14_thunk_fn0001EA18
	// succ:  l0001EA14_thunk_fn0001EA18
l0001EA08_ds_t:
	Mem0[r21 + 212:word32] = r22
	goto l0001EA14_thunk_fn0001EB58
	// succ:  l0001EA14_thunk_fn0001EB58
l0001EA0C:
	Mem0[r21 + 216:word32] = r5
	branch Test(EQ,r23) l0001EA0C_ds_t
	goto l0001EA0C_ds_f
	// succ:  l0001EA0C_ds_f l0001EA0C_ds_t
l0001EA0C:
	Mem0[r21 + 216:word32] = r5
	branch Test(EQ,r23) l0001EA08_ds_t
	goto l0001EA08_ds_f
	// succ:  l0001EA08_ds_f l0001EA08_ds_t
l0001EA0C_ds_f:
	Mem0[r21 + 212:word32] = r22
	goto l0001EA14_thunk_fn0001EA18
	// succ:  l0001EA14_thunk_fn0001EA18
l0001EA0C_ds_t:
	Mem0[r21 + 212:word32] = r22
	goto l0001EA14_thunk_fn0001EB58
	// succ:  l0001EA14_thunk_fn0001EB58
l0001EA14_thunk_fn0001EA18:
	call fn0001EA18 (retsize: 0;)
	return
	// succ:  fn0001EA0C_exit
l0001EA14_thunk_fn0001EA18:
	call fn0001EA18 (retsize: 0;)
	return
	// succ:  fn0001EA0C_exit
l0001EA14_thunk_fn0001EB58:
	call fn0001EB58 (retsize: 0;)
	return
	// succ:  fn0001EA0C_exit
l0001EA14_thunk_fn0001EB58:
	call fn0001EB58 (retsize: 0;)
	return
	// succ:  fn0001EA0C_exit
fn0001EA0C_exit:


// fn0001EA18
// Return size: 0
define fn0001EA18
fn0001EA18_entry:
	r1 = fp
	// succ:  l0001EA18
l0001EA18:
	r6 = r19
	r8 = 0x00000001
	r15 = 0x0001EA20
	r7 = 0x00000000
	call fn0001DF68 (retsize: 0;)
	branch Test(LE,r19) l0001EA18_ds_t
	// succ:  l0001EA18_ds_f l0001EA18_ds_t
l0001EA18_ds_f:
	r4 = 0x00000000
	goto l0001EA2C_thunk_fn0001EB58
	// succ:  l0001EA2C_thunk_fn0001EB58
l0001EA18_ds_t:
	r4 = 0x00000000
	goto l0001EB84
	// succ:  l0001EB84
l0001EA2C_thunk_fn0001EB58:
	call fn0001EB58 (retsize: 0;)
	return
	// succ:  fn0001EA18_exit
l0001EB84:
	r6 = r19
	r5 = r3
	r8 = 0x00000000
	r15 = 0x0001EB90
	r7 = 0x00000001
	call fn0001DF68 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r1 = r1 + 0x0000002C
	return
	// succ:  fn0001EA18_exit
fn0001EA18_exit:


// fn0001EB58
// Return size: 0
define fn0001EB58
fn0001EB58_entry:
	r1 = fp
	goto l0001EB58
	// succ:  l0001EB58
l0001EA30:
	r5 = 0x00000001
	r7 = 0x00000005
	r6 = 0x00000002
	// succ:  l0001EA3C
l0001EA3C:
	Mem0[r3 + 4:word32] = r4
	Mem0[r3:word32] = r5
	Mem0[r3 + 20:word32] = r5
	Mem0[r3 + 24:word32] = r7
	Mem0[r3 + 28:word32] = r0
	Mem0[r3 + 32:word32] = r6
	r4 = r4 + 0x00000001
	r18 = cond(r4 - r19)
	branch Test(LT,r18) l0001EA3C_ds_t
	// succ:  l0001EA3C_ds_f l0001EA3C_ds_t
l0001EA3C_ds_f:
	r3 = r3 + 0x00000024
	goto l0001EA64
	// succ:  l0001EA64
l0001EA3C_ds_t:
	r3 = r3 + 0x00000024
	goto l0001EA3C
	// succ:  l0001EA3C
l0001EA64:
	r4 = 0x00000000
	r8 = 0x00000001
	r7 = 0x00000006
	r6 = 0x0000003F
	r5 = 0x00000002
	// succ:  l0001EA78
l0001EA78:
	Mem0[r3 + 4:word32] = r4
	Mem0[r3:word32] = r8
	Mem0[r3 + 20:word32] = r7
	Mem0[r3 + 24:word32] = r6
	Mem0[r3 + 28:word32] = r0
	Mem0[r3 + 32:word32] = r5
	r4 = r4 + 0x00000001
	r18 = cond(r4 - r19)
	branch Test(LT,r18) l0001EA78_ds_t
	// succ:  l0001EA78_ds_f l0001EA78_ds_t
l0001EA78_ds_f:
	r3 = r3 + 0x00000024
	goto l0001EAA0
	// succ:  l0001EAA0
l0001EA78_ds_t:
	r3 = r3 + 0x00000024
	goto l0001EA78
	// succ:  l0001EA78
l0001EAA0:
	r4 = 0x00000000
	r5 = 0x00000001
	r7 = 0x0000003F
	r6 = 0x00000002
	// succ:  l0001EAB0
l0001EAB0:
	Mem0[r3 + 4:word32] = r4
	Mem0[r3:word32] = r5
	Mem0[r3 + 20:word32] = r5
	Mem0[r3 + 24:word32] = r7
	Mem0[r3 + 28:word32] = r6
	Mem0[r3 + 32:word32] = r5
	r4 = r4 + 0x00000001
	r18 = cond(r4 - r19)
	branch Test(LT,r18) l0001EAB0_ds_t
	// succ:  l0001EAB0_ds_f l0001EAB0_ds_t
l0001EAB0_ds_f:
	r3 = r3 + 0x00000024
	goto l0001EAD8
	// succ:  l0001EAD8
l0001EAB0_ds_t:
	r3 = r3 + 0x00000024
	goto l0001EAB0
	// succ:  l0001EAB0
l0001EAD8:
	r6 = r19
	r5 = r3
	r8 = 0x00000000
	r15 = 0x0001EAE4
	r7 = 0x00000001
	call fn0001DF68 (retsize: 0;)
	r4 = 0x00000000
	r5 = 0x00000001
	r6 = 0x0000003F
	// succ:  l0001EAF8
l0001EAF8:
	Mem0[r3 + 4:word32] = r4
	Mem0[r3:word32] = r5
	Mem0[r3 + 20:word32] = r5
	Mem0[r3 + 24:word32] = r6
	Mem0[r3 + 28:word32] = r5
	Mem0[r3 + 32:word32] = r0
	r4 = r4 + 0x00000001
	r18 = cond(r4 - r19)
	branch Test(LT,r18) l0001EAF8_ds_t
	// succ:  l0001EAF8_ds_f l0001EAF8_ds_t
l0001EAF8_ds_f:
	r3 = r3 + 0x00000024
	goto l0001EB20
	// succ:  l0001EB20
l0001EAF8_ds_t:
	r3 = r3 + 0x00000024
	goto l0001EAF8
	// succ:  l0001EAF8
l0001EB20:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r1 = r1 + 0x0000002C
	return
	// succ:  fn0001EB58_exit
l0001EB58:
	r3 = Mem0[r21 + 60:word32]
	r3 = r3 ^ 0x00000003
	branch Test(EQ,r3) l0001EB58_ds_t
	// succ:  l0001EB58_ds_f l0001EB58_ds_t
l0001EB58_ds_f:
	r7 = r23
	goto l0001EB68
	// succ:  l0001EB68
l0001EB58_ds_t:
	r7 = r23
	goto l0001EBB4
	// succ:  l0001EBB4
l0001EB68:
	r8 = 0x00000001
	r15 = 0x0001EB6C
	r6 = 0x00000003
	call fn0001DF68 (retsize: 0;)
	r4 = 0x00000000
	goto l0001EA30
	// succ:  l0001EA30
l0001EBB4:
	r8 = 0x00000005
	r3 = 0x00000001
	r6 = 0x00000002
	r4 = 0x0000003F
	r7 = 0x00000003
	Mem0[r5 + 60:word32] = r8
	r8 = 0x00000006
	Mem0[r5 + 4:word32] = r23
	Mem0[r5 + 24:word32] = r23
	Mem0[r5 + 20:word32] = r23
	Mem0[r5 + 28:word32] = r23
	Mem0[r5 + 40:word32] = r23
	Mem0[r5 + 64:word32] = r23
	Mem0[r5 + 100:word32] = r23
	Mem0[r5 + 136:word32] = r23
	Mem0[r5 + 148:word32] = r23
	Mem0[r5 + 172:word32] = r23
	Mem0[r5 + 164:word32] = r8
	Mem0[r5:word32] = r7
	Mem0[r5 + 8:word32] = r3
	Mem0[r5 + 12:word32] = r6
	Mem0[r5 + 32:word32] = r3
	Mem0[r5 + 36:word32] = r3
	Mem0[r5 + 56:word32] = r3
	Mem0[r5 + 68:word32] = r6
	Mem0[r5 + 72:word32] = r3
	Mem0[r5 + 76:word32] = r6
	Mem0[r5 + 92:word32] = r3
	Mem0[r5 + 96:word32] = r4
	Mem0[r5 + 104:word32] = r3
	Mem0[r5 + 108:word32] = r3
	Mem0[r5 + 112:word32] = r3
	Mem0[r5 + 128:word32] = r3
	Mem0[r5 + 132:word32] = r4
	Mem0[r5 + 140:word32] = r3
	Mem0[r5 + 144:word32] = r3
	Mem0[r5 + 168:word32] = r4
	Mem0[r5 + 176:word32] = r6
	Mem0[r5 + 180:word32] = r3
	Mem0[r5 + 184:word32] = r23
	Mem0[r5 + 220:word32] = r23
	Mem0[r5 + 240:word32] = r23
	Mem0[r5 + 236:word32] = r23
	Mem0[r5 + 248:word32] = r23
	Mem0[r5 + 284:word32] = r23
	Mem0[r5 + 320:word32] = r23
	Mem0[r5 + 328:word32] = r23
	Mem0[r5 + 356:word32] = r23
	Mem0[r5 + 200:word32] = r3
	Mem0[r5 + 204:word32] = r4
	Mem0[r5 + 208:word32] = r6
	Mem0[r5 + 212:word32] = r3
	Mem0[r5 + 216:word32] = r7
	Mem0[r5 + 224:word32] = r3
	Mem0[r5 + 228:word32] = r6
	Mem0[r5 + 244:word32] = r3
	Mem0[r5 + 252:word32] = r3
	Mem0[r5 + 256:word32] = r6
	Mem0[r5 + 272:word32] = r3
	Mem0[r5 + 276:word32] = r4
	Mem0[r5 + 280:word32] = r3
	Mem0[r5 + 288:word32] = r3
	Mem0[r5 + 292:word32] = r3
	Mem0[r5 + 308:word32] = r3
	Mem0[r5 + 312:word32] = r4
	Mem0[r5 + 316:word32] = r3
	Mem0[r5 + 324:word32] = r3
	Mem0[r5 + 344:word32] = r3
	Mem0[r5 + 348:word32] = r4
	Mem0[r5 + 352:word32] = r3
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r1 = r1 + 0x0000002C
	return
	// succ:  fn0001EB58_exit
fn0001EB58_exit:


// fn0001EEC8
// Return size: 0
define fn0001EEC8
fn0001EEC8_entry:
	r1 = fp
	// succ:  l0001EEC8
l0001EEC8:
	r1 = r1 + 0xFFFFF578
	Mem0[r1 + 2692:word32] = r31
	Mem0[r1:word32] = r15
	Mem0[r1 + 2648:word32] = r19
	Mem0[r1 + 2652:word32] = r21
	Mem0[r1 + 2656:word32] = r22
	Mem0[r1 + 2660:word32] = r23
	Mem0[r1 + 2664:word32] = r24
	Mem0[r1 + 2668:word32] = r25
	Mem0[r1 + 2672:word32] = r26
	Mem0[r1 + 2676:word32] = r27
	Mem0[r1 + 2680:word32] = r28
	Mem0[r1 + 2684:word32] = r29
	Mem0[r1 + 2688:word32] = r30
	r10 = Mem0[r5 + 212:word32]
	branch Test(GT,r10) l0001EEC8_ds_t
	// succ:  l0001EEC8_ds_f l0001EEC8_ds_t
l0001EEC8_ds_f:
	r31 = r5
	goto l0001EF0C
	// succ:  l0001EF0C
l0001EEC8_ds_t:
	r31 = r5
	goto l0001EF28
	// succ:  l0001EF28
l0001EF0C:
	r3 = Mem0[r5:word32]
	r4 = 0x00000013
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x0001EF1C
	Mem0[r3 + 24:word32] = r0
	call 0x0001EF1C + r4 (retsize: 0;)
	r10 = Mem0[r31 + 212:word32]
	// succ:  l0001EF28
l0001EF28:
	r27 = Mem0[r31 + 216:word32]
	r3 = Mem0[r27 + 20:word32]
	branch Test(NE,r3) l0001EF28_ds_t
	// succ:  l0001EF28_ds_f l0001EF28_ds_t
l0001EF28_ds_f:
	r8 = Mem0[r31 + 56:word32]
	goto l0001EF38
	// succ:  l0001EF38
l0001EF28_ds_t:
	r8 = Mem0[r31 + 56:word32]
	goto l0001EF44
	// succ:  l0001EF44
l0001EF38:
	r3 = Mem0[r27 + 24:word32]
	r3 = r3 ^ 0x0000003F
	branch Test(EQ,r3) l0001F48C
	// succ:  l0001EF44 l0001F48C
l0001EF44:
	r6 = 0x00000001
	branch Test(LE,r8) l0001EF44_ds_t
	// succ:  l0001EF44_ds_f l0001EF44_ds_t
l0001EF44_ds_f:
	Mem0[r31 + 280:word32] = r6
	goto l0001EF50
	// succ:  l0001EF50
l0001EF44_ds_t:
	Mem0[r31 + 280:word32] = r6
	goto l0001F514
	// succ:  l0001F514
l0001EF50:
	r26 = r1 + 0x0000001C
	r5 = r26
	r9 = 0x00000000
	r6 = 0xFFFFFFFF
	r3 = r5
	// succ:  l0001EF64
l0001EF64:
	r5 = r5 + 0x00000100
	// succ:  l0001EF68
l0001EF68:
	Mem0[r3:word32] = r6
	r3 = r3 + 0x00000004
	r4 = r5 ^ r3
	branch Test(NE,r4) l0001EF68
	// succ:  l0001EF78 l0001EF68
l0001EF78:
	r9 = r9 + 0x00000001
	r3 = r9 ^ r8
	branch Test(NE,r3) l0001EF78_ds_t
	// succ:  l0001EF78_ds_f l0001EF78_ds_t
l0001EF78_ds_f:
	r3 = r5
	goto l0001EF88
	// succ:  l0001EF88
l0001EF78_ds_t:
	r3 = r5
	goto l0001EF64
	// succ:  l0001EF64
l0001EF88:
	branch Test(LE,r10) l0001EF88_ds_t
	// succ:  l0001EF88_ds_f l0001EF88_ds_t
l0001EF88_ds_f:
	r19 = 0x00000000
	goto l0001EF90
	// succ:  l0001EF90
l0001EF88_ds_t:
	r19 = 0x00000000
	// succ:  l0001EF8C_thunk_fn0001F214
l0001EF8C_thunk_fn0001F214:
	call fn0001F214 (retsize: 0;)
	return
	// succ:  fn0001EEC8_exit
l0001EF90:
	r19 = 0x00000001
	// succ:  l0001EF94
l0001EF94:
	r25 = 0x00000011
	// succ:  l0001EF94_thunk_fn0001EF98
l0001EF94_thunk_fn0001EF98:
	call fn0001EF98 (retsize: 0;)
	return
	// succ:  fn0001EEC8_exit
l0001F48C:
	branch Test(LE,r8) l0001F48C_ds_t
	// succ:  l0001F48C_ds_f l0001F48C_ds_t
l0001F48C_ds_f:
	Mem0[r31 + 280:word32] = r3
	goto l0001F494
	// succ:  l0001F494
l0001F48C_ds_t:
	Mem0[r31 + 280:word32] = r3
	goto l0001F514
	// succ:  l0001F514
l0001F494:
	r19 = r1 + 0x00000A1C
	r4 = r8 + r8
	r3 = r19
	r4 = r4 + r4
	r4 = r19 + r4
	// succ:  l0001F4A8
l0001F4A8:
	Mem0[r3:word32] = r0
	r3 = r3 + 0x00000004
	r5 = r3 ^ r4
	branch Test(NE,r5) l0001F4A8
	// succ:  l0001F4B8 l0001F4A8
l0001F4B8:
	branch Test(LE,r10) l0001F4B8_ds_t
	// succ:  l0001F4B8_ds_f l0001F4B8_ds_t
l0001F4B8_ds_f:
	r21 = 0x00000000
	goto l0001F4C0
	// succ:  l0001F4C0
l0001F4B8_ds_t:
	r21 = 0x00000000
	// succ:  l0001F4BC_thunk_fn0001F4D4
l0001F4BC_thunk_fn0001F4D4:
	call fn0001F4D4 (retsize: 0;)
	return
	// succ:  fn0001EEC8_exit
l0001F4C0:
	r19 = 0x00000001
	goto l0001EF94
	// succ:  l0001EF94
l0001F514:
	branch Test(GT,r10) l0001F514_ds_t
	// succ:  l0001F514_ds_f l0001F514_ds_t
l0001F514_ds_f:
	r19 = 0x00000001
	goto l0001F51C
	// succ:  l0001F51C
l0001F514_ds_t:
	r19 = 0x00000001
	goto l0001EF94
	// succ:  l0001EF94
l0001F51C:
	r15 = Mem0[r1:word32]
	// succ:  l0001F51C_thunk_fn0001F24C
l0001F51C_thunk_fn0001F24C:
	call fn0001F24C (retsize: 0;)
	return
	// succ:  fn0001EEC8_exit
fn0001EEC8_exit:


// fn0001EF98
// Return size: 0
define fn0001EF98
fn0001EF98_entry:
	r1 = fp
	// succ:  l0001EF98
l0001EF98:
	r23 = Mem0[r27:word32]
	r4 = 0x00000003
	r3 = r23 + 0xFFFFFFFF
	r18 = cond(r4 -u r3)
	branch Test(GE,r18) l0001EF98_ds_t
	// succ:  l0001EF98_ds_f l0001EF98_ds_t
l0001EF98_ds_f:
	r6 = 0x00000004
	goto l0001EFB0
	// succ:  l0001EFB0
l0001EF98_ds_t:
	r6 = 0x00000004
	goto l0001EFD4
	// succ:  l0001EFD4
l0001EFB0:
	r3 = Mem0[r31:word32]
	r5 = r31
	r4 = Mem0[r3:word32]
	Mem0[r3 + 28:word32] = r6
	r6 = 0x0000001A
	Mem0[r3 + 20:word32] = r6
	r15 = 0x0001EFC8
	Mem0[r3 + 24:word32] = r23
	call 0x0001EFC8 + r4 (retsize: 0;)
	branch Test(LE,r23) l0001F048
	// succ:  l0001EFD4 l0001F048
l0001EFD4:
	r22 = r27
	r21 = 0x00000000
	goto l0001EFDC
	// succ:  l0001EFDC
l0001EFD4_ds_f:
	r5 = r31
	goto l0001EFE8
	// succ:  l0001EFE8
l0001EFD4_ds_t:
	r5 = r31
	goto l0001EFF4
	// succ:  l0001EFF4
l0001EFDC:
	r24 = Mem0[r22 + 4:word32]
	branch Test(LT,r24) l0001EFD4_ds_t
	goto l0001EFD4_ds_f
	// succ:  l0001EFD4_ds_f l0001EFD4_ds_t
l0001EFE8:
	r3 = Mem0[r31 + 56:word32]
	r18 = cond(r24 - r3)
	branch Test(LT,r18) l0001F00C
	// succ:  l0001EFF4 l0001F00C
l0001EFF4:
	r3 = Mem0[r31:word32]
	r6 = 0x00000013
	r4 = Mem0[r3:word32]
	Mem0[r3 + 20:word32] = r6
	r15 = 0x0001F004
	Mem0[r3 + 24:word32] = r19
	call 0x0001F004 + r4 (retsize: 0;)
l0001F00C:
	branch Test(EQ,r21) l0001F00C_ds_t
	// succ:  l0001F00C_ds_f l0001F00C_ds_t
l0001F00C_ds_f:
	r5 = r31
	goto l0001F014
	// succ:  l0001F014
l0001F00C_ds_t:
	r5 = r31
	goto l0001F038
	// succ:  l0001F038
l0001F014:
	r3 = Mem0[r22:word32]
	r18 = cond(r3 - r24)
	branch Test(LT,r18) l0001F014_ds_t
	// succ:  l0001F014_ds_f l0001F014_ds_t
l0001F014_ds_f:
	r6 = 0x00000013
	goto l0001F024
	// succ:  l0001F024
l0001F014_ds_t:
	r6 = 0x00000013
	goto l0001F038
	// succ:  l0001F038
l0001F024:
	r3 = Mem0[r31:word32]
	r4 = Mem0[r3:word32]
	Mem0[r3 + 20:word32] = r6
	r15 = 0x0001F030
	Mem0[r3 + 24:word32] = r19
	call 0x0001F030 + r4 (retsize: 0;)
l0001F038:
	r21 = r21 + 0x00000001
	r3 = r23 ^ r21
	branch Test(NE,r3) l0001F038_ds_t
	// succ:  l0001F038_ds_f l0001F038_ds_t
l0001F038_ds_f:
	r22 = r22 + 0x00000004
	goto l0001F048
	// succ:  l0001F048
l0001F038_ds_t:
	r22 = r22 + 0x00000004
	goto l0001EFDC
	// succ:  l0001EFDC
l0001F048:
	r4 = Mem0[r27 + 24:word32]
	r3 = Mem0[r31 + 280:word32]
	r28 = Mem0[r27 + 20:word32]
	Mem0[r1 + 2632:word32] = r4
	r22 = Mem0[r27 + 28:word32]
	branch Test(EQ,r3) l0001F048_ds_t
	// succ:  l0001F048_ds_f l0001F048_ds_t
l0001F048_ds_f:
	r24 = Mem0[r27 + 32:word32]
	goto l0001F064
	// succ:  l0001F064
l0001F048_ds_t:
	r24 = Mem0[r27 + 32:word32]
	goto l0001F290
	// succ:  l0001F290
l0001F064:
	r3 = 0x0000003F
	r18 = cond(r3 -u r28)
	branch Test(LT,r18) l0001F08C
	// succ:  l0001F070 l0001F08C
l0001F070:
	r18 = cond(r4 - r28)
	branch Test(LT,r18) l0001F08C
	// succ:  l0001F078 l0001F08C
l0001F078:
	r18 = cond(r3 - r4)
	branch Test(LT,r18) l0001F078_ds_t
	// succ:  l0001F078_ds_f l0001F078_ds_t
l0001F078_ds_f:
	r3 = 0x0000000A
	goto l0001F084
	// succ:  l0001F084
l0001F078_ds_t:
	r3 = 0x0000000A
	goto l0001F08C
	// succ:  l0001F08C
l0001F084:
	r18 = cond(r3 -u r22)
	branch Test(GE,r18) l0001F468
	// succ:  l0001F08C l0001F468
l0001F08C:
	r3 = Mem0[r31:word32]
	r5 = r31
	r4 = Mem0[r3:word32]
	Mem0[r3 + 20:word32] = r25
	r15 = 0x0001F09C
	Mem0[r3 + 24:word32] = r19
	call 0x0001F09C + r4 (retsize: 0;)
	goto l0001F0A4
	// succ:  l0001F0A4
l0001F08C_ds_f:
	r3 = r23 ^ 0x00000001
	goto l0001F0AC
	// succ:  l0001F0AC
l0001F08C_ds_t:
	r3 = r23 ^ 0x00000001
	goto l0001F458
	// succ:  l0001F458
l0001F0A4:
	branch Test(NE,r28) l0001F08C_ds_t
	goto l0001F08C_ds_f
	// succ:  l0001F08C_ds_f l0001F08C_ds_t
l0001F0AC:
	r6 = Mem0[r1 + 2632:word32]
	branch Test(EQ,r6) l0001F0CC
	// succ:  l0001F0B4 l0001F0CC
l0001F0B4:
	r3 = Mem0[r31:word32]
	r5 = r31
	r4 = Mem0[r3:word32]
	Mem0[r3 + 20:word32] = r25
	r15 = 0x0001F0C4
	Mem0[r3 + 24:word32] = r19
	call 0x0001F0C4 + r4 (retsize: 0;)
l0001F0CC:
	branch Test(LE,r23) l0001F0CC_ds_t
	// succ:  l0001F0CC_ds_f l0001F0CC_ds_t
l0001F0CC_ds_f:
	r4 = Mem0[r1 + 2632:word32]
	goto l0001F0D4
	// succ:  l0001F0D4
l0001F0CC_ds_t:
	r4 = Mem0[r1 + 2632:word32]
	goto l0001F1E8
	// succ:  l0001F1E8
l0001F0D4:
	r5 = r22 + 0xFFFFFFFF
	// succ:  l0001F0D8
l0001F0D8:
	r6 = 0x00000000
	r3 = r4 + 0x00000001
	r3 = r3 + r3
	r3 = r3 + r3
	r4 = r28 + r28
	Mem0[r1 + 2640:word32] = r3
	r3 = r4 + r4
	// succ:  l0001F0F0_thunk_fn0001F0F4
l0001F0F0_thunk_fn0001F0F4:
	call fn0001F0F4 (retsize: 0;)
	return
	// succ:  fn0001EF98_exit
l0001F1E8:
	r3 = Mem0[r31 + 212:word32]
	r19 = r19 + 0x00000001
	r18 = cond(r3 - r19)
	branch Test(GE,r18) l0001F1E8_ds_t
	// succ:  l0001F1E8_ds_f l0001F1E8_ds_t
l0001F1E8_ds_f:
	r27 = r27 + 0x00000024
	goto l0001F1FC
	// succ:  l0001F1FC
l0001F1E8_ds_t:
	r27 = r27 + 0x00000024
	goto l0001EF98
	// succ:  l0001EF98
l0001F1FC:
	r3 = Mem0[r31 + 280:word32]
	goto l0001F200
	// succ:  l0001F200
l0001F1FC_ds_f:
	r8 = Mem0[r31 + 56:word32]
	goto l0001F208
	// succ:  l0001F208
l0001F1FC_ds_t:
	r8 = Mem0[r31 + 56:word32]
	goto l0001F4C8
	// succ:  l0001F4C8
l0001F200:
	branch Test(EQ,r3) l0001F1FC_ds_t
	goto l0001F1FC_ds_f
	// succ:  l0001F1FC_ds_f l0001F1FC_ds_t
l0001F208:
	branch Test(LE,r8) l0001F208_ds_t
	// succ:  l0001F208_ds_f l0001F208_ds_t
l0001F208_ds_f:
	r26 = r1 + 0x0000001C
	goto l0001F210
	// succ:  l0001F210
l0001F208_ds_t:
	r26 = r1 + 0x0000001C
	// succ:  l0001F20C_thunk_fn0001F218
l0001F20C_thunk_fn0001F218:
	call fn0001F218 (retsize: 0;)
	return
	// succ:  fn0001EF98_exit
l0001F210:
	r19 = 0x00000000
	// succ:  l0001F210_thunk_fn0001F214
l0001F210_thunk_fn0001F214:
	call fn0001F214 (retsize: 0;)
	return
	// succ:  fn0001EF98_exit
l0001F290:
	r3 = -r28
	r28 = r3 | r28
	r3 = r28
	r3 = r28 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	branch Test(NE,r3) l0001F290_ds_t
	// succ:  l0001F290_ds_f l0001F290_ds_t
l0001F290_ds_f:
	r6 = Mem0[r1 + 2632:word32]
	goto l0001F320
	// succ:  l0001F320
l0001F290_ds_t:
	r6 = Mem0[r1 + 2632:word32]
	goto l0001F3B8
	// succ:  l0001F3B8
l0001F320:
	r3 = r6 ^ 0x0000003F
	r4 = -r3
	r3 = r4 | r3
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	branch Test(NE,r4) l0001F320_ds_t
	// succ:  l0001F320_ds_f l0001F320_ds_t
l0001F320_ds_f:
	r22 = r22 | r24
	goto l0001F3B4
	// succ:  l0001F3B4
l0001F320_ds_t:
	r22 = r22 | r24
	goto l0001F3B8
	// succ:  l0001F3B8
l0001F3B4:
	branch Test(EQ,r22) l0001F3D0
	// succ:  l0001F3B8 l0001F3D0
l0001F3B8:
	r3 = Mem0[r31:word32]
	r5 = r31
	r4 = Mem0[r3:word32]
	Mem0[r3 + 20:word32] = r25
	r15 = 0x0001F3C8
	Mem0[r3 + 24:word32] = r19
	call 0x0001F3C8 + r4 (retsize: 0;)
l0001F3D0:
	branch Test(LE,r23) l0001F1E8
	// succ:  l0001F3D4 l0001F1E8
l0001F3D4:
	r22 = r23 + 0x00000001
	r22 = r22 + r22
	r22 = r22 + r22
	r23 = r27 + 0x00000004
	r22 = r27 + r22
	r26 = r1 + 0x0000001C
	r24 = 0x00000001
	goto l0001F3F0
	// succ:  l0001F3F0
l0001F3D4_ds_f:
	r23 = r23 + 0x00000004
	goto l0001F410
	// succ:  l0001F410
l0001F3D4_ds_t:
	r23 = r23 + 0x00000004
	goto l0001F428
	// succ:  l0001F428
l0001F3F0:
	r21 = Mem0[r23:word32]
	r5 = r31
	r21 = r21 + r21
	r3 = r21 + r21
	r3 = r26 + r3
	r3 = Mem0[r3 + 2560:word32]
	branch Test(EQ,r3) l0001F3D4_ds_t
	goto l0001F3D4_ds_f
	// succ:  l0001F3D4_ds_f l0001F3D4_ds_t
l0001F410:
	r3 = Mem0[r31:word32]
	r6 = 0x00000013
	r4 = Mem0[r3:word32]
	Mem0[r3 + 20:word32] = r6
	r15 = 0x0001F420
	Mem0[r3 + 24:word32] = r19
	call 0x0001F420 + r4 (retsize: 0;)
l0001F428:
	r21 = r21 + r21
	r21 = r26 + r21
	r3 = r22 ^ r23
	branch Test(NE,r3) l0001F428_ds_t
	// succ:  l0001F428_ds_f l0001F428_ds_t
l0001F428_ds_f:
	Mem0[r21 + 2560:word32] = r24
	goto l0001F43C
	// succ:  l0001F43C
l0001F428_ds_t:
	Mem0[r21 + 2560:word32] = r24
	goto l0001F3F0
	// succ:  l0001F3F0
l0001F43C:
	r3 = Mem0[r31 + 212:word32]
	r19 = r19 + 0x00000001
	r18 = cond(r3 - r19)
	branch Test(GE,r18) l0001F43C_ds_t
	// succ:  l0001F43C_ds_f l0001F43C_ds_t
l0001F43C_ds_f:
	r27 = r27 + 0x00000024
	goto l0001F450
	// succ:  l0001F450
l0001F43C_ds_t:
	r27 = r27 + 0x00000024
	goto l0001EF98
	// succ:  l0001EF98
l0001F450:
	r3 = Mem0[r31 + 280:word32]
	goto l0001F200
	// succ:  l0001F200
l0001F458:
	branch Test(NE,r3) l0001F458_ds_t
	// succ:  l0001F458_ds_f l0001F458_ds_t
l0001F458_ds_f:
	r4 = Mem0[r1 + 2632:word32]
	goto l0001F460
	// succ:  l0001F460
l0001F458_ds_t:
	r4 = Mem0[r1 + 2632:word32]
	goto l0001F0B4
	// succ:  l0001F0B4
l0001F460:
	r5 = r22 + 0xFFFFFFFF
	goto l0001F0D8
	// succ:  l0001F0D8
l0001F468:
	r18 = cond(r3 -u r24)
	branch Test(GE,r18) l0001F468_ds_t
	// succ:  l0001F468_ds_f l0001F468_ds_t
l0001F468_ds_f:
	r5 = r31
	goto l0001F474
	// succ:  l0001F474
l0001F468_ds_t:
	r5 = r31
	goto l0001F0A4
	// succ:  l0001F0A4
l0001F474:
	r3 = Mem0[r31:word32]
	r4 = Mem0[r3:word32]
	Mem0[r3 + 20:word32] = r25
	r15 = 0x0001F480
	Mem0[r3 + 24:word32] = r19
	call 0x0001F480 + r4 (retsize: 0;)
	goto l0001F0A4
	// succ:  l0001F0A4
l0001F4C8:
	branch Test(LE,r8) l0001F4C8_ds_t
	// succ:  l0001F4C8_ds_f l0001F4C8_ds_t
l0001F4C8_ds_f:
	r19 = r1 + 0x00000A1C
	goto l0001F4D0
	// succ:  l0001F4D0
l0001F4C8_ds_t:
	r19 = r1 + 0x00000A1C
	// succ:  l0001F4CC_thunk_fn0001F218
l0001F4CC_thunk_fn0001F218:
	call fn0001F218 (retsize: 0;)
	return
	// succ:  fn0001EF98_exit
l0001F4D0:
	r21 = 0x00000000
	// succ:  l0001F4D0_thunk_fn0001F4D4
l0001F4D0_thunk_fn0001F4D4:
	call fn0001F4D4 (retsize: 0;)
	return
	// succ:  fn0001EF98_exit
fn0001EF98_exit:


// fn0001F0F4
// Return size: 0
define fn0001F0F4
fn0001F0F4_entry:
	r1 = fp
	// succ:  l0001F0F4
l0001F0F4:
	Mem0[r1 + 2644:word32] = r3
	r3 = r5 ^ r24
	r30 = r27 + 0x00000004
	Mem0[r1 + 2628:word32] = r6
	r26 = r1 + 0x0000001C
	Mem0[r1 + 2636:word32] = r3
	goto l0001F10C
	// succ:  l0001F10C
l0001F0F4_ds_f:
	r21 = r26 + r3
	goto l0001F138
	// succ:  l0001F138
l0001F0F4_ds_t:
	r21 = r26 + r3
	goto l0001F15C
	// succ:  l0001F15C
l0001F10C:
	r3 = Mem0[r30:word32]
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	branch Test(EQ,r28) l0001F0F4_ds_t
	goto l0001F0F4_ds_f
	// succ:  l0001F0F4_ds_f l0001F0F4_ds_t
l0001F138:
	r3 = Mem0[r3 + r26:word32]
	branch Test(GE,r3) l0001F138_ds_t
	// succ:  l0001F138_ds_f l0001F138_ds_t
l0001F138_ds_f:
	r3 = Mem0[r1 + 2632:word32]
	goto l0001F144
	// succ:  l0001F144
l0001F138_ds_t:
	r3 = Mem0[r1 + 2632:word32]
	goto l0001F160
	// succ:  l0001F160
l0001F144:
	r3 = Mem0[r31:word32]
	r5 = r31
	r4 = Mem0[r3:word32]
	Mem0[r3 + 20:word32] = r25
	r15 = 0x0001F154
	Mem0[r3 + 24:word32] = r19
	call 0x0001F154 + r4 (retsize: 0;)
l0001F15C:
	r3 = Mem0[r1 + 2632:word32]
	// succ:  l0001F160
l0001F160:
	r18 = cond(r3 - r28)
	branch Test(LT,r18) l0001F160_ds_t
	// succ:  l0001F160_ds_f l0001F160_ds_t
l0001F160_ds_f:
	r4 = Mem0[r1 + 2644:word32]
	goto l0001F16C
	// succ:  l0001F16C
l0001F160_ds_t:
	r4 = Mem0[r1 + 2644:word32]
	goto l0001F1D0
	// succ:  l0001F1D0
l0001F16C:
	r6 = Mem0[r1 + 2640:word32]
	r29 = r21 + r4
	r21 = r21 + r6
	goto l0001F1AC
	// succ:  l0001F1AC
l0001F17C:
	branch Test(EQ,r6) l0001F17C_ds_t
	// succ:  l0001F17C_ds_f l0001F17C_ds_t
l0001F17C_ds_f:
	r3 = Mem0[r1 + 2636:word32]
	goto l0001F184
	// succ:  l0001F184
l0001F17C_ds_t:
	r3 = Mem0[r1 + 2636:word32]
	goto l0001F284
	// succ:  l0001F284
l0001F184:
	r4 = Mem0[r31:word32]
	r6 = Mem0[r4:word32]
	Mem0[r4 + 20:word32] = r25
	r15 = 0x0001F190
	Mem0[r4 + 24:word32] = r19
	call 0x0001F190 + r6 (retsize: 0;)
	Mem0[r29:word32] = r24
	goto l0001F19C
	// succ:  l0001F19C
l0001F184_ds_f:
	r4 = Mem0[r1 + 2628:word32]
	goto l0001F1AC
	// succ:  l0001F1AC
l0001F184_ds_t:
	r4 = Mem0[r1 + 2628:word32]
	goto l0001F1D4
	// succ:  l0001F1D4
l0001F19C:
	r29 = r29 + 0x00000004
	r4 = r21 ^ r29
	branch Test(EQ,r4) l0001F184_ds_t
	goto l0001F184_ds_f
	// succ:  l0001F184_ds_f l0001F184_ds_t
l0001F1AC:
	r4 = Mem0[r29:word32]
	r5 = r31
	branch Test(GE,r4) l0001F1AC_ds_t
	// succ:  l0001F1AC_ds_f l0001F1AC_ds_t
l0001F1AC_ds_f:
	r6 = r4 ^ r22
	goto l0001F1BC
	// succ:  l0001F1BC
l0001F1AC_ds_t:
	r6 = r4 ^ r22
	goto l0001F17C
	// succ:  l0001F17C
l0001F1BC:
	branch Test(NE,r22) l0001F184
	// succ:  l0001F1C0 l0001F184
l0001F1C0:
	Mem0[r29:word32] = r24
	r29 = r29 + 0x00000004
	r4 = r21 ^ r29
	branch Test(NE,r4) l0001F1AC
	// succ:  l0001F1D0 l0001F1AC
l0001F1D0:
	r4 = Mem0[r1 + 2628:word32]
	goto l0001F1D4
	// succ:  l0001F1D4
l0001F1D0_ds_f:
	Mem0[r1 + 2628:word32] = r4
	goto l0001F1E4_thunk_fn0001EF98
	// succ:  l0001F1E4_thunk_fn0001EF98
l0001F1D0_ds_t:
	Mem0[r1 + 2628:word32] = r4
	goto l0001F10C
	// succ:  l0001F10C
l0001F1D4:
	r30 = r30 + 0x00000004
	r4 = r4 + 0x00000001
	r18 = cond(r4 - r23)
	branch Test(LT,r18) l0001F1D0_ds_t
	goto l0001F1D0_ds_f
	// succ:  l0001F1D0_ds_f l0001F1D0_ds_t
l0001F1E4_thunk_fn0001EF98:
	call fn0001EF98 (retsize: 0;)
	return
	// succ:  fn0001F0F4_exit
l0001F284:
	branch Test(NE,r3) l0001F184
	// succ:  l0001F288 l0001F184
l0001F288:
	Mem0[r29:word32] = r24
	goto l0001F19C
	// succ:  l0001F19C
fn0001F0F4_exit:


// fn0001F214
// Return size: 0
define fn0001F214
fn0001F214_entry:
	r1 = fp
	// succ:  l0001F214
l0001F214:
	r21 = 0x0000002D
	goto l0001F214_thunk_fn0001F218
	// succ:  l0001F214_thunk_fn0001F218
l0001F214:
	r21 = 0x0000002D
	goto l0001F214_thunk_fn0001F218
	// succ:  l0001F214_thunk_fn0001F218
l0001F214_thunk_fn0001F218:
	call fn0001F218 (retsize: 0;)
	return
	// succ:  fn0001F214_exit
l0001F214_thunk_fn0001F218:
	call fn0001F218 (retsize: 0;)
	return
	// succ:  fn0001F214_exit
fn0001F214_exit:


// fn0001F218
// Return size: 0
define fn0001F218
fn0001F218_entry:
	r1 = fp
	goto l0001F218
	// succ:  l0001F218
l0001F210_ds_f:
	r26 = r26 + 0x00000100
	goto l0001F228
	// succ:  l0001F228
l0001F210_ds_t:
	r26 = r26 + 0x00000100
	goto l0001F240
	// succ:  l0001F240
l0001F218:
	r3 = Mem0[r26:word32]
	r19 = r19 + 0x00000001
	branch Test(GE,r3) l0001F210_ds_t
	goto l0001F210_ds_f
	// succ:  l0001F210_ds_f l0001F210_ds_t
l0001F228:
	r3 = Mem0[r31:word32]
	r5 = r31
	r4 = Mem0[r3:word32]
	r15 = 0x0001F234
	Mem0[r3 + 20:word32] = r21
	call 0x0001F234 + r4 (retsize: 0;)
	r8 = Mem0[r31 + 56:word32]
	// succ:  l0001F240
l0001F240:
	r18 = cond(r19 - r8)
	branch Test(LT,r18) l0001F218
	// succ:  l0001F248 l0001F218
l0001F248:
	r15 = Mem0[r1:word32]
	// succ:  l0001F248_thunk_fn0001F24C
l0001F248_thunk_fn0001F24C:
	call fn0001F24C (retsize: 0;)
	return
	// succ:  fn0001F218_exit
fn0001F218_exit:


// fn0001F24C
// Return size: 0
define fn0001F24C
fn0001F24C_entry:
	r1 = fp
	// succ:  l0001F24C
l0001F24C:
	r19 = Mem0[r1 + 2648:word32]
	goto l0001F250_in_fn0001F24C
	// succ:  l0001F250_in_fn0001F24C
l0001F24C:
	r19 = Mem0[r1 + 2648:word32]
	// succ:  l0001F24C_thunk_fn0001F4D8
l0001F24C_thunk_fn0001F4D8:
	call fn0001F4D8 (retsize: 0;)
	return
	// succ:  fn0001F24C_exit
l0001F250_in_fn0001F24C:
	r21 = Mem0[r1 + 2652:word32]
	r22 = Mem0[r1 + 2656:word32]
	r23 = Mem0[r1 + 2660:word32]
	r24 = Mem0[r1 + 2664:word32]
	r25 = Mem0[r1 + 2668:word32]
	r26 = Mem0[r1 + 2672:word32]
	r27 = Mem0[r1 + 2676:word32]
	r28 = Mem0[r1 + 2680:word32]
	r29 = Mem0[r1 + 2684:word32]
	r30 = Mem0[r1 + 2688:word32]
	r31 = Mem0[r1 + 2692:word32]
	r1 = r1 + 0x00000A88
	return
	// succ:  fn0001F24C_exit
fn0001F24C_exit:


// fn0001F4D4
// Return size: 0
define fn0001F4D4
fn0001F4D4_entry:
	r1 = fp
	// succ:  l0001F4D4
l0001F4D4:
	r22 = 0x0000002D
	goto l0001F4D4_thunk_fn0001F4D8
	// succ:  l0001F4D4_thunk_fn0001F4D8
l0001F4D4:
	r22 = 0x0000002D
	goto l0001F4D4_thunk_fn0001F4D8
	// succ:  l0001F4D4_thunk_fn0001F4D8
l0001F4D4_thunk_fn0001F4D8:
	call fn0001F4D8 (retsize: 0;)
	return
	// succ:  fn0001F4D4_exit
l0001F4D4_thunk_fn0001F4D8:
	call fn0001F4D8 (retsize: 0;)
	return
	// succ:  fn0001F4D4_exit
fn0001F4D4_exit:


// fn0001F4D8
// Return size: 0
define fn0001F4D8
fn0001F4D8_entry:
	r1 = fp
	goto l0001F4D8
	// succ:  l0001F4D8
l0001F250:
	r21 = Mem0[r1 + 2652:word32]
	r22 = Mem0[r1 + 2656:word32]
	r23 = Mem0[r1 + 2660:word32]
	r24 = Mem0[r1 + 2664:word32]
	r25 = Mem0[r1 + 2668:word32]
	r26 = Mem0[r1 + 2672:word32]
	r27 = Mem0[r1 + 2676:word32]
	r28 = Mem0[r1 + 2680:word32]
	r29 = Mem0[r1 + 2684:word32]
	r30 = Mem0[r1 + 2688:word32]
	r31 = Mem0[r1 + 2692:word32]
	r1 = r1 + 0x00000A88
	return
	// succ:  fn0001F4D8_exit
l0001F4D0_ds_f:
	r19 = r19 + 0x00000004
	goto l0001F4EC
	// succ:  l0001F4EC
l0001F4D0_ds_t:
	r19 = r19 + 0x00000004
	goto l0001F500
	// succ:  l0001F500
l0001F4D8:
	r3 = Mem0[r19:word32]
	r5 = r31
	r21 = r21 + 0x00000001
	branch Test(NE,r3) l0001F4D0_ds_t
	goto l0001F4D0_ds_f
	// succ:  l0001F4D0_ds_f l0001F4D0_ds_t
l0001F4EC:
	r3 = Mem0[r31:word32]
	r4 = Mem0[r3:word32]
	r15 = 0x0001F4F4
	Mem0[r3 + 20:word32] = r22
	call 0x0001F4F4 + r4 (retsize: 0;)
	r8 = Mem0[r31 + 56:word32]
	// succ:  l0001F500
l0001F500:
	r18 = cond(r21 - r8)
	branch Test(LT,r18) l0001F500_ds_t
	// succ:  l0001F500_ds_f l0001F500_ds_t
l0001F500_ds_f:
	r15 = Mem0[r1:word32]
	goto l0001F50C
	// succ:  l0001F50C
l0001F500_ds_t:
	r15 = Mem0[r1:word32]
	goto l0001F4D8
	// succ:  l0001F4D8
l0001F50C:
	r19 = Mem0[r1 + 2648:word32]
	goto l0001F250
	// succ:  l0001F250
fn0001F4D8_exit:


// fn0001F60C
// Return size: 0
define fn0001F60C
fn0001F60C_entry:
	r1 = fp
	// succ:  l0001F60C
l0001F60C:
	r3 = r3 + 0x00000001
	Mem0[r19 + 24:word32] = r3
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn0001F60C_exit
fn0001F60C_exit:


// fn0001F628
// Return size: 0
define fn0001F628
fn0001F628_entry:
	r1 = fp
	// succ:  l0001F628
l0001F628:
	r1 = r1 + 0xFFFFFFBC
	Mem0[r1 + 48:word32] = r25
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	// succ:  l0001F638_thunk_fn0001F63C
l0001F638_thunk_fn0001F63C:
	call fn0001F63C (retsize: 0;)
	return
	// succ:  fn0001F628_exit
fn0001F628_exit:


// fn0001F63C
// Return size: 0
define fn0001F63C
fn0001F63C_entry:
	r1 = fp
	// succ:  l0001F63C
l0001F63C:
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	Mem0[r1 + 60:word32] = r28
	Mem0[r1 + 64:word32] = r29
	r3 = Mem0[r5 + 296:word32]
	r4 = r3 ^ 0x00000001
	branch Test(EQ,r4) l0001F63C_ds_t
	// succ:  l0001F63C_ds_f l0001F63C_ds_t
l0001F63C_ds_f:
	r25 = r5
	goto l0001F668
	// succ:  l0001F668
l0001F63C_ds_t:
	r25 = r5
	goto l0001F800
	// succ:  l0001F800
l0001F668:
	r4 = r3 + 0xFFFFFFFF
	r6 = 0x00000003
	r18 = cond(r6 -u r4)
	branch Test(GE,r18) l0001F698
	// succ:  l0001F678 l0001F698
l0001F678:
	r4 = Mem0[r5:word32]
	r6 = 0x0000001A
	Mem0[r4 + 20:word32] = r6
	r6 = 0x00000004
	Mem0[r4 + 28:word32] = r6
	r6 = Mem0[r4:word32]
	r15 = 0x0001F690
	Mem0[r4 + 24:word32] = r3
	call 0x0001F690 + r6 (retsize: 0;)
l0001F698:
	r6 = Mem0[r25 + 284:word32]
	r5 = Mem0[r25 + 28:word32]
	r3 = r6
	r3 = r6 + r6
	r3 = r3 + r3
	r3 = r3 + r3
	r15 = 0x0001F6B4
	r6 = r3
	call fn0001CCF0 (retsize: 0;)
	r6 = Mem0[r25 + 288:word32]
	r5 = Mem0[r25 + 32:word32]
	Mem0[r25 + 316:word32] = r3
	r4 = r6
	r4 = r6 + r6
	r4 = r4 + r4
	r4 = r4 + r4
	r15 = 0x0001F6DC
	r6 = r4
	call fn0001CCF0 (retsize: 0;)
	r4 = Mem0[r25 + 296:word32]
	Mem0[r25 + 320:word32] = r3
	branch Test(LE,r4) l0001F698_ds_t
	// succ:  l0001F698_ds_f l0001F698_ds_t
l0001F698_ds_f:
	Mem0[r25 + 324:word32] = r0
	goto l0001F6F4
	// succ:  l0001F6F4
l0001F698_ds_t:
	Mem0[r25 + 324:word32] = r0
	goto l0001F854
	// succ:  l0001F854
l0001F6F4:
	r28 = 0x00000000
	r26 = r28
	r21 = r25 + 0x0000012C
	r22 = 0x0000000A
	r23 = 0x0000000D
	goto l0001F708
	// succ:  l0001F708
l0001F6F4_ds_f:
	r6 = r29
	goto l0001F75C
	// succ:  l0001F75C
l0001F6F4_ds_t:
	r6 = r29
	goto l0001F760
	// succ:  l0001F760
l0001F708:
	r24 = Mem0[r21:word32]
	r27 = Mem0[r24 + 8:word32]
	r29 = Mem0[r24 + 12:word32]
	r5 = r27
	r6 = r29
	Mem0[r24 + 52:word32] = r27
	r15 = 0x0001F724
	Mem0[r24 + 56:word32] = r29
	call fn0001E908 (retsize: 0;)
	r19 = r3
	r3 = r27 + r27
	r3 = r3 + r3
	r6 = r27
	r5 = Mem0[r24 + 28:word32]
	r3 = r3 + r3
	Mem0[r24 + 60:word32] = r19
	r15 = 0x0001F74C
	Mem0[r24 + 64:word32] = r3
	call fn0001EA08 (retsize: 0;)
	branch Test(EQ,r3) l0001F6F4_ds_t
	goto l0001F6F4_ds_f
	// succ:  l0001F6F4_ds_f l0001F6F4_ds_t
l0001F75C:
	r27 = r3
	// succ:  l0001F760
l0001F760:
	r5 = Mem0[r24 + 32:word32]
	r15 = 0x0001F768
	Mem0[r24 + 68:word32] = r27
	call fn0001EA08 (retsize: 0;)
	branch Test(EQ,r3) l0001F778
	// succ:  l0001F774 l0001F778
l0001F774:
	r29 = r3
	// succ:  l0001F778
l0001F778:
	r28 = r19 + r28
	r18 = cond(r22 - r28)
	branch Test(GE,r18) l0001F778_ds_t
	// succ:  l0001F778_ds_f l0001F778_ds_t
l0001F778_ds_f:
	Mem0[r24 + 72:word32] = r29
	goto l0001F788
	// succ:  l0001F788
l0001F778_ds_t:
	Mem0[r24 + 72:word32] = r29
	goto l0001F79C
	// succ:  l0001F79C
l0001F788:
	r3 = Mem0[r25:word32]
	r5 = r25
	r4 = Mem0[r3:word32]
	r15 = 0x0001F794
	Mem0[r3 + 20:word32] = r23
	call 0x0001F794 + r4 (retsize: 0;)
l0001F79C:
	branch Test(LE,r19) l0001F79C_ds_t
	// succ:  l0001F79C_ds_f l0001F79C_ds_t
l0001F79C_ds_f:
	r7 = r19 + 0xFFFFFFFF
	goto l0001F7A4
	// succ:  l0001F7A4
l0001F79C_ds_t:
	r7 = r19 + 0xFFFFFFFF
	goto l0001F7E4
	// succ:  l0001F7E4
l0001F7A4:
	r6 = Mem0[r25 + 324:word32]
	r3 = r6 + 0x00000052
	r4 = r19 + r3
	r4 = r4 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r4 = r4 + r4
	r3 = r25 + r3
	r4 = r25 + r4
	// succ:  l0001F7C8
l0001F7C8:
	Mem0[r3:word32] = r26
	r3 = r3 + 0x00000004
	r5 = r4 ^ r3
	branch Test(NE,r5) l0001F7C8
	// succ:  l0001F7D8 l0001F7C8
l0001F7D8:
	r3 = r6 + 0x00000001
	r3 = r3 + r7
	Mem0[r25 + 324:word32] = r3
	// succ:  l0001F7E4
l0001F7E4:
	r3 = Mem0[r25 + 296:word32]
	r26 = r26 + 0x00000001
	r18 = cond(r26 - r3)
	branch Test(GE,r18) l0001F7E4_ds_t
	// succ:  l0001F7E4_ds_f l0001F7E4_ds_t
l0001F7E4_ds_f:
	r21 = r21 + 0x00000004
	goto l0001F7F8
	// succ:  l0001F7F8
l0001F7E4_ds_t:
	r21 = r21 + 0x00000004
	goto l0001F854
	// succ:  l0001F854
l0001F7F8:
	r28 = Mem0[r25 + 324:word32]
	goto l0001F708
	// succ:  l0001F708
l0001F800:
	r19 = Mem0[r5 + 300:word32]
	r6 = 0x00000008
	r5 = Mem0[r19 + 32:word32]
	r4 = Mem0[r19 + 28:word32]
	r21 = Mem0[r19 + 12:word32]
	Mem0[r25 + 320:word32] = r5
	Mem0[r25 + 316:word32] = r4
	Mem0[r19 + 64:word32] = r6
	r6 = r21
	Mem0[r19 + 52:word32] = r3
	Mem0[r19 + 56:word32] = r3
	Mem0[r19 + 60:word32] = r3
	r15 = 0x0001F834
	Mem0[r19 + 68:word32] = r3
	call fn0001EA08 (retsize: 0;)
	branch Test(EQ,r3) l0001F844
	// succ:  l0001F840 l0001F844
l0001F840:
	r21 = r3
	// succ:  l0001F844
l0001F844:
	Mem0[r19 + 72:word32] = r21
	r3 = 0x00000001
	Mem0[r25 + 324:word32] = r3
	Mem0[r25 + 328:word32] = r0
	goto l0001F854
	// succ:  l0001F854
l0001F844_ds_f:
	r15 = Mem0[r1:word32]
	goto l0001F860
	// succ:  l0001F860
l0001F844_ds_t:
	r15 = Mem0[r1:word32]
	goto l0001F884
	// succ:  l0001F884
l0001F854:
	r5 = Mem0[r25 + 248:word32]
	branch Test(LE,r5) l0001F844_ds_t
	goto l0001F844_ds_f
	// succ:  l0001F844_ds_f l0001F844_ds_t
l0001F860:
	r15 = 0x0001F864
	r6 = Mem0[r25 + 316:word32]
	call fn0001E908 (retsize: 0;)
	r4 = 0xFFFFFFFE
	r18 = cond(r4 - r3)
	branch Test(LT,r18) l0001F8B4
	// succ:  l0001F87C l0001F8B4
l0001F87C:
	Mem0[r25 + 244:word32] = r3
	// succ:  l0001F880
l0001F880:
	r15 = Mem0[r1:word32]
	// succ:  l0001F884
l0001F884:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r28 = Mem0[r1 + 60:word32]
	r29 = Mem0[r1 + 64:word32]
	r1 = r1 + 0x00000044
	return
	// succ:  fn0001F63C_exit
l0001F8B4:
	r3 = 0xFFFFFFFF
	Mem0[r25 + 244:word32] = r3
	goto l0001F880
	// succ:  l0001F880
fn0001F63C_exit:


// fn0001F8C4
// Return size: 0
define fn0001F8C4
fn0001F8C4_entry:
	r1 = fp
	// succ:  l0001F8C4
l0001F8C4:
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r9 = Mem0[r5 + 216:word32]
	branch Test(EQ,r9) l0001F8C4_ds_t
	// succ:  l0001F8C4_ds_f l0001F8C4_ds_t
l0001F8C4_ds_f:
	r19 = r5
	goto l0001F8DC
	// succ:  l0001F8DC
l0001F8C4_ds_t:
	r19 = r5
	goto l0001F994
	// succ:  l0001F994
l0001F8DC:
	r3 = Mem0[r5 + 384:word32]
	r4 = Mem0[r3 + 32:word32]
	r3 = r4 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r4 = Mem0[r3 + r9:word32]
	r9 = r9 + r3
	branch Test(LE,r4) l0001F8DC_ds_t
	// succ:  l0001F8DC_ds_f l0001F8DC_ds_t
l0001F8DC_ds_f:
	Mem0[r5 + 296:word32] = r4
	goto l0001F90C
	// succ:  l0001F90C
l0001F8DC_ds_t:
	Mem0[r5 + 296:word32] = r4
	goto l0001F964
	// succ:  l0001F964
l0001F90C:
	r7 = r4 + 0x0000004B
	r7 = r7 + r7
	r7 = r7 + r7
	r10 = Mem0[r5 + 64:word32]
	r8 = r9 + 0x00000004
	r5 = r5 + 0x0000012C
	r7 = r19 + r7
	// succ:  l0001F928
l0001F928:
	r4 = Mem0[r8:word32]
	r5 = r5 + 0x00000004
	r3 = r4 + r4
	r4 = r3 + r4
	r3 = r4 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 - r4
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r10 + r3
	Mem0[r5 - 4:word32] = r3
	r3 = r5 ^ r7
	branch Test(NE,r3) l0001F928_ds_t
	// succ:  l0001F928_ds_f l0001F928_ds_t
l0001F928_ds_f:
	r8 = r8 + 0x00000004
	goto l0001F964
	// succ:  l0001F964
l0001F928_ds_t:
	r8 = r8 + 0x00000004
	goto l0001F928
	// succ:  l0001F928
l0001F964:
	r3 = Mem0[r9 + 20:word32]
	r7 = Mem0[r9 + 24:word32]
	Mem0[r19 + 368:word32] = r3
	r3 = Mem0[r9 + 28:word32]
	r9 = Mem0[r9 + 32:word32]
	Mem0[r19 + 372:word32] = r7
	Mem0[r19 + 376:word32] = r3
	Mem0[r19 + 380:word32] = r9
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn0001F8C4_exit
l0001F994:
	r3 = Mem0[r5 + 56:word32]
	r6 = 0x00000004
	r18 = cond(r6 - r3)
	branch Test(GE,r18) l0001F994_ds_t
	// succ:  l0001F994_ds_f l0001F994_ds_t
l0001F994_ds_f:
	r7 = 0x0000001A
	goto l0001F9A8
	// succ:  l0001F9A8
l0001F994_ds_t:
	r7 = 0x0000001A
	goto l0001F9C4
	// succ:  l0001F9C4
l0001F9A8:
	r4 = Mem0[r5:word32]
	Mem0[r4 + 20:word32] = r7
	r7 = Mem0[r4:word32]
	Mem0[r4 + 24:word32] = r3
	r15 = 0x0001F9B8
	Mem0[r4 + 28:word32] = r6
	call 0x0001F9B8 + r7 (retsize: 0;)
	r3 = Mem0[r19 + 56:word32]
	// succ:  l0001F9C4
l0001F9C4:
	branch Test(LE,r3) l0001F9C4_ds_t
	// succ:  l0001F9C4_ds_f l0001F9C4_ds_t
l0001F9C4_ds_f:
	Mem0[r19 + 296:word32] = r3
	goto l0001F9CC
	// succ:  l0001F9CC
l0001F9C4_ds_t:
	Mem0[r19 + 296:word32] = r3
	goto l0001F9F8
	// succ:  l0001F9F8
l0001F9CC:
	r3 = r3 + 0x0000004B
	r3 = r3 + r3
	r5 = Mem0[r19 + 64:word32]
	r3 = r3 + r3
	r4 = r19 + 0x0000012C
	r3 = r19 + r3
	// succ:  l0001F9E4
l0001F9E4:
	Mem0[r4:word32] = r5
	r4 = r4 + 0x00000004
	r6 = r4 ^ r3
	branch Test(NE,r6) l0001F9E4_ds_t
	// succ:  l0001F9E4_ds_f l0001F9E4_ds_t
l0001F9E4_ds_f:
	r5 = r5 + 0x00000054
	goto l0001F9F8
	// succ:  l0001F9F8
l0001F9E4_ds_t:
	r5 = r5 + 0x00000054
	goto l0001F9E4
	// succ:  l0001F9E4
l0001F9F8:
	r3 = 0x0000003F
	Mem0[r19 + 372:word32] = r3
	Mem0[r19 + 368:word32] = r0
	Mem0[r19 + 376:word32] = r0
	Mem0[r19 + 380:word32] = r0
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn0001F8C4_exit
fn0001F8C4_exit:


// fn0001FCE0
// Return size: 0
define fn0001FCE0
fn0001FCE0_entry:
	r1 = fp
	// succ:  l0001FCE0
l0001FCE0:
	r1 = r1 + 0xFFFFFFC4
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 48:word32] = r25
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	r3 = Mem0[r5 + 4:word32]
	r25 = r6
	r7 = 0x00000024
	r3 = Mem0[r3:word32]
	r6 = 0x00000001
	r15 = 0x0001FD1C
	r19 = r5
	call 0x0001FD1C + r3 (retsize: 0;)
	r23 = r3
	r4 = 0x0000609C
	r3 = Mem0[r19 + 32:word32]
	Mem0[r19 + 384:word32] = r23
	Mem0[r23:word32] = r4
	r6 = 0x00005BA4
	r4 = 0x00005BE8
	Mem0[r23 + 16:word32] = r0
	Mem0[r23 + 4:word32] = r6
	branch Test(NE,r3) l0001FCE0_ds_t
	// succ:  l0001FCE0_ds_f l0001FCE0_ds_t
l0001FCE0_ds_f:
	Mem0[r23 + 8:word32] = r4
	goto l0001FD50
	// succ:  l0001FD50
l0001FCE0_ds_t:
	Mem0[r23 + 8:word32] = r4
	goto l0002008C
	// succ:  l0002008C
l0001FD50:
	r3 = Mem0[r19:word32]
	// succ:  l0001FD54
l0001FD54:
	r6 = 0x00000020
	Mem0[r3 + 20:word32] = r6
	r3 = Mem0[r3:word32]
	r15 = 0x0001FD60
	r5 = r19
	call 0x0001FD60 + r3 (retsize: 0;)
	r3 = Mem0[r19 + 32:word32]
	// succ:  l0001FD6C
l0001FD6C:
	r4 = 0xFFFFFFDC
	r18 = cond(r4 - r3)
	branch Test(GE,r18) l00020078
	// succ:  l0001FD7C l00020078
l0001FD7C:
	r3 = Mem0[r19:word32]
	goto l0001FD80
	// succ:  l0001FD80
l0001FD7C_ds_f:
	r6 = 0x0000000F
	goto l0001FDB0
	// succ:  l0001FDB0
l0001FD7C_ds_t:
	r6 = 0x0000000F
	goto l0001FDC8
	// succ:  l0001FDC8
l0001FD80:
	r6 = 0xFFFFFFDC
	r4 = 0x00000029
	Mem0[r3 + 20:word32] = r4
	Mem0[r3 + 24:word32] = r6
	r3 = Mem0[r3:word32]
	r15 = 0x0001FD98
	r5 = r19
	call 0x0001FD98 + r3 (retsize: 0;)
	// succ:  l0001FDA0
l0001FDA0:
	r4 = Mem0[r19 + 52:word32]
	r3 = r4 ^ 0x00000008
	branch Test(EQ,r3) l0001FD7C_ds_t
	goto l0001FD7C_ds_f
	// succ:  l0001FD7C_ds_f l0001FD7C_ds_t
l0001FDB0:
	r3 = Mem0[r19:word32]
	r5 = r19
	Mem0[r3 + 20:word32] = r6
	r6 = Mem0[r3:word32]
	r15 = 0x0001FDC0
	Mem0[r3 + 24:word32] = r4
	call 0x0001FDC0 + r6 (retsize: 0;)
l0001FDC8:
	r7 = Mem0[r19 + 56:word32]
	r4 = 0x0000000A
	r18 = cond(r4 - r7)
	branch Test(GE,r18) l0001FDC8_ds_t
	// succ:  l0001FDC8_ds_f l0001FDC8_ds_t
l0001FDC8_ds_f:
	r6 = 0x0000001A
	goto l0001FDDC
	// succ:  l0001FDDC
l0001FDC8_ds_t:
	r6 = 0x0000001A
	goto l0001FDFC
	// succ:  l0001FDFC
l0001FDDC:
	r3 = Mem0[r19:word32]
	r5 = r19
	Mem0[r3 + 20:word32] = r6
	r6 = Mem0[r3:word32]
	Mem0[r3 + 24:word32] = r7
	r15 = 0x0001FDF0
	Mem0[r3 + 28:word32] = r4
	call 0x0001FDF0 + r6 (retsize: 0;)
	r7 = Mem0[r19 + 56:word32]
	// succ:  l0001FDFC
l0001FDFC:
	r3 = 0x00000001
	Mem0[r19 + 284:word32] = r3
	Mem0[r19 + 288:word32] = r3
	branch Test(LE,r7) l0001FDFC_ds_t
	// succ:  l0001FDFC_ds_f l0001FDFC_ds_t
l0001FDFC_ds_f:
	r21 = Mem0[r19 + 64:word32]
	goto l0001FE10
	// succ:  l0001FE10
l0001FDFC_ds_t:
	r21 = Mem0[r19 + 64:word32]
	goto l000200AC
	// succ:  l000200AC
l0001FE10:
	r21 = r21 + 0x00000008
	r22 = 0x00000000
	r24 = 0x00000003
	r26 = 0x00000012
	goto l0001FE20
	// succ:  l0001FE20
l0001FE10_ds_f:
	r22 = r22 + 0x00000001
	goto l0001FE38
	// succ:  l0001FE38
l0001FE10_ds_t:
	r22 = r22 + 0x00000001
	goto l0001FE48
	// succ:  l0001FE48
l0001FE20:
	r3 = Mem0[r21:word32]
	r5 = r19
	r4 = r3 + 0xFFFFFFFF
	r18 = cond(r24 -u r4)
	branch Test(LT,r18) l0001FE10_ds_t
	goto l0001FE10_ds_f
	// succ:  l0001FE10_ds_f l0001FE10_ds_t
l0001FE38:
	r4 = Mem0[r21 + 4:word32]
	r6 = r4 + 0xFFFFFFFF
	r18 = cond(r24 -u r6)
	branch Test(GE,r18) l0001FE64
	// succ:  l0001FE48 l0001FE64
l0001FE48:
	r3 = Mem0[r19:word32]
	r4 = Mem0[r3:word32]
	r15 = 0x0001FE50
	Mem0[r3 + 20:word32] = r26
	call 0x0001FE50 + r4 (retsize: 0;)
	r3 = Mem0[r21:word32]
	r4 = Mem0[r21 + 4:word32]
	r7 = Mem0[r19 + 56:word32]
	// succ:  l0001FE64
l0001FE64:
	r6 = Mem0[r19 + 284:word32]
	r18 = cond(r6 - r3)
	branch Test(GE,r18) l0001FE64_ds_t
	// succ:  l0001FE64_ds_f l0001FE64_ds_t
l0001FE64_ds_f:
	r21 = r21 + 0x00000054
	goto l0001FE74
	// succ:  l0001FE74
l0001FE64_ds_t:
	r21 = r21 + 0x00000054
	goto l0001FE78
	// succ:  l0001FE78
l0001FE74:
	r6 = r3
	// succ:  l0001FE78
l0001FE78:
	r3 = Mem0[r19 + 288:word32]
	r18 = cond(r3 - r4)
	branch Test(GE,r18) l0001FE78_ds_t
	// succ:  l0001FE78_ds_f l0001FE78_ds_t
l0001FE78_ds_f:
	Mem0[r19 + 284:word32] = r6
	goto l0001FE88
	// succ:  l0001FE88
l0001FE78_ds_t:
	Mem0[r19 + 284:word32] = r6
	goto l0001FE8C
	// succ:  l0001FE8C
l0001FE88:
	r3 = r4
	// succ:  l0001FE8C
l0001FE8C:
	r18 = cond(r22 - r7)
	branch Test(LT,r18) l0001FE8C_ds_t
	// succ:  l0001FE8C_ds_f l0001FE8C_ds_t
l0001FE8C_ds_f:
	Mem0[r19 + 288:word32] = r3
	goto l0001FE98
	// succ:  l0001FE98
l0001FE8C_ds_t:
	Mem0[r19 + 288:word32] = r3
	goto l0001FE20
	// succ:  l0001FE20
l0001FE98:
	branch Test(LE,r7) l0001FE98_ds_t
	// succ:  l0001FE98_ds_f l0001FE98_ds_t
l0001FE98_ds_f:
	r22 = Mem0[r19 + 64:word32]
	goto l0001FEA0
	// succ:  l0001FEA0
l0001FE98_ds_t:
	r22 = Mem0[r19 + 64:word32]
	goto l000200B4
	// succ:  l000200B4
l0001FEA0:
	r22 = r22 + 0x00000004
	r27 = 0x00000000
	r26 = 0x00000008
	r24 = 0x00000001
	goto l0001FEB8
	// succ:  l0001FEB8
l0001FEB4:
	r6 = Mem0[r19 + 284:word32]
	// succ:  l0001FEB8
l0001FEB8:
	Mem0[r22:word32] = r27
	Mem0[r22 + 32:word32] = r26
	r5 = Mem0[r19 + 28:word32]
	r3 = r6 + r6
	r6 = Mem0[r22 + 4:word32]
	r3 = r3 + r3
	r15 = 0x0001FED4
	r21 = r3 + r3
	call fn0001E908 (retsize: 0;)
	r6 = r21
	r5 = r3
	r22 = r22 + 0x00000054
	r15 = 0x0001FEEC
	r27 = r27 + 0x00000001
	call fn0001CCF0 (retsize: 0;)
	Mem0[r22 - 60:word32] = r3
	r3 = Mem0[r19 + 288:word32]
	r6 = Mem0[r22 - 76:word32]
	r5 = Mem0[r19 + 32:word32]
	r3 = r3 + r3
	r3 = r3 + r3
	r15 = 0x0001FF10
	r21 = r3 + r3
	call fn0001E908 (retsize: 0;)
	r6 = r21
	r15 = 0x0001FF20
	r5 = r3
	call fn0001CCF0 (retsize: 0;)
	Mem0[r22 - 56:word32] = r3
	r6 = Mem0[r22 - 80:word32]
	r5 = Mem0[r19 + 28:word32]
	r15 = 0x0001FF38
	r21 = Mem0[r19 + 284:word32]
	call fn0001E908 (retsize: 0;)
	r6 = r21
	r15 = 0x0001FF48
	r5 = r3
	call fn0001CCF0 (retsize: 0;)
	Mem0[r22 - 48:word32] = r3
	r6 = Mem0[r22 - 76:word32]
	r5 = Mem0[r19 + 32:word32]
	r15 = 0x0001FF60
	r21 = Mem0[r19 + 288:word32]
	call fn0001E908 (retsize: 0;)
	r6 = r21
	r15 = 0x0001FF70
	r5 = r3
	call fn0001CCF0 (retsize: 0;)
	Mem0[r22 - 44:word32] = r3
	Mem0[r22 - 40:word32] = r24
	r3 = Mem0[r19 + 56:word32]
	r18 = cond(r27 - r3)
	branch Test(LT,r18) l0001FEB4
	// succ:  l0001FF8C l0001FEB4
l0001FF8C:
	r6 = Mem0[r19 + 288:word32]
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	// succ:  l0001FF9C
l0001FF9C:
	r15 = 0x0001FFA0
	r5 = Mem0[r19 + 32:word32]
	call fn0001CCF0 (retsize: 0;)
	r4 = Mem0[r19 + 216:word32]
	branch Test(EQ,r4) l0001FF9C_ds_t
	// succ:  l0001FF9C_ds_f l0001FF9C_ds_t
l0001FF9C_ds_f:
	Mem0[r19 + 292:word32] = r3
	goto l0001FFB4
	// succ:  l0001FFB4
l0001FF9C_ds_t:
	Mem0[r19 + 292:word32] = r3
	goto l0001FFEC
	// succ:  l0001FFEC
l0001FFB4:
	r15 = 0x0001FFB4
	r5 = r19
	call fn0001EEC8 (retsize: 0;)
	r3 = Mem0[r19 + 280:word32]
	branch Test(EQ,r3) l0001FFB4_ds_t
	// succ:  l0001FFB4_ds_f l0001FFB4_ds_t
l0001FFB4_ds_f:
	r4 = 0x00000001
	goto l0001FFC8
	// succ:  l0001FFC8
l0001FFB4_ds_t:
	r4 = 0x00000001
	goto l0001FFF8
	// succ:  l0001FFF8
l0001FFC8:
	branch Test(NE,r25) l0001FFC8_ds_t
	// succ:  l0001FFC8_ds_f l0001FFC8_ds_t
l0001FFC8_ds_f:
	Mem0[r19 + 228:word32] = r4
	goto l0001FFD0
	// succ:  l0001FFD0
l0001FFC8_ds_t:
	Mem0[r19 + 228:word32] = r4
	goto l00020064
	// succ:  l00020064
l0001FFD0:
	Mem0[r23 + 20:word32] = r25
	Mem0[r23 + 32:word32] = r25
	Mem0[r23 + 24:word32] = r25
	// succ:  l0001FFDC
l0001FFDC:
	r3 = Mem0[r19 + 212:word32]
	// succ:  l0001FFE0
l0001FFE0:
	r3 = r3 + r3
	Mem0[r23 + 28:word32] = r3
	goto l00020020
	// succ:  l00020020
l0001FFEC:
	r3 = 0x00000001
	Mem0[r19 + 280:word32] = r4
	Mem0[r19 + 212:word32] = r3
	// succ:  l0001FFF8
l0001FFF8:
	branch Test(EQ,r25) l0001FFF8_ds_t
	// succ:  l0001FFF8_ds_f l0001FFF8_ds_t
l0001FFF8_ds_f:
	r3 = Mem0[r19 + 228:word32]
	goto l00020000
	// succ:  l00020000
l0001FFF8_ds_t:
	r3 = Mem0[r19 + 228:word32]
	goto l0002004C
	// succ:  l0002004C
l00020000:
	branch Test(NE,r3) l00020000_ds_t
	// succ:  l00020000_ds_f l00020000_ds_t
l00020000_ds_f:
	r6 = 0x00000001
	goto l00020008
	// succ:  l00020008
l00020000_ds_t:
	r6 = 0x00000001
	goto l00020068
	// succ:  l00020068
l00020008:
	r4 = 0x00000002
	Mem0[r23 + 20:word32] = r4
	Mem0[r23 + 32:word32] = r3
	Mem0[r23 + 24:word32] = r3
	// succ:  l00020018
l00020018:
	r19 = Mem0[r19 + 212:word32]
	Mem0[r23 + 28:word32] = r19
	// succ:  l00020020
l00020020:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r1 = r1 + 0x0000003C
	return
	// succ:  fn0001FCE0_exit
l0002004C:
	Mem0[r23 + 20:word32] = r25
	Mem0[r23 + 32:word32] = r25
	branch Test(EQ,r3) l0002004C_ds_t
	// succ:  l0002004C_ds_f l0002004C_ds_t
l0002004C_ds_f:
	Mem0[r23 + 24:word32] = r25
	goto l0002005C
	// succ:  l0002005C
l0002004C_ds_t:
	Mem0[r23 + 24:word32] = r25
	goto l00020018
	// succ:  l00020018
l0002005C:
	r3 = Mem0[r19 + 212:word32]
	goto l0001FFE0
	// succ:  l0001FFE0
l00020064:
	r6 = 0x00000001
	// succ:  l00020068
l00020068:
	Mem0[r23 + 20:word32] = r6
	Mem0[r23 + 32:word32] = r0
	Mem0[r23 + 24:word32] = r0
	goto l0001FFDC
	// succ:  l0001FFDC
l00020078:
	r3 = Mem0[r19 + 28:word32]
	r18 = cond(r4 - r3)
	branch Test(GE,r18) l0001FDA0
	// succ:  l00020084 l0001FDA0
l00020084:
	r3 = Mem0[r19:word32]
	goto l0001FD80
	// succ:  l0001FD80
l0002008C:
	r4 = Mem0[r19 + 28:word32]
	branch Test(EQ,r4) l0001FD50
	// succ:  l00020094 l0001FD50
l00020094:
	r4 = Mem0[r19 + 56:word32]
	branch Test(LE,r4) l0001FD50
	// succ:  l0002009C l0001FD50
l0002009C:
	r4 = Mem0[r19 + 36:word32]
	branch Test(GT,r4) l0001FD6C
	// succ:  l000200A4 l0001FD6C
l000200A4:
	r3 = Mem0[r19:word32]
	goto l0001FD54
	// succ:  l0001FD54
l000200AC:
	r6 = 0x00000008
	goto l0001FF9C
	// succ:  l0001FF9C
l000200B4:
	r6 = r3 + r3
	r6 = r6 + r6
	r6 = r6 + r6
	goto l0001FF9C
	// succ:  l0001FF9C
fn0001FCE0_exit:


// fn000200C4
// Return size: 0
define fn000200C4
fn000200C4_entry:
	r1 = fp
	// succ:  l000200C4
l000200C4:
	r3 = Mem0[r5 + 24:word32]
	r4 = Mem0[r3:word32]
	r8 = r4 + 0x00000001
	Mem0[r3:word32] = r8
	v8 = SLICE(r6, byte, 0)
	Mem0[r4:byte] = v8
	r4 = Mem0[r3 + 4:word32]
	r4 = r4 + 0xFFFFFFFF
	branch Test(NE,r4) l000200C4_ds_t
	// succ:  l000200C4_ds_f l000200C4_ds_t
l000200C4_ds_f:
	Mem0[r3 + 4:word32] = r4
	goto l000200E8
	// succ:  l000200E8
l000200C4_ds_t:
	Mem0[r3 + 4:word32] = r4
	goto l0002012C
	// succ:  l0002012C
l000200E8:
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r3 = Mem0[r3 + 12:word32]
	r15 = 0x000200F8
	r19 = r5
	call 0x000200F8 + r3 (retsize: 0;)
	branch Test(NE,r3) l000200E8_ds_t
	// succ:  l000200E8_ds_f l000200E8_ds_t
l000200E8_ds_f:
	r4 = 0x00000018
	goto l00020108
	// succ:  l00020108
l000200E8_ds_t:
	r4 = 0x00000018
	goto l0002011C
	// succ:  l0002011C
l00020108:
	r3 = Mem0[r19:word32]
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x00020114
	r5 = r19
	call 0x00020114 + r3 (retsize: 0;)
l0002011C:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn000200C4_exit
l0002012C:
	return
	// succ:  fn000200C4_exit
fn000200C4_exit:


// fn00020134
// Return size: 0
define fn00020134
fn00020134_entry:
	r1 = fp
	// succ:  l00020134
l00020134:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1 + 28:word32] = r19
	r19 = r6
	Mem0[r1 + 32:word32] = r21
	r21 = r5
	r6 = r19
	r6 = r19 >> 1
	C = cond(r6)
	r6 = r6 >> 1
	C = cond(r6)
	r6 = r6 >> 1
	C = cond(r6)
	r6 = r6 >> 1
	C = cond(r6)
	r6 = r6 >> 1
	C = cond(r6)
	r6 = r6 >> 1
	C = cond(r6)
	r6 = r6 >> 1
	C = cond(r6)
	r6 = r6 >> 1
	C = cond(r6)
	Mem0[r1:word32] = r15
	r15 = 0x00020170
	r6 = r6 & 0x000000FF
	call fn000200C4 (retsize: 0;)
	r5 = r21
	r15 = 0x0002017C
	r6 = r19 & 0x000000FF
	call fn000200C4 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn00020134_exit
fn00020134_exit:


// fn00020198
// Return size: 0
define fn00020198
fn00020198_entry:
	r1 = fp
	// succ:  l00020198
l00020198:
	r3 = r6 + 0x00000011
	r1 = r1 + 0xFFFFFFCC
	r3 = r3 + r3
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	r3 = r3 + r3
	r24 = Mem0[r3 + r5:word32]
	r21 = r6
	branch Test(EQ,r24) l00020198_ds_t
	// succ:  l00020198_ds_f l00020198_ds_t
l00020198_ds_f:
	r22 = r5
	goto l000201D4
	// succ:  l000201D4
l00020198_ds_t:
	r22 = r5
	goto l000202F0
	// succ:  l000202F0
l000201D4:
	r3 = r24
	goto l000201D8
	// succ:  l000201D8
l000201D4_ds_f:
	r4 = r3 ^ r7
	goto l000201FC
	// succ:  l000201FC
l000201D4_ds_t:
	r4 = r3 ^ r7
	goto l00020200
	// succ:  l00020200
l000201D8:
	r7 = r24 + 0x00000100
	r23 = 0x00000000
	r6 = 0x000000FF
	r8 = 0x00000001
	// succ:  l000201E8
l000201E8:
	r5 = Mem0[r3:word32]
	r3 = r3 + 0x00000004
	r18 = cond(r6 -u r5)
	branch Test(GE,r18) l000201D4_ds_t
	goto l000201D4_ds_f
	// succ:  l000201D4_ds_f l000201D4_ds_t
l000201FC:
	r23 = r8
	// succ:  l00020200
l00020200:
	branch Test(NE,r4) l000201E8
	// succ:  l00020204 l000201E8
l00020204:
	r3 = Mem0[r24 + 256:word32]
	branch Test(EQ,r3) l00020204_ds_t
	// succ:  l00020204_ds_f l00020204_ds_t
l00020204_ds_f:
	r5 = r22
	goto l00020210
	// succ:  l00020210
l00020204_ds_t:
	r5 = r22
	goto l00020238
	// succ:  l00020238
l00020210:
	r3 = r23
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn00020198_exit
l00020238:
	r15 = 0x00020238
	r6 = 0x000000FF
	call fn000200C4 (retsize: 0;)
	r5 = r22
	r15 = 0x00020244
	r6 = 0x000000DB
	call fn000200C4 (retsize: 0;)
	branch Test(NE,r23) l00020238_ds_t
	// succ:  l00020238_ds_f l00020238_ds_t
l00020238_ds_f:
	r6 = 0x00000083
	goto l00020254
	// succ:  l00020254
l00020238_ds_t:
	r6 = 0x00000083
	goto l00020258
	// succ:  l00020258
l00020254:
	r6 = 0x00000043
	// succ:  l00020258
l00020258:
	r19 = 0x00007860
	r15 = 0x00020260
	r5 = r22
	call fn00020134 (retsize: 0;)
	r6 = r23 + r23
	r6 = r6 + r6
	r6 = r6 + r6
	r5 = r22
	r6 = r6 + r6
	r15 = 0x0002027C
	r6 = r6 + r21
	call fn000200C4 (retsize: 0;)
	r25 = r19 + 0x00000100
	goto l00020288
	// succ:  l00020288
l00020258_ds_f:
	r21 = Mem0[r3 + r24:word32]
	goto l000202A4
	// succ:  l000202A4
l00020258_ds_t:
	r21 = Mem0[r3 + r24:word32]
	goto l000202D4
	// succ:  l000202D4
l00020288:
	r3 = Mem0[r19:word32]
	r5 = r22
	r19 = r19 + 0x00000004
	r3 = r3 + r3
	r3 = r3 + r3
	branch Test(EQ,r23) l00020258_ds_t
	goto l00020258_ds_f
	// succ:  l00020258_ds_f l00020258_ds_t
l000202A4:
	r6 = r21
	r6 = r21 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r6 = r6 >>u 1
	C = cond(r6)
	r15 = 0x000202C8
	call fn000200C4 (retsize: 0;)
	r5 = r22
	// succ:  l000202D4
l000202D4:
	r15 = 0x000202D4
	r6 = r21 & 0x000000FF
	call fn000200C4 (retsize: 0;)
	r3 = r25 ^ r19
	branch Test(NE,r3) l000202D4_ds_t
	// succ:  l000202D4_ds_f l000202D4_ds_t
l000202D4_ds_f:
	r3 = 0x00000001
	goto l000202E8
	// succ:  l000202E8
l000202D4_ds_t:
	r3 = 0x00000001
	goto l00020288
	// succ:  l00020288
l000202E8:
	Mem0[r24 + 256:word32] = r3
	goto l00020210
	// succ:  l00020210
l000202F0:
	r3 = Mem0[r5:word32]
	r4 = 0x00000034
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x00020300
	Mem0[r3 + 24:word32] = r6
	call 0x00020300 + r4 (retsize: 0;)
	r3 = r24
	goto l000201D8
	// succ:  l000201D8
fn00020198_exit:


// fn00020310
// Return size: 0
define fn00020310
fn00020310_entry:
	r1 = fp
	// succ:  l00020310
l00020310:
	r1 = r1 + 0xFFFFFFCC
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 48:word32] = r25
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 44:word32] = r24
	r23 = r5
	branch Test(EQ,r7) l00020310_ds_t
	// succ:  l00020310_ds_f l00020310_ds_t
l00020310_ds_f:
	r25 = r6
	goto l0002033C
	// succ:  l0002033C
l00020310_ds_t:
	r25 = r6
	goto l00020384
	// succ:  l00020384
l0002033C:
	r3 = r6 + 0x00000019
	r3 = r3 + r3
	r3 = r3 + r3
	r24 = Mem0[r3 + r5:word32]
	branch Test(EQ,r24) l0002033C_ds_t
	// succ:  l0002033C_ds_f l0002033C_ds_t
l0002033C_ds_f:
	r25 = r6 + 0x00000010
	goto l00020354
	// succ:  l00020354
l0002033C_ds_t:
	r25 = r6 + 0x00000010
	goto l00020398
	// succ:  l00020398
l00020354:
	r22 = Mem0[r24 + 548:word32]
	branch Test(EQ,r22) l00020354_ds_t
	// succ:  l00020354_ds_f l00020354_ds_t
l00020354_ds_f:
	r5 = r23
	goto l00020360
	// succ:  l00020360
l00020354_ds_t:
	r5 = r23
	goto l000203C4
	// succ:  l000203C4
l00020360:
	r15 = Mem0[r1:word32]
	// succ:  l00020364
l00020364:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn00020310_exit
l00020384:
	r3 = r6 + 0x00000015
	r3 = r3 + r3
	r3 = r3 + r3
	r24 = Mem0[r3 + r5:word32]
	branch Test(NE,r24) l00020354
	// succ:  l00020398 l00020354
l00020398:
	r3 = Mem0[r23:word32]
	r4 = 0x00000032
	r5 = r23
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x000203AC
	Mem0[r3 + 24:word32] = r25
	call 0x000203AC + r4 (retsize: 0;)
	r22 = Mem0[r24 + 548:word32]
	branch Test(NE,r22) l00020398_ds_t
	// succ:  l00020398_ds_f l00020398_ds_t
l00020398_ds_f:
	r15 = Mem0[r1:word32]
	goto l000203C0
	// succ:  l000203C0
l00020398_ds_t:
	r15 = Mem0[r1:word32]
	goto l00020364
	// succ:  l00020364
l000203C0:
	r5 = r23
	// succ:  l000203C4
l000203C4:
	r6 = 0x000000FF
	r15 = 0x000203C8
	r19 = r24 + 0x00000002
	call fn000200C4 (retsize: 0;)
	r5 = r23
	r6 = 0x000000C4
	r15 = 0x000203D8
	r21 = r19
	call fn000200C4 (retsize: 0;)
	r5 = r24 + 0x00000022
	// succ:  l000203E4
l000203E4:
	v15 = Mem0[r21:word16]
	r3 = (word32) v15
	r21 = r21 + 0x00000002
	r4 = r21 ^ r5
	v16 = SLICE(r3, int16, 0)
	r3 = (int32) v16
	branch Test(NE,r4) l000203E4_ds_t
	// succ:  l000203E4_ds_f l000203E4_ds_t
l000203E4_ds_f:
	r22 = r22 + r3
	goto l000203FC
	// succ:  l000203FC
l000203E4_ds_t:
	r22 = r22 + r3
	goto l000203E4
	// succ:  l000203E4
l000203FC:
	r5 = r23
	r15 = 0x00020400
	r6 = r22 + 0x00000013
	call fn00020134 (retsize: 0;)
	r6 = r25
	r15 = 0x0002040C
	r5 = r23
	call fn000200C4 (retsize: 0;)
	// succ:  l00020414
l00020414:
	v17 = Mem0[r19:word16]
	r6 = (word32) v17
	r5 = r23
	r19 = r19 + 0x00000002
	r15 = 0x00020420
	v18 = SLICE(r6, int16, 0)
	r6 = (int32) v18
	call fn000200C4 (retsize: 0;)
	r3 = r19 ^ r21
	branch Test(NE,r3) l00020414
	// succ:  l00020430 l00020414
l00020430:
	branch Test(LE,r22) l00020430_ds_t
	// succ:  l00020430_ds_f l00020430_ds_t
l00020430_ds_f:
	r22 = r22 + 0x00000011
	goto l00020438
	// succ:  l00020438
l00020430_ds_t:
	r22 = r22 + 0x00000011
	goto l0002045C
	// succ:  l0002045C
l00020438:
	r22 = r22 + r22
	r22 = r24 + r22
	// succ:  l00020440
l00020440:
	v19 = Mem0[r19:word16]
	r6 = (word32) v19
	r5 = r23
	r19 = r19 + 0x00000002
	r15 = 0x0002044C
	v20 = SLICE(r6, int16, 0)
	r6 = (int32) v20
	call fn000200C4 (retsize: 0;)
	r3 = r19 ^ r22
	branch Test(NE,r3) l00020440
	// succ:  l0002045C l00020440
l0002045C:
	r3 = 0x00000001
	Mem0[r24 + 548:word32] = r3
	goto l00020360
	// succ:  l00020360
fn00020310_exit:


// fn00020468
// Return size: 0
define fn00020468
fn00020468_entry:
	r1 = fp
	// succ:  l00020468
l00020468:
	r1 = r1 + 0xFFFFFFD8
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	r19 = r5
	r21 = r6
	r6 = 0x000000FF
	Mem0[r1:word32] = r15
	r15 = 0x00020484
	Mem0[r1 + 36:word32] = r22
	call fn000200C4 (retsize: 0;)
	r6 = r21
	r15 = 0x00020490
	r5 = r19
	call fn000200C4 (retsize: 0;)
	r3 = Mem0[r19 + 56:word32]
	r5 = r19
	r6 = r3 + r3
	r6 = r6 + r3
	r15 = 0x000204A8
	r6 = r6 + 0x00000008
	call fn00020134 (retsize: 0;)
	r4 = Mem0[r19 + 32:word32]
	r3 = 0xFFFFFFFF
	r18 = cond(r3 - r4)
	branch Test(GE,r18) l00020590
	// succ:  l000204C4 l00020590
l000204C4:
	r3 = Mem0[r19:word32]
	goto l000204C8
	// succ:  l000204C8
l000204C4_ds_f:
	r21 = Mem0[r19 + 64:word32]
	goto l00020524
	// succ:  l00020524
l000204C4_ds_t:
	r21 = Mem0[r19 + 64:word32]
	goto l00020578
	// succ:  l00020578
l000204C8:
	r4 = 0x00000029
	Mem0[r3 + 20:word32] = r4
	r4 = 0xFFFFFFFF
	Mem0[r3 + 24:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x000204E0
	r5 = r19
	call 0x000204E0 + r3 (retsize: 0;)
	// succ:  l000204E8
l000204E8:
	r6 = Mem0[r19 + 52:word32]
	r15 = 0x000204EC
	r5 = r19
	call fn000200C4 (retsize: 0;)
	r6 = Mem0[r19 + 32:word32]
	r15 = 0x000204F8
	r5 = r19
	call fn00020134 (retsize: 0;)
	r6 = Mem0[r19 + 28:word32]
	r15 = 0x00020504
	r5 = r19
	call fn00020134 (retsize: 0;)
	r6 = Mem0[r19 + 56:word32]
	r15 = 0x00020510
	r5 = r19
	call fn000200C4 (retsize: 0;)
	r3 = Mem0[r19 + 56:word32]
	branch Test(LE,r3) l000204C4_ds_t
	goto l000204C4_ds_f
	// succ:  l000204C4_ds_f l000204C4_ds_t
l00020524:
	r22 = 0x00000000
	// succ:  l00020528
l00020528:
	r6 = Mem0[r21:word32]
	r5 = r19
	r21 = r21 + 0x00000054
	r15 = 0x00020534
	r22 = r22 + 0x00000001
	call fn000200C4 (retsize: 0;)
	r3 = Mem0[r21 - 76:word32]
	r6 = Mem0[r21 - 72:word32]
	r5 = r19
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r15 = 0x00020558
	r6 = r3 + r6
	call fn000200C4 (retsize: 0;)
	r6 = Mem0[r21 - 68:word32]
	r15 = 0x00020564
	r5 = r19
	call fn000200C4 (retsize: 0;)
	r3 = Mem0[r19 + 56:word32]
	r18 = cond(r22 - r3)
	branch Test(LT,r18) l00020528
	// succ:  l00020578 l00020528
l00020578:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r1 = r1 + 0x00000028
	return
	// succ:  fn00020468_exit
l00020590:
	r4 = Mem0[r19 + 28:word32]
	r18 = cond(r3 - r4)
	branch Test(GE,r18) l000204E8
	// succ:  l0002059C l000204E8
l0002059C:
	r3 = Mem0[r19:word32]
	goto l000204C8
	// succ:  l000204C8
fn00020468_exit:


// fn00020DBC
// Return size: 0
define fn00020DBC
fn00020DBC_entry:
	r1 = fp
	// succ:  l00020DBC
l00020DBC:
	r3 = Mem0[r5 + 4:word32]
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r3 = Mem0[r3:word32]
	r7 = 0x00000020
	r6 = 0x00000001
	r15 = 0x00020DD8
	r19 = r5
	call 0x00020DD8 + r3 (retsize: 0;)
	r4 = 0x000070CC
	Mem0[r19 + 400:word32] = r3
	Mem0[r3 + 28:word32] = r0
	Mem0[r3:word32] = r4
	r4 = 0x00006C24
	Mem0[r3 + 4:word32] = r4
	r4 = 0x00006DD8
	Mem0[r3 + 8:word32] = r4
	r4 = 0x00007310
	Mem0[r3 + 12:word32] = r4
	r4 = 0x00007344
	Mem0[r3 + 16:word32] = r4
	r4 = 0x0000702C
	Mem0[r3 + 20:word32] = r4
	r4 = 0x000070B0
	Mem0[r3 + 24:word32] = r4
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn00020DBC_exit
fn00020DBC_exit:


// fn0002225C
// Return size: 0
define fn0002225C
fn0002225C_entry:
	r1 = fp
	// succ:  l0002225C
l0002225C:
	r1 = r1 + 0xFFFFFAA8
	Mem0[r1 + 1320:word32] = r19
	Mem0[r1 + 1352:word32] = r28
	Mem0[r1:word32] = r15
	Mem0[r1 + 1324:word32] = r21
	Mem0[r1 + 1328:word32] = r22
	Mem0[r1 + 1332:word32] = r23
	Mem0[r1 + 1336:word32] = r24
	Mem0[r1 + 1340:word32] = r25
	Mem0[r1 + 1344:word32] = r26
	Mem0[r1 + 1348:word32] = r27
	Mem0[r1 + 1356:word32] = r29
	Mem0[r1 + 1360:word32] = r30
	Mem0[r1 + 1364:word32] = r31
	r3 = 0x00000003
	Mem0[r1 + 1376:word32] = r6
	r28 = r5
	r18 = cond(r3 -u r7)
	branch Test(GE,r18) l0002225C_ds_t
	// succ:  l0002225C_ds_f l0002225C_ds_t
l0002225C_ds_f:
	r19 = r8
	goto l000222AC
	// succ:  l000222AC
l0002225C_ds_t:
	r19 = r8
	goto l000222CC
	// succ:  l000222CC
l000222AC:
	r3 = Mem0[r5:word32]
	r4 = 0x00000032
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	Mem0[r3 + 24:word32] = r7
	r15 = 0x000222C0
	Mem0[r1 + 1316:word32] = r7
	call 0x000222C0 + r4 (retsize: 0;)
	r7 = Mem0[r1 + 1316:word32]
	// succ:  l000222CC
l000222CC:
	r4 = Mem0[r1 + 1376:word32]
	branch Test(EQ,r4) l000222CC_ds_t
	// succ:  l000222CC_ds_f l000222CC_ds_t
l000222CC_ds_f:
	r3 = r7 + 0x00000019
	goto l000222D8
	// succ:  l000222D8
l000222CC_ds_t:
	r3 = r7 + 0x00000019
	goto l000225B0
	// succ:  l000225B0
l000222D8:
	r3 = r7 + 0x00000015
	r3 = r3 + r3
	r3 = r3 + r3
	r22 = Mem0[r3 + r28:word32]
	branch Test(EQ,r22) l000225C0
	// succ:  l000222EC l000225C0
l000222EC:
	r23 = Mem0[r19:word32]
	branch Test(EQ,r23) l000225E8
	// succ:  l000222F4 l000225E8
l000222F4:
	r26 = 0x00000001
	goto l000222F8
	// succ:  l000222F8
l000222F4_ds_f:
	r3 = r19 + r29
	goto l00022318
	// succ:  l00022318
l000222F4_ds_t:
	r3 = r19 + r29
	goto l00022320
	// succ:  l00022320
l000222F8:
	r29 = 0x00000000
	r21 = 0x00000008
	r25 = 0x00000100
	r3 = r26 + r26
	// succ:  l00022308
l00022308:
	v23 = Mem0[r3 + r22:word16]
	r19 = (word32) v23
	v24 = SLICE(r19, int16, 0)
	r19 = (int32) v24
	branch Test(LT,r19) l000222F4_ds_t
	goto l000222F4_ds_f
	// succ:  l000222F4_ds_f l000222F4_ds_t
l00022318:
	r18 = cond(r25 - r3)
	branch Test(GE,r18) l00022334
	// succ:  l00022320 l00022334
l00022320:
	r3 = Mem0[r28:word32]
	r5 = r28
	r4 = Mem0[r3:word32]
	r15 = 0x0002232C
	Mem0[r3 + 20:word32] = r21
	call 0x0002232C + r4 (retsize: 0;)
l00022334:
	branch Test(EQ,r19) l00022334_ds_t
	// succ:  l00022334_ds_f l00022334_ds_t
l00022334_ds_f:
	r7 = r19 + 0xFFFFFFFF
	goto l0002233C
	// succ:  l0002233C
l00022334_ds_t:
	r7 = r19 + 0xFFFFFFFF
	goto l00022364
	// succ:  l00022364
l0002233C:
	r4 = r1 + 0x00000420
	v25 = SLICE(r26, int8, 0)
	r6 = (int32) v25
	r3 = 0x00000000
	r5 = r4 + r29
	// succ:  l0002234C
l0002234C:
	v26 = SLICE(r6, byte, 0)
	Mem0[r3 + r5:byte] = v26
	r3 = r3 + 0x00000001
	r4 = r3 ^ r19
	branch Test(NE,r4) l0002234C
	// succ:  l0002235C l0002234C
l0002235C:
	r29 = r29 + 0x00000001
	r29 = r7 + r29
	// succ:  l00022364
l00022364:
	r26 = r26 + 0x00000001
	r19 = r26 ^ 0x00000011
	branch Test(NE,r19) l00022364_ds_t
	// succ:  l00022364_ds_f l00022364_ds_t
l00022364_ds_f:
	r3 = r26 + r26
	goto l00022374
	// succ:  l00022374
l00022364_ds_t:
	r3 = r26 + r26
	goto l00022308
	// succ:  l00022308
l00022374:
	r4 = r1 + 0x0000001C
	r3 = r4 + r29
	v27 = SLICE(r19, byte, 0)
	Mem0[r3 + 1028:byte] = v27
	v28 = Mem0[r1 + 1056:byte]
	r26 = (word32) v28
	v29 = SLICE(r26, int8, 0)
	r26 = (int32) v29
	branch Test(EQ,r26) l00022374_ds_t
	// succ:  l00022374_ds_f l00022374_ds_t
l00022374_ds_f:
	r30 = r26
	goto l00022390
	// succ:  l00022390
l00022374_ds_t:
	r30 = r26
	goto l00022420
	// succ:  l00022420
l00022390:
	r21 = r26
	r25 = r19
	r24 = 0x00000001
	r27 = 0x00000008
	r31 = r1 + 0x00000420
	goto l000223A4
	// succ:  l000223A4
l00022390_ds_f:
	r3 = r25 + r25
	goto l000223B0
	// succ:  l000223B0
l00022390_ds_t:
	r3 = r25 + r25
	goto l00022580
	// succ:  l00022580
l000223A4:
	r3 = r21 ^ r30
	branch Test(NE,r3) l00022390_ds_t
	goto l00022390_ds_f
	// succ:  l00022390_ds_f l00022390_ds_t
l000223B0:
	r3 = r3 + r3
	r4 = r1 + 0x0000001C
	r3 = r4 + r3
	// succ:  l000223BC
l000223BC:
	r25 = r25 + 0x00000001
	v30 = Mem0[r25 + r31:byte]
	r21 = (word32) v30
	Mem0[r3:word32] = r19
	r19 = r19 + 0x00000001
	v31 = SLICE(r21, int8, 0)
	r21 = (int32) v31
	r4 = r21 ^ r30
	branch Test(EQ,r4) l000223BC_ds_t
	// succ:  l000223BC_ds_f l000223BC_ds_t
l000223BC_ds_f:
	r3 = r3 + 0x00000004
	goto l000223DC
	// succ:  l000223DC
l000223BC_ds_t:
	r3 = r3 + 0x00000004
	goto l000223BC
	// succ:  l000223BC
l000223DC:
	r18 = r30 & 0x0000001F
	r3 = r24
	branch Test(EQ,r18) l000223DC_ds_t
	// succ:  l000223DC_ds_f l000223DC_ds_t
l000223DC_ds_f:
	r3 = r3
	goto l000223EC
	// succ:  l000223EC
l000223DC_ds_t:
	r3 = r3
	goto l000223F8
	// succ:  l000223F8
l000223EC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000223EC_ds_t
	// succ:  l000223EC_ds_f l000223EC_ds_t
l000223EC_ds_f:
	r3 = r3 + r3
	goto l000223F8
	// succ:  l000223F8
l000223EC_ds_t:
	r3 = r3 + r3
	goto l000223EC
	// succ:  l000223EC
l000223F8:
	r18 = cond(r19 - r3)
	branch Test(LT,r18) l00022414
	// succ:  l00022400 l00022414
l00022400:
	r3 = Mem0[r28:word32]
	r5 = r28
	r4 = Mem0[r3:word32]
	r15 = 0x0002240C
	Mem0[r3 + 20:word32] = r27
	call 0x0002240C + r4 (retsize: 0;)
l00022414:
	r19 = r19 + r19
	branch Test(NE,r21) l00022414_ds_t
	// succ:  l00022414_ds_f l00022414_ds_t
l00022414_ds_f:
	r30 = r30 + 0x00000001
	goto l00022420
	// succ:  l00022420
l00022414_ds_t:
	r30 = r30 + 0x00000001
	goto l000223A4
	// succ:  l000223A4
l00022420:
	r7 = 0x00000100
	r6 = 0x00000000
	r15 = 0x0002242C
	r5 = r23 + 0x00000400
	call fn0001F63C (retsize: 0;)
	r4 = Mem0[r1 + 1376:word32]
	branch Test(EQ,r4) l00022420_ds_t
	// succ:  l00022420_ds_f l00022420_ds_t
l00022420_ds_f:
	r21 = 0x000000FF
	goto l00022440
	// succ:  l00022440
l00022420_ds_t:
	r21 = 0x000000FF
	goto l00022444
	// succ:  l00022444
l00022440:
	r21 = 0x0000000F
	// succ:  l00022444
l00022444:
	branch Test(EQ,r29) l00022444_ds_t
	// succ:  l00022444_ds_f l00022444_ds_t
l00022444_ds_f:
	r24 = r1 + 0x0000001C
	goto l0002244C
	// succ:  l0002244C
l00022444_ds_t:
	r24 = r1 + 0x0000001C
	goto l00022544
	// succ:  l00022544
l0002244C:
	r22 = r22 + 0x00000022
	r27 = 0x00000000
	r25 = 0x00000008
	r31 = r1 + 0x00000420
	goto l00022468
	// succ:  l00022468
l00022460:
	v37 = Mem0[r31 + r27:byte]
	r26 = (word32) v37
	v38 = SLICE(r26, int8, 0)
	r26 = (int32) v38
	// succ:  l00022468
l00022468:
	v32 = Mem0[r22:word16]
	r19 = (word32) v32
	v33 = SLICE(r19, int16, 0)
	r19 = (int32) v33
	r3 = r19
	r3 = r19 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	r3 = r3 >>u 1
	C = cond(r3)
	branch Test(NE,r3) l00022468_ds_t
	// succ:  l00022468_ds_f l00022468_ds_t
l00022468_ds_f:
	r30 = r23 + r19
	goto l000224F8
	// succ:  l000224F8
l00022468_ds_t:
	r30 = r23 + r19
	goto l00022508
	// succ:  l00022508
l000224F8:
	r18 = cond(r21 - r19)
	branch Test(LT,r18) l00022508
	// succ:  l00022500 l00022508
l00022500:
	v35 = Mem0[r30 + 1024:byte]
	r3 = (word32) v35
	branch Test(EQ,r3) l0002251C
	// succ:  l00022508 l0002251C
l00022508:
	r3 = Mem0[r28:word32]
	r5 = r28
	r4 = Mem0[r3:word32]
	r15 = 0x00022514
	Mem0[r3 + 20:word32] = r25
	call 0x00022514 + r4 (retsize: 0;)
l0002251C:
	r3 = Mem0[r24:word32]
	r19 = r19 + r19
	r19 = r19 + r19
	Mem0[r19 + r23:word32] = r3
	r27 = r27 + 0x00000001
	v36 = SLICE(r26, byte, 0)
	Mem0[r30 + 1024:byte] = v36
	r3 = r27 ^ r29
	r22 = r22 + 0x00000002
	branch Test(NE,r3) l0002251C_ds_t
	// succ:  l0002251C_ds_f l0002251C_ds_t
l0002251C_ds_f:
	r24 = r24 + 0x00000004
	goto l00022544
	// succ:  l00022544
l0002251C_ds_t:
	r24 = r24 + 0x00000004
	goto l00022460
	// succ:  l00022460
l00022544:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 1320:word32]
	r21 = Mem0[r1 + 1324:word32]
	r22 = Mem0[r1 + 1328:word32]
	r23 = Mem0[r1 + 1332:word32]
	r24 = Mem0[r1 + 1336:word32]
	r25 = Mem0[r1 + 1340:word32]
	r26 = Mem0[r1 + 1344:word32]
	r27 = Mem0[r1 + 1348:word32]
	r28 = Mem0[r1 + 1352:word32]
	r29 = Mem0[r1 + 1356:word32]
	r30 = Mem0[r1 + 1360:word32]
	r31 = Mem0[r1 + 1364:word32]
	r1 = r1 + 0x00000558
	return
	// succ:  fn0002225C_exit
l00022580:
	r18 = r30 & 0x0000001F
	r3 = r24
	branch Test(EQ,r18) l00022580_ds_t
	// succ:  l00022580_ds_f l00022580_ds_t
l00022580_ds_f:
	r3 = r3
	goto l00022590
	// succ:  l00022590
l00022580_ds_t:
	r3 = r3
	goto l0002259C
	// succ:  l0002259C
l00022590:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00022590_ds_t
	// succ:  l00022590_ds_f l00022590_ds_t
l00022590_ds_f:
	r3 = r3 + r3
	goto l0002259C
	// succ:  l0002259C
l00022590_ds_t:
	r3 = r3 + r3
	goto l00022590
	// succ:  l00022590
l0002259C:
	r18 = cond(r19 - r3)
	branch Test(GE,r18) l00022400
	// succ:  l000225A4 l00022400
l000225A4:
	r19 = r19 + r19
	r30 = r30 + 0x00000001
	goto l000223A4
	// succ:  l000223A4
l000225B0:
	r3 = r3 + r3
	r3 = r3 + r3
	r22 = Mem0[r3 + r28:word32]
	branch Test(NE,r22) l000222EC
	// succ:  l000225C0 l000222EC
l000225C0:
	r3 = Mem0[r28:word32]
	r4 = 0x00000032
	r5 = r28
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x000225D4
	Mem0[r3 + 24:word32] = r7
	call 0x000225D4 + r4 (retsize: 0;)
	r23 = Mem0[r19:word32]
	branch Test(NE,r23) l000225C0_ds_t
	// succ:  l000225C0_ds_f l000225C0_ds_t
l000225C0_ds_f:
	r26 = 0x00000001
	goto l000225E8
	// succ:  l000225E8
l000225C0_ds_t:
	r26 = 0x00000001
	goto l000222F8
	// succ:  l000222F8
l000225E8:
	r3 = Mem0[r28 + 4:word32]
	r5 = r28
	r7 = 0x00000500
	r3 = Mem0[r3:word32]
	r15 = 0x000225F8
	r6 = 0x00000001
	call 0x000225F8 + r3 (retsize: 0;)
	r23 = r3
	Mem0[r19:word32] = r3
	goto l000222F4
	// succ:  l000222F4
fn0002225C_exit:


// fn0002283C
// Return size: 0
define fn0002283C
fn0002283C_entry:
	r1 = fp
	// succ:  l0002283C
l0002283C:
	r1 = r1 + 0xFFFFF770
	Mem0[r1 + 2168:word32] = r23
	r23 = r1 + 0x00000824
	Mem0[r1 + 2172:word32] = r24
	r24 = r5
	r5 = r23
	Mem0[r1 + 2152:word32] = r19
	Mem0[r1 + 2176:word32] = r25
	r19 = r6
	r25 = r7
	r6 = 0x00000000
	r7 = 0x00000042
	Mem0[r1:word32] = r15
	Mem0[r1 + 2156:word32] = r20
	Mem0[r1 + 2160:word32] = r21
	Mem0[r1 + 2164:word32] = r22
	Mem0[r1 + 2180:word32] = r26
	Mem0[r1 + 2184:word32] = r27
	Mem0[r1 + 2188:word32] = r28
	r15 = 0x0002288C
	r21 = r1 + 0x00000420
	call fn0001F63C (retsize: 0;)
	r5 = r21
	r7 = 0x00000404
	r15 = 0x000228A0
	r6 = 0x00000000
	call fn0001F63C (retsize: 0;)
	r22 = r1 + 0x0000001C
	r3 = r22
	r4 = 0xFFFFFFFF
	// succ:  l000228B4
l000228B4:
	Mem0[r3:word32] = r4
	r3 = r3 + 0x00000004
	r11 = r21 ^ r3
	branch Test(NE,r11) l000228B4_ds_t
	// succ:  l000228B4_ds_f l000228B4_ds_t
l000228B4_ds_f:
	r12 = 0xFFFFFFFF
	goto l000228C8
	// succ:  l000228C8
l000228B4_ds_t:
	r12 = 0xFFFFFFFF
	goto l000228B4
	// succ:  l000228B4
l000228C8:
	r3 = 0x00000001
	r20 = 0xFFFFCA00
	r10 = r3
	Mem0[r25 + 1024:word32] = r3
	goto l000228DC
	// succ:  l000228DC
l000228C8_ds_f:
	r6 = r6 + 0x00000004
	goto l00022904
	// succ:  l00022904
l000228C8_ds_t:
	r6 = r6 + 0x00000004
	goto l00022914
	// succ:  l00022914
l000228DC:
	r8 = r25
	// succ:  l000228E0
l000228E0:
	r6 = r25
	r7 = r20
	r9 = r12
	r5 = 0x00000000
	// succ:  l000228F0
l000228F0:
	r3 = Mem0[r6:word32]
	r4 = -r3
	r4 = r4 | r3
	branch Test(GE,r4) l000228C8_ds_t
	goto l000228C8_ds_f
	// succ:  l000228C8_ds_f l000228C8_ds_t
l00022904:
	r18 = cond(r7 - r3)
	branch Test(LT,r18) l00022914
	// succ:  l0002290C l00022914
l0002290C:
	r9 = r5
	r7 = r3
	// succ:  l00022914
l00022914:
	r5 = r5 + 0x00000001
	r3 = r5 ^ 0x00000101
	branch Test(NE,r3) l00022914_ds_t
	// succ:  l00022914_ds_f l00022914_ds_t
l00022914_ds_f:
	r26 = r20
	goto l00022924
	// succ:  l00022924
l00022914_ds_t:
	r26 = r20
	goto l000228F0
	// succ:  l000228F0
l00022924:
	r27 = r12
	goto l00022928
	// succ:  l00022928
l00022924_ds_f:
	r28 = r10
	goto l000229CC
	// succ:  l000229CC
l00022924_ds_t:
	r28 = r10
	goto l000229D0
	// succ:  l000229D0
l00022928:
	r4 = Mem0[r8:word32]
	r5 = r9 ^ r3
	r6 = -r5
	r7 = -r4
	r7 = r7 | r4
	r6 = r6 | r5
	r5 = r7
	r5 = r7 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r5 = r5 >>u 1
	C = cond(r5)
	r18 = cond(r26 - r4)
	branch Test(GE,r18) l00022924_ds_t
	goto l00022924_ds_f
	// succ:  l00022924_ds_f l00022924_ds_t
l000229CC:
	r28 = r11
	// succ:  l000229D0
l000229D0:
	r7 = r6
	r7 = r6 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r7 = r7 >>u 1
	C = cond(r7)
	r5 = r5 & r28
	branch Test(EQ,r5) l00022A64
	// succ:  l00022A58 l00022A64
l00022A58:
	branch Test(EQ,r7) l00022A64
	// succ:  l00022A5C l00022A64
l00022A5C:
	r27 = r3
	r26 = r4
	// succ:  l00022A64
l00022A64:
	r3 = r3 + 0x00000001
	r4 = r3 ^ 0x00000101
	branch Test(NE,r4) l00022A64_ds_t
	// succ:  l00022A64_ds_f l00022A64_ds_t
l00022A64_ds_f:
	r8 = r8 + 0x00000004
	goto l00022A74
	// succ:  l00022A74
l00022A64_ds_t:
	r8 = r8 + 0x00000004
	goto l00022928
	// succ:  l00022928
l00022A74:
	branch Test(LT,r27) l00022A74_ds_t
	// succ:  l00022A74_ds_f l00022A74_ds_t
l00022A74_ds_f:
	r9 = r9 + r9
	goto l00022A7C
	// succ:  l00022A7C
l00022A74_ds_t:
	r9 = r9 + r9
	goto l00022B2C
	// succ:  l00022B2C
l00022A7C:
	r8 = r27 + r27
	r3 = r9 + r9
	r28 = r8 + r8
	r7 = Mem0[r3 + r25:word32]
	r5 = Mem0[r28 + r25:word32]
	r26 = r22 + r3
	r6 = Mem0[r26 + 1028:word32]
	r7 = r7 + r5
	r5 = Mem0[r3 + r22:word32]
	Mem0[r3 + r25:word32] = r7
	r3 = r6 + 0x00000001
	Mem0[r28 + r25:word32] = r4
	branch Test(LT,r5) l00022A7C_ds_t
	// succ:  l00022A7C_ds_f l00022A7C_ds_t
l00022A7C_ds_f:
	Mem0[r26 + 1028:word32] = r3
	goto l00022AB4
	// succ:  l00022AB4
l00022A7C_ds_t:
	Mem0[r26 + 1028:word32] = r3
	goto l00022B24
	// succ:  l00022B24
l00022AB4:
	r3 = r5 + r5
	r5 = r3 + r3
	r7 = r22 + r5
	r4 = Mem0[r7 + 1028:word32]
	r6 = Mem0[r5 + r22:word32]
	r4 = r4 + 0x00000001
	Mem0[r7 + 1028:word32] = r4
	branch Test(GE,r6) l00022AB4_ds_t
	// succ:  l00022AB4_ds_f l00022AB4_ds_t
l00022AB4_ds_f:
	r5 = r6
	goto l00022AD8
	// succ:  l00022AD8
l00022AB4_ds_t:
	r5 = r6
	goto l00022AB4
	// succ:  l00022AB4
l00022AD8:
	r8 = r8 + r8
	r5 = r22 + r8
	r4 = Mem0[r5 + 1028:word32]
	r3 = r3 + r3
	Mem0[r3 + r22:word32] = r27
	r3 = Mem0[r8 + r22:word32]
	r4 = r4 + 0x00000001
	branch Test(LT,r3) l00022AD8_ds_t
	// succ:  l00022AD8_ds_f l00022AD8_ds_t
l00022AD8_ds_f:
	Mem0[r5 + 1028:word32] = r4
	goto l00022AFC
	// succ:  l00022AFC
l00022AD8_ds_t:
	Mem0[r5 + 1028:word32] = r4
	goto l000228DC
	// succ:  l000228DC
l00022AFC:
	r3 = r3 + r3
	r3 = r3 + r3
	r5 = r22 + r3
	r4 = Mem0[r5 + 1028:word32]
	r3 = Mem0[r3 + r22:word32]
	r4 = r4 + 0x00000001
	branch Test(GE,r3) l00022AFC_ds_t
	// succ:  l00022AFC_ds_f l00022AFC_ds_t
l00022AFC_ds_f:
	Mem0[r5 + 1028:word32] = r4
	goto l00022B1C
	// succ:  l00022B1C
l00022AFC_ds_t:
	Mem0[r5 + 1028:word32] = r4
	goto l00022AFC
	// succ:  l00022AFC
l00022B1C:
	r8 = r25
	goto l000228E0
	// succ:  l000228E0
l00022B24:
	r3 = r9
	goto l00022AD8
	// succ:  l00022AD8
l00022B2C:
	r26 = r21
	r28 = 0x00000020
	r27 = 0x00000027
	goto l00022B38
	// succ:  l00022B38
l00022B2C_ds_f:
	r26 = r26 + 0x00000004
	goto l00022B44
	// succ:  l00022B44
l00022B2C_ds_t:
	r26 = r26 + 0x00000004
	goto l00022B74
	// succ:  l00022B74
l00022B38:
	r25 = Mem0[r26:word32]
	branch Test(EQ,r25) l00022B2C_ds_t
	goto l00022B2C_ds_f
	// succ:  l00022B2C_ds_f l00022B2C_ds_t
l00022B44:
	r18 = cond(r28 - r25)
	branch Test(GE,r18) l00022B44_ds_t
	// succ:  l00022B44_ds_f l00022B44_ds_t
l00022B44_ds_f:
	r5 = r24
	goto l00022B50
	// succ:  l00022B50
l00022B44_ds_t:
	r5 = r24
	goto l00022B60
	// succ:  l00022B60
l00022B50:
	r3 = Mem0[r24:word32]
	r4 = Mem0[r3:word32]
	r15 = 0x00022B58
	Mem0[r3 + 20:word32] = r27
	call 0x00022B58 + r4 (retsize: 0;)
l00022B60:
	r25 = r25 + r25
	r3 = r22 + r25
	v29 = Mem0[r3 + 2056:word16]
	r4 = (word32) v29
	r4 = r4 + 0x00000001
	v30 = SLICE(r4, word16, 0)
	Mem0[r3 + 2056:word16] = v30
	// succ:  l00022B74
l00022B74:
	r3 = r23 ^ r26
	branch Test(NE,r3) l00022B74_ds_t
	// succ:  l00022B74_ds_f l00022B74_ds_t
l00022B74_ds_f:
	r8 = r1 + 0x00000860
	goto l00022B80
	// succ:  l00022B80
l00022B74_ds_t:
	r8 = r1 + 0x00000860
	goto l00022B38
	// succ:  l00022B38
l00022B80:
	r9 = r1 + 0x0000085E
	r11 = 0x00000020
	goto l00022B88
	// succ:  l00022B88
l00022B80_ds_f:
	r10 = r11 + 0xFFFFFFFF
	goto l00022B9C
	// succ:  l00022B9C
l00022B80_ds_t:
	r10 = r11 + 0xFFFFFFFF
	goto l00022C0C
	// succ:  l00022C0C
l00022B88:
	v26 = Mem0[r8 + 4:word16]
	r7 = (word32) v26
	r11 = r11 + 0xFFFFFFFF
	v27 = SLICE(r7, int16, 0)
	r7 = (int32) v27
	branch Test(LE,r7) l00022B80_ds_t
	goto l00022B80_ds_f
	// succ:  l00022B80_ds_f l00022B80_ds_t
l00022B9C:
	v28 = Mem0[r8:word16]
	r3 = (word32) v28
	branch Test(NE,r3) l00022B9C_ds_t
	// succ:  l00022B9C_ds_f l00022B9C_ds_t
l00022B9C_ds_f:
	r4 = r9
	goto l00022BA8
	// succ:  l00022BA8
l00022B9C_ds_t:
	r4 = r9
	goto l00022CE4
	// succ:  l00022CE4
l00022BA8:
	r3 = r10
	goto l00022BB4
	// succ:  l00022BB4
l00022BB0:
	r3 = r5
	// succ:  l00022BB4
l00022BB4:
	r4 = r4 + 0xFFFFFFFE
	v31 = Mem0[r4 + 2:word16]
	r6 = (word32) v31
	branch Test(EQ,r6) l00022BB4_ds_t
	// succ:  l00022BB4_ds_f l00022BB4_ds_t
l00022BB4_ds_f:
	r5 = r3 + 0xFFFFFFFF
	goto l00022BC4
	// succ:  l00022BC4
l00022BB4_ds_t:
	r5 = r3 + 0xFFFFFFFF
	goto l00022BB0
	// succ:  l00022BB0
l00022BC4:
	v32 = Mem0[r8 + 2:word16]
	r4 = (word32) v32
	r7 = r7 + 0xFFFFFFFE
	r3 = r3 + r3
	r4 = r4 + 0x00000001
	v33 = SLICE(r7, word16, 0)
	Mem0[r8 + 4:word16] = v33
	v34 = SLICE(r4, word16, 0)
	Mem0[r8 + 2:word16] = v34
	r3 = r22 + r3
	v35 = Mem0[r3 + 2056:word16]
	r4 = (word32) v35
	r5 = r5 + r5
	r5 = r22 + r5
	r4 = r4 + 0x00000002
	v36 = SLICE(r4, word16, 0)
	Mem0[r3 + 2056:word16] = v36
	v37 = Mem0[r5 + 2056:word16]
	r3 = (word32) v37
	r3 = r3 + 0xFFFFFFFF
	v38 = SLICE(r3, word16, 0)
	Mem0[r5 + 2056:word16] = v38
	v39 = Mem0[r8 + 4:word16]
	r7 = (word32) v39
	v40 = SLICE(r7, int16, 0)
	r7 = (int32) v40
	branch Test(GT,r7) l00022B9C
	// succ:  l00022C0C l00022B9C
l00022C0C:
	r3 = r11 ^ 0x00000010
	r8 = r8 + 0xFFFFFFFE
	branch Test(NE,r3) l00022C0C_ds_t
	// succ:  l00022C0C_ds_f l00022C0C_ds_t
l00022C0C_ds_f:
	r9 = r9 + 0xFFFFFFFE
	goto l00022C1C
	// succ:  l00022C1C
l00022C0C_ds_t:
	r9 = r9 + 0xFFFFFFFE
	goto l00022B88
	// succ:  l00022B88
l00022C1C:
	v41 = Mem0[r1 + 2116:word16]
	r3 = (word32) v41
	v42 = SLICE(r3, int16, 0)
	r3 = (int32) v42
	branch Test(NE,r3) l00022C1C_ds_t
	// succ:  l00022C1C_ds_f l00022C1C_ds_t
l00022C1C_ds_f:
	r4 = 0x00000020
	goto l00022C2C
	// succ:  l00022C2C
l00022C1C_ds_t:
	r4 = 0x00000020
	goto l00022C44
	// succ:  l00022C44
l00022C2C:
	r11 = r11 + 0xFFFFFFFF
	// succ:  l00022C30
l00022C30:
	r4 = r11 + r11
	v43 = Mem0[r4 + r23:word16]
	r3 = (word32) v43
	v44 = SLICE(r3, int16, 0)
	r3 = (int32) v44
	branch Test(EQ,r3) l00022C30_ds_t
	// succ:  l00022C30_ds_f l00022C30_ds_t
l00022C30_ds_f:
	r11 = r11 + 0xFFFFFFFF
	goto l00022C44
	// succ:  l00022C44
l00022C30_ds_t:
	r11 = r11 + 0xFFFFFFFF
	goto l00022C30
	// succ:  l00022C30
l00022C44:
	r6 = r23
	r5 = r19
	r22 = r22 + r4
	r3 = r3 + 0xFFFFFFFF
	r7 = 0x00000022
	r15 = 0x00022C5C
	v45 = SLICE(r3, word16, 0)
	Mem0[r22 + 2056:word16] = v45
	call fn0001F60C (retsize: 0;)
	r6 = 0x00000001
	r7 = 0x00000000
	goto l00022C6C
	// succ:  l00022C6C
l00022C44_ds_f:
	r5 = r5 + 0x00000004
	goto l00022C84
	// succ:  l00022C84
l00022C44_ds_t:
	r5 = r5 + 0x00000004
	goto l00022C98
	// succ:  l00022C98
l00022C6C:
	r5 = r21
	r4 = 0x00000000
	// succ:  l00022C74
l00022C74:
	r3 = Mem0[r5:word32]
	r3 = r3 ^ r6
	branch Test(NE,r3) l00022C44_ds_t
	goto l00022C44_ds_f
	// succ:  l00022C44_ds_f l00022C44_ds_t
l00022C84:
	r3 = r7 + 0x00000010
	r3 = r3 + r3
	r3 = r19 + r3
	v46 = SLICE(r4, word16, 0)
	Mem0[r3 + 2:word16] = v46
	r7 = r7 + 0x00000001
	// succ:  l00022C98
l00022C98:
	r4 = r4 + 0x00000001
	r3 = r4 ^ 0x00000100
	branch Test(NE,r3) l00022C74
	// succ:  l00022CA4 l00022C74
l00022CA4:
	r6 = r6 + 0x00000001
	r3 = r6 ^ 0x00000021
	branch Test(NE,r3) l00022C6C
	// succ:  l00022CB0 l00022C6C
l00022CB0:
	Mem0[r19 + 548:word32] = r3
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 2152:word32]
	r21 = Mem0[r1 + 2160:word32]
	r22 = Mem0[r1 + 2164:word32]
	r23 = Mem0[r1 + 2168:word32]
	r24 = Mem0[r1 + 2172:word32]
	r25 = Mem0[r1 + 2176:word32]
	r26 = Mem0[r1 + 2180:word32]
	r27 = Mem0[r1 + 2184:word32]
	r28 = Mem0[r1 + 2188:word32]
	r1 = r1 + 0x00000890
	return
	// succ:  fn0002283C_exit
l00022CE4:
	r3 = r11
	r5 = r10
	goto l00022BC4
	// succ:  l00022BC4
fn0002283C_exit:


// fn00022E6C
// Return size: 0
define fn00022E6C
fn00022E6C_entry:
	r1 = fp
	// succ:  l00022E6C
l00022E6C:
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r3 = Mem0[r5 + 4:word32]
	r7 = 0x0000006C
	r6 = 0x00000001
	r3 = Mem0[r3:word32]
	r15 = 0x00022E88
	r19 = r5
	call 0x00022E88 + r3 (retsize: 0;)
	r4 = 0xFFFF8C8C
	Mem0[r19 + 416:word32] = r3
	Mem0[r3:word32] = r4
	r4 = r3 + 0x0000002C
	r3 = r3 + 0x0000003C
	// succ:  l00022EA8
l00022EA8:
	Mem0[r4 + 16:word32] = r0
	Mem0[r4:word32] = r0
	Mem0[r4 + 48:word32] = r0
	Mem0[r4 + 32:word32] = r0
	r4 = r4 + 0x00000004
	r5 = r4 ^ r3
	branch Test(NE,r5) l00022EA8_ds_t
	// succ:  l00022EA8_ds_f l00022EA8_ds_t
l00022EA8_ds_f:
	r15 = Mem0[r1:word32]
	goto l00022EC8
	// succ:  l00022EC8
l00022EA8_ds_t:
	r15 = Mem0[r1:word32]
	goto l00022EA8
	// succ:  l00022EA8
l00022EC8:
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn00022E6C_exit
fn00022E6C_exit:


// fn00022ED4
// Return size: 0
define fn00022ED4
fn00022ED4_entry:
	r1 = fp
	// succ:  l00022ED4
l00022ED4:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r21
	r19 = r5
	r5 = Mem0[r5 + 32:word32]
	r21 = Mem0[r5 + 24:word32]
	r3 = Mem0[r21 + 12:word32]
	r15 = 0x00022EF4
	call 0x00022EF4 + r3 (retsize: 0;)
	branch Test(NE,r3) l00022ED4_ds_t
	// succ:  l00022ED4_ds_f l00022ED4_ds_t
l00022ED4_ds_f:
	r4 = 0x00000018
	goto l00022F04
	// succ:  l00022F04
l00022ED4_ds_t:
	r4 = 0x00000018
	goto l00022F1C
	// succ:  l00022F1C
l00022F04:
	r5 = Mem0[r19 + 32:word32]
	r3 = Mem0[r5:word32]
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x00022F14
	call 0x00022F14 + r3 (retsize: 0;)
l00022F1C:
	r3 = Mem0[r21:word32]
	r21 = Mem0[r21 + 4:word32]
	Mem0[r19 + 16:word32] = r3
	Mem0[r19 + 20:word32] = r21
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn00022ED4_exit
fn00022ED4_exit:


// fn000231F4
// Return size: 0
define fn000231F4
fn000231F4_entry:
	r1 = fp
	// succ:  l000231F4
l000231F4:
	branch Test(EQ,r7) l000233A8
	// succ:  l000231F8 l000233A8
l000231F8:
	r1 = r1 + 0xFFFFFFC4
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 52:word32] = r26
	r24 = r5
	r26 = r6
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 56:word32] = r27
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 48:word32] = r25
	r22 = r6 + r7
	r27 = 0x00000007
	goto l00023230
	// succ:  l00023230
l000231F8_ds_f:
	r6 = 0x00000018
	goto l0002323C
	// succ:  l0002323C
l000231F8_ds_t:
	r6 = 0x00000018
	goto l00023370
	// succ:  l00023370
l00023230:
	r3 = Mem0[r24 + 12:word32]
	branch Test(NE,r3) l000231F8_ds_t
	goto l000231F8_ds_f
	// succ:  l000231F8_ds_f l000231F8_ds_t
l0002323C:
	r21 = Mem0[r24 + 28:word32]
	v16 = Mem0[r26:byte]
	r3 = (word32) v16
	r4 = Mem0[r24 + 24:word32]
	r25 = r21 + 0x00000001
	r3 = r3 & 0x00000001
	r5 = r6 - r25
	r18 = r5 & 0x0000001F
	r19 = r3
	branch Test(EQ,r18) l0002323C_ds_t
	// succ:  l0002323C_ds_f l0002323C_ds_t
l0002323C_ds_f:
	r19 = r19
	goto l00023264
	// succ:  l00023264
l0002323C_ds_t:
	r19 = r19
	goto l00023270
	// succ:  l00023270
l00023264:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00023264_ds_t
	// succ:  l00023264_ds_f l00023264_ds_t
l00023264_ds_f:
	r19 = r19 + r19
	goto l00023270
	// succ:  l00023270
l00023264_ds_t:
	r19 = r19 + r19
	goto l00023264
	// succ:  l00023264
l00023270:
	r18 = cond(r27 - r25)
	branch Test(LT,r18) l00023270_ds_t
	// succ:  l00023270_ds_f l00023270_ds_t
l00023270_ds_f:
	r19 = r19 | r4
	goto l0002327C
	// succ:  l0002327C
l00023270_ds_t:
	r19 = r19 | r4
	goto l000232AC
	// succ:  l000232AC
l0002327C:
	Mem0[r24 + 24:word32] = r19
	goto l0002336C
	// succ:  l0002336C
l00023284:
	r19 = r19 + r19
	r19 = r19 + r19
	// succ:  l0002328C
l0002328C:
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r18 = cond(r27 - r25)
	branch Test(GE,r18) l0002328C_ds_t
	// succ:  l0002328C_ds_f l0002328C_ds_t
l0002328C_ds_f:
	r19 = r19 + r19
	goto l000232AC
	// succ:  l000232AC
l0002328C_ds_t:
	r19 = r19 + r19
	goto l00023360
	// succ:  l00023360
l000232AC:
	r4 = Mem0[r24 + 16:word32]
	r3 = r19
	r3 = r19 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r23 = r3 & 0x000000FF
	r6 = r4 + 0x00000001
	Mem0[r24 + 16:word32] = r6
	v20 = SLICE(r3, byte, 0)
	Mem0[r4:byte] = v20
	r4 = Mem0[r24 + 20:word32]
	r5 = r24
	r25 = r25 + 0xFFFFFFF8
	r3 = r4 + 0xFFFFFFFF
	branch Test(NE,r3) l000232AC_ds_t
	// succ:  l000232AC_ds_f l000232AC_ds_t
l000232AC_ds_f:
	Mem0[r24 + 20:word32] = r3
	goto l0002331C
	// succ:  l0002331C
l000232AC_ds_t:
	Mem0[r24 + 20:word32] = r3
	goto l00023324
	// succ:  l00023324
l0002331C:
	r15 = 0x0002331C
	call fn00022ED4 (retsize: 0;)
l00023324:
	r3 = r23 ^ 0x000000FF
	branch Test(NE,r3) l00023324_ds_t
	// succ:  l00023324_ds_f l00023324_ds_t
l00023324_ds_f:
	r5 = r24
	goto l00023330
	// succ:  l00023330
l00023324_ds_t:
	r5 = r24
	goto l00023284
	// succ:  l00023284
l00023330:
	r4 = Mem0[r24 + 16:word32]
	r6 = r4 + 0x00000001
	Mem0[r24 + 16:word32] = r6
	v21 = SLICE(r3, byte, 0)
	Mem0[r4:byte] = v21
	r3 = Mem0[r24 + 20:word32]
	r3 = r3 + 0xFFFFFFFF
	branch Test(NE,r3) l00023330_ds_t
	// succ:  l00023330_ds_f l00023330_ds_t
l00023330_ds_f:
	Mem0[r24 + 20:word32] = r3
	goto l00023350
	// succ:  l00023350
l00023330_ds_t:
	Mem0[r24 + 20:word32] = r3
	goto l00023284
	// succ:  l00023284
l00023350:
	r15 = 0x00023350
	r19 = r19 + r19
	call fn00022ED4 (retsize: 0;)
	r19 = r19 + r19
	goto l0002328C
	// succ:  l0002328C
l00023360:
	r21 = r21 + 0xFFFFFFF9
	r25 = r21 & 0x00000007
	Mem0[r24 + 24:word32] = r19
	// succ:  l0002336C
l0002336C:
	Mem0[r24 + 28:word32] = r25
	// succ:  l00023370
l00023370:
	r26 = r26 + 0x00000001
	r3 = r26 ^ r22
	branch Test(NE,r3) l00023370_ds_t
	// succ:  l00023370_ds_f l00023370_ds_t
l00023370_ds_f:
	r15 = Mem0[r1:word32]
	goto l00023380
	// succ:  l00023380
l00023370_ds_t:
	r15 = Mem0[r1:word32]
	goto l00023230
	// succ:  l00023230
l00023380:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r1 = r1 + 0x0000003C
	return
	// succ:  fn000231F4_exit
l000233A8:
	return
	// succ:  fn000231F4_exit
fn000231F4_exit:


// fn000233B0
// Return size: 0
define fn000233B0
fn000233B0_entry:
	r1 = fp
	// succ:  l000233B0
l000233B0:
	r1 = r1 + 0xFFFFFFC8
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	r19 = Mem0[r5 + 56:word32]
	branch Test(EQ,r19) l000233B0_ds_t
	// succ:  l000233B0_ds_f l000233B0_ds_t
l000233B0_ds_f:
	r19 = r19 >> 1
	C = cond(r19)
	goto l000233E0
	// succ:  l000233E0
l000233B0_ds_t:
	r19 = r19 >> 1
	C = cond(r19)
	goto l00023468
	// succ:  l00023468
l000233E0:
	branch Test(EQ,r19) l000233E0_ds_t
	// succ:  l000233E0_ds_f l000233E0_ds_t
l000233E0_ds_f:
	r21 = r5
	goto l000233E8
	// succ:  l000233E8
l000233E0_ds_t:
	r21 = r5
	goto l00023630
	// succ:  l00023630
l000233E8:
	r23 = 0x00000000
	// succ:  l000233EC
l000233EC:
	r19 = r19 >> 1
	C = cond(r19)
	branch Test(NE,r19) l000233EC_ds_t
	// succ:  l000233EC_ds_f l000233EC_ds_t
l000233EC_ds_f:
	r23 = r23 + 0x00000001
	goto l000233F8
	// succ:  l000233F8
l000233EC_ds_t:
	r23 = r23 + 0x00000001
	goto l000233EC
	// succ:  l000233EC
l000233F8:
	r19 = r23 + r23
	r19 = r19 + r19
	r19 = r19 + r19
	r3 = 0x0000000E
	r18 = cond(r3 - r23)
	branch Test(GE,r18) l000233F8_ds_t
	// succ:  l000233F8_ds_f l000233F8_ds_t
l000233F8_ds_f:
	r19 = r19 + r19
	goto l00023414
	// succ:  l00023414
l000233F8_ds_t:
	r19 = r19 + r19
	goto l00023430
	// succ:  l00023430
l00023414:
	r5 = Mem0[r21 + 32:word32]
	r4 = 0x00000028
	r3 = Mem0[r5:word32]
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x00023428
	call 0x00023428 + r3 (retsize: 0;)
l00023430:
	r4 = Mem0[r21 + 12:word32]
	branch Test(EQ,r4) l00023430_ds_t
	// succ:  l00023430_ds_f l00023430_ds_t
l00023430_ds_f:
	r3 = Mem0[r21 + 52:word32]
	goto l0002343C
	// succ:  l0002343C
l00023430_ds_t:
	r3 = Mem0[r21 + 52:word32]
	goto l00023490
	// succ:  l00023490
l0002343C:
	r3 = r3 + 0x00000017
	r3 = r3 + r3
	r3 = r3 + r3
	r4 = Mem0[r3 + r21:word32]
	r19 = r19 + r19
	r19 = r19 + r19
	r3 = Mem0[r19 + r4:word32]
	r3 = r3 + 0x00000001
	Mem0[r19 + r4:word32] = r3
	// succ:  l00023460
l00023460:
	Mem0[r21 + 56:word32] = r0
	// succ:  l00023464
l00023464:
	Mem0[r21 + 60:word32] = r0
	// succ:  l00023468
l00023468:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r1 = r1 + 0x00000038
	return
	// succ:  fn000233B0_exit
l00023490:
	r3 = r3 + 0x00000013
	r3 = r3 + r3
	r3 = r3 + r3
	r5 = Mem0[r3 + r21:word32]
	r3 = r19 + r19
	r3 = r3 + r3
	r19 = r5 + r19
	v17 = Mem0[r19 + 1024:byte]
	r24 = (word32) v17
	r25 = Mem0[r3 + r5:word32]
	v18 = SLICE(r24, int8, 0)
	r24 = (int32) v18
	branch Test(NE,r24) l00023490_ds_t
	// succ:  l00023490_ds_f l00023490_ds_t
l00023490_ds_f:
	r22 = Mem0[r21 + 28:word32]
	goto l000234C0
	// succ:  l000234C0
l00023490_ds_t:
	r22 = Mem0[r21 + 28:word32]
	goto l000234E4
	// succ:  l000234E4
l000234C0:
	r5 = Mem0[r21 + 32:word32]
	r4 = 0x00000028
	r3 = Mem0[r5:word32]
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x000234D4
	call 0x000234D4 + r3 (retsize: 0;)
	r4 = Mem0[r21 + 12:word32]
	branch Test(NE,r4) l00023460
	// succ:  l000234E4 l00023460
l000234E4:
	r6 = 0x00000001
	r5 = Mem0[r21 + 24:word32]
	r22 = r24 + r22
	r18 = r24 & 0x0000001F
	r3 = r6
	branch Test(EQ,r18) l000234E4_ds_t
	// succ:  l000234E4_ds_f l000234E4_ds_t
l000234E4_ds_f:
	r3 = r3
	goto l00023500
	// succ:  l00023500
l000234E4_ds_t:
	r3 = r3
	goto l0002350C
	// succ:  l0002350C
l00023500:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00023500_ds_t
	// succ:  l00023500_ds_f l00023500_ds_t
l00023500_ds_f:
	r3 = r3 + r3
	goto l0002350C
	// succ:  l0002350C
l00023500_ds_t:
	r3 = r3 + r3
	goto l00023500
	// succ:  l00023500
l0002350C:
	r7 = 0x00000018
	r3 = r3 + 0xFFFFFFFF
	r3 = r3 & r25
	r6 = r7 - r22
	r26 = 0x00000007
	r18 = r6 & 0x0000001F
	r19 = r3
	branch Test(EQ,r18) l0002350C_ds_t
	// succ:  l0002350C_ds_f l0002350C_ds_t
l0002350C_ds_f:
	r19 = r19
	goto l00023530
	// succ:  l00023530
l0002350C_ds_t:
	r19 = r19
	goto l0002353C
	// succ:  l0002353C
l00023530:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00023530_ds_t
	// succ:  l00023530_ds_f l00023530_ds_t
l00023530_ds_f:
	r19 = r19 + r19
	goto l0002353C
	// succ:  l0002353C
l00023530_ds_t:
	r19 = r19 + r19
	goto l00023530
	// succ:  l00023530
l0002353C:
	r25 = r22
	r18 = cond(r26 - r22)
	branch Test(LT,r18) l0002353C_ds_t
	// succ:  l0002353C_ds_f l0002353C_ds_t
l0002353C_ds_f:
	r19 = r19 | r5
	goto l0002354C
	// succ:  l0002354C
l0002353C_ds_t:
	r19 = r19 | r5
	goto l0002357C
	// succ:  l0002357C
l0002354C:
	Mem0[r21 + 24:word32] = r19
	goto l00023644
	// succ:  l00023644
l00023554:
	r19 = r19 + r19
	r19 = r19 + r19
	// succ:  l0002355C
l0002355C:
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r18 = cond(r26 - r25)
	branch Test(GE,r18) l0002355C_ds_t
	// succ:  l0002355C_ds_f l0002355C_ds_t
l0002355C_ds_f:
	r19 = r19 + r19
	goto l0002357C
	// succ:  l0002357C
l0002355C_ds_t:
	r19 = r19 + r19
	goto l00023638
	// succ:  l00023638
l0002357C:
	r4 = Mem0[r21 + 16:word32]
	r3 = r19
	r3 = r19 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r24 = r3 & 0x000000FF
	r6 = r4 + 0x00000001
	Mem0[r21 + 16:word32] = r6
	v21 = SLICE(r3, byte, 0)
	Mem0[r4:byte] = v21
	r4 = Mem0[r21 + 20:word32]
	r5 = r21
	r25 = r25 + 0xFFFFFFF8
	r3 = r4 + 0xFFFFFFFF
	branch Test(NE,r3) l0002357C_ds_t
	// succ:  l0002357C_ds_f l0002357C_ds_t
l0002357C_ds_f:
	Mem0[r21 + 20:word32] = r3
	goto l000235EC
	// succ:  l000235EC
l0002357C_ds_t:
	Mem0[r21 + 20:word32] = r3
	goto l000235F4
	// succ:  l000235F4
l000235EC:
	r15 = 0x000235EC
	call fn00022ED4 (retsize: 0;)
l000235F4:
	r3 = r24 ^ 0x000000FF
	branch Test(NE,r3) l000235F4_ds_t
	// succ:  l000235F4_ds_f l000235F4_ds_t
l000235F4_ds_f:
	r5 = r21
	goto l00023600
	// succ:  l00023600
l000235F4_ds_t:
	r5 = r21
	goto l00023554
	// succ:  l00023554
l00023600:
	r4 = Mem0[r21 + 16:word32]
	r6 = r4 + 0x00000001
	Mem0[r21 + 16:word32] = r6
	v22 = SLICE(r3, byte, 0)
	Mem0[r4:byte] = v22
	r3 = Mem0[r21 + 20:word32]
	r3 = r3 + 0xFFFFFFFF
	branch Test(NE,r3) l00023600_ds_t
	// succ:  l00023600_ds_f l00023600_ds_t
l00023600_ds_f:
	Mem0[r21 + 20:word32] = r3
	goto l00023620
	// succ:  l00023620
l00023600_ds_t:
	Mem0[r21 + 20:word32] = r3
	goto l00023554
	// succ:  l00023554
l00023620:
	r15 = 0x00023620
	r19 = r19 + r19
	call fn00022ED4 (retsize: 0;)
	r19 = r19 + r19
	goto l0002355C
	// succ:  l0002355C
l00023630:
	r23 = r19
	goto l00023430
	// succ:  l00023430
l00023638:
	r4 = Mem0[r21 + 12:word32]
	r22 = r22 & 0x00000007
	Mem0[r21 + 24:word32] = r19
	// succ:  l00023644
l00023644:
	Mem0[r21 + 28:word32] = r22
	branch Test(EQ,r23) l00023644_ds_t
	// succ:  l00023644_ds_f l00023644_ds_t
l00023644_ds_f:
	r3 = r4
	goto l00023650
	// succ:  l00023650
l00023644_ds_t:
	r3 = r4
	goto l000237B0
	// succ:  l000237B0
l00023650:
	branch Test(NE,r4) l00023650_ds_t
	// succ:  l00023650_ds_f l00023650_ds_t
l00023650_ds_f:
	r3 = Mem0[r21 + 56:word32]
	goto l00023658
	// succ:  l00023658
l00023650_ds_t:
	r3 = Mem0[r21 + 56:word32]
	goto l00023460
	// succ:  l00023460
l00023658:
	r6 = 0x00000001
	r22 = r23 + r22
	r18 = r23 & 0x0000001F
	r5 = r6
	branch Test(EQ,r18) l00023658_ds_t
	// succ:  l00023658_ds_f l00023658_ds_t
l00023658_ds_f:
	r5 = r5
	goto l00023670
	// succ:  l00023670
l00023658_ds_t:
	r5 = r5
	goto l0002367C
	// succ:  l0002367C
l00023670:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00023670_ds_t
	// succ:  l00023670_ds_f l00023670_ds_t
l00023670_ds_f:
	r5 = r5 + r5
	goto l0002367C
	// succ:  l0002367C
l00023670_ds_t:
	r5 = r5 + r5
	goto l00023670
	// succ:  l00023670
l0002367C:
	r7 = 0x00000018
	r5 = r5 + 0xFFFFFFFF
	r5 = r5 & r3
	r6 = r7 - r22
	r25 = 0x00000007
	r18 = r6 & 0x0000001F
	r3 = r5
	branch Test(EQ,r18) l0002367C_ds_t
	// succ:  l0002367C_ds_f l0002367C_ds_t
l0002367C_ds_f:
	r3 = r3
	goto l000236A0
	// succ:  l000236A0
l0002367C_ds_t:
	r3 = r3
	goto l000236AC
	// succ:  l000236AC
l000236A0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000236A0_ds_t
	// succ:  l000236A0_ds_f l000236A0_ds_t
l000236A0_ds_f:
	r3 = r3 + r3
	goto l000236AC
	// succ:  l000236AC
l000236A0_ds_t:
	r3 = r3 + r3
	goto l000236A0
	// succ:  l000236A0
l000236AC:
	r24 = r22
	r18 = cond(r25 - r22)
	branch Test(LT,r18) l000236AC_ds_t
	// succ:  l000236AC_ds_f l000236AC_ds_t
l000236AC_ds_f:
	r19 = r3 | r19
	goto l000236BC
	// succ:  l000236BC
l000236AC_ds_t:
	r19 = r3 | r19
	goto l000236EC
	// succ:  l000236EC
l000236BC:
	Mem0[r21 + 24:word32] = r19
	goto l000237D0
	// succ:  l000237D0
l000236C4:
	r19 = r19 + r19
	r19 = r19 + r19
	// succ:  l000236CC
l000236CC:
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r18 = cond(r25 - r24)
	branch Test(GE,r18) l000236CC_ds_t
	// succ:  l000236CC_ds_f l000236CC_ds_t
l000236CC_ds_f:
	r19 = r19 + r19
	goto l000236EC
	// succ:  l000236EC
l000236CC_ds_t:
	r19 = r19 + r19
	goto l000237A0
	// succ:  l000237A0
l000236EC:
	r4 = Mem0[r21 + 16:word32]
	r3 = r19
	r3 = r19 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r23 = r3 & 0x000000FF
	r6 = r4 + 0x00000001
	Mem0[r21 + 16:word32] = r6
	v23 = SLICE(r3, byte, 0)
	Mem0[r4:byte] = v23
	r4 = Mem0[r21 + 20:word32]
	r5 = r21
	r24 = r24 + 0xFFFFFFF8
	r3 = r4 + 0xFFFFFFFF
	branch Test(NE,r3) l000236EC_ds_t
	// succ:  l000236EC_ds_f l000236EC_ds_t
l000236EC_ds_f:
	Mem0[r21 + 20:word32] = r3
	goto l0002375C
	// succ:  l0002375C
l000236EC_ds_t:
	Mem0[r21 + 20:word32] = r3
	goto l00023764
	// succ:  l00023764
l0002375C:
	r15 = 0x0002375C
	call fn00022ED4 (retsize: 0;)
l00023764:
	r3 = r23 ^ 0x000000FF
	branch Test(NE,r3) l00023764_ds_t
	// succ:  l00023764_ds_f l00023764_ds_t
l00023764_ds_f:
	r5 = r21
	goto l00023770
	// succ:  l00023770
l00023764_ds_t:
	r5 = r21
	goto l000236C4
	// succ:  l000236C4
l00023770:
	r4 = Mem0[r21 + 16:word32]
	r6 = r4 + 0x00000001
	Mem0[r21 + 16:word32] = r6
	v24 = SLICE(r3, byte, 0)
	Mem0[r4:byte] = v24
	r3 = Mem0[r21 + 20:word32]
	r3 = r3 + 0xFFFFFFFF
	branch Test(NE,r3) l00023770_ds_t
	// succ:  l00023770_ds_f l00023770_ds_t
l00023770_ds_f:
	Mem0[r21 + 20:word32] = r3
	goto l00023790
	// succ:  l00023790
l00023770_ds_t:
	Mem0[r21 + 20:word32] = r3
	goto l000236C4
	// succ:  l000236C4
l00023790:
	r15 = 0x00023790
	r19 = r19 + r19
	call fn00022ED4 (retsize: 0;)
	r19 = r19 + r19
	goto l000236CC
	// succ:  l000236CC
l000237A0:
	r3 = Mem0[r21 + 12:word32]
	r22 = r22 & 0x00000007
	Mem0[r21 + 24:word32] = r19
	Mem0[r21 + 28:word32] = r22
	// succ:  l000237B0
l000237B0:
	branch Test(NE,r3) l000237B0_ds_t
	// succ:  l000237B0_ds_f l000237B0_ds_t
l000237B0_ds_f:
	Mem0[r21 + 56:word32] = r0
	goto l000237B8
	// succ:  l000237B8
l000237B0_ds_t:
	Mem0[r21 + 56:word32] = r0
	goto l00023464
	// succ:  l00023464
l000237B8:
	r7 = Mem0[r21 + 60:word32]
	r6 = Mem0[r21 + 64:word32]
	r15 = 0x000237C0
	r5 = r21
	call fn000231F4 (retsize: 0;)
	Mem0[r21 + 60:word32] = r0
	goto l00023468
	// succ:  l00023468
l000237D0:
	Mem0[r21 + 28:word32] = r22
	Mem0[r21 + 56:word32] = r4
	goto l000237B8
	// succ:  l000237B8
fn000233B0_exit:


// fn000237DC
// Return size: 0
define fn000237DC
fn000237DC_entry:
	r1 = fp
	// succ:  l000237DC
l000237DC:
	r1 = r1 + 0xFFFFFFCC
	Mem0[r1 + 32:word32] = r21
	r21 = r5
	Mem0[r1 + 36:word32] = r22
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	r15 = 0x00023800
	r22 = r6
	call fn000233B0 (retsize: 0;)
	r3 = Mem0[r21 + 12:word32]
	branch Test(EQ,r3) l000237DC_ds_t
	// succ:  l000237DC_ds_f l000237DC_ds_t
l000237DC_ds_f:
	r5 = 0x00000018
	goto l00023814
	// succ:  l00023814
l000237DC_ds_t:
	r5 = 0x00000018
	goto l00023880
	// succ:  l00023880
l00023814:
	r3 = Mem0[r21 + 32:word32]
	// succ:  l00023818
l00023818:
	r4 = Mem0[r3 + 368:word32]
	branch Test(NE,r4) l00023874
	// succ:  l00023820 l00023874
l00023820:
	r3 = Mem0[r3 + 296:word32]
	branch Test(LE,r3) l00023820_ds_t
	// succ:  l00023820_ds_f l00023820_ds_t
l00023820_ds_f:
	r15 = Mem0[r1:word32]
	goto l0002382C
	// succ:  l0002382C
l00023820_ds_t:
	r15 = Mem0[r1:word32]
	goto l00023854
	// succ:  l00023854
l0002382C:
	r3 = r3 + 0x00000009
	r3 = r3 + r3
	r4 = r3 + r3
	r3 = r21 + 0x00000024
	r21 = r21 + r4
	// succ:  l00023840
l00023840:
	Mem0[r3:word32] = r0
	r3 = r3 + 0x00000004
	r4 = r21 ^ r3
	branch Test(NE,r4) l00023840
	// succ:  l00023850 l00023840
l00023850:
	r15 = Mem0[r1:word32]
	// succ:  l00023854
l00023854:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn000237DC_exit
l00023874:
	Mem0[r21 + 56:word32] = r0
	Mem0[r21 + 60:word32] = r0
	goto l00023850
	// succ:  l00023850
l00023880:
	r24 = Mem0[r21 + 28:word32]
	r3 = Mem0[r21 + 24:word32]
	r24 = r24 + 0x00000007
	r4 = r5 - r24
	r25 = 0x00000007
	r5 = 0x0000007F
	r18 = r4 & 0x0000001F
	r19 = r5
	branch Test(EQ,r18) l00023880_ds_t
	// succ:  l00023880_ds_f l00023880_ds_t
l00023880_ds_f:
	r19 = r19
	goto l000238A8
	// succ:  l000238A8
l00023880_ds_t:
	r19 = r19
	goto l000238B4
	// succ:  l000238B4
l000238A8:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000238A8_ds_t
	// succ:  l000238A8_ds_f l000238A8_ds_t
l000238A8_ds_f:
	r19 = r19 + r19
	goto l000238B4
	// succ:  l000238B4
l000238A8_ds_t:
	r19 = r19 + r19
	goto l000238A8
	// succ:  l000238A8
l000238B4:
	r4 = Mem0[r21 + 16:word32]
	r18 = cond(r25 - r24)
	branch Test(GE,r18) l000238B4_ds_t
	// succ:  l000238B4_ds_f l000238B4_ds_t
l000238B4_ds_f:
	r19 = r19 | r3
	goto l000238C4
	// succ:  l000238C4
l000238B4_ds_t:
	r19 = r19 | r3
	goto l000239AC
	// succ:  l000239AC
l000238C4:
	r6 = r4 + 0x00000001
	goto l000238F8
	// succ:  l000238F8
l000238CC:
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r24 = r24 + 0xFFFFFFF8
	r18 = cond(r25 - r24)
	branch Test(GE,r18) l000238CC_ds_t
	// succ:  l000238CC_ds_f l000238CC_ds_t
l000238CC_ds_f:
	r19 = r19 + r19
	goto l000238F8
	// succ:  l000238F8
l000238CC_ds_t:
	r19 = r19 + r19
	goto l000239B0
	// succ:  l000239B0
l000238F8:
	Mem0[r21 + 16:word32] = r6
	r3 = r19
	r3 = r19 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	r3 = r3 >> 1
	C = cond(r3)
	v17 = SLICE(r3, byte, 0)
	Mem0[r4:byte] = v17
	r4 = Mem0[r21 + 20:word32]
	r23 = r3 & 0x000000FF
	r5 = r21
	r3 = r4 + 0xFFFFFFFF
	branch Test(NE,r3) l000238F8_ds_t
	// succ:  l000238F8_ds_f l000238F8_ds_t
l000238F8_ds_f:
	Mem0[r21 + 20:word32] = r3
	goto l0002395C
	// succ:  l0002395C
l000238F8_ds_t:
	Mem0[r21 + 20:word32] = r3
	goto l00023964
	// succ:  l00023964
l0002395C:
	r15 = 0x0002395C
	call fn00022ED4 (retsize: 0;)
l00023964:
	r4 = Mem0[r21 + 16:word32]
	r3 = r23 ^ 0x000000FF
	r6 = r4 + 0x00000001
	branch Test(NE,r3) l00023964_ds_t
	// succ:  l00023964_ds_f l00023964_ds_t
l00023964_ds_f:
	r5 = r6
	goto l00023978
	// succ:  l00023978
l00023964_ds_t:
	r5 = r6
	goto l000238CC
	// succ:  l000238CC
l00023978:
	Mem0[r21 + 16:word32] = r6
	v19 = SLICE(r3, byte, 0)
	Mem0[r4:byte] = v19
	r3 = Mem0[r21 + 20:word32]
	r5 = r21
	r3 = r3 + 0xFFFFFFFF
	branch Test(NE,r3) l00023978_ds_t
	// succ:  l00023978_ds_f l00023978_ds_t
l00023978_ds_f:
	Mem0[r21 + 20:word32] = r3
	goto l00023994
	// succ:  l00023994
l00023978_ds_t:
	Mem0[r21 + 20:word32] = r3
	goto l0002399C
	// succ:  l0002399C
l00023994:
	r15 = 0x00023994
	call fn00022ED4 (retsize: 0;)
l0002399C:
	r4 = Mem0[r21 + 16:word32]
	r6 = r4 + 0x00000001
	r5 = r6
	goto l000238CC
	// succ:  l000238CC
l000239AC:
	r5 = r4 + 0x00000001
	goto l000239B0
	// succ:  l000239B0
l000239AC_ds_f:
	Mem0[r21 + 20:word32] = r3
	goto l000239D4
	// succ:  l000239D4
l000239AC_ds_t:
	Mem0[r21 + 20:word32] = r3
	goto l000239DC
	// succ:  l000239DC
l000239B0:
	r3 = 0xFFFFFFFF
	Mem0[r21 + 24:word32] = r0
	Mem0[r21 + 28:word32] = r0
	Mem0[r21 + 16:word32] = r5
	v18 = SLICE(r3, byte, 0)
	Mem0[r4:byte] = v18
	r3 = Mem0[r21 + 20:word32]
	r3 = r3 + 0xFFFFFFFF
	branch Test(NE,r3) l000239AC_ds_t
	goto l000239AC_ds_f
	// succ:  l000239AC_ds_f l000239AC_ds_t
l000239D4:
	r15 = 0x000239D4
	r5 = r21
	call fn00022ED4 (retsize: 0;)
l000239DC:
	r3 = Mem0[r21 + 16:word32]
	r22 = r22 + 0xFFFFFFD0
	r4 = r3 + 0x00000001
	Mem0[r21 + 16:word32] = r4
	v20 = SLICE(r22, byte, 0)
	Mem0[r3:byte] = v20
	r3 = Mem0[r21 + 20:word32]
	r3 = r3 + 0xFFFFFFFF
	branch Test(NE,r3) l000239DC_ds_t
	// succ:  l000239DC_ds_f l000239DC_ds_t
l000239DC_ds_f:
	Mem0[r21 + 20:word32] = r3
	goto l00023A00
	// succ:  l00023A00
l000239DC_ds_t:
	Mem0[r21 + 20:word32] = r3
	goto l00023814
	// succ:  l00023814
l00023A00:
	r15 = 0x00023A00
	r5 = r21
	call fn00022ED4 (retsize: 0;)
	r3 = Mem0[r21 + 32:word32]
	goto l00023818
	// succ:  l00023818
fn000237DC_exit:


// fn000255B0
// Return size: 0
define fn000255B0
fn000255B0_entry:
	r1 = fp
	// succ:  l000255B0
l000255B0:
	r3 = Mem0[r5 + 4:word32]
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	// succ:  l000255BC_thunk_fn000255C0
l000255BC_thunk_fn000255C0:
	call fn000255C0 (retsize: 0;)
	return
	// succ:  fn000255B0_exit
fn000255B0_exit:


// fn000255C0
// Return size: 0
define fn000255C0
fn000255C0_entry:
	r1 = fp
	// succ:  l000255C0
l000255C0:
	r3 = Mem0[r3:word32]
	r7 = 0x0000006C
	r6 = 0x00000001
	r15 = 0x000255CC
	r19 = r5
	call 0x000255CC + r3 (retsize: 0;)
	r4 = 0xFFFF95C0
	Mem0[r19 + 416:word32] = r3
	Mem0[r3 + 76:word32] = r0
	Mem0[r3:word32] = r4
	Mem0[r3 + 92:word32] = r0
	Mem0[r3 + 80:word32] = r0
	Mem0[r3 + 96:word32] = r0
	Mem0[r3 + 84:word32] = r0
	Mem0[r3 + 100:word32] = r0
	Mem0[r3 + 88:word32] = r0
	Mem0[r3 + 104:word32] = r0
	Mem0[r3 + 64:word32] = r0
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn000255C0_exit
fn000255C0_exit:


// fn000256D8
// Return size: 0
define fn000256D8
fn000256D8_entry:
	r1 = fp
	// succ:  l000256D8
l000256D8:
	Mem0[r19 + 172:word32] = r0
	Mem0[r19 + 176:word32] = r0
	Mem0[r19 + 180:word32] = r0
	Mem0[r19 + 196:word32] = r0
	Mem0[r19 + 184:word32] = r0
	Mem0[r19 + 200:word32] = r0
	Mem0[r19 + 188:word32] = r0
	Mem0[r19 + 204:word32] = r0
	Mem0[r19 + 192:word32] = r0
	Mem0[r19 + 208:word32] = r0
	r15 = 0x00025700
	Mem0[r19 + 360:word32] = r0
	call fn00028F08 (retsize: 0;)
	r15 = 0x00025708
	r5 = r19
	call fn000268CC (retsize: 0;)
	r3 = 0x000000C8
	Mem0[r19 + 20:word32] = r3
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r1 = r1 + 0x00000028
	return
	// succ:  fn000256D8_exit
fn000256D8_exit:


// fn00025768
// Return size: 0
define fn00025768
fn00025768_entry:
	r1 = fp
	// succ:  l00025768
l00025768:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1 + 32:word32] = r19
	Mem0[r1:word32] = r15
	r6 = Mem0[r5 + 20:word32]
	r3 = 0x0000000A
	r4 = r6 + 0xFFFFFF38
	r18 = cond(r3 -u r4)
	branch Test(LT,r18) l00025768_ds_t
	// succ:  l00025768_ds_f l00025768_ds_t
l00025768_ds_f:
	r19 = r5
	goto l0002578C
	// succ:  l0002578C
l00025768_ds_t:
	r19 = r5
	goto l0002582C
	// succ:  l0002582C
l0002578C:
	r3 = r4
	r3 = r4 + r4
	r3 = r3 + r3
	r3 = r3 + 0x00007734
	r3 = Mem0[r3:word32]
	call r3 (retsize: 0;)
	return
	// succ:  fn00025768_exit
l0002582C:
	r4 = Mem0[r19:word32]
	r7 = 0x00000014
	r5 = r19
	Mem0[r4 + 20:word32] = r7
	r7 = Mem0[r4:word32]
	r3 = 0x00000000
	Mem0[r4 + 24:word32] = r6
	r15 = 0x00025848
	Mem0[r1 + 28:word32] = r3
	call 0x00025848 + r7 (retsize: 0;)
	r3 = Mem0[r1 + 28:word32]
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn00025768_exit
fn00025768_exit:


// fn00025A6C
// Return size: 0
define fn00025A6C
fn00025A6C_entry:
	r1 = fp
	goto l00025A6C
	// succ:  l00025A6C
l00025888:
	r6 = 0x00000000
	r7 = 0x00000000
	r4 = 0x00000001
	r8 = 0x00000100
	Mem0[r19 + 56:word32] = r6
	Mem0[r19 + 60:word32] = r7
	r10 = 0x000000CA
	r7 = 0x00000002
	Mem0[r19 + 48:word32] = r4
	Mem0[r19 + 52:word32] = r4
	Mem0[r19 + 64:word32] = r0
	Mem0[r19 + 68:word32] = r0
	Mem0[r19 + 72:word32] = r0
	Mem0[r19 + 76:word32] = r4
	Mem0[r19 + 80:word32] = r4
	Mem0[r19 + 84:word32] = r0
	Mem0[r19 + 88:word32] = r7
	Mem0[r19 + 92:word32] = r4
	Mem0[r19 + 96:word32] = r8
	Mem0[r19 + 136:word32] = r0
	Mem0[r19 + 100:word32] = r0
	Mem0[r19 + 104:word32] = r0
	Mem0[r19 + 108:word32] = r0
	Mem0[r19 + 20:word32] = r10
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn00025A6C_exit
l00025954:
	r5 = 0x00000002
	Mem0[r19 + 44:word32] = r5
	goto l00025888
	// succ:  l00025888
l000259D0:
	r4 = Mem0[r19:word32]
	r10 = 0x0000006F
	r5 = r19
	Mem0[r4 + 20:word32] = r10
	r10 = Mem0[r4 + 4:word32]
	Mem0[r4 + 24:word32] = r7
	Mem0[r4 + 28:word32] = r8
	Mem0[r4 + 32:word32] = r9
	Mem0[r1 + 28:word32] = r3
	r15 = 0x000259F4
	r6 = 0x00000001
	call 0x000259F4 + r10 (retsize: 0;)
	r4 = 0x00000003
	Mem0[r19 + 40:word32] = r4
	r3 = Mem0[r1 + 28:word32]
	goto l00025954
	// succ:  l00025954
l00025A6C:
	r5 = r9 ^ 0x00000042
	r4 = -r5
	r4 = r4 | r5
	branch Test(LT,r4) l00025A6C_ds_t
	// succ:  l00025A6C_ds_f l00025A6C_ds_t
l00025A6C_ds_f:
	r4 = 0x00000002
	goto l00025A80
	// succ:  l00025A80
l00025A6C_ds_t:
	r4 = 0x00000002
	goto l000259D0
	// succ:  l000259D0
l00025A80:
	Mem0[r19 + 40:word32] = r4
	goto l00025954
	// succ:  l00025954
fn00025A6C_exit:


// fn00025BC4
// Return size: 0
define fn00025BC4
fn00025BC4_entry:
	r1 = fp
	// succ:  l00025BC4
l00025BC4:
	r1 = r1 + 0x00000020
	r3 = Mem0[r5 + 20:word32]
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r4 = 0x00000008
	r6 = r3 + 0xFFFFFF36
	r18 = cond(r4 -u r6)
	branch Test(GE,r18) l00025BC4_ds_t
	// succ:  l00025BC4_ds_f l00025BC4_ds_t
l00025BC4_ds_f:
	r19 = r5
	goto l00025BEC
	// succ:  l00025BEC
l00025BC4_ds_t:
	r19 = r5
	goto l00025C04
	// succ:  l00025C04
l00025BEC:
	r4 = Mem0[r5:word32]
	r6 = 0x00000014
	Mem0[r4 + 20:word32] = r6
	r6 = Mem0[r4:word32]
	r15 = 0x00025BFC
	Mem0[r4 + 24:word32] = r3
	call 0x00025BFC + r6 (retsize: 0;)
l00025C04:
	r3 = Mem0[r19 + 492:word32]
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r3 = Mem0[r3 + 16:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn00025BC4_exit
fn00025BC4_exit:


// fn00025CD4
// Return size: 0
define fn00025CD4
fn00025CD4_entry:
	r1 = fp
	goto l00025CD4
	// succ:  l00025CD4
l00025C80:
	r3 = Mem0[r3:word32]
	r15 = 0x00025C84
	call 0x00025C84 + r3 (retsize: 0;)
	branch Test(EQ,r3) l00025C80_ds_t
	// succ:  l00025C80_ds_f l00025C80_ds_t
l00025C80_ds_f:
	r3 = r21
	goto l00025C94
	// succ:  l00025C94
l00025C80_ds_t:
	r3 = r21
	goto l00025CC0
	// succ:  l00025CC0
l00025C94:
	r3 = Mem0[r19 + 492:word32]
	r21 = Mem0[r3 + 20:word32]
	branch Test(EQ,r21) l00025C94_ds_t
	// succ:  l00025C94_ds_f l00025C94_ds_t
l00025C94_ds_f:
	r5 = r19
	goto l00025CA4
	// succ:  l00025CA4
l00025C94_ds_t:
	r5 = r19
	goto l00025C80
	// succ:  l00025C80
l00025CA4:
	r3 = Mem0[r19 + 24:word32]
	r3 = Mem0[r3 + 24:word32]
	r15 = 0x00025CAC
	r21 = 0x00000001
	call 0x00025CAC + r3 (retsize: 0;)
	r15 = 0x00025CB4
	r5 = r19
	call fn0002CC00 (retsize: 0;)
	r3 = r21
	// succ:  l00025CC0
l00025CC0:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn00025CD4_exit
l00025CD4:
	r3 = 0x000000D2
	Mem0[r5 + 20:word32] = r3
	goto l00025C94
	// succ:  l00025C94
fn00025CD4_exit:


// fn00025F38
// Return size: 0
define fn00025F38
fn00025F38_entry:
	r1 = fp
	// succ:  l00025F38
l00025F38:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1 + 32:word32] = r21
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	r19 = Mem0[r5 + 24:word32]
	r21 = r5
	r7 = 0x00001000
	r8 = Mem0[r19 + 28:word32]
	r5 = Mem0[r19 + 32:word32]
	r15 = 0x00025F60
	r6 = 0x00000001
	call fn0001F0F4 (retsize: 0;)
	branch Test(NE,r3) l00025FC4
	// succ:  l00025F6C l00025FC4
l00025F6C:
	r4 = Mem0[r19 + 36:word32]
	branch Test(EQ,r4) l00025F6C_ds_t
	// succ:  l00025F6C_ds_f l00025F6C_ds_t
l00025F6C_ds_f:
	r3 = Mem0[r21:word32]
	goto l00025F78
	// succ:  l00025F78
l00025F6C_ds_t:
	r3 = Mem0[r21:word32]
	goto l00025F90
	// succ:  l00025F90
l00025F78:
	r4 = 0x0000002A
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x00025F84
	r5 = r21
	call 0x00025F84 + r3 (retsize: 0;)
	r3 = Mem0[r21:word32]
	// succ:  l00025F90
l00025F90:
	r5 = 0x00000078
	Mem0[r3 + 20:word32] = r5
	r3 = Mem0[r3 + 4:word32]
	r5 = r21
	r15 = 0x00025FA0
	r6 = 0xFFFFFFFF
	call 0x00025FA0 + r3 (retsize: 0;)
	r4 = Mem0[r19 + 32:word32]
	r5 = 0xFFFFFFFF
	r3 = 0x00000002
	v13 = SLICE(r5, byte, 0)
	Mem0[r4:byte] = v13
	r4 = Mem0[r19 + 32:word32]
	r5 = 0xFFFFFFD9
	v14 = SLICE(r5, byte, 0)
	Mem0[r4 + 1:byte] = v14
	// succ:  l00025FC4
l00025FC4:
	r4 = Mem0[r19 + 32:word32]
	Mem0[r19 + 4:word32] = r3
	Mem0[r19 + 36:word32] = r0
	Mem0[r19:word32] = r4
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r3 = 0x00000001
	r1 = r1 + 0x00000024
	return
	// succ:  fn00025F38_exit
fn00025F38_exit:


// fn00026018
// Return size: 0
define fn00026018
fn00026018_entry:
	r1 = fp
	// succ:  l00026018
l00026018:
	branch Test(GE,r18) l00026018_ds_t
	// succ:  l00026018_ds_f l00026018_ds_t
l00026018_ds_f:
	r3 = r4
	goto l00026020
	// succ:  l00026020
l00026018_ds_t:
	r3 = r4
	goto l0002603C
	// succ:  l0002603C
l00026020:
	r5 = r22
	r15 = 0x00026024
	r19 = r19 - r3
	call fn00025F38 (retsize: 0;)
	r3 = Mem0[r21 + 4:word32]
	r18 = cond(r3 - r19)
	branch Test(LT,r18) l00026020_ds_t
	// succ:  l00026020_ds_f l00026020_ds_t
l00026020_ds_f:
	r4 = r3
	goto l0002603C
	// succ:  l0002603C
l00026020_ds_t:
	r4 = r3
	goto l00026020
	// succ:  l00026020
l0002603C:
	r6 = Mem0[r21:word32]
	r4 = r4 - r19
	Mem0[r21 + 4:word32] = r4
	r19 = r6 + r19
	Mem0[r21:word32] = r19
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r1 = r1 + 0x00000028
	return
	// succ:  fn00026018_exit
fn00026018_exit:


// fn000261AC
// Return size: 0
define fn000261AC
fn000261AC_entry:
	r1 = fp
	// succ:  l000261AC
l000261AC:
	r1 = r1 + 0xFFFFFFBC
	Mem0[r1 + 44:word32] = r24
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	Mem0[r1 + 60:word32] = r28
	Mem0[r1 + 64:word32] = r29
	r19 = Mem0[r5 + 384:word32]
	r3 = r19 ^ 0x00000001
	branch Test(EQ,r3) l000261AC_ds_t
	// succ:  l000261AC_ds_f l000261AC_ds_t
l000261AC_ds_f:
	r24 = r5
	goto l000261EC
	// succ:  l000261EC
l000261AC_ds_t:
	r24 = r5
	goto l000264AC
	// succ:  l000264AC
l000261EC:
	r3 = r19 + 0xFFFFFFFF
	r4 = 0x00000003
	r18 = cond(r4 -u r3)
	branch Test(GE,r18) l000261EC_ds_t
	// succ:  l000261EC_ds_f l000261EC_ds_t
l000261EC_ds_f:
	r4 = 0x0000001A
	goto l00026200
	// succ:  l00026200
l000261EC_ds_t:
	r4 = 0x0000001A
	goto l0002621C
	// succ:  l0002621C
l00026200:
	r3 = Mem0[r5:word32]
	Mem0[r3 + 20:word32] = r4
	r4 = 0x00000004
	Mem0[r3 + 28:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x00026214
	Mem0[r3 + 24:word32] = r19
	call 0x00026214 + r4 (retsize: 0;)
l0002621C:
	r6 = Mem0[r24 + 364:word32]
	r5 = Mem0[r24 + 28:word32]
	r3 = r6
	r3 = r6 + r6
	r3 = r3 + r3
	r3 = r3 + r3
	r15 = 0x00026234
	r6 = r3
	call fn0002CCF0 (retsize: 0;)
	r6 = Mem0[r24 + 368:word32]
	r5 = Mem0[r24 + 32:word32]
	Mem0[r24 + 404:word32] = r3
	r4 = r6
	r4 = r6 + r6
	r4 = r4 + r4
	r4 = r4 + r4
	r15 = 0x00026258
	r6 = r4
	call fn0002CCF0 (retsize: 0;)
	r4 = Mem0[r24 + 384:word32]
	Mem0[r24 + 408:word32] = r3
	branch Test(LE,r4) l0002621C_ds_t
	// succ:  l0002621C_ds_f l0002621C_ds_t
l0002621C_ds_f:
	Mem0[r24 + 412:word32] = r0
	goto l00026270
	// succ:  l00026270
l0002621C_ds_t:
	Mem0[r24 + 412:word32] = r0
	goto l00026384
	// succ:  l00026384
l00026270:
	r29 = 0x00000000
	r26 = r29
	r21 = r24 + 0x00000184
	r22 = 0x0000000A
	r23 = 0x0000000D
	goto l00026284
	// succ:  l00026284
l00026270_ds_f:
	r6 = r28
	goto l000262DC
	// succ:  l000262DC
l00026270_ds_t:
	r6 = r28
	goto l000262E0
	// succ:  l000262E0
l00026284:
	r25 = Mem0[r21:word32]
	r27 = Mem0[r25 + 8:word32]
	r28 = Mem0[r25 + 12:word32]
	r5 = r27
	r6 = r28
	Mem0[r25 + 52:word32] = r27
	r15 = 0x000262A0
	Mem0[r25 + 56:word32] = r28
	call fn0001E908 (retsize: 0;)
	r6 = r27
	r5 = Mem0[r25 + 36:word32]
	Mem0[r25 + 60:word32] = r3
	r15 = 0x000262B8
	r19 = r3
	call fn0001E908 (retsize: 0;)
	r6 = r27
	r5 = Mem0[r25 + 28:word32]
	r15 = 0x000262CC
	Mem0[r25 + 64:word32] = r3
	call fn0001EA08 (retsize: 0;)
	branch Test(EQ,r3) l00026270_ds_t
	goto l00026270_ds_f
	// succ:  l00026270_ds_f l00026270_ds_t
l000262DC:
	r27 = r3
	// succ:  l000262E0
l000262E0:
	r5 = Mem0[r25 + 32:word32]
	r15 = 0x000262E8
	Mem0[r25 + 68:word32] = r27
	call fn0001EA08 (retsize: 0;)
	branch Test(EQ,r3) l000262F8
	// succ:  l000262F4 l000262F8
l000262F4:
	r28 = r3
	// succ:  l000262F8
l000262F8:
	r29 = r19 + r29
	r18 = cond(r22 - r29)
	branch Test(GE,r18) l000262F8_ds_t
	// succ:  l000262F8_ds_f l000262F8_ds_t
l000262F8_ds_f:
	Mem0[r25 + 72:word32] = r28
	goto l00026308
	// succ:  l00026308
l000262F8_ds_t:
	Mem0[r25 + 72:word32] = r28
	goto l0002631C
	// succ:  l0002631C
l00026308:
	r3 = Mem0[r24:word32]
	r5 = r24
	r4 = Mem0[r3:word32]
	r15 = 0x00026314
	Mem0[r3 + 20:word32] = r23
	call 0x00026314 + r4 (retsize: 0;)
l0002631C:
	branch Test(LE,r19) l0002631C_ds_t
	// succ:  l0002631C_ds_f l0002631C_ds_t
l0002631C_ds_f:
	r7 = r19 + 0xFFFFFFFF
	goto l00026324
	// succ:  l00026324
l0002631C_ds_t:
	r7 = r19 + 0xFFFFFFFF
	goto l00026364
	// succ:  l00026364
l00026324:
	r6 = Mem0[r24 + 412:word32]
	r3 = r6 + 0x00000068
	r4 = r19 + r3
	r4 = r4 + r4
	r3 = r3 + r3
	r3 = r3 + r3
	r4 = r4 + r4
	r3 = r24 + r3
	r4 = r24 + r4
	// succ:  l00026348
l00026348:
	Mem0[r3:word32] = r26
	r3 = r3 + 0x00000004
	r5 = r4 ^ r3
	branch Test(NE,r5) l00026348
	// succ:  l00026358 l00026348
l00026358:
	r3 = r6 + 0x00000001
	r3 = r3 + r7
	Mem0[r24 + 412:word32] = r3
	// succ:  l00026364
l00026364:
	r19 = Mem0[r24 + 384:word32]
	r26 = r26 + 0x00000001
	r18 = cond(r26 - r19)
	branch Test(GE,r18) l00026364_ds_t
	// succ:  l00026364_ds_f l00026364_ds_t
l00026364_ds_f:
	r21 = r21 + 0x00000004
	goto l00026378
	// succ:  l00026378
l00026364_ds_t:
	r21 = r21 + 0x00000004
	goto l00026380
	// succ:  l00026380
l00026378:
	r29 = Mem0[r24 + 412:word32]
	goto l00026284
	// succ:  l00026284
l00026380:
	branch Test(GT,r19) l000263E8
	// succ:  l00026384 l000263E8
l00026384:
	r3 = Mem0[r24 + 500:word32]
	r3 = Mem0[r3:word32]
	r15 = 0x0002638C
	r5 = r24
	call 0x0002638C + r3 (retsize: 0;)
	r3 = Mem0[r24 + 484:word32]
	r3 = Mem0[r3:word32]
	r15 = 0x0002639C
	r5 = r24
	call 0x0002639C + r3 (retsize: 0;)
	r4 = Mem0[r24 + 484:word32]
	r3 = Mem0[r24 + 492:word32]
	r4 = Mem0[r4 + 4:word32]
	Mem0[r3:word32] = r4
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r28 = Mem0[r1 + 60:word32]
	r29 = Mem0[r1 + 64:word32]
	r1 = r1 + 0x00000044
	return
	// succ:  fn000261AC_exit
l000263E8:
	r21 = Mem0[r24 + 388:word32]
	// succ:  l000263EC
l000263EC:
	r3 = Mem0[r21 + 76:word32]
	r22 = 0x00000000
	r23 = r24 + 0x00000188
	r27 = 0x00000003
	r25 = 0x00000104
	r26 = 0x00000001
	r28 = 0x00000034
	branch Test(EQ,r3) l000263EC_ds_t
	// succ:  l000263EC_ds_f l000263EC_ds_t
l000263EC_ds_f:
	r22 = r22 + 0x00000001
	goto l00026410
	// succ:  l00026410
l000263EC_ds_t:
	r22 = r22 + 0x00000001
	goto l0002642C
	// succ:  l0002642C
l00026410:
	r18 = cond(r22 - r19)
	branch Test(GE,r18) l00026410_ds_t
	// succ:  l00026410_ds_f l00026410_ds_t
l00026410_ds_f:
	r22 = r22 + 0x00000001
	goto l0002641C
	// succ:  l0002641C
l00026410_ds_t:
	r22 = r22 + 0x00000001
	goto l00026384
	// succ:  l00026384
l0002641C:
	r21 = Mem0[r23:word32]
	r3 = Mem0[r21 + 76:word32]
	branch Test(NE,r3) l0002641C_ds_t
	// succ:  l0002641C_ds_f l0002641C_ds_t
l0002641C_ds_f:
	r23 = r23 + 0x00000004
	goto l0002642C
	// succ:  l0002642C
l0002641C_ds_t:
	r23 = r23 + 0x00000004
	goto l00026410
	// succ:  l00026410
l0002642C:
	r4 = Mem0[r21 + 16:word32]
	r5 = r24
	r19 = r4 + 0x00000029
	r3 = r19 + r19
	r18 = cond(r27 -u r4)
	branch Test(LT,r18) l0002642C_ds_t
	// succ:  l0002642C_ds_f l0002642C_ds_t
l0002642C_ds_f:
	r3 = r3 + r3
	goto l00026448
	// succ:  l00026448
l0002642C_ds_t:
	r3 = r3 + r3
	goto l00026490
	// succ:  l00026490
l00026448:
	r3 = Mem0[r3 + r24:word32]
	branch Test(EQ,r3) l00026490
	// succ:  l00026450 l00026490
l00026450:
	r3 = Mem0[r24 + 4:word32]
	// succ:  l00026454
l00026454:
	r7 = r25
	r6 = r26
	r5 = r24
	r3 = Mem0[r3:word32]
	r19 = r19 + r19
	r15 = 0x00026468
	r19 = r19 + r19
	call 0x00026468 + r3 (retsize: 0;)
	r6 = Mem0[r19 + r24:word32]
	r7 = r25
	r15 = 0x0002647C
	r5 = r3
	call fn0001F60C (retsize: 0;)
	r19 = Mem0[r24 + 384:word32]
	Mem0[r21 + 76:word32] = r3
	goto l00026410
	// succ:  l00026410
l00026490:
	r3 = Mem0[r24:word32]
	r6 = Mem0[r3:word32]
	Mem0[r3 + 20:word32] = r28
	r15 = 0x0002649C
	Mem0[r3 + 24:word32] = r4
	call 0x0002649C + r6 (retsize: 0;)
	r3 = Mem0[r24 + 4:word32]
	goto l00026454
	// succ:  l00026454
l000264AC:
	r21 = Mem0[r5 + 388:word32]
	r3 = 0x00000001
	r4 = Mem0[r21 + 28:word32]
	r22 = Mem0[r21 + 12:word32]
	r5 = Mem0[r21 + 32:word32]
	Mem0[r24 + 404:word32] = r4
	r4 = Mem0[r21 + 36:word32]
	r6 = r22
	Mem0[r24 + 408:word32] = r5
	Mem0[r21 + 64:word32] = r4
	Mem0[r21 + 52:word32] = r3
	Mem0[r21 + 56:word32] = r3
	Mem0[r21 + 60:word32] = r3
	r15 = 0x000264E4
	Mem0[r21 + 68:word32] = r3
	call fn0001EA08 (retsize: 0;)
	branch Test(NE,r3) l00026504
	// succ:  l000264F0 l00026504
l000264F0:
	Mem0[r21 + 72:word32] = r22
	r3 = 0x00000001
	Mem0[r24 + 412:word32] = r3
	Mem0[r24 + 416:word32] = r0
	goto l000263EC
	// succ:  l000263EC
l00026504:
	r22 = r3
	r3 = 0x00000001
	Mem0[r21 + 72:word32] = r22
	Mem0[r24 + 412:word32] = r3
	Mem0[r24 + 416:word32] = r0
	goto l000263EC
	// succ:  l000263EC
fn000261AC_exit:


// fn000268CC
// Return size: 0
define fn000268CC
fn000268CC_entry:
	r1 = fp
	// succ:  l000268CC
l000268CC:
	r3 = Mem0[r5 + 4:word32]
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r3 = Mem0[r3:word32]
	r7 = 0x0000001C
	r6 = 0x00000000
	r15 = 0x000268E8
	r19 = r5
	call 0x000268E8 + r3 (retsize: 0;)
	r4 = 0xFFFFCB9C
	Mem0[r19 + 492:word32] = r3
	Mem0[r3 + 16:word32] = r0
	Mem0[r3:word32] = r4
	r4 = 0xFFFFC7CC
	Mem0[r3 + 20:word32] = r0
	Mem0[r3 + 4:word32] = r4
	r4 = 0xFFFFC82C
	Mem0[r3 + 8:word32] = r4
	r4 = 0xFFFFC7B8
	Mem0[r3 + 12:word32] = r4
	r4 = 0x00000001
	Mem0[r3 + 24:word32] = r4
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn000268CC_exit
fn000268CC_exit:


// fn00026944
// Return size: 0
define fn00026944
fn00026944_entry:
	r1 = fp
	// succ:  l00026944
l00026944:
	r1 = r1 + 0xFFFFFFC4
	Mem0[r1 + 36:word32] = r22
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	r23 = Mem0[r5 + 24:word32]
	r22 = r5
	r3 = Mem0[r23 + 4:word32]
	r4 = Mem0[r23:word32]
	Mem0[r5 + 220:word32] = r6
	branch Test(NE,r3) l00026944_ds_t
	// succ:  l00026944_ds_f l00026944_ds_t
l00026944_ds_f:
	Mem0[r5 + 224:word32] = r7
	goto l00026988
	// succ:  l00026988
l00026944_ds_t:
	Mem0[r5 + 224:word32] = r7
	goto l000269A4
	// succ:  l000269A4
l00026988:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x0002698C
	call 0x0002698C + r3 (retsize: 0;)
	branch Test(EQ,r3) l00026988_ds_t
	// succ:  l00026988_ds_f l00026988_ds_t
l00026988_ds_f:
	r3 = 0x00000000
	goto l0002699C
	// succ:  l0002699C
l00026988_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l0002699C:
	r4 = Mem0[r23:word32]
	r3 = Mem0[r23 + 4:word32]
	// succ:  l000269A4
l000269A4:
	v17 = Mem0[r4:byte]
	r19 = (word32) v17
	r3 = r3 + 0xFFFFFFFF
	r4 = r4 + 0x00000001
	branch Test(NE,r3) l000269A4_ds_t
	// succ:  l000269A4_ds_f l000269A4_ds_t
l000269A4_ds_f:
	v18 = SLICE(r19, int8, 0)
	r19 = (int32) v18
	goto l000269B8
	// succ:  l000269B8
l000269A4_ds_t:
	v18 = SLICE(r19, int8, 0)
	r19 = (int32) v18
	goto l000269D4
	// succ:  l000269D4
l000269B8:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x000269BC
	r5 = r22
	call 0x000269BC + r3 (retsize: 0;)
	branch Test(EQ,r3) l000269B8_ds_t
	// succ:  l000269B8_ds_f l000269B8_ds_t
l000269B8_ds_f:
	r3 = 0x00000000
	goto l000269CC
	// succ:  l000269CC
l000269B8_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l000269CC:
	r4 = Mem0[r23:word32]
	r3 = Mem0[r23 + 4:word32]
	// succ:  l000269D4
l000269D4:
	v19 = Mem0[r4:byte]
	r24 = (word32) v19
	r3 = r3 + 0xFFFFFFFF
	r4 = r4 + 0x00000001
	branch Test(NE,r3) l000269D4_ds_t
	// succ:  l000269D4_ds_f l000269D4_ds_t
l000269D4_ds_f:
	v20 = SLICE(r24, int8, 0)
	r24 = (int32) v20
	goto l000269E8
	// succ:  l000269E8
l000269D4_ds_t:
	v20 = SLICE(r24, int8, 0)
	r24 = (int32) v20
	goto l00026A04
	// succ:  l00026A04
l000269E8:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x000269EC
	r5 = r22
	call 0x000269EC + r3 (retsize: 0;)
	branch Test(EQ,r3) l000269E8_ds_t
	// succ:  l000269E8_ds_f l000269E8_ds_t
l000269E8_ds_f:
	r3 = 0x00000000
	goto l000269FC
	// succ:  l000269FC
l000269E8_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l000269FC:
	r4 = Mem0[r23:word32]
	r3 = Mem0[r23 + 4:word32]
	// succ:  l00026A04
l00026A04:
	v21 = Mem0[r4:byte]
	r5 = (word32) v21
	r3 = r3 + 0xFFFFFFFF
	Mem0[r22 + 212:word32] = r5
	branch Test(NE,r3) l00026A04_ds_t
	// succ:  l00026A04_ds_f l00026A04_ds_t
l00026A04_ds_f:
	r5 = r4 + 0x00000001
	goto l00026A18
	// succ:  l00026A18
l00026A04_ds_t:
	r5 = r4 + 0x00000001
	goto l00026A34
	// succ:  l00026A34
l00026A18:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x00026A1C
	r5 = r22
	call 0x00026A1C + r3 (retsize: 0;)
	branch Test(EQ,r3) l00026A18_ds_t
	// succ:  l00026A18_ds_f l00026A18_ds_t
l00026A18_ds_f:
	r3 = 0x00000000
	goto l00026A2C
	// succ:  l00026A2C
l00026A18_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l00026A2C:
	r5 = Mem0[r23:word32]
	r3 = Mem0[r23 + 4:word32]
	// succ:  l00026A34
l00026A34:
	v22 = Mem0[r5:byte]
	r4 = (word32) v22
	r3 = r3 + 0xFFFFFFFF
	r5 = r5 + 0x00000001
	v23 = SLICE(r4, int8, 0)
	r4 = (int32) v23
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 & 0xFFFFFFFF
	branch Test(NE,r3) l00026A34_ds_t
	// succ:  l00026A34_ds_f l00026A34_ds_t
l00026A34_ds_f:
	Mem0[r22 + 32:word32] = r4
	goto l00026A74
	// succ:  l00026A74
l00026A34_ds_t:
	Mem0[r22 + 32:word32] = r4
	goto l00026A94
	// succ:  l00026A94
l00026A74:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x00026A78
	r5 = r22
	call 0x00026A78 + r3 (retsize: 0;)
	branch Test(EQ,r3) l00026A74_ds_t
	// succ:  l00026A74_ds_f l00026A74_ds_t
l00026A74_ds_f:
	r3 = 0x00000000
	goto l00026A88
	// succ:  l00026A88
l00026A74_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l00026A88:
	r5 = Mem0[r23:word32]
	r3 = Mem0[r23 + 4:word32]
	r4 = Mem0[r22 + 32:word32]
	// succ:  l00026A94
l00026A94:
	v24 = Mem0[r5:byte]
	r6 = (word32) v24
	r3 = r3 + 0xFFFFFFFF
	r5 = r5 + 0x00000001
	r4 = r6 + r4
	branch Test(NE,r3) l00026A94_ds_t
	// succ:  l00026A94_ds_f l00026A94_ds_t
l00026A94_ds_f:
	Mem0[r22 + 32:word32] = r4
	goto l00026AAC
	// succ:  l00026AAC
l00026A94_ds_t:
	Mem0[r22 + 32:word32] = r4
	goto l00026AC8
	// succ:  l00026AC8
l00026AAC:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x00026AB0
	r5 = r22
	call 0x00026AB0 + r3 (retsize: 0;)
	branch Test(EQ,r3) l00026AAC_ds_t
	// succ:  l00026AAC_ds_f l00026AAC_ds_t
l00026AAC_ds_f:
	r3 = 0x00000000
	goto l00026AC0
	// succ:  l00026AC0
l00026AAC_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l00026AC0:
	r5 = Mem0[r23:word32]
	r3 = Mem0[r23 + 4:word32]
	// succ:  l00026AC8
l00026AC8:
	v25 = Mem0[r5:byte]
	r4 = (word32) v25
	r3 = r3 + 0xFFFFFFFF
	r5 = r5 + 0x00000001
	v26 = SLICE(r4, int8, 0)
	r4 = (int32) v26
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 & 0xFFFFFFFF
	branch Test(NE,r3) l00026AC8_ds_t
	// succ:  l00026AC8_ds_f l00026AC8_ds_t
l00026AC8_ds_f:
	Mem0[r22 + 28:word32] = r4
	goto l00026B08
	// succ:  l00026B08
l00026AC8_ds_t:
	Mem0[r22 + 28:word32] = r4
	goto l00026B28
	// succ:  l00026B28
l00026B08:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x00026B0C
	r5 = r22
	call 0x00026B0C + r3 (retsize: 0;)
	branch Test(EQ,r3) l00026B08_ds_t
	// succ:  l00026B08_ds_f l00026B08_ds_t
l00026B08_ds_f:
	r3 = 0x00000000
	goto l00026B1C
	// succ:  l00026B1C
l00026B08_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l00026B1C:
	r5 = Mem0[r23:word32]
	r3 = Mem0[r23 + 4:word32]
	r4 = Mem0[r22 + 28:word32]
	// succ:  l00026B28
l00026B28:
	v27 = Mem0[r5:byte]
	r6 = (word32) v27
	r3 = r3 + 0xFFFFFFFF
	r21 = r5 + 0x00000001
	r4 = r6 + r4
	branch Test(NE,r3) l00026B28_ds_t
	// succ:  l00026B28_ds_f l00026B28_ds_t
l00026B28_ds_f:
	Mem0[r22 + 28:word32] = r4
	goto l00026B40
	// succ:  l00026B40
l00026B28_ds_t:
	Mem0[r22 + 28:word32] = r4
	goto l00026B5C
	// succ:  l00026B5C
l00026B40:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x00026B44
	r5 = r22
	call 0x00026B44 + r3 (retsize: 0;)
	branch Test(EQ,r3) l00026B40_ds_t
	// succ:  l00026B40_ds_f l00026B40_ds_t
l00026B40_ds_f:
	r3 = 0x00000000
	goto l00026B54
	// succ:  l00026B54
l00026B40_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l00026B54:
	r21 = Mem0[r23:word32]
	r3 = Mem0[r23 + 4:word32]
	// succ:  l00026B5C
l00026B5C:
	v28 = Mem0[r21:byte]
	r6 = (word32) v28
	r5 = Mem0[r22:word32]
	r4 = r19 + r19
	Mem0[r22 + 36:word32] = r6
	r6 = Mem0[r22 + 472:word32]
	r4 = r4 + r4
	r4 = r4 + r4
	Mem0[r5 + 24:word32] = r6
	r7 = Mem0[r22 + 28:word32]
	r4 = r4 + r4
	r4 = r4 + r4
	Mem0[r5 + 28:word32] = r7
	r6 = Mem0[r22 + 32:word32]
	r4 = r4 + r4
	r4 = r4 + r4
	Mem0[r5 + 32:word32] = r6
	r7 = Mem0[r22 + 36:word32]
	r6 = 0x00000064
	Mem0[r5 + 20:word32] = r6
	Mem0[r5 + 36:word32] = r7
	r4 = r4 + r4
	r7 = Mem0[r5 + 4:word32]
	r5 = r22
	r24 = r24 & 0x000000FF
	r4 = r4 & 0xFFFFFFFF
	r4 = r24 + r4
	r6 = 0x00000001
	r19 = r3 + 0xFFFFFFFF
	r21 = r21 + r6
	r15 = 0x00026BD4
	r24 = r4 + 0xFFFFFFF8
	call 0x00026BD4 + r7 (retsize: 0;)
	r3 = Mem0[r22 + 496:word32]
	r3 = Mem0[r3 + 16:word32]
	branch Test(EQ,r3) l00026B5C_ds_t
	// succ:  l00026B5C_ds_f l00026B5C_ds_t
l00026B5C_ds_f:
	r7 = 0x0000003A
	goto l00026BEC
	// succ:  l00026BEC
l00026B5C_ds_t:
	r7 = 0x0000003A
	goto l00026C00
	// succ:  l00026C00
l00026BEC:
	r3 = Mem0[r22:word32]
	Mem0[r3 + 20:word32] = r7
	r3 = Mem0[r3:word32]
	r15 = 0x00026BF8
	r5 = r22
	call 0x00026BF8 + r3 (retsize: 0;)
l00026C00:
	r3 = Mem0[r22 + 32:word32]
	branch Test(EQ,r3) l00026C10
	// succ:  l00026C08 l00026C10
l00026C08:
	r3 = Mem0[r22 + 28:word32]
	branch Test(NE,r3) l00026DFC
	// succ:  l00026C10 l00026DFC
l00026C10:
	r3 = Mem0[r22:word32]
	goto l00026C14
	// succ:  l00026C14
l00026C10_ds_f:
	r6 = 0x0000000B
	goto l00026C40
	// succ:  l00026C40
l00026C10_ds_t:
	r6 = 0x0000000B
	goto l00026C58
	// succ:  l00026C58
l00026C14:
	r4 = 0x00000020
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x00026C20
	r5 = r22
	call 0x00026C20 + r3 (retsize: 0;)
	r3 = Mem0[r22 + 36:word32]
	r4 = r3 + r3
	// succ:  l00026C30
l00026C30:
	r4 = r4 + r3
	r24 = r4 ^ r24
	branch Test(EQ,r24) l00026C10_ds_t
	goto l00026C10_ds_f
	// succ:  l00026C10_ds_f l00026C10_ds_t
l00026C40:
	r3 = Mem0[r22:word32]
	Mem0[r3 + 20:word32] = r6
	r3 = Mem0[r3:word32]
	r15 = 0x00026C4C
	r5 = r22
	call 0x00026C4C + r3 (retsize: 0;)
	r3 = Mem0[r22 + 36:word32]
	// succ:  l00026C58
l00026C58:
	r27 = Mem0[r22 + 216:word32]
	branch Test(EQ,r27) l00026C58_ds_t
	// succ:  l00026C58_ds_f l00026C58_ds_t
l00026C58_ds_f:
	r7 = r3 + r3
	goto l00026C64
	// succ:  l00026C64
l00026C58_ds_t:
	r7 = r3 + r3
	goto l00026DB4
	// succ:  l00026DB4
l00026C64:
	branch Test(LE,r3) l00026C64_ds_t
	// succ:  l00026C64_ds_f l00026C64_ds_t
l00026C64_ds_f:
	r24 = 0x00000000
	goto l00026C6C
	// succ:  l00026C6C
l00026C64_ds_t:
	r24 = 0x00000000
	goto l00026D70
	// succ:  l00026D70
l00026C6C:
	r26 = 0x00000065
	r25 = 0x00000001
	goto l00026C74
	// succ:  l00026C74
l00026C6C_ds_f:
	Mem0[r27 + 4:word32] = r24
	goto l00026C7C
	// succ:  l00026C7C
l00026C6C_ds_t:
	Mem0[r27 + 4:word32] = r24
	goto l00026C98
	// succ:  l00026C98
l00026C74:
	branch Test(NE,r19) l00026C6C_ds_t
	goto l00026C6C_ds_f
	// succ:  l00026C6C_ds_f l00026C6C_ds_t
l00026C7C:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x00026C80
	r5 = r22
	call 0x00026C80 + r3 (retsize: 0;)
	branch Test(EQ,r3) l00026C7C_ds_t
	// succ:  l00026C7C_ds_f l00026C7C_ds_t
l00026C7C_ds_f:
	r3 = 0x00000000
	goto l00026C90
	// succ:  l00026C90
l00026C7C_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l00026C90:
	r21 = Mem0[r23:word32]
	r19 = Mem0[r23 + 4:word32]
	// succ:  l00026C98
l00026C98:
	v29 = Mem0[r21:byte]
	r3 = (word32) v29
	r19 = r19 + 0xFFFFFFFF
	r21 = r21 + 0x00000001
	branch Test(NE,r19) l00026C98_ds_t
	// succ:  l00026C98_ds_f l00026C98_ds_t
l00026C98_ds_f:
	Mem0[r27:word32] = r3
	goto l00026CAC
	// succ:  l00026CAC
l00026C98_ds_t:
	Mem0[r27:word32] = r3
	goto l00026CC8
	// succ:  l00026CC8
l00026CAC:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x00026CB0
	r5 = r22
	call 0x00026CB0 + r3 (retsize: 0;)
	branch Test(EQ,r3) l00026CAC_ds_t
	// succ:  l00026CAC_ds_f l00026CAC_ds_t
l00026CAC_ds_f:
	r3 = 0x00000000
	goto l00026CC0
	// succ:  l00026CC0
l00026CAC_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l00026CC0:
	r21 = Mem0[r23:word32]
	r19 = Mem0[r23 + 4:word32]
	// succ:  l00026CC8
l00026CC8:
	v30 = Mem0[r21:byte]
	r3 = (word32) v30
	r19 = r19 + 0xFFFFFFFF
	r21 = r21 + 0x00000001
	r5 = r3 & 0x0000000F
	r4 = r3
	r4 = r3 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	r4 = r4 >>u 1
	C = cond(r4)
	Mem0[r27 + 12:word32] = r5
	branch Test(NE,r19) l00026CC8_ds_t
	// succ:  l00026CC8_ds_f l00026CC8_ds_t
l00026CC8_ds_f:
	Mem0[r27 + 8:word32] = r4
	goto l00026CF8
	// succ:  l00026CF8
l00026CC8_ds_t:
	Mem0[r27 + 8:word32] = r4
	goto l00026D14
	// succ:  l00026D14
l00026CF8:
	r3 = Mem0[r23 + 12:word32]
	r15 = 0x00026CFC
	r5 = r22
	call 0x00026CFC + r3 (retsize: 0;)
	branch Test(EQ,r3) l00026CF8_ds_t
	// succ:  l00026CF8_ds_f l00026CF8_ds_t
l00026CF8_ds_f:
	r3 = 0x00000000
	goto l00026D0C
	// succ:  l00026D0C
l00026CF8_ds_t:
	r3 = 0x00000000
	goto l00026D88
	// succ:  l00026D88
l00026D0C:
	r21 = Mem0[r23:word32]
	r19 = Mem0[r23 + 4:word32]
	// succ:  l00026D14
l00026D14:
	v32 = Mem0[r21:byte]
	r4 = (word32) v32
	r3 = Mem0[r22:word32]
	r7 = Mem0[r27:word32]
	Mem0[r27 + 16:word32] = r4
	r27 = r27 + 0x00000054
	Mem0[r3 + 24:word32] = r7
	r7 = Mem0[r27 - 76:word32]
	r4 = Mem0[r3 + 4:word32]
	r6 = r25
	Mem0[r3 + 28:word32] = r7
	r7 = Mem0[r27 - 72:word32]
	r5 = r22
	r24 = r24 + 0x00000001
	Mem0[r3 + 32:word32] = r7
	r7 = Mem0[r27 - 68:word32]
	Mem0[r3 + 20:word32] = r26
	r19 = r19 + 0xFFFFFFFF
	r15 = 0x00026D58
	Mem0[r3 + 36:word32] = r7
	call 0x00026D58 + r4 (retsize: 0;)
	r3 = Mem0[r22 + 36:word32]
	r18 = cond(r24 - r3)
	branch Test(LT,r18) l00026D14_ds_t
	// succ:  l00026D14_ds_f l00026D14_ds_t
l00026D14_ds_f:
	r21 = r21 + 0x00000001
	goto l00026D70
	// succ:  l00026D70
l00026D14_ds_t:
	r21 = r21 + 0x00000001
	goto l00026C74
	// succ:  l00026C74
l00026D70:
	r5 = Mem0[r22 + 496:word32]
	r4 = 0x00000001
	r3 = r4
	Mem0[r5 + 16:word32] = r4
	Mem0[r23:word32] = r21
	Mem0[r23 + 4:word32] = r19
	// succ:  l00026D88
l00026D88:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r1 = r1 + 0x0000003C
	return
	// succ:  fn00026944_exit
l00026DB4:
	r7 = r7 + r3
	r4 = r7 + r7
	r5 = Mem0[r22 + 4:word32]
	r4 = r4 + r4
	r4 = r4 + r4
	r7 = r4 - r7
	r3 = Mem0[r5:word32]
	r4 = r7
	r4 = r7 + r7
	r4 = r4 + r4
	r5 = r22
	r7 = r4
	r15 = 0x00026DE4
	r6 = 0x00000001
	call 0x00026DE4 + r3 (retsize: 0;)
	r27 = r3
	r3 = Mem0[r22 + 36:word32]
	Mem0[r22 + 216:word32] = r27
	goto l00026C64
	// succ:  l00026C64
l00026DFC:
	r3 = Mem0[r22 + 36:word32]
	branch Test(GT,r3) l00026DFC_ds_t
	// succ:  l00026DFC_ds_f l00026DFC_ds_t
l00026DFC_ds_f:
	r4 = r3 + r3
	goto l00026E08
	// succ:  l00026E08
l00026DFC_ds_t:
	r4 = r3 + r3
	goto l00026C30
	// succ:  l00026C30
l00026E08:
	r3 = Mem0[r22:word32]
	goto l00026C14
	// succ:  l00026C14
fn00026944_exit:


// fn00026E10
// Return size: 0
define fn00026E10
fn00026E10_entry:
	r1 = fp
	// succ:  l00026E10
l00026E10:
	r1 = r1 + 0xFFFFFFD8
	Mem0[r1 + 32:word32] = r19
	Mem0[r1 + 36:word32] = r21
	Mem0[r1:word32] = r15
	r3 = Mem0[r5:word32]
	r9 = 0x0000000D
	r19 = r5
	r21 = r6
	r8 = r7 + r8
	r18 = cond(r9 -u r7)
	branch Test(GE,r18) l00026E10_ds_t
	// succ:  l00026E10_ds_f l00026E10_ds_t
l00026E10_ds_f:
	r4 = Mem0[r3 + 4:word32]
	goto l00026E40
	// succ:  l00026E40
l00026E10_ds_t:
	r4 = Mem0[r3 + 4:word32]
	goto l00026E78
	// succ:  l00026E78
l00026E40:
	v14 = Mem0[r6:byte]
	r6 = (word32) v14
	r6 = r6 ^ 0x0000004A
	branch Test(EQ,r6) l00026F0C
	// succ:  l00026E4C l00026F0C
l00026E4C:
	r6 = 0x0000004D
	// succ:  l00026E50
l00026E50:
	r5 = r19
	Mem0[r3 + 20:word32] = r6
	Mem0[r3 + 24:word32] = r8
	r15 = 0x00026E5C
	r6 = 0x00000001
	call 0x00026E5C + r4 (retsize: 0;)
	// succ:  l00026E64
l00026E64:
	r15 = Mem0[r1:word32]
	// succ:  l00026E68
l00026E68:
	r19 = Mem0[r1 + 32:word32]
	r21 = Mem0[r1 + 36:word32]
	r1 = r1 + 0x00000028
	return
	// succ:  fn00026E10_exit
l00026E78:
	r5 = 0x00000005
	r18 = cond(r5 -u r7)
	branch Test(GE,r18) l00026E4C
	// succ:  l00026E84 l00026E4C
l00026E84:
	v15 = Mem0[r6:byte]
	r5 = (word32) v15
	r5 = r5 ^ 0x0000004A
	branch Test(NE,r5) l00026E4C
	// succ:  l00026E90 l00026E4C
l00026E90:
	v16 = Mem0[r6 + 1:byte]
	r5 = (word32) v16
	r5 = r5 ^ 0x00000046
	branch Test(NE,r5) l00026E4C
	// succ:  l00026E9C l00026E4C
l00026E9C:
	v17 = Mem0[r6 + 2:byte]
	r6 = (word32) v17
	// succ:  l00026EA0
l00026EA0:
	r6 = r6 & 0x000000FF
	// succ:  l00026EA4
l00026EA4:
	r6 = r6 ^ 0x00000058
	branch Test(NE,r6) l00026E4C
	// succ:  l00026EAC l00026E4C
l00026EAC:
	v18 = Mem0[r21 + 3:byte]
	r5 = (word32) v18
	r5 = r5 ^ 0x00000058
	branch Test(NE,r5) l00026E4C
	// succ:  l00026EB8 l00026E4C
l00026EB8:
	v19 = Mem0[r21 + 4:byte]
	r5 = (word32) v19
	branch Test(NE,r5) l00026EB8_ds_t
	// succ:  l00026EB8_ds_f l00026EB8_ds_t
l00026EB8_ds_f:
	r6 = 0x0000004D
	goto l00026EC4
	// succ:  l00026EC4
l00026EB8_ds_t:
	r6 = 0x0000004D
	goto l00026E50
	// succ:  l00026E50
l00026EC4:
	v20 = Mem0[r21 + 5:byte]
	r5 = (word32) v20
	r6 = r5 ^ 0x00000011
	branch Test(EQ,r6) l00026EC4_ds_t
	// succ:  l00026EC4_ds_f l00026EC4_ds_t
l00026EC4_ds_f:
	r6 = 0x0000006D
	goto l00026ED4
	// succ:  l00026ED4
l00026EC4_ds_t:
	r6 = 0x0000006D
	goto l00026E50
	// succ:  l00026E50
l00026ED4:
	r6 = r5 ^ 0x00000013
	branch Test(EQ,r6) l00026ED4_ds_t
	// succ:  l00026ED4_ds_f l00026ED4_ds_t
l00026ED4_ds_f:
	r5 = r5 ^ 0x00000010
	goto l00026EE0
	// succ:  l00026EE0
l00026ED4_ds_t:
	r5 = r5 ^ 0x00000010
	goto l00027128
	// succ:  l00027128
l00026EE0:
	branch Test(EQ,r5) l00026EE0_ds_t
	// succ:  l00026EE0_ds_f l00026EE0_ds_t
l00026EE0_ds_f:
	r5 = 0x00000059
	goto l00026EE8
	// succ:  l00026EE8
l00026EE0_ds_t:
	r5 = 0x00000059
	goto l00027108
	// succ:  l00027108
l00026EE8:
	Mem0[r3 + 20:word32] = r5
	v21 = Mem0[r21 + 5:byte]
	r7 = (word32) v21
	r5 = r19
	r6 = 0x00000001
	Mem0[r3 + 28:word32] = r8
	r15 = 0x00026EFC
	Mem0[r3 + 24:word32] = r7
	call 0x00026EFC + r4 (retsize: 0;)
	r15 = Mem0[r1:word32]
	goto l00026E68
	// succ:  l00026E68
l00026F0C:
	v22 = Mem0[r21 + 1:byte]
	r6 = (word32) v22
	r6 = r6 ^ 0x00000046
	branch Test(NE,r6) l00026F0C_ds_t
	// succ:  l00026F0C_ds_f l00026F0C_ds_t
l00026F0C_ds_f:
	r6 = 0x0000004D
	goto l00026F1C
	// succ:  l00026F1C
l00026F0C_ds_t:
	r6 = 0x0000004D
	goto l00026E50
	// succ:  l00026E50
l00026F1C:
	v23 = Mem0[r21 + 2:byte]
	r6 = (word32) v23
	r7 = r6 ^ 0x00000049
	branch Test(NE,r7) l00026EA0
	// succ:  l00026F28 l00026EA0
l00026F28:
	v24 = Mem0[r21 + 3:byte]
	r7 = (word32) v24
	r7 = r7 ^ 0x00000046
	branch Test(NE,r7) l00026EA0
	// succ:  l00026F34 l00026EA0
l00026F34:
	v25 = Mem0[r21 + 4:byte]
	r7 = (word32) v25
	branch Test(NE,r7) l00026F34_ds_t
	// succ:  l00026F34_ds_f l00026F34_ds_t
l00026F34_ds_f:
	r6 = r6 & 0x000000FF
	goto l00026F40
	// succ:  l00026F40
l00026F34_ds_t:
	r6 = r6 & 0x000000FF
	goto l00026EA4
	// succ:  l00026EA4
l00026F40:
	r6 = 0x00000001
	Mem0[r5 + 328:word32] = r6
	v26 = Mem0[r21 + 5:byte]
	r7 = (word32) v26
	v27 = SLICE(r7, word16, 0)
	Mem0[r5 + 332:word16] = v27
	v28 = Mem0[r21 + 6:byte]
	r9 = (word32) v28
	r11 = r7 ^ r6
	v30 = SLICE(r9, word16, 0)
	Mem0[r5 + 334:word16] = v30
	v32 = Mem0[r21 + 7:byte]
	r10 = (word32) v32
	v33 = SLICE(r10, word16, 0)
	Mem0[r5 + 336:word16] = v33
	v34 = Mem0[r21 + 8:byte]
	r6 = (word32) v34
	v36 = Mem0[r21 + 9:byte]
	r12 = (word32) v36
	v37 = SLICE(r6, int8, 0)
	r6 = (int32) v37
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 & 0xFFFFFFFF
	r6 = r6 + r12
	Mem0[r5 + 340:word32] = r6
	v38 = Mem0[r21 + 10:byte]
	r6 = (word32) v38
	v39 = Mem0[r21 + 11:byte]
	r12 = (word32) v39
	v40 = SLICE(r6, int8, 0)
	r6 = (int32) v40
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 + r6
	r6 = r6 & 0xFFFFFFFF
	r6 = r6 + r12
	branch Test(EQ,r11) l00026F40_ds_t
	// succ:  l00026F40_ds_f l00026F40_ds_t
l00026F40_ds_f:
	Mem0[r5 + 344:word32] = r6
	goto l00026FE0
	// succ:  l00026FE0
l00026F40_ds_t:
	Mem0[r5 + 344:word32] = r6
	goto l00027020
	// succ:  l00027020
l00026FE0:
	r6 = 0x00000077
	Mem0[r3 + 20:word32] = r6
	Mem0[r3 + 24:word32] = r7
	Mem0[r3 + 28:word32] = r9
	Mem0[r1 + 28:word32] = r8
	r15 = 0x00026FF4
	r6 = 0xFFFFFFFF
	call 0x00026FF4 + r4 (retsize: 0;)
	r3 = Mem0[r19:word32]
	v41 = Mem0[r19 + 332:word16]
	r7 = (word32) v41
	v42 = Mem0[r19 + 334:word16]
	r9 = (word32) v42
	v43 = Mem0[r19 + 336:word16]
	r10 = (word32) v43
	r4 = Mem0[r3 + 4:word32]
	r8 = Mem0[r1 + 28:word32]
	v44 = SLICE(r7, int16, 0)
	r7 = (int32) v44
	v45 = SLICE(r9, int16, 0)
	r9 = (int32) v45
	v46 = SLICE(r10, int16, 0)
	r10 = (int32) v46
	// succ:  l00027020
l00027020:
	Mem0[r3 + 24:word32] = r7
	Mem0[r3 + 28:word32] = r9
	r7 = Mem0[r19 + 340:word32]
	r5 = r19
	r6 = 0x00000001
	Mem0[r3 + 32:word32] = r7
	r7 = Mem0[r19 + 344:word32]
	Mem0[r3 + 40:word32] = r10
	Mem0[r3 + 36:word32] = r7
	r7 = 0x00000057
	Mem0[r3 + 20:word32] = r7
	r15 = 0x0002704C
	Mem0[r1 + 28:word32] = r8
	call 0x0002704C + r4 (retsize: 0;)
	v47 = Mem0[r21 + 12:byte]
	r5 = (word32) v47
	v48 = Mem0[r21 + 13:byte]
	r6 = (word32) v48
	v49 = SLICE(r5, int8, 0)
	r5 = (int32) v49
	v50 = SLICE(r6, int8, 0)
	r6 = (int32) v50
	r3 = r5 | r6
	r3 = r3 & 0x000000FF
	branch Test(EQ,r3) l00027020_ds_t
	// succ:  l00027020_ds_f l00027020_ds_t
l00027020_ds_f:
	r8 = Mem0[r1 + 28:word32]
	goto l00027074
	// succ:  l00027074
l00027020_ds_t:
	r8 = Mem0[r1 + 28:word32]
	goto l000270B8
	// succ:  l000270B8
l00027074:
	r3 = Mem0[r19:word32]
	r4 = 0x0000005A
	r5 = r19
	Mem0[r3 + 20:word32] = r4
	v51 = Mem0[r21 + 12:byte]
	r7 = (word32) v51
	r4 = Mem0[r3 + 4:word32]
	r6 = 0x00000001
	Mem0[r3 + 24:word32] = r7
	v52 = Mem0[r21 + 13:byte]
	r7 = (word32) v52
	Mem0[r3 + 28:word32] = r7
	r15 = 0x0002709C
	Mem0[r1 + 28:word32] = r8
	call 0x0002709C + r4 (retsize: 0;)
	v53 = Mem0[r21 + 12:byte]
	r5 = (word32) v53
	v54 = Mem0[r21 + 13:byte]
	r6 = (word32) v54
	r8 = Mem0[r1 + 28:word32]
	v55 = SLICE(r5, int8, 0)
	r5 = (int32) v55
	v56 = SLICE(r6, int8, 0)
	r6 = (int32) v56
	// succ:  l000270B8
l000270B8:
	r6 = r6 & 0x000000FF
	r5 = r5 & 0x000000FF
	r15 = 0x000270C0
	Mem0[r1 + 28:word32] = r8
	call fn0002E908 (retsize: 0;)
	r8 = Mem0[r1 + 28:word32]
	r4 = r3 + r3
	r3 = r4 + r3
	r8 = r8 + 0xFFFFFFF2
	r3 = r3 ^ r8
	branch Test(EQ,r3) l000270B8_ds_t
	// succ:  l000270B8_ds_f l000270B8_ds_t
l000270B8_ds_f:
	r5 = r19
	goto l000270E4
	// succ:  l000270E4
l000270B8_ds_t:
	r5 = r19
	goto l00026E64
	// succ:  l00026E64
l000270E4:
	r3 = Mem0[r19:word32]
	r7 = 0x00000058
	r4 = Mem0[r3 + 4:word32]
	r6 = 0x00000001
	Mem0[r3 + 20:word32] = r7
	r15 = 0x000270F8
	Mem0[r3 + 24:word32] = r8
	call 0x000270F8 + r4 (retsize: 0;)
	r15 = Mem0[r1:word32]
	goto l00026E68
	// succ:  l00026E68
l00027108:
	r5 = 0x0000006C
	Mem0[r3 + 20:word32] = r5
	r5 = r19
	Mem0[r3 + 24:word32] = r8
	r15 = 0x00027118
	r6 = 0x00000001
	call 0x00027118 + r4 (retsize: 0;)
	r15 = Mem0[r1:word32]
	goto l00026E68
	// succ:  l00026E68
l00027128:
	r5 = r19
	r7 = 0x0000006E
	Mem0[r3 + 20:word32] = r7
	Mem0[r3 + 24:word32] = r8
	r15 = 0x00027138
	r6 = 0x00000001
	call 0x00027138 + r4 (retsize: 0;)
	r15 = Mem0[r1:word32]
	goto l00026E68
	// succ:  l00026E68
fn00026E10_exit:


// fn00027148
// Return size: 0
define fn00027148
fn00027148_entry:
	r1 = fp
	// succ:  l00027148
l00027148:
	r1 = r1 + 0xFFFFFFD0
	Mem0[r1 + 40:word32] = r23
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 44:word32] = r24
	r22 = Mem0[r5 + 24:word32]
	r6 = Mem0[r22 + 4:word32]
	branch Test(NE,r6) l00027148_ds_t
	// succ:  l00027148_ds_f l00027148_ds_t
l00027148_ds_f:
	r23 = r5
	goto l00027174
	// succ:  l00027174
l00027148_ds_t:
	r23 = r5
	goto l00027288
	// succ:  l00027288
l00027174:
	r3 = Mem0[r22 + 12:word32]
	r15 = 0x00027178
	call 0x00027178 + r3 (retsize: 0;)
	branch Test(EQ,r3) l00027174_ds_t
	// succ:  l00027174_ds_f l00027174_ds_t
l00027174_ds_f:
	r15 = Mem0[r1:word32]
	goto l00027188
	// succ:  l00027188
l00027174_ds_t:
	r15 = Mem0[r1:word32]
	goto l00027268
	// succ:  l00027268
l00027188:
	r4 = Mem0[r22:word32]
	r6 = Mem0[r22 + 4:word32]
	goto l00027190
	// succ:  l00027190
l00027188_ds_f:
	r21 = r4 + 0x00000001
	goto l000271CC
	// succ:  l000271CC
l00027188_ds_t:
	r21 = r4 + 0x00000001
	goto l000271E8
	// succ:  l000271E8
l00027190:
	v13 = Mem0[r4:byte]
	r3 = (word32) v13
	r24 = r6 + 0xFFFFFFFF
	v14 = SLICE(r3, int8, 0)
	r3 = (int32) v14
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r19 = r3 & 0xFFFFFFFF
	branch Test(NE,r24) l00027188_ds_t
	goto l00027188_ds_f
	// succ:  l00027188_ds_f l00027188_ds_t
l000271CC:
	r3 = Mem0[r22 + 12:word32]
	r15 = 0x000271D0
	r5 = r23
	call 0x000271D0 + r3 (retsize: 0;)
	branch Test(EQ,r3) l000271CC_ds_t
	// succ:  l000271CC_ds_f l000271CC_ds_t
l000271CC_ds_f:
	r15 = Mem0[r1:word32]
	goto l000271E0
	// succ:  l000271E0
l000271CC_ds_t:
	r15 = Mem0[r1:word32]
	goto l00027268
	// succ:  l00027268
l000271E0:
	r21 = Mem0[r22:word32]
	r24 = Mem0[r22 + 4:word32]
	// succ:  l000271E8
l000271E8:
	v15 = Mem0[r21:byte]
	r3 = (word32) v15
	r4 = Mem0[r23:word32]
	r5 = r23
	r19 = r3 + r19
	r3 = Mem0[r23 + 472:word32]
	r19 = r19 + 0xFFFFFFFE
	Mem0[r4 + 28:word32] = r19
	Mem0[r4 + 24:word32] = r3
	r3 = 0x0000005B
	Mem0[r4 + 20:word32] = r3
	r3 = Mem0[r4 + 4:word32]
	r15 = 0x00027214
	r6 = 0x00000001
	call 0x00027214 + r3 (retsize: 0;)
	r4 = r21 + 0x00000001
	r3 = r24 + 0xFFFFFFFF
	Mem0[r22:word32] = r4
	branch Test(LE,r19) l000271E8_ds_t
	// succ:  l000271E8_ds_f l000271E8_ds_t
l000271E8_ds_f:
	Mem0[r22 + 4:word32] = r3
	goto l00027230
	// succ:  l00027230
l000271E8_ds_t:
	Mem0[r22 + 4:word32] = r3
	goto l00027290
	// succ:  l00027290
l00027230:
	r3 = Mem0[r23 + 24:word32]
	r6 = r19
	r3 = Mem0[r3 + 16:word32]
	r15 = 0x0002723C
	r5 = r23
	call 0x0002723C + r3 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r3 = 0x00000001
	r1 = r1 + 0x00000030
	return
	// succ:  fn00027148_exit
l00027268:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r3 = 0x00000000
	r1 = r1 + 0x00000030
	return
	// succ:  fn00027148_exit
l00027288:
	r4 = Mem0[r22:word32]
	goto l00027190
	// succ:  l00027190
l00027290:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r3 = 0x00000001
	r1 = r1 + 0x00000030
	return
	// succ:  fn00027148_exit
fn00027148_exit:


// fn000272B4
// Return size: 0
define fn000272B4
fn000272B4_entry:
	r1 = fp
	// succ:  l000272B4
l000272B4:
	r1 = r1 + 0xFFFFFFD0
	Mem0[r1 + 40:word32] = r23
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 44:word32] = r24
	r22 = Mem0[r5 + 24:word32]
	r23 = r5
	r19 = Mem0[r22:word32]
	r21 = Mem0[r22 + 4:word32]
	// succ:  l000272E0
l000272E0:
	branch Test(NE,r21) l00027300
	// succ:  l000272E4 l00027300
l000272E4:
	r3 = Mem0[r22 + 12:word32]
	r15 = 0x000272E8
	r5 = r23
	call 0x000272E8 + r3 (retsize: 0;)
	branch Test(EQ,r3) l000272E4_ds_t
	// succ:  l000272E4_ds_f l000272E4_ds_t
l000272E4_ds_f:
	r3 = 0x00000000
	goto l000272F8
	// succ:  l000272F8
l000272E4_ds_t:
	r3 = 0x00000000
	goto l000273C0
	// succ:  l000273C0
l000272F8:
	r19 = Mem0[r22:word32]
	r21 = Mem0[r22 + 4:word32]
	// succ:  l00027300
l00027300:
	v11 = Mem0[r19:byte]
	r3 = (word32) v11
	r21 = r21 + 0xFFFFFFFF
	r3 = r3 ^ 0x000000FF
	branch Test(EQ,r3) l00027300_ds_t
	// succ:  l00027300_ds_f l00027300_ds_t
l00027300_ds_f:
	r19 = r19 + 0x00000001
	goto l00027314
	// succ:  l00027314
l00027300_ds_t:
	r19 = r19 + 0x00000001
	goto l00027368
	// succ:  l00027368
l00027314:
	r6 = Mem0[r23 + 496:word32]
	r5 = r23
	r4 = r19
	r3 = Mem0[r6 + 24:word32]
	r3 = r3 + 0x00000001
	Mem0[r6 + 24:word32] = r3
	Mem0[r22 + 4:word32] = r21
	branch Test(NE,r21) l00027314_ds_t
	// succ:  l00027314_ds_f l00027314_ds_t
l00027314_ds_f:
	Mem0[r22:word32] = r19
	goto l00027338
	// succ:  l00027338
l00027314_ds_t:
	Mem0[r22:word32] = r19
	goto l00027354
	// succ:  l00027354
l00027338:
	r3 = Mem0[r22 + 12:word32]
	r15 = 0x0002733C
	call 0x0002733C + r3 (retsize: 0;)
	branch Test(EQ,r3) l00027338_ds_t
	// succ:  l00027338_ds_f l00027338_ds_t
l00027338_ds_f:
	r3 = 0x00000000
	goto l0002734C
	// succ:  l0002734C
l00027338_ds_t:
	r3 = 0x00000000
	goto l000273C0
	// succ:  l000273C0
l0002734C:
	r4 = Mem0[r22:word32]
	r21 = Mem0[r22 + 4:word32]
	// succ:  l00027354
l00027354:
	v14 = Mem0[r4:byte]
	r3 = (word32) v14
	r21 = r21 + 0xFFFFFFFF
	r3 = r3 ^ 0x000000FF
	branch Test(NE,r3) l00027354_ds_t
	// succ:  l00027354_ds_f l00027354_ds_t
l00027354_ds_f:
	r19 = r4 + 0x00000001
	goto l00027368
	// succ:  l00027368
l00027354_ds_t:
	r19 = r4 + 0x00000001
	goto l00027314
	// succ:  l00027314
l00027368:
	branch Test(NE,r21) l00027368_ds_t
	// succ:  l00027368_ds_f l00027368_ds_t
l00027368_ds_f:
	r5 = r23
	goto l00027370
	// succ:  l00027370
l00027368_ds_t:
	r5 = r23
	goto l0002738C
	// succ:  l0002738C
l00027370:
	r3 = Mem0[r22 + 12:word32]
	r15 = 0x00027374
	call 0x00027374 + r3 (retsize: 0;)
	branch Test(EQ,r3) l00027370_ds_t
	// succ:  l00027370_ds_f l00027370_ds_t
l00027370_ds_f:
	r3 = 0x00000000
	goto l00027384
	// succ:  l00027384
l00027370_ds_t:
	r3 = 0x00000000
	goto l000273C0
	// succ:  l000273C0
l00027384:
	r19 = Mem0[r22:word32]
	r21 = Mem0[r22 + 4:word32]
	// succ:  l0002738C
l0002738C:
	v15 = Mem0[r19:byte]
	r24 = (word32) v15
	r21 = r21 + 0xFFFFFFFF
	r3 = r24 ^ 0x000000FF
	branch Test(EQ,r3) l0002738C_ds_t
	// succ:  l0002738C_ds_f l0002738C_ds_t
l0002738C_ds_f:
	r19 = r19 + 0x00000001
	goto l000273A0
	// succ:  l000273A0
l0002738C_ds_t:
	r19 = r19 + 0x00000001
	goto l00027368
	// succ:  l00027368
l000273A0:
	r4 = Mem0[r23 + 496:word32]
	branch Test(NE,r24) l000273A0_ds_t
	// succ:  l000273A0_ds_f l000273A0_ds_t
l000273A0_ds_f:
	r3 = Mem0[r4 + 24:word32]
	goto l000273AC
	// succ:  l000273AC
l000273A0_ds_t:
	r3 = Mem0[r4 + 24:word32]
	goto l000273E0
	// succ:  l000273E0
l000273AC:
	r3 = r3 + 0x00000002
	Mem0[r4 + 24:word32] = r3
	Mem0[r22:word32] = r19
	Mem0[r22 + 4:word32] = r21
	goto l000272E0
	// succ:  l000272E0
l000273C0:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r1 = r1 + 0x00000030
	return
	// succ:  fn000272B4_exit
l000273E0:
	branch Test(EQ,r3) l000273E0_ds_t
	// succ:  l000273E0_ds_f l000273E0_ds_t
l000273E0_ds_f:
	r7 = 0x00000074
	goto l000273E8
	// succ:  l000273E8
l000273E0_ds_t:
	r7 = 0x00000074
	goto l00027410
	// succ:  l00027410
l000273E8:
	r4 = Mem0[r23:word32]
	r5 = r23
	Mem0[r4 + 20:word32] = r7
	r7 = Mem0[r4 + 4:word32]
	Mem0[r4 + 24:word32] = r3
	r6 = 0xFFFFFFFF
	r15 = 0x00027400
	Mem0[r4 + 28:word32] = r24
	call 0x00027400 + r7 (retsize: 0;)
	r3 = Mem0[r23 + 496:word32]
	Mem0[r3 + 24:word32] = r0
	// succ:  l00027410
l00027410:
	Mem0[r23 + 472:word32] = r24
	Mem0[r22:word32] = r19
	Mem0[r22 + 4:word32] = r21
	r3 = 0x00000001
	goto l000273C0
	// succ:  l000273C0
fn000272B4_exit:


// fn00027448
// Return size: 0
define fn00027448
fn00027448_entry:
	r1 = fp
	// succ:  l00027448
l00027448:
	r1 = r1 + 0xFFFFFD84
	Mem0[r1 + 600:word32] = r23
	Mem0[r1:word32] = r15
	Mem0[r1 + 584:word32] = r19
	Mem0[r1 + 588:word32] = r20
	Mem0[r1 + 592:word32] = r21
	Mem0[r1 + 596:word32] = r22
	Mem0[r1 + 604:word32] = r24
	Mem0[r1 + 608:word32] = r25
	Mem0[r1 + 612:word32] = r26
	Mem0[r1 + 616:word32] = r27
	Mem0[r1 + 620:word32] = r28
	Mem0[r1 + 624:word32] = r29
	Mem0[r1 + 628:word32] = r30
	Mem0[r1 + 632:word32] = r31
	r22 = Mem0[r5 + 24:word32]
	r21 = Mem0[r22 + 4:word32]
	branch Test(NE,r21) l00027448_ds_t
	// succ:  l00027448_ds_f l00027448_ds_t
l00027448_ds_f:
	r23 = r5
	goto l00027494
	// succ:  l00027494
l00027448_ds_t:
	r23 = r5
	goto l00027844
	// succ:  l00027844
l00027494:
	r3 = Mem0[r22 + 12:word32]
	r15 = 0x00027498
	call 0x00027498 + r3 (retsize: 0;)
	branch Test(EQ,r3) l00027494_ds_t
	// succ:  l00027494_ds_f l00027494_ds_t
l00027494_ds_f:
	r3 = 0x00000000
	goto l000274A8
	// succ:  l000274A8
l00027494_ds_t:
	r3 = 0x00000000
	goto l000277E4
	// succ:  l000277E4
l000274A8:
	r19 = Mem0[r22:word32]
	r21 = Mem0[r22 + 4:word32]
	goto l000274B0
	// succ:  l000274B0
l000274A8_ds_f:
	r19 = r19 + 0x00000001
	goto l000274EC
	// succ:  l000274EC
l000274A8_ds_t:
	r19 = r19 + 0x00000001
	goto l00027508
	// succ:  l00027508
l000274B0:
	v19 = Mem0[r19:byte]
	r3 = (word32) v19
	r21 = r21 + 0xFFFFFFFF
	v20 = SLICE(r3, int8, 0)
	r3 = (int32) v20
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r26 = r3 & 0xFFFFFFFF
	branch Test(NE,r21) l000274A8_ds_t
	goto l000274A8_ds_f
	// succ:  l000274A8_ds_f l000274A8_ds_t
l000274EC:
	r3 = Mem0[r22 + 12:word32]
	r15 = 0x000274F0
	r5 = r23
	call 0x000274F0 + r3 (retsize: 0;)
	branch Test(EQ,r3) l000274EC_ds_t
	// succ:  l000274EC_ds_f l000274EC_ds_t
l000274EC_ds_f:
	r3 = 0x00000000
	goto l00027500
	// succ:  l00027500
l000274EC_ds_t:
	r3 = 0x00000000
	goto l000277E4
	// succ:  l000277E4
l00027500:
	r19 = Mem0[r22:word32]
	r21 = Mem0[r22 + 4:word32]
	// succ:  l00027508
l00027508:
	v21 = Mem0[r19:byte]
	r3 = (word32) v21
	r4 = 0x00000010
	r21 = r21 + 0xFFFFFFFF
	r26 = r3 + r26
	r26 = r26 + 0xFFFFFFFE
	r18 = cond(r4 - r26)
	branch Test(GE,r18) l00027508_ds_t
	// succ:  l00027508_ds_f l00027508_ds_t
l00027508_ds_f:
	r19 = r19 + 0x00000001
	goto l00027528
	// succ:  l00027528
l00027508_ds_t:
	r19 = r19 + 0x00000001
	goto l000277BC
	// succ:  l000277BC
l00027528:
	r30 = 0x00000050
	r25 = r1 + 0x0000023E
	r29 = 0x00000056
	// succ:  l00027534
l00027534:
	branch Test(NE,r21) l00027554
	// succ:  l00027538 l00027554
l00027538:
	r3 = Mem0[r22 + 12:word32]
	r15 = 0x0002753C
	r5 = r23
	call 0x0002753C + r3 (retsize: 0;)
	branch Test(EQ,r3) l00027538_ds_t
	// succ:  l00027538_ds_f l00027538_ds_t
l00027538_ds_f:
	r3 = 0x00000000
	goto l0002754C
	// succ:  l0002754C
l00027538_ds_t:
	r3 = 0x00000000
	goto l000277E4
	// succ:  l000277E4
l0002754C:
	r19 = Mem0[r22:word32]
	r21 = Mem0[r22 + 4:word32]
	// succ:  l00027554
l00027554:
	r3 = Mem0[r23:word32]
	v25 = Mem0[r19:byte]
	r27 = (word32) v25
	r5 = r23
	r4 = Mem0[r3 + 4:word32]
	v26 = SLICE(r27, int8, 0)
	r27 = (int32) v26
	r28 = r27 & 0x000000FF
	Mem0[r3 + 20:word32] = r30
	Mem0[r3 + 24:word32] = r28
	r15 = 0x00027574
	r6 = 0x00000001
	call 0x00027574 + r4 (retsize: 0;)
	r21 = r21 + 0xFFFFFFFF
	r3 = r19 + 0x00000001
	v29 = SLICE(r0, word16, 0)
	Mem0[r1 + 540:word16] = v29
	r24 = r1 + 0x0000021E
	r31 = 0x00000000
	goto l00027590
	// succ:  l00027590
l00027554_ds_f:
	r5 = r23
	goto l00027598
	// succ:  l00027598
l00027554_ds_t:
	r5 = r23
	goto l000275B4
	// succ:  l000275B4
l00027590:
	branch Test(NE,r21) l00027554_ds_t
	goto l00027554_ds_f
	// succ:  l00027554_ds_f l00027554_ds_t
l00027598:
	r3 = Mem0[r22 + 12:word32]
	r15 = 0x0002759C
	call 0x0002759C + r3 (retsize: 0;)
	branch Test(EQ,r3) l00027598_ds_t
	// succ:  l00027598_ds_f l00027598_ds_t
l00027598_ds_f:
	r3 = 0x00000000
	goto l000275AC
	// succ:  l000275AC
l00027598_ds_t:
	r3 = 0x00000000
	goto l000277E4
	// succ:  l000277E4
l000275AC:
	r3 = Mem0[r22:word32]
	r21 = Mem0[r22 + 4:word32]
	// succ:  l000275B4
l000275B4:
	v30 = Mem0[r3:byte]
	r4 = (word32) v30
	r24 = r24 + 0x00000002
	r5 = r25 ^ r24
	v31 = SLICE(r4, word16, 0)
	Mem0[r24 - 2:word16] = v31
	r21 = r21 + 0xFFFFFFFF
	r3 = r3 + 0x00000001
	branch Test(NE,r5) l000275B4_ds_t
	// succ:  l000275B4_ds_f l000275B4_ds_t
l000275B4_ds_f:
	r31 = r31 + r4
	goto l000275D4
	// succ:  l000275D4
l000275B4_ds_t:
	r31 = r31 + r4
	goto l00027590
	// succ:  l00027590
l000275D4:
	r4 = Mem0[r23:word32]
	v32 = Mem0[r1 + 542:word16]
	r20 = (word32) v32
	v33 = Mem0[r1 + 544:word16]
	r19 = (word32) v33
	v35 = Mem0[r1 + 546:word16]
	r12 = (word32) v35
	v37 = Mem0[r1 + 548:word16]
	r11 = (word32) v37
	v39 = Mem0[r1 + 550:word16]
	r10 = (word32) v39
	v41 = Mem0[r1 + 552:word16]
	r9 = (word32) v41
	v43 = Mem0[r1 + 554:word16]
	r8 = (word32) v43
	v44 = Mem0[r1 + 556:word16]
	r7 = (word32) v44
	r24 = Mem0[r4 + 4:word32]
	v45 = SLICE(r20, int16, 0)
	r20 = (int32) v45
	v46 = SLICE(r12, int16, 0)
	r12 = (int32) v46
	v47 = SLICE(r11, int16, 0)
	r11 = (int32) v47
	v48 = SLICE(r10, int16, 0)
	r10 = (int32) v48
	v49 = SLICE(r9, int16, 0)
	r9 = (int32) v49
	v50 = SLICE(r8, int16, 0)
	r8 = (int32) v50
	v51 = SLICE(r7, int16, 0)
	r7 = (int32) v51
	r5 = r23
	v52 = SLICE(r19, int16, 0)
	r19 = (int32) v52
	Mem0[r4 + 24:word32] = r20
	Mem0[r4 + 28:word32] = r19
	Mem0[r4 + 32:word32] = r12
	Mem0[r4 + 36:word32] = r11
	Mem0[r4 + 40:word32] = r10
	Mem0[r4 + 44:word32] = r9
	Mem0[r4 + 48:word32] = r8
	Mem0[r4 + 52:word32] = r7
	Mem0[r4 + 20:word32] = r29
	Mem0[r1 + 580:word32] = r3
	r15 = 0x00027648
	r6 = 0x00000002
	call 0x00027648 + r24 (retsize: 0;)
	r4 = Mem0[r23:word32]
	v53 = Mem0[r1 + 558:word16]
	r20 = (word32) v53
	v54 = Mem0[r1 + 560:word16]
	r19 = (word32) v54
	v55 = Mem0[r1 + 562:word16]
	r11 = (word32) v55
	v56 = Mem0[r1 + 564:word16]
	r10 = (word32) v56
	v57 = Mem0[r1 + 566:word16]
	r9 = (word32) v57
	v58 = Mem0[r1 + 568:word16]
	r8 = (word32) v58
	v59 = Mem0[r1 + 570:word16]
	r7 = (word32) v59
	v60 = Mem0[r1 + 572:word16]
	r6 = (word32) v60
	r12 = Mem0[r4 + 4:word32]
	r5 = r23
	v61 = SLICE(r20, int16, 0)
	r20 = (int32) v61
	v62 = SLICE(r11, int16, 0)
	r11 = (int32) v62
	v63 = SLICE(r10, int16, 0)
	r10 = (int32) v63
	v64 = SLICE(r9, int16, 0)
	r9 = (int32) v64
	v65 = SLICE(r8, int16, 0)
	r8 = (int32) v65
	v66 = SLICE(r7, int16, 0)
	r7 = (int32) v66
	v67 = SLICE(r6, int16, 0)
	r6 = (int32) v67
	v68 = SLICE(r19, int16, 0)
	r19 = (int32) v68
	Mem0[r4 + 52:word32] = r6
	Mem0[r4 + 24:word32] = r20
	Mem0[r4 + 28:word32] = r19
	Mem0[r4 + 32:word32] = r11
	Mem0[r4 + 36:word32] = r10
	Mem0[r4 + 40:word32] = r9
	Mem0[r4 + 44:word32] = r8
	Mem0[r4 + 48:word32] = r7
	Mem0[r4 + 20:word32] = r29
	r6 = 0x00000002
	r26 = r26 + 0xFFFFFFEF
	r15 = 0x000276C8
	Mem0[r1 + 576:word32] = r26
	call 0x000276C8 + r12 (retsize: 0;)
	r4 = 0x00000100
	r18 = cond(r4 - r31)
	branch Test(LT,r18) l000275D4_ds_t
	// succ:  l000275D4_ds_f l000275D4_ds_t
l000275D4_ds_f:
	r3 = Mem0[r1 + 580:word32]
	goto l000276E0
	// succ:  l000276E0
l000275D4_ds_t:
	r3 = Mem0[r1 + 580:word32]
	goto l00027820
	// succ:  l00027820
l000276E0:
	r26 = Mem0[r1 + 576:word32]
	r18 = cond(r26 - r31)
	branch Test(LT,r18) l00027820
	// succ:  l000276EC l00027820
l000276EC:
	branch Test(EQ,r31) l000276EC_ds_t
	// succ:  l000276EC_ds_f l000276EC_ds_t
l000276EC_ds_f:
	r6 = r31 + r31
	goto l000276F4
	// succ:  l000276F4
l000276EC_ds_t:
	r6 = r31 + r31
	goto l00027878
	// succ:  l00027878
l000276F4:
	r19 = r3
	r24 = r1 + 0x0000001C
	r26 = r24 + r6
	goto l00027700
	// succ:  l00027700
l000276F4_ds_f:
	r5 = r23
	goto l00027708
	// succ:  l00027708
l000276F4_ds_t:
	r5 = r23
	goto l00027724
	// succ:  l00027724
l00027700:
	branch Test(NE,r21) l000276F4_ds_t
	goto l000276F4_ds_f
	// succ:  l000276F4_ds_f l000276F4_ds_t
l00027708:
	r3 = Mem0[r22 + 12:word32]
	r15 = 0x0002770C
	call 0x0002770C + r3 (retsize: 0;)
	branch Test(EQ,r3) l00027708_ds_t
	// succ:  l00027708_ds_f l00027708_ds_t
l00027708_ds_f:
	r3 = 0x00000000
	goto l0002771C
	// succ:  l0002771C
l00027708_ds_t:
	r3 = 0x00000000
	goto l000277E4
	// succ:  l000277E4
l0002771C:
	r19 = Mem0[r22:word32]
	r21 = Mem0[r22 + 4:word32]
	// succ:  l00027724
l00027724:
	v69 = Mem0[r19:byte]
	r3 = (word32) v69
	r24 = r24 + 0x00000002
	r21 = r21 + 0xFFFFFFFF
	v70 = SLICE(r3, word16, 0)
	Mem0[r24 - 2:word16] = v70
	r3 = r26 ^ r24
	branch Test(NE,r3) l00027724_ds_t
	// succ:  l00027724_ds_f l00027724_ds_t
l00027724_ds_f:
	r19 = r19 + 0x00000001
	goto l00027740
	// succ:  l00027740
l00027724_ds_t:
	r19 = r19 + 0x00000001
	goto l00027700
	// succ:  l00027700
l00027740:
	r4 = Mem0[r1 + 576:word32]
	r27 = r27 & 0x00000010
	branch Test(NE,r27) l00027740_ds_t
	// succ:  l00027740_ds_f l00027740_ds_t
l00027740_ds_f:
	r26 = r4 - r31
	goto l00027750
	// succ:  l00027750
l00027740_ds_t:
	r26 = r4 - r31
	goto l0002784C
	// succ:  l0002784C
l00027750:
	r24 = r28 + 0x0000002D
	r24 = r24 + r24
	r24 = r24 + r24
	r24 = r23 + r24
	goto l00027760
	// succ:  l00027760
l00027750_ds_f:
	r4 = 0x0000001E
	goto l00027770
	// succ:  l00027770
l00027750_ds_t:
	r4 = 0x0000001E
	goto l00027788
	// succ:  l00027788
l00027760:
	r7 = 0x00000003
	r18 = cond(r7 -u r28)
	branch Test(GE,r18) l00027750_ds_t
	goto l00027750_ds_f
	// succ:  l00027750_ds_f l00027750_ds_t
l00027770:
	r3 = Mem0[r23:word32]
	r5 = r23
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x00027780
	Mem0[r3 + 24:word32] = r28
	call 0x00027780 + r4 (retsize: 0;)
l00027788:
	r5 = Mem0[r24:word32]
	branch Test(EQ,r5) l00027864
	// succ:  l00027790 l00027864
l00027790:
	r7 = 0x00000022
	r15 = 0x00027794
	r6 = r1 + 0x0000021C
	call fn0002F60C (retsize: 0;)
	r5 = Mem0[r24:word32]
	r6 = r1 + 0x0000001C
	r7 = 0x00000200
	r15 = 0x000277A8
	r5 = r5 + 0x00000022
	call fn0002F60C (retsize: 0;)
	r3 = 0x00000010
	r18 = cond(r3 - r26)
	branch Test(LT,r18) l00027534
	// succ:  l000277BC l00027534
l000277BC:
	branch Test(EQ,r26) l000277BC_ds_t
	// succ:  l000277BC_ds_f l000277BC_ds_t
l000277BC_ds_f:
	r7 = 0x0000000B
	goto l000277C4
	// succ:  l000277C4
l000277BC_ds_t:
	r7 = 0x0000000B
	goto l000277D8
	// succ:  l000277D8
l000277C4:
	r3 = Mem0[r23:word32]
	Mem0[r3 + 20:word32] = r7
	r3 = Mem0[r3:word32]
	r15 = 0x000277D0
	r5 = r23
	call 0x000277D0 + r3 (retsize: 0;)
l000277D8:
	Mem0[r22:word32] = r19
	Mem0[r22 + 4:word32] = r21
	r3 = 0x00000001
	// succ:  l000277E4
l000277E4:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 584:word32]
	r21 = Mem0[r1 + 592:word32]
	r22 = Mem0[r1 + 596:word32]
	r23 = Mem0[r1 + 600:word32]
	r24 = Mem0[r1 + 604:word32]
	r25 = Mem0[r1 + 608:word32]
	r26 = Mem0[r1 + 612:word32]
	r27 = Mem0[r1 + 616:word32]
	r28 = Mem0[r1 + 620:word32]
	r29 = Mem0[r1 + 624:word32]
	r30 = Mem0[r1 + 628:word32]
	r31 = Mem0[r1 + 632:word32]
	r1 = r1 + 0x0000027C
	return
	// succ:  fn00027448_exit
l00027820:
	r4 = Mem0[r23:word32]
	r7 = 0x00000008
	r5 = r23
	r6 = Mem0[r4:word32]
	Mem0[r4 + 20:word32] = r7
	r15 = 0x00027834
	Mem0[r1 + 580:word32] = r3
	call 0x00027834 + r6 (retsize: 0;)
	r3 = Mem0[r1 + 580:word32]
	goto l000276EC
	// succ:  l000276EC
l00027844:
	r19 = Mem0[r22:word32]
	goto l000274B0
	// succ:  l000274B0
l0002784C:
	r28 = r28 + 0xFFFFFFF0
	r24 = r28 + 0x00000031
	r24 = r24 + r24
	r24 = r24 + r24
	r24 = r23 + r24
	goto l00027760
	// succ:  l00027760
l00027864:
	r15 = 0x00027864
	r5 = r23
	call fn0002CCC4 (retsize: 0;)
	r5 = r3
	Mem0[r24:word32] = r3
	goto l00027790
	// succ:  l00027790
l00027878:
	r19 = r3
	goto l00027740
	// succ:  l00027740
fn00027448_exit:


// fn00028594
// Return size: 0
define fn00028594
fn00028594_entry:
	r1 = fp
	// succ:  l00028594
l00028594:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r21
	r3 = Mem0[r5:word32]
	r4 = 0x0000000B
	r19 = r5
	r18 = cond(r4 -u r7)
	branch Test(LT,r18) l00028594_ds_t
	// succ:  l00028594_ds_f l00028594_ds_t
l00028594_ds_f:
	r9 = Mem0[r3 + 4:word32]
	goto l000285BC
	// succ:  l000285BC
l00028594_ds_t:
	r9 = Mem0[r3 + 4:word32]
	goto l000285EC
	// succ:  l000285EC
l000285BC:
	r5 = r19
	r4 = 0x0000004E
	r8 = r8 + r7
	Mem0[r3 + 20:word32] = r4
	Mem0[r3 + 24:word32] = r8
	r15 = 0x000285D0
	r6 = 0x00000001
	call 0x000285D0 + r9 (retsize: 0;)
	// succ:  l000285D8
l000285D8:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn00028594_exit
l000285EC:
	v14 = Mem0[r6:byte]
	r4 = (word32) v14
	r4 = r4 ^ 0x00000041
	branch Test(NE,r4) l000285BC
	// succ:  l000285F8 l000285BC
l000285F8:
	v15 = Mem0[r6 + 1:byte]
	r4 = (word32) v15
	r4 = r4 ^ 0x00000064
	branch Test(NE,r4) l000285BC
	// succ:  l00028604 l000285BC
l00028604:
	v16 = Mem0[r6 + 2:byte]
	r4 = (word32) v16
	r4 = r4 ^ 0x0000006F
	branch Test(NE,r4) l000285BC
	// succ:  l00028610 l000285BC
l00028610:
	v17 = Mem0[r6 + 3:byte]
	r4 = (word32) v17
	r4 = r4 ^ 0x00000062
	branch Test(NE,r4) l000285BC
	// succ:  l0002861C l000285BC
l0002861C:
	v18 = Mem0[r6 + 4:byte]
	r4 = (word32) v18
	r4 = r4 ^ 0x00000065
	branch Test(NE,r4) l000285BC
	// succ:  l00028628 l000285BC
l00028628:
	v19 = Mem0[r6 + 7:byte]
	r7 = (word32) v19
	v20 = Mem0[r6 + 9:byte]
	r4 = (word32) v20
	v21 = Mem0[r6 + 5:byte]
	r8 = (word32) v21
	v22 = SLICE(r7, int8, 0)
	r7 = (int32) v22
	v23 = SLICE(r4, int8, 0)
	r4 = (int32) v23
	v24 = SLICE(r8, int8, 0)
	r8 = (int32) v24
	r7 = r7 + r7
	r4 = r4 + r4
	r8 = r8 + r8
	r7 = r7 + r7
	r4 = r4 + r4
	r8 = r8 + r8
	r7 = r7 + r7
	r4 = r4 + r4
	r8 = r8 + r8
	r7 = r7 + r7
	r4 = r4 + r4
	r8 = r8 + r8
	r7 = r7 + r7
	r4 = r4 + r4
	r8 = r8 + r8
	r7 = r7 + r7
	r4 = r4 + r4
	r8 = r8 + r8
	v26 = Mem0[r6 + 8:byte]
	r12 = (word32) v26
	v28 = Mem0[r6 + 10:byte]
	r11 = (word32) v28
	v30 = Mem0[r6 + 6:byte]
	r10 = (word32) v30
	r7 = r7 + r7
	r8 = r8 + r8
	r4 = r4 + r4
	v31 = Mem0[r6 + 11:byte]
	r21 = (word32) v31
	r4 = r4 + r4
	r6 = r7 + r7
	r7 = r8 + r8
	r6 = r6 & 0xFFFFFFFF
	r4 = r4 & 0xFFFFFFFF
	r7 = r7 & 0xFFFFFFFF
	r6 = r6 + r12
	r8 = 0x0000004C
	r4 = r4 + r11
	r7 = r7 + r10
	Mem0[r3 + 28:word32] = r6
	Mem0[r3 + 20:word32] = r8
	Mem0[r3 + 24:word32] = r7
	Mem0[r3 + 32:word32] = r4
	Mem0[r3 + 36:word32] = r21
	r15 = 0x000286EC
	r6 = 0x00000001
	call 0x000286EC + r9 (retsize: 0;)
	r3 = 0x00000001
	Mem0[r19 + 348:word32] = r3
	v32 = SLICE(r21, word16, 0)
	Mem0[r19 + 352:word16] = v32
	goto l000285D8
	// succ:  l000285D8
fn00028594_exit:


// fn00028F08
// Return size: 0
define fn00028F08
fn00028F08_entry:
	r1 = fp
	// succ:  l00028F08
l00028F08:
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r3 = Mem0[r5 + 4:word32]
	r7 = 0x000000AC
	r6 = 0x00000000
	r3 = Mem0[r3:word32]
	r15 = 0x00028F24
	r19 = r5
	call 0x00028F24 + r3 (retsize: 0;)
	r4 = 0xFFFFDAA4
	Mem0[r19 + 496:word32] = r3
	r6 = 0xFFFFD7C8
	Mem0[r3:word32] = r4
	r4 = 0xFFFFDF00
	Mem0[r3 + 28:word32] = r6
	Mem0[r3 + 96:word32] = r0
	Mem0[r3 + 4:word32] = r4
	r4 = 0xFFFFF328
	r7 = r3 + 0x00000060
	Mem0[r3 + 8:word32] = r4
	r4 = r3 + 0x00000020
	// succ:  l00028F6C
l00028F6C:
	Mem0[r4:word32] = r6
	Mem0[r4 + 68:word32] = r0
	r4 = r4 + 0x00000004
	r5 = r4 ^ r7
	branch Test(NE,r5) l00028F6C
	// succ:  l00028F80 l00028F6C
l00028F80:
	r4 = 0xFFFFED84
	Mem0[r3 + 32:word32] = r4
	Mem0[r3 + 88:word32] = r4
	Mem0[r19 + 216:word32] = r5
	Mem0[r19 + 144:word32] = r5
	Mem0[r19 + 472:word32] = r5
	Mem0[r3 + 12:word32] = r5
	Mem0[r3 + 16:word32] = r5
	Mem0[r3 + 24:word32] = r5
	Mem0[r3 + 164:word32] = r5
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn00028F08_exit
fn00028F08_exit:


// fn000291C4
// Return size: 0
define fn000291C4
fn000291C4_entry:
	r1 = fp
	// succ:  l000291C4
l000291C4:
	r1 = r1 + 0xFFFFFAA4
	Mem0[r1 + 1332:word32] = r22
	Mem0[r1 + 1340:word32] = r24
	Mem0[r1:word32] = r15
	Mem0[r1 + 1320:word32] = r19
	Mem0[r1 + 1324:word32] = r20
	Mem0[r1 + 1328:word32] = r21
	Mem0[r1 + 1336:word32] = r23
	Mem0[r1 + 1344:word32] = r25
	Mem0[r1 + 1348:word32] = r26
	Mem0[r1 + 1352:word32] = r27
	Mem0[r1 + 1356:word32] = r28
	Mem0[r1 + 1360:word32] = r29
	Mem0[r1 + 1364:word32] = r30
	Mem0[r1 + 1368:word32] = r31
	r3 = 0x00000003
	Mem0[r1 + 1380:word32] = r6
	r24 = r5
	r18 = cond(r3 -u r7)
	branch Test(GE,r18) l000291C4_ds_t
	// succ:  l000291C4_ds_f l000291C4_ds_t
l000291C4_ds_f:
	r22 = r8
	goto l00029218
	// succ:  l00029218
l000291C4_ds_t:
	r22 = r8
	goto l00029238
	// succ:  l00029238
l00029218:
	r3 = Mem0[r5:word32]
	r4 = 0x00000032
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	Mem0[r3 + 24:word32] = r7
	r15 = 0x0002922C
	Mem0[r1 + 1316:word32] = r7
	call 0x0002922C + r4 (retsize: 0;)
	r7 = Mem0[r1 + 1316:word32]
	// succ:  l00029238
l00029238:
	r4 = Mem0[r1 + 1380:word32]
	branch Test(EQ,r4) l00029238_ds_t
	// succ:  l00029238_ds_f l00029238_ds_t
l00029238_ds_f:
	r3 = r7 + 0x00000031
	goto l00029244
	// succ:  l00029244
l00029238_ds_t:
	r3 = r7 + 0x00000031
	goto l000295D0
	// succ:  l000295D0
l00029244:
	r3 = r7 + 0x0000002D
	r3 = r3 + r3
	r3 = r3 + r3
	r23 = Mem0[r3 + r24:word32]
	branch Test(EQ,r23) l000295E0
	// succ:  l00029258 l000295E0
l00029258:
	r21 = Mem0[r22:word32]
	branch Test(EQ,r21) l00029604
	// succ:  l00029260 l00029604
l00029260:
	Mem0[r21 + 140:word32] = r23
	r29 = 0x00000001
	r22 = 0x00000000
	r27 = 0x00000008
	r28 = 0x00000100
	r3 = r29 + r29
	goto l00029278
	// succ:  l00029278
l00029260_ds_f:
	r3 = r25 + r22
	goto l00029288
	// succ:  l00029288
l00029260_ds_t:
	r3 = r25 + r22
	goto l00029290
	// succ:  l00029290
l00029278:
	v24 = Mem0[r3 + r23:word16]
	r25 = (word32) v24
	v25 = SLICE(r25, int16, 0)
	r25 = (int32) v25
	branch Test(LT,r25) l00029260_ds_t
	goto l00029260_ds_f
	// succ:  l00029260_ds_f l00029260_ds_t
l00029288:
	r18 = cond(r28 - r3)
	branch Test(GE,r18) l000292A4
	// succ:  l00029290 l000292A4
l00029290:
	r3 = Mem0[r24:word32]
	r5 = r24
	r4 = Mem0[r3:word32]
	r15 = 0x0002929C
	Mem0[r3 + 20:word32] = r27
	call 0x0002929C + r4 (retsize: 0;)
l000292A4:
	branch Test(EQ,r25) l000292A4_ds_t
	// succ:  l000292A4_ds_f l000292A4_ds_t
l000292A4_ds_f:
	r7 = r25 + 0xFFFFFFFF
	goto l000292AC
	// succ:  l000292AC
l000292A4_ds_t:
	r7 = r25 + 0xFFFFFFFF
	goto l000292D4
	// succ:  l000292D4
l000292AC:
	r4 = r1 + 0x00000420
	v26 = SLICE(r29, int8, 0)
	r6 = (int32) v26
	r3 = 0x00000000
	r5 = r4 + r22
	// succ:  l000292BC
l000292BC:
	v27 = SLICE(r6, byte, 0)
	Mem0[r3 + r5:byte] = v27
	r3 = r3 + 0x00000001
	r4 = r3 ^ r25
	branch Test(NE,r4) l000292BC
	// succ:  l000292CC l000292BC
l000292CC:
	r22 = r22 + 0x00000001
	r22 = r22 + r7
	// succ:  l000292D4
l000292D4:
	r29 = r29 + 0x00000001
	r26 = r29 ^ 0x00000011
	branch Test(NE,r26) l000292D4_ds_t
	// succ:  l000292D4_ds_f l000292D4_ds_t
l000292D4_ds_f:
	r3 = r29 + r29
	goto l000292E4
	// succ:  l000292E4
l000292D4_ds_t:
	r3 = r29 + r29
	goto l00029278
	// succ:  l00029278
l000292E4:
	r25 = r1 + 0x0000001C
	r3 = r25 + r22
	v28 = SLICE(r26, byte, 0)
	Mem0[r3 + 1028:byte] = v28
	v29 = Mem0[r1 + 1056:byte]
	r27 = (word32) v29
	v30 = SLICE(r27, int8, 0)
	r27 = (int32) v30
	branch Test(EQ,r27) l000292E4_ds_t
	// succ:  l000292E4_ds_f l000292E4_ds_t
l000292E4_ds_f:
	r30 = r27
	goto l00029300
	// succ:  l00029300
l000292E4_ds_t:
	r30 = r27
	goto l00029388
	// succ:  l00029388
l00029300:
	r29 = r26
	r19 = 0x00000001
	r28 = 0x00000008
	r31 = r1 + 0x00000420
	goto l00029310
	// succ:  l00029310
l00029300_ds_f:
	r3 = r29 + r29
	goto l0002931C
	// succ:  l0002931C
l00029300_ds_t:
	r3 = r29 + r29
	goto l000295A0
	// succ:  l000295A0
l00029310:
	r3 = r27 ^ r30
	branch Test(NE,r3) l00029300_ds_t
	goto l00029300_ds_f
	// succ:  l00029300_ds_f l00029300_ds_t
l0002931C:
	r3 = r3 + r3
	r3 = r25 + r3
	// succ:  l00029324
l00029324:
	r29 = r29 + 0x00000001
	v31 = Mem0[r29 + r31:byte]
	r27 = (word32) v31
	Mem0[r3:word32] = r26
	r26 = r26 + 0x00000001
	v32 = SLICE(r27, int8, 0)
	r27 = (int32) v32
	r4 = r27 ^ r30
	branch Test(EQ,r4) l00029324_ds_t
	// succ:  l00029324_ds_f l00029324_ds_t
l00029324_ds_f:
	r3 = r3 + 0x00000004
	goto l00029344
	// succ:  l00029344
l00029324_ds_t:
	r3 = r3 + 0x00000004
	goto l00029324
	// succ:  l00029324
l00029344:
	r18 = r30 & 0x0000001F
	r3 = r19
	branch Test(EQ,r18) l00029344_ds_t
	// succ:  l00029344_ds_f l00029344_ds_t
l00029344_ds_f:
	r3 = r3
	goto l00029354
	// succ:  l00029354
l00029344_ds_t:
	r3 = r3
	goto l00029360
	// succ:  l00029360
l00029354:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00029354_ds_t
	// succ:  l00029354_ds_f l00029354_ds_t
l00029354_ds_f:
	r3 = r3 + r3
	goto l00029360
	// succ:  l00029360
l00029354_ds_t:
	r3 = r3 + r3
	goto l00029354
	// succ:  l00029354
l00029360:
	r18 = cond(r26 - r3)
	branch Test(LT,r18) l0002937C
	// succ:  l00029368 l0002937C
l00029368:
	r3 = Mem0[r24:word32]
	r5 = r24
	r4 = Mem0[r3:word32]
	r15 = 0x00029374
	Mem0[r3 + 20:word32] = r28
	call 0x00029374 + r4 (retsize: 0;)
l0002937C:
	r26 = r26 + r26
	branch Test(NE,r27) l0002937C_ds_t
	// succ:  l0002937C_ds_f l0002937C_ds_t
l0002937C_ds_f:
	r30 = r30 + 0x00000001
	goto l00029388
	// succ:  l00029388
l0002937C_ds_t:
	r30 = r30 + 0x00000001
	goto l00029310
	// succ:  l00029310
l00029388:
	r7 = r23 + 0x00000002
	r3 = r21 + 0x00000004
	r8 = r21 + 0x00000044
	r6 = 0x00000000
	r9 = 0xFFFFFFFF
	goto l000293D4
	// succ:  l000293D4
l000293A0:
	r5 = Mem0[r5 + r25:word32]
	r3 = r3 + 0x00000004
	r7 = r7 + 0x00000002
	r5 = r6 - r5
	r6 = r6 + r4
	r4 = r6 + 0xFFFFFFFF
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = Mem0[r4 + r25:word32]
	Mem0[r3 + 68:word32] = r5
	r26 = r3 ^ r8
	branch Test(EQ,r26) l000293A0_ds_t
	// succ:  l000293A0_ds_f l000293A0_ds_t
l000293A0_ds_f:
	Mem0[r3 - 4:word32] = r4
	goto l000293D4
	// succ:  l000293D4
l000293A0_ds_t:
	Mem0[r3 - 4:word32] = r4
	goto l000293FC
	// succ:  l000293FC
l000293D4:
	r4 = r6 + r6
	r5 = r4 + r4
	v34 = Mem0[r7:word16]
	r4 = (word32) v34
	v35 = SLICE(r4, int16, 0)
	r4 = (int32) v35
	branch Test(NE,r4) l000293A0
	// succ:  l000293E8 l000293A0
l000293E8:
	Mem0[r3:word32] = r9
	r3 = r3 + 0x00000004
	r26 = r3 ^ r8
	branch Test(NE,r26) l000293E8_ds_t
	// succ:  l000293E8_ds_f l000293E8_ds_t
l000293E8_ds_f:
	r7 = r7 + 0x00000002
	goto l000293FC
	// succ:  l000293FC
l000293E8_ds_t:
	r7 = r7 + 0x00000002
	goto l000293D4
	// succ:  l000293D4
l000293FC:
	r3 = 0xFFFFFFFF
	r6 = r26
	r5 = r21 + 0x00000090
	Mem0[r21 + 68:word32] = r3
	r15 = 0x00029410
	r7 = 0x00000400
	call fn0002F63C (retsize: 0;)
	r5 = 0x00000001
	r9 = r26
	r20 = r5
	// succ:  l00029424
l00029424:
	r3 = r5 + r5
	v37 = Mem0[r3 + r23:word16]
	r12 = (word32) v37
	v38 = SLICE(r12, int16, 0)
	r12 = (int32) v38
	branch Test(LE,r12) l00029500
	// succ:  l00029434 l00029500
l00029434:
	r6 = r9 + 0x00000011
	r8 = r6 + r12
	r7 = r9 + r9
	r4 = 0x00000008
	r11 = r4 - r5
	r7 = r7 + r7
	r6 = r6 + r6
	r8 = r8 + r8
	r18 = r11 & 0x0000001F
	r10 = r20
	branch Test(EQ,r18) l00029434_ds_t
	// succ:  l00029434_ds_f l00029434_ds_t
l00029434_ds_f:
	r10 = r10
	goto l00029464
	// succ:  l00029464
l00029434_ds_t:
	r10 = r10
	goto l00029470
	// succ:  l00029470
l00029464:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00029464_ds_t
	// succ:  l00029464_ds_f l00029464_ds_t
l00029464_ds_f:
	r10 = r10 + r10
	goto l00029470
	// succ:  l00029470
l00029464_ds_t:
	r10 = r10 + r10
	goto l00029464
	// succ:  l00029464
l00029470:
	r7 = r25 + r7
	r6 = r23 + r6
	r8 = r23 + r8
	r10 = r10 + 0x00000024
	goto l00029480
	// succ:  l00029480
l00029470_ds_f:
	r4 = r4
	goto l00029498
	// succ:  l00029498
l00029470_ds_t:
	r4 = r4
	goto l000294A4
	// succ:  l000294A4
l00029480:
	r3 = Mem0[r7:word32]
	v41 = Mem0[r6:word16]
	r28 = (word32) v41
	r18 = r11 & 0x0000001F
	r4 = r3
	branch Test(EQ,r18) l00029470_ds_t
	goto l00029470_ds_f
	// succ:  l00029470_ds_f l00029470_ds_t
l00029498:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00029498_ds_t
	// succ:  l00029498_ds_f l00029498_ds_t
l00029498_ds_f:
	r4 = r4 + r4
	goto l000294A4
	// succ:  l000294A4
l00029498_ds_t:
	r4 = r4 + r4
	goto l00029498
	// succ:  l00029498
l000294A4:
	r3 = r4 + 0x00000024
	r26 = r10 + r4
	r3 = r3 + r3
	r4 = r4 + 0x00000248
	r26 = r26 + r26
	r3 = r3 + r3
	r4 = r4 + r4
	r26 = r26 + r26
	v42 = SLICE(r28, int16, 0)
	r28 = (int32) v42
	r3 = r21 + r3
	r4 = r21 + r4
	r26 = r21 + r26
	// succ:  l000294D4
l000294D4:
	Mem0[r3:word32] = r5
	r3 = r3 + 0x00000004
	v43 = SLICE(r28, word16, 0)
	Mem0[r4:word16] = v43
	r27 = r3 ^ r26
	branch Test(NE,r27) l000294D4_ds_t
	// succ:  l000294D4_ds_f l000294D4_ds_t
l000294D4_ds_f:
	r4 = r4 + 0x00000002
	goto l000294EC
	// succ:  l000294EC
l000294D4_ds_t:
	r4 = r4 + 0x00000002
	goto l000294D4
	// succ:  l000294D4
l000294EC:
	r6 = r6 + 0x00000002
	r3 = r6 ^ r8
	branch Test(NE,r3) l000294EC_ds_t
	// succ:  l000294EC_ds_f l000294EC_ds_t
l000294EC_ds_f:
	r7 = r7 + 0x00000004
	goto l000294FC
	// succ:  l000294FC
l000294EC_ds_t:
	r7 = r7 + 0x00000004
	goto l00029480
	// succ:  l00029480
l000294FC:
	r9 = r9 + r12
	// succ:  l00029500
l00029500:
	r5 = r5 + 0x00000001
	r3 = r5 ^ 0x00000009
	branch Test(NE,r3) l00029500_ds_t
	// succ:  l00029500_ds_f l00029500_ds_t
l00029500_ds_f:
	r4 = Mem0[r1 + 1380:word32]
	goto l00029510
	// succ:  l00029510
l00029500_ds_t:
	r4 = Mem0[r1 + 1380:word32]
	goto l00029424
	// succ:  l00029424
l00029510:
	branch Test(EQ,r4) l00029510_ds_t
	// succ:  l00029510_ds_f l00029510_ds_t
l00029510_ds_f:
	r15 = Mem0[r1:word32]
	goto l00029518
	// succ:  l00029518
l00029510_ds_t:
	r15 = Mem0[r1:word32]
	goto l00029568
	// succ:  l00029568
l00029518:
	branch Test(EQ,r22) l00029518_ds_t
	// succ:  l00029518_ds_f l00029518_ds_t
l00029518_ds_f:
	r22 = r22 + 0x00000011
	goto l00029520
	// succ:  l00029520
l00029518_ds_t:
	r22 = r22 + 0x00000011
	goto l00029568
	// succ:  l00029568
l00029520:
	r22 = r22 + r22
	r19 = r23 + 0x00000022
	r22 = r23 + r22
	r21 = 0x0000000F
	r23 = 0x00000008
	goto l00029534
	// succ:  l00029534
l00029520_ds_f:
	r19 = r19 + 0x00000002
	goto l0002954C
	// succ:  l0002954C
l00029520_ds_t:
	r19 = r19 + 0x00000002
	goto l0002955C
	// succ:  l0002955C
l00029534:
	v44 = Mem0[r19:word16]
	r3 = (word32) v44
	r5 = r24
	v45 = SLICE(r3, int16, 0)
	r3 = (int32) v45
	r18 = cond(r21 -u r3)
	branch Test(GE,r18) l00029520_ds_t
	goto l00029520_ds_f
	// succ:  l00029520_ds_f l00029520_ds_t
l0002954C:
	r3 = Mem0[r24:word32]
	r4 = Mem0[r3:word32]
	r15 = 0x00029554
	Mem0[r3 + 20:word32] = r23
	call 0x00029554 + r4 (retsize: 0;)
l0002955C:
	r3 = r19 ^ r22
	branch Test(NE,r3) l00029534
	// succ:  l00029564 l00029534
l00029564:
	r15 = Mem0[r1:word32]
	// succ:  l00029568
l00029568:
	r19 = Mem0[r1 + 1320:word32]
	r21 = Mem0[r1 + 1328:word32]
	r22 = Mem0[r1 + 1332:word32]
	r23 = Mem0[r1 + 1336:word32]
	r24 = Mem0[r1 + 1340:word32]
	r25 = Mem0[r1 + 1344:word32]
	r26 = Mem0[r1 + 1348:word32]
	r27 = Mem0[r1 + 1352:word32]
	r28 = Mem0[r1 + 1356:word32]
	r29 = Mem0[r1 + 1360:word32]
	r30 = Mem0[r1 + 1364:word32]
	r31 = Mem0[r1 + 1368:word32]
	r1 = r1 + 0x0000055C
	return
	// succ:  fn000291C4_exit
l000295A0:
	r18 = r30 & 0x0000001F
	r3 = r19
	branch Test(EQ,r18) l000295A0_ds_t
	// succ:  l000295A0_ds_f l000295A0_ds_t
l000295A0_ds_f:
	r3 = r3
	goto l000295B0
	// succ:  l000295B0
l000295A0_ds_t:
	r3 = r3
	goto l000295BC
	// succ:  l000295BC
l000295B0:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000295B0_ds_t
	// succ:  l000295B0_ds_f l000295B0_ds_t
l000295B0_ds_f:
	r3 = r3 + r3
	goto l000295BC
	// succ:  l000295BC
l000295B0_ds_t:
	r3 = r3 + r3
	goto l000295B0
	// succ:  l000295B0
l000295BC:
	r18 = cond(r26 - r3)
	branch Test(GE,r18) l00029368
	// succ:  l000295C4 l00029368
l000295C4:
	r26 = r26 + r26
	r30 = r30 + 0x00000001
	goto l00029310
	// succ:  l00029310
l000295D0:
	r3 = r3 + r3
	r3 = r3 + r3
	r23 = Mem0[r3 + r24:word32]
	branch Test(NE,r23) l00029258
	// succ:  l000295E0 l00029258
l000295E0:
	r3 = Mem0[r24:word32]
	r4 = 0x00000032
	r5 = r24
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x000295F4
	Mem0[r3 + 24:word32] = r7
	call 0x000295F4 + r4 (retsize: 0;)
	r21 = Mem0[r22:word32]
	branch Test(NE,r21) l00029260
	// succ:  l00029604 l00029260
l00029604:
	r3 = Mem0[r24 + 4:word32]
	r5 = r24
	r7 = 0x00000690
	r3 = Mem0[r3:word32]
	r15 = 0x00029614
	r6 = 0x00000001
	call 0x00029614 + r3 (retsize: 0;)
	r21 = r3
	Mem0[r22:word32] = r3
	goto l00029260
	// succ:  l00029260
fn000291C4_exit:


// fn0002980C
// Return size: 0
define fn0002980C
fn0002980C_entry:
	r1 = fp
	// succ:  l0002980C
l0002980C:
	r1 = r1 + 0xFFFFFFC0
	Mem0[r1 + 32:word32] = r19
	Mem0[r1 + 36:word32] = r21
	Mem0[r1 + 44:word32] = r23
	Mem0[r1 + 52:word32] = r25
	Mem0[r1:word32] = r15
	Mem0[r1 + 40:word32] = r22
	Mem0[r1 + 48:word32] = r24
	Mem0[r1 + 56:word32] = r26
	Mem0[r1 + 60:word32] = r27
	r24 = Mem0[r5 + 16:word32]
	r21 = r5
	r19 = r6
	r4 = Mem0[r24 + 472:word32]
	r25 = r7
	r23 = r8
	r3 = Mem0[r5:word32]
	branch Test(NE,r4) l0002980C_ds_t
	// succ:  l0002980C_ds_f l0002980C_ds_t
l0002980C_ds_f:
	r26 = Mem0[r5 + 4:word32]
	goto l00029858
	// succ:  l00029858
l0002980C_ds_t:
	r26 = Mem0[r5 + 4:word32]
	goto l00029950
	// succ:  l00029950
l00029858:
	r22 = 0x00000018
	r18 = cond(r22 - r7)
	branch Test(LT,r18) l000298CC
	// succ:  l00029864 l000298CC
l00029864:
	branch Test(NE,r26) l00029888
	// succ:  l00029868 l00029888
l00029868:
	r3 = Mem0[r24 + 24:word32]
	r3 = Mem0[r3 + 12:word32]
	r15 = 0x00029870
	r5 = r24
	call 0x00029870 + r3 (retsize: 0;)
	branch Test(EQ,r3) l000299C4
	// succ:  l0002987C l000299C4
l0002987C:
	r4 = Mem0[r24 + 24:word32]
	r3 = Mem0[r4:word32]
	r26 = Mem0[r4 + 4:word32]
	// succ:  l00029888
l00029888:
	v19 = Mem0[r3:byte]
	r27 = (word32) v19
	r26 = r26 + 0xFFFFFFFF
	r4 = r27 ^ 0x000000FF
	branch Test(EQ,r4) l00029888_ds_t
	// succ:  l00029888_ds_f l00029888_ds_t
l00029888_ds_f:
	r3 = r3 + 0x00000001
	goto l0002989C
	// succ:  l0002989C
l00029888_ds_t:
	r3 = r3 + 0x00000001
	goto l0002990C
	// succ:  l0002990C
l0002989C:
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r19 = r19 + r19
	r25 = r25 + 0x00000008
	r18 = cond(r22 - r25)
	branch Test(GE,r18) l0002989C_ds_t
	// succ:  l0002989C_ds_f l0002989C_ds_t
l0002989C_ds_f:
	r19 = r19 | r27
	goto l000298CC
	// succ:  l000298CC
l0002989C_ds_t:
	r19 = r19 | r27
	goto l00029864
	// succ:  l00029864
l000298CC:
	Mem0[r21:word32] = r3
	Mem0[r21 + 4:word32] = r26
	Mem0[r21 + 8:word32] = r19
	Mem0[r21 + 12:word32] = r25
	r3 = 0x00000001
	// succ:  l000298E0
l000298E0:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 32:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r24 = Mem0[r1 + 48:word32]
	r25 = Mem0[r1 + 52:word32]
	r26 = Mem0[r1 + 56:word32]
	r27 = Mem0[r1 + 60:word32]
	r1 = r1 + 0x00000040
	return
	// succ:  fn0002980C_exit
l0002990C:
	branch Test(NE,r26) l0002990C_ds_t
	// succ:  l0002990C_ds_f l0002990C_ds_t
l0002990C_ds_f:
	r5 = r24
	goto l00029914
	// succ:  l00029914
l0002990C_ds_t:
	r5 = r24
	goto l00029934
	// succ:  l00029934
l00029914:
	r3 = Mem0[r24 + 24:word32]
	r3 = Mem0[r3 + 12:word32]
	r15 = 0x0002991C
	call 0x0002991C + r3 (retsize: 0;)
	branch Test(EQ,r3) l000299C4
	// succ:  l00029928 l000299C4
l00029928:
	r4 = Mem0[r24 + 24:word32]
	r3 = Mem0[r4:word32]
	r26 = Mem0[r4 + 4:word32]
	// succ:  l00029934
l00029934:
	v20 = Mem0[r3:byte]
	r4 = (word32) v20
	r26 = r26 + 0xFFFFFFFF
	r5 = r4 ^ 0x000000FF
	branch Test(EQ,r5) l00029934_ds_t
	// succ:  l00029934_ds_f l00029934_ds_t
l00029934_ds_f:
	r3 = r3 + 0x00000001
	goto l00029948
	// succ:  l00029948
l00029934_ds_t:
	r3 = r3 + 0x00000001
	goto l0002990C
	// succ:  l0002990C
l00029948:
	branch Test(EQ,r4) l0002989C
	// succ:  l0002994C l0002989C
l0002994C:
	Mem0[r24 + 472:word32] = r4
	// succ:  l00029950
l00029950:
	r18 = cond(r25 - r23)
	branch Test(GE,r18) l000298CC
	// succ:  l00029958 l000298CC
l00029958:
	r4 = Mem0[r24 + 500:word32]
	r4 = Mem0[r4 + 8:word32]
	branch Test(NE,r4) l00029958_ds_t
	// succ:  l00029958_ds_f l00029958_ds_t
l00029958_ds_f:
	r7 = 0x00000075
	goto l00029968
	// succ:  l00029968
l00029958_ds_t:
	r7 = 0x00000075
	goto l00029994
	// succ:  l00029994
l00029968:
	r4 = Mem0[r24:word32]
	r5 = r24
	Mem0[r4 + 20:word32] = r7
	r4 = Mem0[r4 + 4:word32]
	r6 = 0xFFFFFFFF
	r15 = 0x0002997C
	Mem0[r1 + 28:word32] = r3
	call 0x0002997C + r4 (retsize: 0;)
	r4 = Mem0[r24 + 500:word32]
	r3 = Mem0[r1 + 28:word32]
	r5 = 0x00000001
	Mem0[r4 + 8:word32] = r5
	// succ:  l00029994
l00029994:
	r7 = 0x00000019
	r4 = r7 - r25
	r18 = r4 & 0x0000001F
	r5 = r19
	branch Test(EQ,r18) l00029994_ds_t
	// succ:  l00029994_ds_f l00029994_ds_t
l00029994_ds_f:
	r5 = r5
	goto l000299AC
	// succ:  l000299AC
l00029994_ds_t:
	r5 = r5
	goto l000299B8
	// succ:  l000299B8
l000299AC:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l000299AC_ds_t
	// succ:  l000299AC_ds_f l000299AC_ds_t
l000299AC_ds_f:
	r5 = r5 + r5
	goto l000299B8
	// succ:  l000299B8
l000299AC_ds_t:
	r5 = r5 + r5
	goto l000299AC
	// succ:  l000299AC
l000299B8:
	r25 = r7
	r19 = r5
	goto l000298CC
	// succ:  l000298CC
l000299C4:
	r3 = 0x00000000
	goto l000298E0
	// succ:  l000298E0
fn0002980C_exit:


// fn000299CC
// Return size: 0
define fn000299CC
fn000299CC_entry:
	r1 = fp
	// succ:  l000299CC
l000299CC:
	r1 = r1 + 0xFFFFFFCC
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 48:word32] = r25
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 44:word32] = r24
	r23 = r9
	r25 = r5
	r18 = cond(r7 - r9)
	branch Test(LT,r18) l000299CC_ds_t
	// succ:  l000299CC_ds_f l000299CC_ds_t
l000299CC_ds_f:
	r22 = r8
	goto l00029A00
	// succ:  l00029A00
l000299CC_ds_t:
	r22 = r8
	goto l00029B68
	// succ:  l00029B68
l00029A00:
	r3 = r7
	r9 = r6
	goto l00029A08
	// succ:  l00029A08
l00029A00_ds_f:
	r3 = r3
	goto l00029A2C
	// succ:  l00029A2C
l00029A00_ds_t:
	r3 = r3
	goto l00029A38
	// succ:  l00029A38
l00029A08:
	r4 = r23 + r23
	r4 = r4 + r4
	r24 = 0x00000001
	r4 = Mem0[r4 + r22:word32]
	r7 = r3 - r23
	r18 = r23 & 0x0000001F
	r3 = r24
	branch Test(EQ,r18) l00029A00_ds_t
	goto l00029A00_ds_f
	// succ:  l00029A00_ds_f l00029A00_ds_t
l00029A2C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00029A2C_ds_t
	// succ:  l00029A2C_ds_f l00029A2C_ds_t
l00029A2C_ds_f:
	r3 = r3 + r3
	goto l00029A38
	// succ:  l00029A38
l00029A2C_ds_t:
	r3 = r3 + r3
	goto l00029A2C
	// succ:  l00029A2C
l00029A38:
	r3 = r3 + 0xFFFFFFFF
	r18 = r7 & 0x0000001F
	r5 = r9
	branch Test(EQ,r18) l00029A38_ds_t
	// succ:  l00029A38_ds_f l00029A38_ds_t
l00029A38_ds_f:
	r5 = r5
	goto l00029A4C
	// succ:  l00029A4C
l00029A38_ds_t:
	r5 = r5
	goto l00029A58
	// succ:  l00029A58
l00029A4C:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00029A4C_ds_t
	// succ:  l00029A4C_ds_f l00029A4C_ds_t
l00029A4C_ds_f:
	r5 = r5 >> 1
	C = cond(r5)
	goto l00029A58
	// succ:  l00029A58
l00029A4C_ds_t:
	r5 = r5 >> 1
	C = cond(r5)
	goto l00029A4C
	// succ:  l00029A4C
l00029A58:
	r3 = r3 & r5
	r18 = cond(r4 - r3)
	branch Test(GE,r18) l00029A58_ds_t
	// succ:  l00029A58_ds_f l00029A58_ds_t
l00029A58_ds_f:
	r21 = r23 + r24
	goto l00029A68
	// succ:  l00029A68
l00029A58_ds_t:
	r21 = r23 + r24
	goto l00029AE0
	// succ:  l00029AE0
l00029A68:
	r21 = r21 + r21
	r21 = r21 + r21
	r21 = r22 + r21
	goto l00029AB0
	// succ:  l00029AB0
l00029A78:
	r7 = r7 + 0xFFFFFFFF
	r4 = Mem0[r21 - 4:word32]
	r18 = r7 & 0x0000001F
	r3 = r9
	branch Test(EQ,r18) l00029A78_ds_t
	// succ:  l00029A78_ds_f l00029A78_ds_t
l00029A78_ds_f:
	r3 = r3
	goto l00029A90
	// succ:  l00029A90
l00029A78_ds_t:
	r3 = r3
	goto l00029A9C
	// succ:  l00029A9C
l00029A90:
	r18 = r18 + 0xFFFFFFFF
	branch Test(NE,r18) l00029A90_ds_t
	// succ:  l00029A90_ds_f l00029A90_ds_t
l00029A90_ds_f:
	r3 = r3 >> 1
	C = cond(r3)
	goto l00029A9C
	// succ:  l00029A9C
l00029A90_ds_t:
	r3 = r3 >> 1
	C = cond(r3)
	goto l00029A90
	// succ:  l00029A90
l00029A9C:
	r3 = r3 & 0x00000001
	r3 = r3 | r19
	r18 = cond(r4 - r3)
	branch Test(GE,r18) l00029A9C_ds_t
	// succ:  l00029A9C_ds_f l00029A9C_ds_t
l00029A9C_ds_f:
	r23 = r23 + 0x00000001
	goto l00029AB0
	// succ:  l00029AB0
l00029A9C_ds_t:
	r23 = r23 + 0x00000001
	goto l00029AE0
	// succ:  l00029AE0
l00029AB0:
	r21 = r21 + 0x00000004
	branch Test(GT,r7) l00029AB0_ds_t
	// succ:  l00029AB0_ds_f l00029AB0_ds_t
l00029AB0_ds_f:
	r19 = r3 + r3
	goto l00029ABC
	// succ:  l00029ABC
l00029AB0_ds_t:
	r19 = r3 + r3
	goto l00029A78
	// succ:  l00029A78
l00029ABC:
	r6 = r9
	r8 = r24
	r15 = 0x00029AC4
	r5 = r25
	call fn0002980C (retsize: 0;)
	branch Test(EQ,r3) l00029ABC_ds_t
	// succ:  l00029ABC_ds_f l00029ABC_ds_t
l00029ABC_ds_f:
	r3 = 0xFFFFFFFF
	goto l00029AD4
	// succ:  l00029AD4
l00029ABC_ds_t:
	r3 = 0xFFFFFFFF
	goto l00029B20
	// succ:  l00029B20
l00029AD4:
	r9 = Mem0[r25 + 8:word32]
	r7 = Mem0[r25 + 12:word32]
	goto l00029A78
	// succ:  l00029A78
l00029AE0:
	Mem0[r25 + 8:word32] = r9
	r4 = 0x00000010
	r18 = cond(r4 - r23)
	branch Test(LT,r18) l00029AE0_ds_t
	// succ:  l00029AE0_ds_f l00029AE0_ds_t
l00029AE0_ds_f:
	Mem0[r25 + 12:word32] = r7
	goto l00029AF4
	// succ:  l00029AF4
l00029AE0_ds_t:
	Mem0[r25 + 12:word32] = r7
	goto l00029B44
	// succ:  l00029B44
l00029AF4:
	r23 = r23 + 0x00000012
	r23 = r23 + r23
	r23 = r23 + r23
	r5 = Mem0[r23 + r22:word32]
	r4 = Mem0[r22 + 140:word32]
	r3 = r3 + r5
	r3 = r3 + 0x00000010
	r3 = r3 + r3
	r3 = r4 + r3
	v19 = Mem0[r3 + 2:word16]
	r3 = (word32) v19
	v20 = SLICE(r3, int16, 0)
	r3 = (int32) v20
	// succ:  l00029B20
l00029B20:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r1 = r1 + 0x00000034
	return
	// succ:  fn000299CC_exit
l00029B44:
	r5 = Mem0[r25 + 16:word32]
	r4 = 0x00000076
	r3 = Mem0[r5:word32]
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3 + 4:word32]
	r15 = 0x00029B58
	r6 = 0xFFFFFFFF
	call 0x00029B58 + r3 (retsize: 0;)
	r3 = 0x00000000
	goto l00029B20
	// succ:  l00029B20
l00029B68:
	r15 = 0x00029B68
	r8 = r9
	call fn0002980C (retsize: 0;)
	branch Test(EQ,r3) l00029B80
	// succ:  l00029B74 l00029B80
l00029B74:
	r9 = Mem0[r25 + 8:word32]
	r3 = Mem0[r25 + 12:word32]
	goto l00029A08
	// succ:  l00029A08
l00029B80:
	r3 = 0xFFFFFFFF
	goto l00029B20
	// succ:  l00029B20
fn000299CC_exit:


// fn0002A250
// Return size: 0
define fn0002A250
fn0002A250_entry:
	r1 = fp
	// succ:  l0002A250
l0002A250:
	r3 = Mem0[r5 + 4:word32]
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r3 = Mem0[r3:word32]
	r7 = 0x000000E8
	r6 = 0x00000001
	r15 = 0x0002A26C
	r19 = r5
	call 0x0002A26C + r3 (retsize: 0;)
	r4 = 0xFFFFFCA8
	Mem0[r19 + 500:word32] = r3
	Mem0[r3 + 56:word32] = r0
	Mem0[r3:word32] = r4
	r4 = 0x00000208
	Mem0[r3 + 40:word32] = r0
	Mem0[r3 + 60:word32] = r0
	Mem0[r3 + 4:word32] = r4
	Mem0[r3 + 44:word32] = r0
	Mem0[r3 + 64:word32] = r0
	Mem0[r3 + 48:word32] = r0
	Mem0[r3 + 68:word32] = r0
	Mem0[r3 + 52:word32] = r0
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn0002A250_exit
fn0002A250_exit:


// fn0002A2C0
// Return size: 0
define fn0002A2C0
fn0002A2C0_entry:
	r1 = fp
	// succ:  l0002A2C0
l0002A2C0:
	r1 = r1 + 0xFFFFFFDC
	Mem0[r1 + 32:word32] = r21
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	r19 = Mem0[r5 + 500:word32]
	r6 = Mem0[r5 + 496:word32]
	r21 = r5
	r8 = Mem0[r19 + 16:word32]
	r7 = Mem0[r6 + 24:word32]
	r3 = Mem0[r6 + 8:word32]
	r4 = r8
	r4 = r8 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 >> 1
	C = cond(r4)
	r4 = r4 & 0x00000007
	r4 = r4 + r8
	r8 = r4
	r8 = r4 >> 1
	C = cond(r8)
	r8 = r8 >> 1
	C = cond(r8)
	r8 = r8 >> 1
	C = cond(r8)
	r4 = r7 + r8
	Mem0[r6 + 24:word32] = r4
	r15 = 0x0002A388
	Mem0[r19 + 16:word32] = r0
	call 0x0002A388 + r3 (retsize: 0;)
	branch Test(EQ,r3) l0002A2C0_ds_t
	// succ:  l0002A2C0_ds_f l0002A2C0_ds_t
l0002A2C0_ds_f:
	r15 = Mem0[r1:word32]
	goto l0002A398
	// succ:  l0002A398
l0002A2C0_ds_t:
	r15 = Mem0[r1:word32]
	goto l0002A3E4
	// succ:  l0002A3E4
l0002A398:
	r3 = Mem0[r21 + 384:word32]
	branch Test(LE,r3) l0002A398_ds_t
	// succ:  l0002A398_ds_f l0002A398_ds_t
l0002A398_ds_f:
	r4 = r3 + 0x00000006
	goto l0002A3A4
	// succ:  l0002A3A4
l0002A398_ds_t:
	r4 = r3 + 0x00000006
	goto l0002A3C4
	// succ:  l0002A3C4
l0002A3A4:
	r4 = r4 + r4
	r4 = r4 + r4
	r3 = r19 + 0x00000018
	r4 = r19 + r4
	// succ:  l0002A3B4
l0002A3B4:
	Mem0[r3:word32] = r0
	r3 = r3 + 0x00000004
	r5 = r3 ^ r4
	branch Test(NE,r5) l0002A3B4
	// succ:  l0002A3C4 l0002A3B4
l0002A3C4:
	r4 = Mem0[r21 + 472:word32]
	r21 = Mem0[r21 + 324:word32]
	Mem0[r19 + 20:word32] = r0
	r3 = 0x00000001
	branch Test(NE,r4) l0002A3C4_ds_t
	// succ:  l0002A3C4_ds_f l0002A3C4_ds_t
l0002A3C4_ds_f:
	Mem0[r19 + 40:word32] = r21
	goto l0002A3DC
	// succ:  l0002A3DC
l0002A3C4_ds_t:
	Mem0[r19 + 40:word32] = r21
	goto l0002A3E0
	// succ:  l0002A3E0
l0002A3DC:
	Mem0[r19 + 8:word32] = r4
	// succ:  l0002A3E0
l0002A3E0:
	r15 = Mem0[r1:word32]
	// succ:  l0002A3E4
l0002A3E4:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r1 = r1 + 0x00000024
	return
	// succ:  fn0002A2C0_exit
fn0002A2C0_exit:


// fn0002B520
// Return size: 0
define fn0002B520
fn0002B520_entry:
	r1 = fp
	// succ:  l0002B520
l0002B520:
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	r3 = Mem0[r5 + 4:word32]
	r19 = r5
	r7 = 0x00000040
	r3 = Mem0[r3:word32]
	r15 = 0x0002B53C
	r6 = 0x00000001
	call 0x0002B53C + r3 (retsize: 0;)
	r7 = Mem0[r19 + 36:word32]
	r4 = Mem0[r19 + 4:word32]
	r5 = 0x00000A74
	Mem0[r19 + 500:word32] = r3
	r4 = Mem0[r4:word32]
	Mem0[r3:word32] = r5
	Mem0[r3 + 44:word32] = r0
	Mem0[r3 + 48:word32] = r0
	Mem0[r3 + 52:word32] = r0
	Mem0[r3 + 56:word32] = r0
	r5 = r19
	r3 = r7
	r3 = r7 + r7
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r3 = r3 + r3
	r7 = r3
	r15 = 0x0002B59C
	r6 = 0x00000001
	call 0x0002B59C + r4 (retsize: 0;)
	r4 = Mem0[r19 + 36:word32]
	branch Test(LE,r4) l0002B520_ds_t
	// succ:  l0002B520_ds_f l0002B520_ds_t
l0002B520_ds_f:
	Mem0[r19 + 160:word32] = r3
	goto l0002B5B0
	// succ:  l0002B5B0
l0002B520_ds_t:
	Mem0[r19 + 160:word32] = r3
	goto l0002B5E8
	// succ:  l0002B5E8
l0002B5B0:
	r5 = r3
	r7 = 0x00000000
	r6 = 0xFFFFFFFF
	r3 = r5
	// succ:  l0002B5C0
l0002B5C0:
	r5 = r5 + 0x00000100
	// succ:  l0002B5C4
l0002B5C4:
	Mem0[r3:word32] = r6
	r3 = r3 + 0x00000004
	r4 = r5 ^ r3
	branch Test(NE,r4) l0002B5C4
	// succ:  l0002B5D4 l0002B5C4
l0002B5D4:
	r3 = Mem0[r19 + 36:word32]
	r7 = r7 + 0x00000001
	r18 = cond(r7 - r3)
	branch Test(LT,r18) l0002B5D4_ds_t
	// succ:  l0002B5D4_ds_f l0002B5D4_ds_t
l0002B5D4_ds_f:
	r3 = r5
	goto l0002B5E8
	// succ:  l0002B5E8
l0002B5D4_ds_t:
	r3 = r5
	goto l0002B5C0
	// succ:  l0002B5C0
l0002B5E8:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn0002B520_exit
fn0002B520_exit:


// fn0002CA58
// Return size: 0
define fn0002CA58
fn0002CA58_entry:
	r1 = fp
	// succ:  l0002CA58
l0002CA58:
	r1 = r1 + 0xFFFFFFBC
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 40:word32] = r23
	Mem0[r1:word32] = r15
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	Mem0[r1 + 60:word32] = r28
	Mem0[r1 + 64:word32] = r29
	r3 = Mem0[r5 + 4:word32]
	r21 = r5
	r19 = r6
	r3 = Mem0[r3:word32]
	r7 = 0x00000074
	r15 = 0x0002CA9C
	r6 = 0x00000001
	call 0x0002CA9C + r3 (retsize: 0;)
	r23 = r3
	Mem0[r21 + 484:word32] = r3
	r3 = 0x00001C78
	Mem0[r23 + 112:word32] = r0
	Mem0[r23:word32] = r3
	r3 = 0x00002200
	branch Test(NE,r19) l0002CA58_ds_t
	// succ:  l0002CA58_ds_f l0002CA58_ds_t
l0002CA58_ds_f:
	Mem0[r23 + 8:word32] = r3
	goto l0002CACC
	// succ:  l0002CACC
l0002CA58_ds_t:
	Mem0[r23 + 8:word32] = r3
	goto l0002CB50
	// succ:  l0002CB50
l0002CACC:
	r3 = Mem0[r21 + 4:word32]
	r5 = r21
	r6 = 0x00000001
	r3 = Mem0[r3 + 4:word32]
	r15 = 0x0002CADC
	r7 = 0x00000500
	call 0x0002CADC + r3 (retsize: 0;)
	r4 = r23 + 0x00000020
	r6 = r23 + 0x00000048
	// succ:  l0002CAEC
l0002CAEC:
	Mem0[r4:word32] = r3
	r4 = r4 + 0x00000004
	r5 = r4 ^ r6
	branch Test(NE,r5) l0002CAEC_ds_t
	// succ:  l0002CAEC_ds_f l0002CAEC_ds_t
l0002CAEC_ds_f:
	r3 = r3 + 0x00000080
	goto l0002CB00
	// succ:  l0002CB00
l0002CAEC_ds_t:
	r3 = r3 + 0x00000080
	goto l0002CAEC
	// succ:  l0002CAEC
l0002CB00:
	r3 = 0x00001CD8
	Mem0[r23 + 16:word32] = r5
	Mem0[r23 + 4:word32] = r3
	r3 = 0x00002394
	Mem0[r23 + 12:word32] = r3
	// succ:  l0002CB1C
l0002CB1C:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r28 = Mem0[r1 + 60:word32]
	r29 = Mem0[r1 + 64:word32]
	r1 = r1 + 0x00000044
	return
	// succ:  fn0002CA58_exit
l0002CB50:
	r3 = Mem0[r21 + 36:word32]
	r19 = Mem0[r21 + 216:word32]
	branch Test(LE,r3) l0002CB50_ds_t
	// succ:  l0002CB50_ds_f l0002CB50_ds_t
l0002CB50_ds_f:
	r28 = r23 + 0x00000048
	goto l0002CB60
	// succ:  l0002CB60
l0002CB50_ds_t:
	r28 = r23 + 0x00000048
	goto l0002CBE0
	// succ:  l0002CBE0
l0002CB60:
	r25 = r28
	r19 = r19 + 0x00000008
	r24 = 0x00000000
	r29 = 0x00000001
	goto l0002CB70
	// succ:  l0002CB70
l0002CB60_ds_f:
	r22 = Mem0[r19 + 4:word32]
	goto l0002CB80
	// succ:  l0002CB80
l0002CB60_ds_t:
	r22 = Mem0[r19 + 4:word32]
	goto l0002CB88
	// succ:  l0002CB88
l0002CB70:
	r3 = Mem0[r21 + 220:word32]
	r24 = r24 + 0x00000001
	branch Test(EQ,r3) l0002CB60_ds_t
	goto l0002CB60_ds_f
	// succ:  l0002CB60_ds_f l0002CB60_ds_t
l0002CB80:
	r3 = r22 + r22
	r22 = r3 + r22
	// succ:  l0002CB88
l0002CB88:
	r6 = Mem0[r19:word32]
	r5 = Mem0[r19 + 20:word32]
	r3 = Mem0[r21 + 4:word32]
	r19 = r19 + 0x00000054
	r25 = r25 + 0x00000004
	r15 = 0x0002CB9C
	r26 = Mem0[r3 + 20:word32]
	call fn0002CD10 (retsize: 0;)
	r6 = Mem0[r19 - 80:word32]
	r5 = Mem0[r19 - 60:word32]
	r15 = 0x0002CBAC
	r27 = r3
	call fn0002CD10 (retsize: 0;)
	r10 = r22
	r9 = r3
	r8 = r27
	r7 = r29
	r5 = r21
	r15 = 0x0002CBC8
	r6 = 0x00000001
	call 0x0002CBC8 + r26 (retsize: 0;)
	r4 = Mem0[r21 + 36:word32]
	r18 = cond(r24 - r4)
	branch Test(LT,r18) l0002CB88_ds_t
	// succ:  l0002CB88_ds_f l0002CB88_ds_t
l0002CB88_ds_f:
	Mem0[r25 - 4:word32] = r3
	goto l0002CBE0
	// succ:  l0002CBE0
l0002CB88_ds_t:
	Mem0[r25 - 4:word32] = r3
	goto l0002CB70
	// succ:  l0002CB70
l0002CBE0:
	r3 = 0x00001CE0
	Mem0[r23 + 16:word32] = r28
	Mem0[r23 + 4:word32] = r3
	r3 = 0x00001FC4
	Mem0[r23 + 12:word32] = r3
	goto l0002CB1C
	// succ:  l0002CB1C
fn0002CA58_exit:


// fn0002CC00
// Return size: 0
define fn0002CC00
fn0002CC00_entry:
	r1 = fp
	// succ:  l0002CC00
l0002CC00:
	r4 = Mem0[r5 + 4:word32]
	branch Test(NE,r4) l0002CC10
	// succ:  l0002CC08 l0002CC10
l0002CC08:
	return
	// succ:  fn0002CC00_exit
l0002CC10:
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	r3 = Mem0[r4 + 36:word32]
	r19 = r5
	r15 = 0x0002CC24
	r6 = 0x00000001
	call 0x0002CC24 + r3 (retsize: 0;)
	r3 = Mem0[r19 + 16:word32]
	branch Test(NE,r3) l0002CC10_ds_t
	// succ:  l0002CC10_ds_f l0002CC10_ds_t
l0002CC10_ds_f:
	r3 = 0x00000064
	goto l0002CC38
	// succ:  l0002CC38
l0002CC10_ds_t:
	r3 = 0x00000064
	goto l0002CC4C
	// succ:  l0002CC4C
l0002CC38:
	Mem0[r19 + 20:word32] = r3
	// succ:  l0002CC3C
l0002CC3C:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn0002CC00_exit
l0002CC4C:
	r3 = 0x000000C8
	Mem0[r19 + 20:word32] = r3
	Mem0[r19 + 360:word32] = r0
	goto l0002CC3C
	// succ:  l0002CC3C
fn0002CC00_exit:


// fn0002CC5C
// Return size: 0
define fn0002CC5C
fn0002CC5C_entry:
	r1 = fp
	// succ:  l0002CC5C
l0002CC5C:
	r3 = Mem0[r5 + 4:word32]
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	Mem0[r1:word32] = r15
	branch Test(EQ,r3) l0002CC5C_ds_t
	// succ:  l0002CC5C_ds_f l0002CC5C_ds_t
l0002CC5C_ds_f:
	r19 = r5
	goto l0002CC74
	// succ:  l0002CC74
l0002CC5C_ds_t:
	r19 = r5
	goto l0002CC80
	// succ:  l0002CC80
l0002CC74:
	r3 = Mem0[r3 + 40:word32]
	r15 = 0x0002CC78
	call 0x0002CC78 + r3 (retsize: 0;)
l0002CC80:
	Mem0[r19 + 4:word32] = r0
	Mem0[r19 + 20:word32] = r0
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn0002CC5C_exit
fn0002CC5C_exit:


// fn0002CC98
// Return size: 0
define fn0002CC98
fn0002CC98_entry:
	r1 = fp
	// succ:  l0002CC98
l0002CC98:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r3 = Mem0[r5 + 4:word32]
	r7 = 0x00000104
	r3 = Mem0[r3:word32]
	r15 = 0x0002CCAC
	r6 = 0x00000000
	call 0x0002CCAC + r3 (retsize: 0;)
	Mem0[r3 + 256:word32] = r0
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0002CC98_exit
fn0002CC98_exit:


// fn0002CCC4
// Return size: 0
define fn0002CCC4
fn0002CCC4_entry:
	r1 = fp
	// succ:  l0002CCC4
l0002CCC4:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r3 = Mem0[r5 + 4:word32]
	r7 = 0x00000228
	r3 = Mem0[r3:word32]
	r15 = 0x0002CCD8
	r6 = 0x00000000
	call 0x0002CCD8 + r3 (retsize: 0;)
	Mem0[r3 + 548:word32] = r0
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0002CCC4_exit
fn0002CCC4_exit:


// fn0002CCF0
// Return size: 0
define fn0002CCF0
fn0002CCF0_entry:
	r1 = fp
	// succ:  l0002CCF0
l0002CCF0:
	r5 = r5 + r6
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x0002CCFC
	r5 = r5 + 0xFFFFFFFF
	call fn0002E7D0 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0002CCF0_exit
fn0002CCF0_exit:


// fn0002CD10
// Return size: 0
define fn0002CD10
fn0002CD10_entry:
	r1 = fp
	// succ:  l0002CD10
l0002CD10:
	r1 = r1 + 0xFFFFFFE0
	Mem0[r1 + 28:word32] = r19
	r19 = r6 + 0xFFFFFFFF
	r19 = r19 + r5
	Mem0[r1:word32] = r15
	r15 = 0x0002CD24
	r5 = r19
	call fn0002E86C (retsize: 0;)
	r3 = r19 - r3
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r1 = r1 + 0x00000020
	return
	// succ:  fn0002CD10_exit
fn0002CD10_exit:


// fn0002CDCC
// Return size: 0
define fn0002CDCC
fn0002CDCC_entry:
	r1 = fp
	// succ:  l0002CDCC
l0002CDCC:
	r3 = r6
	r4 = r7
	r4 = r7 + r7
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r6 = r5
	r7 = r4
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x0002CE00
	r5 = r3
	call fn0002F60C (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0002CDCC_exit
fn0002CDCC_exit:


// fn0002CE14
// Return size: 0
define fn0002CE14
fn0002CE14_entry:
	r1 = fp
	// succ:  l0002CE14
l0002CE14:
	r7 = r6
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x0002CE20
	r6 = 0x00000000
	call fn0002F63C (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0002CE14_exit
fn0002CE14_exit:


// fn0002CFE4
// Return size: 0
define fn0002CFE4
fn0002CFE4_entry:
	r1 = fp
	// succ:  l0002CFE4
l0002CFE4:
	r15 = 0x0002CFE4
	r6 = r1 + 0x0000001C
	call 0x0002CFE4 + r3 (retsize: 0;)
	r6 = 0x000079A0
	r5 = Mem0[0x00008EB8:word32]
	r15 = 0x0002CFFC
	r7 = r1 + 0x0000001C
	call fn0002EB28 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x000000E4
	return
	// succ:  fn0002CFE4_exit
fn0002CFE4_exit:


// fn0002D0AC
// Return size: 0
define fn0002D0AC
fn0002D0AC_entry:
	r1 = fp
	// succ:  l0002D0AC
l0002D0AC:
	r1 = r1 + 0xFFFFFFC4
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	r22 = Mem0[r6 + 8:word32]
	r21 = Mem0[r6 + 24:word32]
	r19 = r6
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r22 = r22 + r22
	r25 = r5
	r6 = r21
	r5 = r22
	r15 = 0x0002D108
	r24 = r7
	call fn0002E908 (retsize: 0;)
	r23 = r3
	r3 = Mem0[r19 + 16:word32]
	branch Test(LE,r3) l0002D0AC_ds_t
	// succ:  l0002D0AC_ds_f l0002D0AC_ds_t
l0002D0AC_ds_f:
	r15 = Mem0[r1:word32]
	goto l0002D120
	// succ:  l0002D120
l0002D0AC_ds_t:
	r15 = Mem0[r1:word32]
	goto l0002D1F0
	// succ:  l0002D1F0
l0002D120:
	r4 = Mem0[r19 + 20:word32]
	r18 = cond(r3 - r4)
	branch Test(LT,r18) l0002D244
	// succ:  l0002D12C l0002D244
l0002D12C:
	r3 = Mem0[r19 + 28:word32]
	r3 = r3 - r21
	r18 = cond(r4 - r3)
	branch Test(LT,r18) l0002D228
	// succ:  l0002D13C l0002D228
l0002D13C:
	r6 = Mem0[r19 + 4:word32]
	r6 = r6 - r21
	r18 = cond(r3 - r6)
	branch Test(LT,r18) l0002D220
	// succ:  l0002D14C l0002D220
l0002D14C:
	branch Test(LE,r6) l0002D14C_ds_t
	// succ:  l0002D14C_ds_f l0002D14C_ds_t
l0002D14C_ds_f:
	r26 = r19 + 0x00000030
	goto l0002D154
	// succ:  l0002D154
l0002D14C_ds_t:
	r26 = r19 + 0x00000030
	goto l0002D1EC
	// succ:  l0002D1EC
l0002D154:
	r21 = 0x00000000
	goto l0002D158
	// succ:  l0002D158
l0002D154_ds_f:
	r7 = Mem0[r4 + r3:word32]
	goto l0002D178
	// succ:  l0002D178
l0002D154_ds_t:
	r7 = Mem0[r4 + r3:word32]
	goto l0002D218
	// succ:  l0002D218
l0002D158:
	r15 = 0x0002D158
	r5 = r22
	call fn0002E908 (retsize: 0;)
	r27 = r3
	r3 = Mem0[r19:word32]
	r4 = r21 + r21
	r4 = r4 + r4
	branch Test(EQ,r24) l0002D154_ds_t
	goto l0002D154_ds_f
	// succ:  l0002D154_ds_f l0002D154_ds_t
l0002D178:
	r3 = Mem0[r19 + 52:word32]
	goto l0002D17C
	// succ:  l0002D17C
l0002D178_ds_f:
	r3 = r4 - r21
	goto l0002D1AC
	// succ:  l0002D1AC
l0002D178_ds_t:
	r3 = r4 - r21
	goto l0002D1EC
	// succ:  l0002D1EC
l0002D17C:
	r8 = r23
	r5 = r25
	r9 = r27
	r6 = r26
	r15 = 0x0002D18C
	r23 = r23 + r27
	call 0x0002D18C + r3 (retsize: 0;)
	r5 = Mem0[r19 + 20:word32]
	r4 = Mem0[r19 + 16:word32]
	r21 = r5 + r21
	r18 = cond(r21 - r4)
	branch Test(GE,r18) l0002D178_ds_t
	goto l0002D178_ds_f
	// succ:  l0002D178_ds_f l0002D178_ds_t
l0002D1AC:
	r18 = cond(r5 - r3)
	branch Test(GE,r18) l0002D1B8
	// succ:  l0002D1B4 l0002D1B8
l0002D1B4:
	r3 = r5
	// succ:  l0002D1B8
l0002D1B8:
	r6 = Mem0[r19 + 24:word32]
	r4 = Mem0[r19 + 28:word32]
	r5 = r21 + r6
	r4 = r4 - r5
	r18 = cond(r3 - r4)
	branch Test(GE,r18) l0002D1D4
	// succ:  l0002D1D0 l0002D1D4
l0002D1D0:
	r4 = r3
	// succ:  l0002D1D4
l0002D1D4:
	r6 = Mem0[r19 + 4:word32]
	r6 = r6 - r5
	r18 = cond(r4 - r6)
	branch Test(GE,r18) l0002D1E8
	// succ:  l0002D1E4 l0002D1E8
l0002D1E4:
	r6 = r4
	// succ:  l0002D1E8
l0002D1E8:
	branch Test(GT,r6) l0002D158
	// succ:  l0002D1EC l0002D158
l0002D1EC:
	r15 = Mem0[r1:word32]
	// succ:  l0002D1F0
l0002D1F0:
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r1 = r1 + 0x0000003C
	return
	// succ:  fn0002D0AC_exit
l0002D218:
	r3 = Mem0[r19 + 48:word32]
	goto l0002D17C
	// succ:  l0002D17C
l0002D220:
	r6 = r3
	goto l0002D14C
	// succ:  l0002D14C
l0002D228:
	r6 = Mem0[r19 + 4:word32]
	// succ:  l0002D22C
l0002D22C:
	r3 = r4
	r6 = r6 - r21
	r18 = cond(r3 - r6)
	branch Test(GE,r18) l0002D14C
	// succ:  l0002D23C l0002D14C
l0002D23C:
	r6 = r3
	goto l0002D14C
	// succ:  l0002D14C
l0002D244:
	r4 = r3
	r3 = Mem0[r19 + 28:word32]
	r3 = r3 - r21
	r18 = cond(r4 - r3)
	branch Test(GE,r18) l0002D13C
	// succ:  l0002D258 l0002D13C
l0002D258:
	r6 = Mem0[r19 + 4:word32]
	goto l0002D22C
	// succ:  l0002D22C
fn0002D0AC_exit:


// fn0002D260
// Return size: 0
define fn0002D260
fn0002D260_entry:
	r1 = fp
	// succ:  l0002D260
l0002D260:
	r3 = 0xFFFFC9F4
	r1 = r1 + 0xFFFFFFB8
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	Mem0[r1:word32] = r15
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1 + 52:word32] = r26
	Mem0[r1 + 56:word32] = r27
	Mem0[r1 + 60:word32] = r28
	Mem0[r1 + 64:word32] = r29
	Mem0[r1 + 68:word32] = r30
	r23 = r5
	r22 = r7
	r19 = r6
	r18 = cond(r3 -u r7)
	branch Test(GE,r18) l0002D260_ds_t
	// succ:  l0002D260_ds_f l0002D260_ds_t
l0002D260_ds_f:
	r25 = Mem0[r5 + 4:word32]
	goto l0002D2B4
	// succ:  l0002D2B4
l0002D260_ds_t:
	r25 = Mem0[r5 + 4:word32]
	goto l0002D2D4
	// succ:  l0002D2D4
l0002D2B4:
	r3 = Mem0[r5:word32]
	r4 = 0x00000036
	Mem0[r3 + 20:word32] = r4
	r4 = 0x00000001
	Mem0[r3 + 24:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x0002D2CC
	call 0x0002D2CC + r3 (retsize: 0;)
l0002D2D4:
	r3 = r22 & 0x00000007
	branch Test(EQ,r3) l0002D2D4_ds_t
	// succ:  l0002D2D4_ds_f l0002D2D4_ds_t
l0002D2D4_ds_f:
	r4 = r22 + 0x00000008
	goto l0002D2E0
	// succ:  l0002D2E0
l0002D2D4_ds_t:
	r4 = r22 + 0x00000008
	goto l0002D2E4
	// succ:  l0002D2E4
l0002D2E0:
	r22 = r4 - r3
	// succ:  l0002D2E4
l0002D2E4:
	r3 = 0x00000001
	r18 = cond(r3 -u r19)
	branch Test(GE,r18) l0002D2E4_ds_t
	// succ:  l0002D2E4_ds_f l0002D2E4_ds_t
l0002D2E4_ds_f:
	r4 = 0x0000000E
	goto l0002D2F4
	// succ:  l0002D2F4
l0002D2E4_ds_t:
	r4 = 0x0000000E
	goto l0002D30C
	// succ:  l0002D30C
l0002D2F4:
	r3 = Mem0[r23:word32]
	r5 = r23
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x0002D304
	Mem0[r3 + 24:word32] = r19
	call 0x0002D304 + r4 (retsize: 0;)
l0002D30C:
	r19 = r19 + r19
	r3 = r19 + r19
	r26 = r25 + r3
	r21 = Mem0[r26 + 52:word32]
	branch Test(EQ,r21) l0002D30C_ds_t
	// succ:  l0002D30C_ds_f l0002D30C_ds_t
l0002D30C_ds_f:
	r27 = r22 + 0x0000000C
	goto l0002D324
	// succ:  l0002D324
l0002D30C_ds_t:
	r27 = r22 + 0x0000000C
	goto l0002D460
	// succ:  l0002D460
l0002D324:
	r4 = Mem0[r21 + 8:word32]
	r18 = cond(r4 -u r22)
	branch Test(LT,r18) l0002D348
	// succ:  l0002D330 l0002D348
l0002D330:
	r5 = Mem0[r21 + 4:word32]
	goto l0002D480
	// succ:  l0002D480
l0002D338:
	r4 = Mem0[r3 + 8:word32]
	r18 = cond(r4 -u r22)
	branch Test(GE,r18) l0002D338_ds_t
	// succ:  l0002D338_ds_f l0002D338_ds_t
l0002D338_ds_f:
	r21 = r3
	goto l0002D348
	// succ:  l0002D348
l0002D338_ds_t:
	r21 = r3
	goto l0002D448
	// succ:  l0002D448
l0002D348:
	r3 = Mem0[r21:word32]
	branch Test(NE,r3) l0002D348_ds_t
	// succ:  l0002D348_ds_f l0002D348_ds_t
l0002D348_ds_f:
	r27 = r22 + 0x0000000C
	goto l0002D354
	// succ:  l0002D354
l0002D348_ds_t:
	r27 = r22 + 0x0000000C
	goto l0002D338
	// succ:  l0002D338
l0002D354:
	r19 = r19 + r19
	r19 = r19 + 0xFFFF8E34
	r3 = Mem0[r19:word32]
	// succ:  l0002D364
l0002D364:
	r4 = 0xFFFFCA00
	r19 = r4 - r27
	r18 = cond(r3 -u r19)
	branch Test(LT,r18) l0002D458
	// succ:  l0002D378 l0002D458
l0002D378:
	r28 = 0x00000031
	r30 = 0x00000036
	r29 = 0x00000002
	goto l0002D384
	// succ:  l0002D384
l0002D378_ds_f:
	r5 = r23
	goto l0002D39C
	// succ:  l0002D39C
l0002D378_ds_t:
	r5 = r23
	goto l0002D3D4
	// succ:  l0002D3D4
l0002D384:
	r24 = r27 + r19
	r5 = r23
	r15 = 0x0002D38C
	r6 = r24
	call fn0002E71C (retsize: 0;)
	branch Test(NE,r3) l0002D378_ds_t
	goto l0002D378_ds_f
	// succ:  l0002D378_ds_f l0002D378_ds_t
l0002D39C:
	r19 = r19 >>u 1
	C = cond(r19)
	r18 = cond(r28 -u r19)
	branch Test(LT,r18) l0002D39C_ds_t
	// succ:  l0002D39C_ds_f l0002D39C_ds_t
l0002D39C_ds_f:
	r24 = r27 + r19
	goto l0002D3AC
	// succ:  l0002D3AC
l0002D39C_ds_t:
	r24 = r27 + r19
	goto l0002D384
	// succ:  l0002D384
l0002D3AC:
	r3 = Mem0[r23:word32]
	r4 = Mem0[r3:word32]
	Mem0[r3 + 20:word32] = r30
	r15 = 0x0002D3B8
	Mem0[r3 + 24:word32] = r29
	call 0x0002D3B8 + r4 (retsize: 0;)
	r5 = r23
	r15 = 0x0002D3C4
	r6 = r24
	call fn0002E71C (retsize: 0;)
	branch Test(EQ,r3) l0002D3AC_ds_t
	// succ:  l0002D3AC_ds_f l0002D3AC_ds_t
l0002D3AC_ds_f:
	r5 = r23
	goto l0002D3D4
	// succ:  l0002D3D4
l0002D3AC_ds_t:
	r5 = r23
	goto l0002D39C
	// succ:  l0002D39C
l0002D3D4:
	r5 = Mem0[r25 + 76:word32]
	r4 = r22 + r19
	r24 = r5 + r24
	Mem0[r25 + 76:word32] = r24
	Mem0[r3:word32] = r0
	Mem0[r3 + 4:word32] = r0
	branch Test(EQ,r21) l0002D3D4_ds_t
	// succ:  l0002D3D4_ds_f l0002D3D4_ds_t
l0002D3D4_ds_f:
	Mem0[r3 + 8:word32] = r4
	goto l0002D3F4
	// succ:  l0002D3F4
l0002D3D4_ds_t:
	Mem0[r3 + 8:word32] = r4
	goto l0002D470
	// succ:  l0002D470
l0002D3F4:
	r6 = r22
	Mem0[r21:word32] = r3
	r5 = 0x0000000C
	// succ:  l0002D400
l0002D400:
	r4 = r4 - r22
	Mem0[r3 + 4:word32] = r6
	Mem0[r3 + 8:word32] = r4
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r27 = Mem0[r1 + 56:word32]
	r28 = Mem0[r1 + 60:word32]
	r29 = Mem0[r1 + 64:word32]
	r30 = Mem0[r1 + 68:word32]
	r3 = r3 + r5
	r1 = r1 + 0x00000048
	return
	// succ:  fn0002D260_exit
l0002D448:
	r5 = Mem0[r3 + 4:word32]
	r6 = r22 + r5
	r5 = r5 + 0x0000000C
	goto l0002D400
	// succ:  l0002D400
l0002D458:
	r19 = r3
	goto l0002D378
	// succ:  l0002D378
l0002D460:
	r3 = r3 + 0xFFFF8E3C
	r3 = Mem0[r3:word32]
	goto l0002D364
	// succ:  l0002D364
l0002D470:
	Mem0[r26 + 52:word32] = r3
	r6 = r22
	r5 = 0x0000000C
	goto l0002D400
	// succ:  l0002D400
l0002D480:
	r3 = r21
	r6 = r22 + r5
	r5 = r5 + 0x0000000C
	goto l0002D400
	// succ:  l0002D400
fn0002D260_exit:


// fn0002D5F8
// Return size: 0
define fn0002D5F8
fn0002D5F8_entry:
	r1 = fp
	// succ:  l0002D5F8
l0002D5F8:
	r1 = r1 + 0xFFFFFFD0
	Mem0[r1 + 40:word32] = r23
	Mem0[r1 + 44:word32] = r24
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	r3 = 0x00000001
	r23 = r5
	r24 = r6
	r18 = cond(r3 -u r6)
	branch Test(GE,r18) l0002D5F8_ds_t
	// succ:  l0002D5F8_ds_f l0002D5F8_ds_t
l0002D5F8_ds_f:
	r22 = Mem0[r5 + 4:word32]
	goto l0002D62C
	// succ:  l0002D62C
l0002D5F8_ds_t:
	r22 = Mem0[r5 + 4:word32]
	goto l0002D6F0
	// succ:  l0002D6F0
l0002D62C:
	r3 = Mem0[r5:word32]
	r4 = 0x0000000E
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x0002D63C
	Mem0[r3 + 24:word32] = r6
	call 0x0002D63C + r4 (retsize: 0;)
	goto l0002D644
	// succ:  l0002D644
l0002D62C_ds_f:
	Mem0[r24 + 60:word32] = r0
	goto l0002D65C
	// succ:  l0002D65C
l0002D62C_ds_t:
	Mem0[r24 + 60:word32] = r0
	goto l0002D690
	// succ:  l0002D690
l0002D644:
	r24 = r24 + r24
	r24 = r24 + r24
	r24 = r22 + r24
	r19 = Mem0[r24 + 60:word32]
	branch Test(EQ,r19) l0002D62C_ds_t
	goto l0002D62C_ds_f
	// succ:  l0002D62C_ds_f l0002D62C_ds_t
l0002D65C:
	r4 = Mem0[r19 + 8:word32]
	r21 = Mem0[r19 + 4:word32]
	r6 = r19
	r5 = r23
	r21 = r21 + r4
	r21 = r21 + 0x0000000C
	r7 = r21
	r15 = 0x0002D678
	r19 = Mem0[r19:word32]
	call fn0002E770 (retsize: 0;)
	r4 = Mem0[r22 + 76:word32]
	r21 = r4 - r21
	branch Test(NE,r19) l0002D65C_ds_t
	// succ:  l0002D65C_ds_f l0002D65C_ds_t
l0002D65C_ds_f:
	Mem0[r22 + 76:word32] = r21
	goto l0002D690
	// succ:  l0002D690
l0002D65C_ds_t:
	Mem0[r22 + 76:word32] = r21
	goto l0002D65C
	// succ:  l0002D65C
l0002D690:
	r19 = Mem0[r24 + 52:word32]
	branch Test(EQ,r19) l0002D690_ds_t
	// succ:  l0002D690_ds_f l0002D690_ds_t
l0002D690_ds_f:
	Mem0[r24 + 52:word32] = r0
	goto l0002D69C
	// succ:  l0002D69C
l0002D690_ds_t:
	Mem0[r24 + 52:word32] = r0
	goto l0002D6D0
	// succ:  l0002D6D0
l0002D69C:
	r4 = Mem0[r19 + 8:word32]
	r21 = Mem0[r19 + 4:word32]
	r6 = r19
	r5 = r23
	r21 = r21 + r4
	r21 = r21 + 0x0000000C
	r7 = r21
	r15 = 0x0002D6B8
	r19 = Mem0[r19:word32]
	call fn0002E738 (retsize: 0;)
	r4 = Mem0[r22 + 76:word32]
	r21 = r4 - r21
	branch Test(NE,r19) l0002D69C_ds_t
	// succ:  l0002D69C_ds_f l0002D69C_ds_t
l0002D69C_ds_f:
	Mem0[r22 + 76:word32] = r21
	goto l0002D6D0
	// succ:  l0002D6D0
l0002D69C_ds_t:
	Mem0[r22 + 76:word32] = r21
	goto l0002D69C
	// succ:  l0002D69C
l0002D6D0:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r1 = r1 + 0x00000030
	return
	// succ:  fn0002D5F8_exit
l0002D6F0:
	r3 = r6 ^ 0x00000001
	branch Test(NE,r3) l0002D644
	// succ:  l0002D6F8 l0002D644
l0002D6F8:
	r19 = Mem0[r22 + 68:word32]
	branch Test(EQ,r19) l0002D724
	// succ:  l0002D700 l0002D724
l0002D700:
	r3 = Mem0[r19 + 40:word32]
	r5 = r23
	branch Test(EQ,r3) l0002D700_ds_t
	// succ:  l0002D700_ds_f l0002D700_ds_t
l0002D700_ds_f:
	r6 = r19 + 0x00000030
	goto l0002D710
	// succ:  l0002D710
l0002D700_ds_t:
	r6 = r19 + 0x00000030
	goto l0002D71C
	// succ:  l0002D71C
l0002D710:
	r3 = Mem0[r19 + 56:word32]
	r15 = 0x0002D714
	Mem0[r19 + 40:word32] = r0
	call 0x0002D714 + r3 (retsize: 0;)
l0002D71C:
	r19 = Mem0[r19 + 44:word32]
	branch Test(NE,r19) l0002D700
	// succ:  l0002D724 l0002D700
l0002D724:
	r19 = Mem0[r22 + 72:word32]
	branch Test(EQ,r19) l0002D724_ds_t
	// succ:  l0002D724_ds_f l0002D724_ds_t
l0002D724_ds_f:
	Mem0[r22 + 68:word32] = r0
	goto l0002D730
	// succ:  l0002D730
l0002D724_ds_t:
	Mem0[r22 + 68:word32] = r0
	goto l0002D754
	// succ:  l0002D754
l0002D730:
	r3 = Mem0[r19 + 40:word32]
	r5 = r23
	branch Test(EQ,r3) l0002D730_ds_t
	// succ:  l0002D730_ds_f l0002D730_ds_t
l0002D730_ds_f:
	r6 = r19 + 0x00000030
	goto l0002D740
	// succ:  l0002D740
l0002D730_ds_t:
	r6 = r19 + 0x00000030
	goto l0002D74C
	// succ:  l0002D74C
l0002D740:
	r3 = Mem0[r19 + 56:word32]
	r15 = 0x0002D744
	Mem0[r19 + 40:word32] = r0
	call 0x0002D744 + r3 (retsize: 0;)
l0002D74C:
	r19 = Mem0[r19 + 44:word32]
	branch Test(NE,r19) l0002D730
	// succ:  l0002D754 l0002D730
l0002D754:
	Mem0[r22 + 72:word32] = r0
	goto l0002D644
	// succ:  l0002D644
fn0002D5F8_exit:


// fn0002DA08
// Return size: 0
define fn0002DA08
fn0002DA08_entry:
	r1 = fp
	// succ:  l0002DA08
l0002DA08:
	r3 = 0xFFFFC9F4
	r1 = r1 + 0xFFFFFFD0
	Mem0[r1 + 32:word32] = r19
	Mem0[r1 + 36:word32] = r21
	Mem0[r1 + 44:word32] = r23
	Mem0[r1:word32] = r15
	Mem0[r1 + 40:word32] = r22
	r23 = r5
	r21 = r7
	r19 = r6
	r18 = cond(r3 -u r7)
	branch Test(GE,r18) l0002DA08_ds_t
	// succ:  l0002DA08_ds_f l0002DA08_ds_t
l0002DA08_ds_f:
	r22 = Mem0[r5 + 4:word32]
	goto l0002DA40
	// succ:  l0002DA40
l0002DA08_ds_t:
	r22 = Mem0[r5 + 4:word32]
	goto l0002DA60
	// succ:  l0002DA60
l0002DA40:
	r3 = Mem0[r5:word32]
	r4 = 0x00000036
	r6 = 0x00000003
	Mem0[r3 + 20:word32] = r4
	Mem0[r3 + 24:word32] = r6
	r3 = Mem0[r3:word32]
	r15 = 0x0002DA58
	call 0x0002DA58 + r3 (retsize: 0;)
l0002DA60:
	r3 = r21 & 0x00000007
	branch Test(EQ,r3) l0002DA70
	// succ:  l0002DA68 l0002DA70
l0002DA68:
	r21 = r21 + 0x00000008
	r21 = r21 - r3
	// succ:  l0002DA70
l0002DA70:
	r3 = 0x00000001
	r18 = cond(r3 -u r19)
	branch Test(GE,r18) l0002DA70_ds_t
	// succ:  l0002DA70_ds_f l0002DA70_ds_t
l0002DA70_ds_f:
	r4 = 0x0000000E
	goto l0002DA80
	// succ:  l0002DA80
l0002DA70_ds_t:
	r4 = 0x0000000E
	goto l0002DA98
	// succ:  l0002DA98
l0002DA80:
	r3 = Mem0[r23:word32]
	r5 = r23
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x0002DA90
	Mem0[r3 + 24:word32] = r19
	call 0x0002DA90 + r4 (retsize: 0;)
l0002DA98:
	r5 = r23
	r15 = 0x0002DA9C
	r6 = r21 + 0x0000000C
	call fn0002E754 (retsize: 0;)
	branch Test(NE,r3) l0002DA98_ds_t
	// succ:  l0002DA98_ds_f l0002DA98_ds_t
l0002DA98_ds_f:
	r6 = 0x00000036
	goto l0002DAAC
	// succ:  l0002DAAC
l0002DA98_ds_t:
	r6 = 0x00000036
	goto l0002DAD0
	// succ:  l0002DAD0
l0002DAAC:
	r4 = Mem0[r23:word32]
	r5 = r23
	Mem0[r4 + 20:word32] = r6
	r6 = 0x00000004
	Mem0[r4 + 24:word32] = r6
	r4 = Mem0[r4:word32]
	r15 = 0x0002DAC4
	Mem0[r1 + 28:word32] = r3
	call 0x0002DAC4 + r4 (retsize: 0;)
	r3 = Mem0[r1 + 28:word32]
	// succ:  l0002DAD0
l0002DAD0:
	r4 = Mem0[r22 + 76:word32]
	r19 = r19 + r19
	r19 = r19 + r19
	r4 = r4 + 0x0000000C
	r4 = r4 + r21
	Mem0[r22 + 76:word32] = r4
	r19 = r22 + r19
	r4 = Mem0[r19 + 60:word32]
	Mem0[r3 + 4:word32] = r21
	Mem0[r3 + 8:word32] = r0
	Mem0[r3:word32] = r4
	Mem0[r19 + 60:word32] = r3
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 32:word32]
	r21 = Mem0[r1 + 36:word32]
	r22 = Mem0[r1 + 40:word32]
	r23 = Mem0[r1 + 44:word32]
	r3 = r3 + 0x0000000C
	r1 = r1 + 0x00000030
	return
	// succ:  fn0002DA08_exit
fn0002DA08_exit:


// fn0002DB20
// Return size: 0
define fn0002DB20
fn0002DB20_entry:
	r1 = fp
	// succ:  l0002DB20
l0002DB20:
	r1 = r1 + 0xFFFFFFC8
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	r22 = r5
	r21 = r7
	r21 = r7 + r7
	r21 = r21 + r21
	r21 = r21 + r21
	r21 = r21 + r21
	r21 = r21 + r21
	r21 = r21 + r21
	r21 = r21 + r21
	r23 = r6
	r5 = 0xFFFFC9F4
	r6 = r21
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 52:word32] = r26
	r15 = 0x0002DB78
	r24 = r8
	call fn0002E960 (retsize: 0;)
	r19 = Mem0[r22 + 4:word32]
	branch Test(NE,r3) l0002DB20_ds_t
	// succ:  l0002DB20_ds_f l0002DB20_ds_t
l0002DB20_ds_f:
	r25 = r3
	goto l0002DB8C
	// succ:  l0002DB8C
l0002DB20_ds_t:
	r25 = r3
	goto l0002DBA4
	// succ:  l0002DBA4
l0002DB8C:
	r3 = Mem0[r22:word32]
	r4 = 0x00000046
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x0002DB9C
	r5 = r22
	call 0x0002DB9C + r3 (retsize: 0;)
l0002DBA4:
	r18 = cond(r25 - r24)
	branch Test(LT,r18) l0002DBA4_ds_t
	// succ:  l0002DBA4_ds_f l0002DBA4_ds_t
l0002DBA4_ds_f:
	r6 = r23
	goto l0002DBB0
	// succ:  l0002DBB0
l0002DBA4_ds_t:
	r6 = r23
	goto l0002DBB4
	// succ:  l0002DBB4
l0002DBB0:
	r25 = r24
	// succ:  l0002DBB4
l0002DBB4:
	r5 = r22
	r7 = r24
	r7 = r24 + r24
	r7 = r7 + r7
	r15 = 0x0002DBC4
	Mem0[r19 + 80:word32] = r25
	call fn0002D260 (retsize: 0;)
	branch Test(EQ,r24) l0002DBB4_ds_t
	// succ:  l0002DBB4_ds_f l0002DBB4_ds_t
l0002DBB4_ds_f:
	r26 = r3
	goto l0002DBD4
	// succ:  l0002DBD4
l0002DBB4_ds_t:
	r26 = r3
	goto l0002DC48
	// succ:  l0002DC48
l0002DBD4:
	r19 = 0x00000000
	r3 = r24 - r19
	goto l0002DBDC
	// succ:  l0002DBDC
l0002DBD4_ds_f:
	r6 = r25
	goto l0002DBE8
	// succ:  l0002DBE8
l0002DBD4_ds_t:
	r6 = r25
	goto l0002DBF0
	// succ:  l0002DBF0
l0002DBDC:
	r18 = cond(r3 -u r25)
	branch Test(GE,r18) l0002DBD4_ds_t
	goto l0002DBD4_ds_f
	// succ:  l0002DBD4_ds_f l0002DBD4_ds_t
l0002DBE8:
	r25 = r3
	r6 = r25
	// succ:  l0002DBF0
l0002DBF0:
	r15 = 0x0002DBF0
	r5 = r21
	call fn0002E908 (retsize: 0;)
	r7 = r3
	r6 = r23
	r15 = 0x0002DC00
	r5 = r22
	call fn0002DA08 (retsize: 0;)
	branch Test(EQ,r25) l0002DC3C
	// succ:  l0002DC0C l0002DC3C
l0002DC0C:
	r4 = r19 + r19
	r19 = r19 + r25
	r6 = r19 + r19
	r4 = r4 + r4
	r6 = r6 + r6
	r4 = r26 + r4
	r6 = r26 + r6
	// succ:  l0002DC28
l0002DC28:
	Mem0[r4:word32] = r3
	r4 = r4 + 0x00000004
	r5 = r4 ^ r6
	branch Test(NE,r5) l0002DC28_ds_t
	// succ:  l0002DC28_ds_f l0002DC28_ds_t
l0002DC28_ds_f:
	r3 = r3 + r21
	goto l0002DC3C
	// succ:  l0002DC3C
l0002DC28_ds_t:
	r3 = r3 + r21
	goto l0002DC28
	// succ:  l0002DC28
l0002DC3C:
	r18 = cond(r19 -u r24)
	branch Test(LT,r18) l0002DC3C_ds_t
	// succ:  l0002DC3C_ds_f l0002DC3C_ds_t
l0002DC3C_ds_f:
	r3 = r24 - r19
	goto l0002DC48
	// succ:  l0002DC48
l0002DC3C_ds_t:
	r3 = r24 - r19
	goto l0002DBDC
	// succ:  l0002DBDC
l0002DC48:
	r3 = r26
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r1 = r1 + 0x00000038
	return
	// succ:  fn0002DB20_exit
fn0002DB20_exit:


// fn0002DC74
// Return size: 0
define fn0002DC74
fn0002DC74_entry:
	r1 = fp
	// succ:  l0002DC74
l0002DC74:
	r1 = r1 + 0xFFFFFFC8
	Mem0[r1 + 36:word32] = r22
	Mem0[r1 + 40:word32] = r23
	r22 = r5
	r23 = r6
	r5 = 0xFFFFC9F4
	r6 = r7
	Mem0[r1 + 32:word32] = r21
	Mem0[r1 + 44:word32] = r24
	Mem0[r1 + 48:word32] = r25
	Mem0[r1:word32] = r15
	Mem0[r1 + 28:word32] = r19
	Mem0[r1 + 52:word32] = r26
	r21 = r7
	r15 = 0x0002DCB0
	r24 = r8
	call fn0002E960 (retsize: 0;)
	r19 = Mem0[r22 + 4:word32]
	branch Test(NE,r3) l0002DC74_ds_t
	// succ:  l0002DC74_ds_f l0002DC74_ds_t
l0002DC74_ds_f:
	r25 = r3
	goto l0002DCC4
	// succ:  l0002DCC4
l0002DC74_ds_t:
	r25 = r3
	goto l0002DCDC
	// succ:  l0002DCDC
l0002DCC4:
	r3 = Mem0[r22:word32]
	r4 = 0x00000046
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x0002DCD4
	r5 = r22
	call 0x0002DCD4 + r3 (retsize: 0;)
l0002DCDC:
	r18 = cond(r25 - r24)
	branch Test(LT,r18) l0002DCDC_ds_t
	// succ:  l0002DCDC_ds_f l0002DCDC_ds_t
l0002DCDC_ds_f:
	r6 = r23
	goto l0002DCE8
	// succ:  l0002DCE8
l0002DCDC_ds_t:
	r6 = r23
	goto l0002DCEC
	// succ:  l0002DCEC
l0002DCE8:
	r25 = r24
	// succ:  l0002DCEC
l0002DCEC:
	r5 = r22
	r7 = r24
	r7 = r24 + r24
	r7 = r7 + r7
	r15 = 0x0002DCFC
	Mem0[r19 + 80:word32] = r25
	call fn0002D260 (retsize: 0;)
	branch Test(EQ,r24) l0002DCEC_ds_t
	// succ:  l0002DCEC_ds_f l0002DCEC_ds_t
l0002DCEC_ds_f:
	r26 = r3
	goto l0002DD0C
	// succ:  l0002DD0C
l0002DCEC_ds_t:
	r26 = r3
	goto l0002DD80
	// succ:  l0002DD80
l0002DD0C:
	r19 = 0x00000000
	r3 = r24 - r19
	goto l0002DD14
	// succ:  l0002DD14
l0002DD0C_ds_f:
	r6 = r25
	goto l0002DD20
	// succ:  l0002DD20
l0002DD0C_ds_t:
	r6 = r25
	goto l0002DD28
	// succ:  l0002DD28
l0002DD14:
	r18 = cond(r3 -u r25)
	branch Test(GE,r18) l0002DD0C_ds_t
	goto l0002DD0C_ds_f
	// succ:  l0002DD0C_ds_f l0002DD0C_ds_t
l0002DD20:
	r25 = r3
	r6 = r25
	// succ:  l0002DD28
l0002DD28:
	r15 = 0x0002DD28
	r5 = r21
	call fn0002E908 (retsize: 0;)
	r7 = r3
	r6 = r23
	r15 = 0x0002DD38
	r5 = r22
	call fn0002DA08 (retsize: 0;)
	branch Test(EQ,r25) l0002DD74
	// succ:  l0002DD44 l0002DD74
l0002DD44:
	r4 = r19 + r19
	r19 = r19 + r25
	r6 = r19 + r19
	r4 = r4 + r4
	r6 = r6 + r6
	r4 = r26 + r4
	r6 = r26 + r6
	// succ:  l0002DD60
l0002DD60:
	Mem0[r4:word32] = r3
	r4 = r4 + 0x00000004
	r5 = r4 ^ r6
	branch Test(NE,r5) l0002DD60_ds_t
	// succ:  l0002DD60_ds_f l0002DD60_ds_t
l0002DD60_ds_f:
	r3 = r3 + r21
	goto l0002DD74
	// succ:  l0002DD74
l0002DD60_ds_t:
	r3 = r3 + r21
	goto l0002DD60
	// succ:  l0002DD60
l0002DD74:
	r18 = cond(r19 -u r24)
	branch Test(LT,r18) l0002DD74_ds_t
	// succ:  l0002DD74_ds_f l0002DD74_ds_t
l0002DD74_ds_f:
	r3 = r24 - r19
	goto l0002DD80
	// succ:  l0002DD80
l0002DD74_ds_t:
	r3 = r24 - r19
	goto l0002DD14
	// succ:  l0002DD14
l0002DD80:
	r3 = r26
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 28:word32]
	r21 = Mem0[r1 + 32:word32]
	r22 = Mem0[r1 + 36:word32]
	r23 = Mem0[r1 + 40:word32]
	r24 = Mem0[r1 + 44:word32]
	r25 = Mem0[r1 + 48:word32]
	r26 = Mem0[r1 + 52:word32]
	r1 = r1 + 0x00000038
	return
	// succ:  fn0002DC74_exit
fn0002DC74_exit:


// fn0002E530
// Return size: 0
define fn0002E530
fn0002E530_entry:
	r1 = fp
	// succ:  l0002E530
l0002E530:
	r1 = r1 + 0xFFFFFFD4
	Mem0[r1:word32] = r15
	Mem0[r1 + 36:word32] = r19
	Mem0[r1 + 40:word32] = r21
	r21 = r5
	r15 = 0x0002E544
	Mem0[r5 + 4:word32] = r0
	call fn0002E7C0 (retsize: 0;)
	r5 = r21
	r6 = 0x00000054
	r15 = 0x0002E554
	Mem0[r1 + 28:word32] = r3
	call fn0002E71C (retsize: 0;)
	branch Test(EQ,r3) l0002E530_ds_t
	// succ:  l0002E530_ds_f l0002E530_ds_t
l0002E530_ds_f:
	r19 = r3
	goto l0002E564
	// succ:  l0002E564
l0002E530_ds_t:
	r19 = r3
	goto l0002E6F4
	// succ:  l0002E6F4
l0002E564:
	r3 = 0x000038E0
	r4 = 0x00004088
	r5 = 0xFFFF8E24
	Mem0[r19:word32] = r3
	r3 = 0x000042F4
	Mem0[r19 + 4:word32] = r4
	r4 = 0x000041A0
	Mem0[r19 + 8:word32] = r3
	r3 = 0x00003BC4
	Mem0[r19 + 12:word32] = r4
	r4 = 0x00003B10
	Mem0[r19 + 16:word32] = r3
	r3 = 0x0000442C
	Mem0[r19 + 20:word32] = r4
	r4 = 0x0000474C
	Mem0[r19 + 24:word32] = r3
	r3 = 0x00003E2C
	Mem0[r19 + 28:word32] = r4
	r4 = 0x00003C78
	Mem0[r19 + 32:word32] = r3
	r3 = 0x00003DDC
	Mem0[r19 + 36:word32] = r4
	r4 = 0xFFFFCA00
	Mem0[r19 + 40:word32] = r3
	r3 = Mem0[r1 + 28:word32]
	Mem0[r19 + 48:word32] = r4
	r4 = 0x00000054
	Mem0[r19 + 44:word32] = r3
	Mem0[r19 + 76:word32] = r4
	Mem0[r19 + 56:word32] = r0
	Mem0[r19 + 64:word32] = r0
	Mem0[r19 + 52:word32] = r0
	Mem0[r19 + 60:word32] = r0
	Mem0[r19 + 68:word32] = r0
	Mem0[r19 + 72:word32] = r0
	r15 = 0x0002E624
	Mem0[r21 + 4:word32] = r19
	call fn0002F448 (retsize: 0;)
	branch Test(EQ,r3) l0002E564_ds_t
	// succ:  l0002E564_ds_f l0002E564_ds_t
l0002E564_ds_f:
	r5 = r3
	goto l0002E634
	// succ:  l0002E634
l0002E564_ds_t:
	r5 = r3
	goto l0002E6E0
	// succ:  l0002E6E0
l0002E634:
	r6 = 0xFFFF8E2C
	r3 = 0x00000078
	r8 = r1 + 0x00000020
	r7 = r1 + 0x0000001C
	r15 = 0x0002E648
	v13 = SLICE(r3, byte, 0)
	Mem0[r1 + 32:byte] = v13
	call fn0002EE08 (retsize: 0;)
	branch Test(LE,r3) l0002E634_ds_t
	// succ:  l0002E634_ds_f l0002E634_ds_t
l0002E634_ds_f:
	v14 = Mem0[r1 + 32:byte]
	r5 = (word32) v14
	goto l0002E658
	// succ:  l0002E658
l0002E634_ds_t:
	v14 = Mem0[r1 + 32:byte]
	r5 = (word32) v14
	goto l0002E6E0
	// succ:  l0002E6E0
l0002E658:
	r6 = Mem0[r1 + 28:word32]
	r4 = r6 + r6
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 - r6
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 - r6
	r3 = r4 + r4
	r3 = r3 + r3
	r5 = r5 & 0xFFFFFFDF
	r3 = r3 + r3
	v15 = SLICE(r5, int8, 0)
	r5 = (int32) v15
	r3 = r4 + r3
	r4 = r5 ^ 0x0000004D
	branch Test(NE,r4) l0002E658_ds_t
	// succ:  l0002E658_ds_f l0002E658_ds_t
l0002E658_ds_f:
	r3 = r3 + r6
	goto l0002E6A4
	// succ:  l0002E6A4
l0002E658_ds_t:
	r3 = r3 + r6
	goto l0002E6DC
	// succ:  l0002E6DC
l0002E6A4:
	r4 = r3 + r3
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 - r3
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 + r4
	r4 = r4 - r3
	r5 = r4 + r4
	r5 = r5 + r5
	r5 = r5 + r5
	r4 = r4 + r5
	r3 = r3 + r4
	// succ:  l0002E6DC
l0002E6DC:
	Mem0[r19 + 44:word32] = r3
	// succ:  l0002E6E0
l0002E6E0:
	r15 = Mem0[r1:word32]
	r19 = Mem0[r1 + 36:word32]
	r21 = Mem0[r1 + 40:word32]
	r1 = r1 + 0x0000002C
	return
	// succ:  fn0002E530_exit
l0002E6F4:
	r15 = 0x0002E6F4
	r5 = r21
	call fn0002E7C8 (retsize: 0;)
	r3 = Mem0[r21:word32]
	r4 = 0x00000036
	r5 = r21
	Mem0[r3 + 20:word32] = r4
	r4 = Mem0[r3:word32]
	r15 = 0x0002E710
	Mem0[r3 + 24:word32] = r19
	call 0x0002E710 + r4 (retsize: 0;)
	goto l0002E564
	// succ:  l0002E564
fn0002E530_exit:


// fn0002E71C
// Return size: 0
define fn0002E71C
fn0002E71C_entry:
	r1 = fp
	// succ:  l0002E71C
l0002E71C:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x0002E724
	r5 = r6
	call fn0002F2F0 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0002E71C_exit
fn0002E71C_exit:


// fn0002E738
// Return size: 0
define fn0002E738
fn0002E738_entry:
	r1 = fp
	// succ:  l0002E738
l0002E738:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x0002E740
	r5 = r6
	call fn0002F2C8 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0002E738_exit
fn0002E738_exit:


// fn0002E754
// Return size: 0
define fn0002E754
fn0002E754_entry:
	r1 = fp
	// succ:  l0002E754
l0002E754:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x0002E75C
	r5 = r6
	call fn0002F2F0 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0002E754_exit
fn0002E754_exit:


// fn0002E770
// Return size: 0
define fn0002E770
fn0002E770_entry:
	r1 = fp
	// succ:  l0002E770
l0002E770:
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r15 = 0x0002E778
	r5 = r6
	call fn0002F2C8 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0002E770_exit
fn0002E770_exit:


// fn0002E78C
// Return size: 0
define fn0002E78C
fn0002E78C_entry:
	r1 = fp
	// succ:  l0002E78C
l0002E78C:
	r3 = r7
	return
	// succ:  fn0002E78C_exit
fn0002E78C_exit:


// fn0002E794
// Return size: 0
define fn0002E794
fn0002E794_entry:
	r1 = fp
	// succ:  l0002E794
l0002E794:
	r3 = Mem0[r5:word32]
	r1 = r1 + 0xFFFFFFE4
	Mem0[r1:word32] = r15
	r4 = 0x00000031
	Mem0[r3 + 20:word32] = r4
	r3 = Mem0[r3:word32]
	r15 = 0x0002E7AC
	call 0x0002E7AC + r3 (retsize: 0;)
	r15 = Mem0[r1:word32]
	r1 = r1 + 0x0000001C
	return
	// succ:  fn0002E794_exit
fn0002E794_exit:


// fn0002E7C0
// Return size: 0
define fn0002E7C0
fn0002E7C0_entry:
	r1 = fp
	// succ:  l0002E7C0
l0002E7C0:
	r3 = 0x00000000
	return
	// succ:  fn0002E7C0_exit
fn0002E7C0_exit:


// fn0002E7C8
// Return size: 0
define fn0002E7C8
fn0002E7C8_entry:
	r1 = fp
	// succ:  l0002E7C8
l0002E7C8:
	return
	// succ:  fn0002E7C8_exit
fn0002E7C8_exit:


// fn0002E7D0
// Return size: 0
define fn0002E7D0
fn0002E7D0_entry:
	r1 = fp
	// succ:  l0002E7D0
l0002E7D0:
	r1 = r1 + 0xFFFFFFF0
	Mem0[r1:word32] = r28
	Mem0[r1 + 4:word32] = r29
	Mem0[r1 + 8:word32] = r30
	Mem0[r1 + 12:word32] = r31
	branch Test(EQ,r6) l0002E850
	// succ:  l0002E7E8 l0002E850
l0002E7E8:
	branch Test(EQ,r5) l0002E850
	// succ:  l0002E7EC l0002E850
l0002E7EC:
	branch Test(GE,r5) l0002E7EC_ds_t
	// succ:  l0002E7EC_ds_f l0002E7EC_ds_t
l0002E7EC_ds_f:
	r28 = r5 ^ r6
	goto l0002E7F4
	// succ:  l0002E7F4
l0002E7EC_ds_t:
	r28 = r5 ^ r6
	goto l0002E7F8
	// succ:  l0002E7F8
l0002E7F4:
	r5 = -r5
	// succ:  l0002E7F8
l0002E7F8:
	branch Test(GE,r6) l0002E800
	// succ:  l0002E7FC l0002E800
l0002E7FC:
	r6 = -r6
	// succ:  l0002E800
l0002E800:
	r30 = 0x00000000
	r3 = 0x00000000
	r29 = 0x00000020
	branch Test(LT,r5) l0002E81C
	// succ:  l0002E810 l0002E81C
l0002E810:
	r5 = r5 + r5
	C = cond(r5)
	branch Test(GT,r5) l0002E810_ds_t
	// succ:  l0002E810_ds_f l0002E810_ds_t
l0002E810_ds_f:
	r29 = r29 + 0xFFFFFFFF
	goto l0002E81C
	// succ:  l0002E81C
l0002E810_ds_t:
	r29 = r29 + 0xFFFFFFFF
	goto l0002E810
	// succ:  l0002E810
l0002E81C:
	r5 = r5 + r5
	C = cond(r5)
	r30 = r30 + r30 + C
	C = cond(r30)
	r31 = r30 - r6
	C = cond(r31)
	branch Test(LT,r31) l0002E834
	// succ:  l0002E82C l0002E834
l0002E82C:
	r30 = r31
	r3 = r3 + 0x00000001
	// succ:  l0002E834
l0002E834:
	r29 = r29 + 0xFFFFFFFF
	branch Test(EQ,r29) l0002E844
	// succ:  l0002E83C l0002E844
l0002E83C:
	r3 = r3 + r3
	C = cond(r3)
	goto l0002E81C
	// succ:  l0002E81C
l0002E844:
	branch Test(GE,r28) l0002E854
	// succ:  l0002E848 l0002E854
l0002E848:
	r3 = -r3
	goto l0002E854
	// succ:  l0002E854
l0002E850:
	r3 = 0x00000000
	// succ:  l0002E854
l0002E854:
	r28 = Mem0[r1:word32]
	r29 = Mem0[r1 + 4:word32]
	r30 = Mem0[r1 + 8:word32]
	r31 = Mem0[r1 + 12:word32]
	r1 = r1 + 0x00000010
	return
	// succ:  fn0002E7D0_exit
fn0002E7D0_exit:


// fn0002E86C
// Return size: 0
define fn0002E86C
fn0002E86C_entry:
	r1 = fp
	// succ:  l0002E86C
l0002E86C:
	r1 = r1 + 0xFFFFFFF0
	Mem0[r1:word32] = r28
	Mem0[r1 + 4:word32] = r29
	Mem0[r1 + 8:word32] = r30
	Mem0[r1 + 12:word32] = r31
	branch Test(EQ,r6) l0002E8EC
	// succ:  l0002E884 l0002E8EC
l0002E884:
	branch Test(EQ,r5) l0002E8EC
	// succ:  l0002E888 l0002E8EC
l0002E888:
	branch Test(GE,r5) l0002E888_ds_t
	// succ:  l0002E888_ds_f l0002E888_ds_t
l0002E888_ds_f:
	r28 = r5
	goto l0002E890
	// succ:  l0002E890
l0002E888_ds_t:
	r28 = r5
	goto l0002E894
	// succ:  l0002E894
l0002E890:
	r5 = -r5
	// succ:  l0002E894
l0002E894:
	branch Test(GE,r6) l0002E89C
	// succ:  l0002E898 l0002E89C
l0002E898:
	r6 = -r6
	// succ:  l0002E89C
l0002E89C:
	r3 = 0x00000000
	r30 = 0x00000000
	branch Test(LT,r5) l0002E89C_ds_t
	// succ:  l0002E89C_ds_f l0002E89C_ds_t
l0002E89C_ds_f:
	r29 = 0x00000020
	goto l0002E8AC
	// succ:  l0002E8AC
l0002E89C_ds_t:
	r29 = 0x00000020
	goto l0002E8B8
	// succ:  l0002E8B8
l0002E8AC:
	r5 = r5 + r5
	C = cond(r5)
	branch Test(GE,r5) l0002E8AC_ds_t
	// succ:  l0002E8AC_ds_f l0002E8AC_ds_t
l0002E8AC_ds_f:
	r29 = r29 + 0xFFFFFFFF
	goto l0002E8B8
	// succ:  l0002E8B8
l0002E8AC_ds_t:
	r29 = r29 + 0xFFFFFFFF
	goto l0002E8AC
	// succ:  l0002E8AC
l0002E8B8:
	r5 = r5 + r5
	C = cond(r5)
	r3 = r3 + r3 + C
	C = cond(r3)
	r31 = r3 - r6
	C = cond(r31)
	branch Test(LT,r31) l0002E8D0
	// succ:  l0002E8C8 l0002E8D0
l0002E8C8:
	r3 = r31
	r30 = r30 + 0x00000001
	// succ:  l0002E8D0
l0002E8D0:
	r29 = r29 + 0xFFFFFFFF
	branch Test(EQ,r29) l0002E8E0
	// succ:  l0002E8D8 l0002E8E0
l0002E8D8:
	r30 = r30 + r30
	C = cond(r30)
	goto l0002E8B8
	// succ:  l0002E8B8
l0002E8E0:
	branch Test(GE,r28) l0002E8F0
	// succ:  l0002E8E4 l0002E8F0
l0002E8E4:
	r3 = -r3
	goto l0002E8F0
	// succ:  l0002E8F0
l0002E8EC:
	r3 = 0x00000000
	// succ:  l0002E8F0
l0002E8F0:
	r28 = Mem0[r1:word32]
	r29 = Mem0[r1 + 4:word32]
	r30 = Mem0[r1 + 8:word32]
	r31 = Mem0[r1 + 12:word32]
	r1 = r1 + 0x00000010
	return
	// succ:  fn0002E86C_exit
fn0002E86C_exit:


// fn0002E908
// Return size: 0
define fn0002E908
fn0002E908_entry:
	r1 = fp
	// succ:  l0002E908
l0002E908:
	r3 = 0x00000000
	branch Test(EQ,r5) l0002E958
	// succ:  l0002E910 l0002E958
l0002E910:
	branch Test(EQ,r6) l0002E958
	// succ:  l0002E914 l0002E958
l0002E914:
	branch Test(GE,r5) l0002E914_ds_t
	// succ:  l0002E914_ds_f l0002E914_ds_t
l0002E914_ds_f:
	r4 = r5 ^ r6
	goto l0002E91C
	// succ:  l0002E91C
l0002E914_ds_t:
	r4 = r5 ^ r6
	goto l0002E920
	// succ:  l0002E920
l0002E91C:
	r5 = -r5
	// succ:  l0002E920
l0002E920:
	branch Test(GE,r6) l0002E928
	// succ:  l0002E924 l0002E928
l0002E924:
	r6 = -r6
	// succ:  l0002E928
l0002E928:
	goto l0002E930
	// succ:  l0002E930
l0002E92C:
	r5 = r5 + r5
	C = cond(r5)
	// succ:  l0002E930
l0002E930:
	r6 = r6 >>u 1
	C = cond(r6)
	r7 = (word32) C
	branch Test(EQ,r7) l0002E92C
	// succ:  l0002E93C l0002E92C
l0002E93C:
	branch Test(NE,r6) l0002E93C_ds_t
	// succ:  l0002E93C_ds_f l0002E93C_ds_t
l0002E93C_ds_f:
	r3 = r3 + r5
	C = cond(r3)
	goto l0002E944
	// succ:  l0002E944
l0002E93C_ds_t:
	r3 = r3 + r5
	C = cond(r3)
	goto l0002E92C
	// succ:  l0002E92C
l0002E944:
	branch Test(LT,r4) l0002E950
	// succ:  l0002E948 l0002E950
l0002E948:
	return
	// succ:  fn0002E908_exit
l0002E950:
	r3 = -r3
	return
	// succ:  fn0002E908_exit
l0002E958:
	r3 = 0x00000000
	return
	// succ:  fn0002E908_exit
fn0002E908_exit:


// fn0002E960
// Return size: 0
define fn0002E960
fn0002E960_entry:
	r1 = fp
	// succ:  l0002E960
l0002E960:
	r1 = r1 + 0xFFFFFFF4
	Mem0[r1:word32] = r29
	Mem0[r1 + 4:word32] = r30
	Mem0[r1 + 8:word32] = r31
	branch Test(EQ,r6) l0002E9F0
	// succ:  l0002E974 l0002E9F0
l0002E974:
	branch Test(EQ,r5) l0002E974_ds_t
	// succ:  l0002E974_ds_f l0002E974_ds_t
l0002E974_ds_f:
	r30 = 0x00000000
	goto l0002E97C
	// succ:  l0002E97C
l0002E974_ds_t:
	r30 = 0x00000000
	goto l0002E9F0
	// succ:  l0002E9F0
l0002E97C:
	r29 = 0x00000020
	r18 = r6 - r5
	C = cond(r18)
	branch Test(EQ,r18) l0002E97C_ds_t
	// succ:  l0002E97C_ds_f l0002E97C_ds_t
l0002E97C_ds_f:
	r3 = 0x00000001
	goto l0002E98C
	// succ:  l0002E98C
l0002E97C_ds_t:
	r3 = 0x00000001
	goto l0002E9F4
	// succ:  l0002E9F4
l0002E98C:
	r18 = r5 ^ r6
	branch Test(GE,r18) l0002E98C_ds_t
	// succ:  l0002E98C_ds_f l0002E98C_ds_t
l0002E98C_ds_f:
	r3 = 0x00000000
	goto l0002E998
	// succ:  l0002E998
l0002E98C_ds_t:
	r3 = 0x00000000
	goto l0002E9A0
	// succ:  l0002E9A0
l0002E998:
	branch Test(LT,r6) l0002E9F4
	// succ:  l0002E99C l0002E9F4
l0002E99C:
	goto l0002E9A8
	// succ:  l0002E9A8
l0002E9A0:
	r18 = r5 - r6
	C = cond(r18)
	branch Test(LT,r18) l0002E9F4
	// succ:  l0002E9A8 l0002E9F4
l0002E9A8:
	branch Test(GT,r6) l0002E9B4
	// succ:  l0002E9AC l0002E9B4
l0002E9AC:
	r3 = 0x00000001
	goto l0002E9F4
	// succ:  l0002E9F4
l0002E9B4:
	branch Test(LT,r5) l0002E9C4
	// succ:  l0002E9B8 l0002E9C4
l0002E9B8:
	r5 = r5 + r5
	C = cond(r5)
	branch Test(GT,r5) l0002E9B8_ds_t
	// succ:  l0002E9B8_ds_f l0002E9B8_ds_t
l0002E9B8_ds_f:
	r29 = r29 + 0xFFFFFFFF
	goto l0002E9C4
	// succ:  l0002E9C4
l0002E9B8_ds_t:
	r29 = r29 + 0xFFFFFFFF
	goto l0002E9B8
	// succ:  l0002E9B8
l0002E9C4:
	r5 = r5 + r5
	C = cond(r5)
	r30 = r30 + r30 + C
	C = cond(r30)
	r31 = r30 - r6
	C = cond(r31)
	branch Test(LT,r31) l0002E9DC
	// succ:  l0002E9D4 l0002E9DC
l0002E9D4:
	r30 = r31
	r3 = r3 + 0x00000001
	// succ:  l0002E9DC
l0002E9DC:
	r29 = r29 + 0xFFFFFFFF
	branch Test(EQ,r29) l0002E9EC
	// succ:  l0002E9E4 l0002E9EC
l0002E9E4:
	r3 = r3 + r3
	C = cond(r3)
	goto l0002E9C4
	// succ:  l0002E9C4
l0002E9EC:
	goto l0002E9F4
	// succ:  l0002E9F4
l0002E9F0:
	r3 = 0x00000000
	// succ:  l0002E9F4
l0002E9F4:
	r29 = Mem0[r1:word32]
	r30 = Mem0[r1 + 4:word32]
	r31 = Mem0[r1 + 8:word32]
	r1 = r1 + 0x0000000C
	return
	// succ:  fn0002E960_exit
fn0002E960_exit:


// fn0002EA08
// Return size: 0
define fn0002EA08
fn0002EA08_entry:
	r1 = fp
	// succ:  l0002EA08
l0002EA08:
	r1 = r1 + 0xFFFFFFF4
	Mem0[r1:word32] = r29
	Mem0[r1 + 4:word32] = r30
	Mem0[r1 + 8:word32] = r31
	branch Test(EQ,r6) l0002EAAC
	// succ:  l0002EA1C l0002EAAC
l0002EA1C:
	branch Test(EQ,r5) l0002EA1C_ds_t
	// succ:  l0002EA1C_ds_f l0002EA1C_ds_t
l0002EA1C_ds_f:
	r3 = 0x00000000
	goto l0002EA24
	// succ:  l0002EA24
l0002EA1C_ds_t:
	r3 = 0x00000000
	goto l0002EAAC
	// succ:  l0002EAAC
l0002EA24:
	r30 = 0x00000000
	r29 = 0x00000020
	r18 = r6 - r5
	C = cond(r18)
	branch Test(EQ,r18) l0002EAB0
	// succ:  l0002EA34 l0002EAB0
l0002EA34:
	r18 = r5 ^ r6
	branch Test(GE,r18) l0002EA34_ds_t
	// succ:  l0002EA34_ds_f l0002EA34_ds_t
l0002EA34_ds_f:
	r3 = r5
	goto l0002EA40
	// succ:  l0002EA40
l0002EA34_ds_t:
	r3 = r5
	goto l0002EA48
	// succ:  l0002EA48
l0002EA40:
	branch Test(LT,r6) l0002EAB0
	// succ:  l0002EA44 l0002EAB0
l0002EA44:
	goto l0002EA50
	// succ:  l0002EA50
l0002EA48:
	r18 = r6 - r5
	C = cond(r18)
	branch Test(GT,r18) l0002EAB0
	// succ:  l0002EA50 l0002EAB0
l0002EA50:
	branch Test(GT,r6) l0002EA50_ds_t
	// succ:  l0002EA50_ds_f l0002EA50_ds_t
l0002EA50_ds_f:
	r3 = 0x00000000
	goto l0002EA58
	// succ:  l0002EA58
l0002EA50_ds_t:
	r3 = 0x00000000
	goto l0002EA70
	// succ:  l0002EA70
l0002EA58:
	r18 = 0xFFFFFFFF
	r5 = r5 & r18
	r6 = r6 & r18
	r3 = r5 - r6
	C = cond(r3)
	goto l0002EAB0
	// succ:  l0002EAB0
l0002EA70:
	branch Test(LT,r5) l0002EA80
	// succ:  l0002EA74 l0002EA80
l0002EA74:
	r5 = r5 + r5
	C = cond(r5)
	branch Test(GE,r5) l0002EA74_ds_t
	// succ:  l0002EA74_ds_f l0002EA74_ds_t
l0002EA74_ds_f:
	r29 = r29 + 0xFFFFFFFF
	goto l0002EA80
	// succ:  l0002EA80
l0002EA74_ds_t:
	r29 = r29 + 0xFFFFFFFF
	goto l0002EA74
	// succ:  l0002EA74
l0002EA80:
	r5 = r5 + r5
	C = cond(r5)
	r3 = r3 + r3 + C
	C = cond(r3)
	r31 = r3 - r6
	C = cond(r31)
	branch Test(LT,r31) l0002EA98
	// succ:  l0002EA90 l0002EA98
l0002EA90:
	r3 = r31
	r30 = r30 + 0x00000001
	// succ:  l0002EA98
l0002EA98:
	r29 = r29 + 0xFFFFFFFF
	branch Test(EQ,r29) l0002EAA8
	// succ:  l0002EAA0 l0002EAA8
l0002EAA0:
	r30 = r30 + r30
	C = cond(r30)
	goto l0002EA80
	// succ:  l0002EA80
l0002EAA8:
	goto l0002EAB0
	// succ:  l0002EAB0
l0002EAAC:
	r3 = 0x00000000
	// succ:  l0002EAB0
l0002EAB0:
	r29 = Mem0[r1:word32]
	r30 = Mem0[r1 + 4:word32]
	r31 = Mem0[r1 + 8:word32]
	r1 = r1 + 0x0000000C
	return
	// succ:  fn0002EA08_exit
fn0002EA08_exit:


// fn0002EAD0
// Return size: 0
define fn0002EAD0
fn0002EAD0_entry:
	r1 = fp
	// succ:  l0002EAD0
l0002EAD0:
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002EAD0_exit
fn0002EAD0_exit:


// fn0002EB28
// Return size: 0
define fn0002EB28
fn0002EB28_entry:
	r1 = fp
	// succ:  l0002EB28
l0002EB28:
	Mem0[r1 + 8:word32] = r6
	Mem0[r1 + 12:word32] = r7
	Mem0[r1 + 16:word32] = r8
	Mem0[r1 + 20:word32] = r9
	Mem0[r1 + 24:word32] = r10
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002EB28_exit
fn0002EB28_exit:


// fn0002EB68
// Return size: 0
define fn0002EB68
fn0002EB68_entry:
	r1 = fp
	// succ:  l0002EB68
l0002EB68:
	Mem0[r1 + 8:word32] = r6
	Mem0[r1 + 12:word32] = r7
	Mem0[r1 + 16:word32] = r8
	Mem0[r1 + 20:word32] = r9
	Mem0[r1 + 24:word32] = r10
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002EB68_exit
fn0002EB68_exit:


// fn0002EE08
// Return size: 0
define fn0002EE08
fn0002EE08_entry:
	r1 = fp
	// succ:  l0002EE08
l0002EE08:
	Mem0[r1 + 8:word32] = r6
	Mem0[r1 + 12:word32] = r7
	Mem0[r1 + 16:word32] = r8
	Mem0[r1 + 20:word32] = r9
	Mem0[r1 + 24:word32] = r10
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002EE08_exit
fn0002EE08_exit:


// fn0002EF2C
// Return size: 0
define fn0002EF2C
fn0002EF2C_entry:
	r1 = fp
	// succ:  l0002EF2C
l0002EF2C:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002EF2C_exit
fn0002EF2C_exit:


// fn0002EF80
// Return size: 0
define fn0002EF80
fn0002EF80_entry:
	r1 = fp
	// succ:  l0002EF80
l0002EF80:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002EF80_exit
fn0002EF80_exit:


// fn0002F048
// Return size: 0
define fn0002F048
fn0002F048_entry:
	r1 = fp
	// succ:  l0002F048
l0002F048:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F048_exit
fn0002F048_exit:


// fn0002F074
// Return size: 0
define fn0002F074
fn0002F074_entry:
	r1 = fp
	// succ:  l0002F074
l0002F074:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F074_exit
fn0002F074_exit:


// fn0002F0A0
// Return size: 0
define fn0002F0A0
fn0002F0A0_entry:
	r1 = fp
	// succ:  l0002F0A0
l0002F0A0:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F0A0_exit
fn0002F0A0_exit:


// fn0002F0CC
// Return size: 0
define fn0002F0CC
fn0002F0CC_entry:
	r1 = fp
	// succ:  l0002F0CC
l0002F0CC:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F0CC_exit
fn0002F0CC_exit:


// fn0002F128
// Return size: 0
define fn0002F128
fn0002F128_entry:
	r1 = fp
	// succ:  l0002F128
l0002F128:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	Mem0[r19 + 24:word32] = r8
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F128_exit
fn0002F128_exit:


// fn0002F15C
// Return size: 0
define fn0002F15C
fn0002F15C_entry:
	r1 = fp
	// succ:  l0002F15C
l0002F15C:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F15C_exit
fn0002F15C_exit:


// fn0002F1FC
// Return size: 0
define fn0002F1FC
fn0002F1FC_entry:
	r1 = fp
	// succ:  l0002F1FC
l0002F1FC:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	// succ:  l0002F218_thunk_fn0002F21C
l0002F218_thunk_fn0002F21C:
	call fn0002F21C (retsize: 0;)
	return
	// succ:  fn0002F1FC_exit
fn0002F1FC_exit:


// fn0002F21C
// Return size: 0
define fn0002F21C
fn0002F21C_entry:
	r1 = fp
	// succ:  l0002F21C
l0002F21C:
	return
	// succ:  fn0002F21C_exit
fn0002F21C_exit:


// fn0002F274
// Return size: 0
define fn0002F274
fn0002F274_entry:
	r1 = fp
	// succ:  l0002F274
l0002F274:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F274_exit
fn0002F274_exit:


// fn0002F2C8
// Return size: 0
define fn0002F2C8
fn0002F2C8_entry:
	r1 = fp
	// succ:  l0002F2C8
l0002F2C8:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F2C8_exit
fn0002F2C8_exit:


// fn0002F2F0
// Return size: 0
define fn0002F2F0
fn0002F2F0_entry:
	r1 = fp
	// succ:  l0002F2F0
l0002F2F0:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F2F0_exit
fn0002F2F0_exit:


// fn0002F448
// Return size: 0
define fn0002F448
fn0002F448_entry:
	r1 = fp
	// succ:  l0002F448
l0002F448:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F448_exit
fn0002F448_exit:


// fn0002F60C
// Return size: 0
define fn0002F60C
fn0002F60C_entry:
	r1 = fp
	// succ:  l0002F60C
l0002F60C:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F60C_exit
fn0002F60C_exit:


// fn0002F63C
// Return size: 0
define fn0002F63C
fn0002F63C_entry:
	r1 = fp
	// succ:  l0002F63C
l0002F63C:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	Mem0[r19 + 16:word32] = r6
	Mem0[r19 + 20:word32] = r7
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F63C_exit
fn0002F63C_exit:


// fn0002F940
// Return size: 0
define fn0002F940
fn0002F940_entry:
	r1 = fp
	// succ:  l0002F940
l0002F940:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F940_exit
fn0002F940_exit:


// fn0002F9E0
// Return size: 0
define fn0002F9E0
fn0002F9E0_entry:
	r1 = fp
	// succ:  l0002F9E0
l0002F9E0:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002F9E0_exit
fn0002F9E0_exit:


// fn0002FA08
// Return size: 0
define fn0002FA08
fn0002FA08_entry:
	r1 = fp
	// succ:  l0002FA08
l0002FA08:
	r1 = r1 + 0xFFFFFFF8
	Mem0[r1 + 4:word32] = r19
	r19 = r1
	Mem0[r19 + 12:word32] = r5
	r1 = r19
	r19 = Mem0[r1 + 4:word32]
	r1 = r1 + 0x00000008
	return
	// succ:  fn0002FA08_exit
fn0002FA08_exit:


// fn0002FFD0
// Return size: 0
define fn0002FFD0
fn0002FFD0_entry:
	r1 = fp
	// succ:  l0002FFD0
l0002FFD0:
	r22 = r6
	Mem0[0x00008EA4:word32] = r3
	branch Test(EQ,r3) l0002FFD0_ds_t
	// succ:  l0002FFD0_ds_f l0002FFD0_ds_t
l0002FFD0_ds_f:
	r21 = r5
	goto l0002FFE4
	// succ:  l0002FFE4
l0002FFD0_ds_t:
	r21 = r5
	goto l0003021C
	// succ:  l0003021C
l0002FFE4:
	v8 = Mem0[r3:byte]
	r3 = (word32) v8
	branch Test(EQ,r3) l0003021C
	// succ:  l0002FFEC l0003021C
l0002FFEC:
	r15 = 0x0002FFEC
	r5 = r1 + 0x00000454
	call fn0002CFE4 (retsize: 0;)
	r7 = 0x00000208
	r6 = 0x0000003E
	r5 = r1 + 0x0000001C
	r15 = 0x00030004
	Mem0[r1 + 28:word32] = r3
	call fn000255C0 (retsize: 0;)
	r15 = 0x0003000C
	r5 = r1 + 0x000003D0
	call fn0002CFE4 (retsize: 0;)
	r5 = r1 + 0x00000224
	r7 = 0x000001AC
	r6 = 0x0000003E
	r15 = 0x00030024
	Mem0[r1 + 548:word32] = r3
	call fn0000D008 (retsize: 0;)
	r6 = r21
	r7 = r22
	r5 = r1 + 0x00000224
	r15 = 0x0003003C
	r8 = 0x00000000
	call fn00009E48 (retsize: 0;)
	r6 = Mem0[r1 + 552:word32]
	r4 = Mem0[r1 + 1080:word32]
	r5 = Mem0[r1 + 32:word32]
	r6 = Mem0[r6 + 44:word32]
	Mem0[r1 + 1212:word32] = r4
	r4 = r21 + 0xFFFFFFFF
	r18 = cond(r3 - r4)
	branch Test(LT,r18) l0002FFEC_ds_t
	// succ:  l0002FFEC_ds_f l0002FFEC_ds_t
l0002FFEC_ds_f:
	Mem0[r5 + 44:word32] = r6
	goto l00030068
	// succ:  l00030068
l0002FFEC_ds_t:
	Mem0[r5 + 44:word32] = r6
	goto l00030278
	// succ:  l00030278
l00030068:
	r18 = cond(r3 - r21)
	branch Test(LT,r18) l00030068_ds_t
	// succ:  l00030068_ds_f l00030068_ds_t
l00030068_ds_f:
	r3 = r3 + r3
	goto l00030074
	// succ:  l00030074
l00030068_ds_t:
	r3 = r3 + r3
	goto l00030230
	// succ:  l00030230
l00030074:
	r15 = 0x00030078
	call fn0000B1C0 (retsize: 0;)
	r23 = r3
	// succ:  l00030084
l00030084:
	r5 = Mem0[0x00008EA0:word32]
	branch Test(EQ,r5) l000302AC
	// succ:  l00030090 l000302AC
l00030090:
	r6 = 0x00006FD8
	r15 = 0x00030098
	call fn0002F048 (retsize: 0;)
	branch Test(EQ,r3) l00030090_ds_t
	// succ:  l00030090_ds_f l00030090_ds_t
l00030090_ds_f:
	r19 = r3
	goto l000300A8
	// succ:  l000300A8
l00030090_ds_t:
	r19 = r3
	goto l000302C0
	// succ:  l000302C0
l000300A8:
	r6 = r23
	r15 = 0x000300B0
	r5 = r1 + 0x0000001C
	call fn00026018 (retsize: 0;)
	r6 = Mem0[0x00008E9C:word32]
	r15 = 0x000300C4
	r5 = r1 + 0x0000001C
	call fn0000CE64 (retsize: 0;)
	r5 = r1 + 0x0000001C
	r15 = 0x000300D4
	r6 = 0x00000001
	call fn00025A6C (retsize: 0;)
	r6 = 0xFFFF8E88
	r15 = 0x000300E8
	r5 = r1 + 0x0000001C
	call fn0000B2CC (retsize: 0;)
	r15 = 0x000300F4
	r5 = r1 + 0x0000001C
	call fn00025CD4 (retsize: 0;)
	r24 = r3
	r6 = r1 + 0x00000224
	r15 = 0x00030108
	r5 = r1 + 0x0000001C
	call fn0000DB74 (retsize: 0;)
	r8 = 0xFFFF8E88
	r7 = r24
	r6 = r1 + 0x00000224
	r15 = 0x00030124
	r5 = r1 + 0x0000001C
	call fn0000B51C (retsize: 0;)
	r7 = r22
	r6 = r21
	r8 = 0x00000001
	r5 = r1 + 0x00000224
	r15 = 0x00030140
	r25 = r3
	call fn00009E48 (retsize: 0;)
	r6 = r19
	r15 = 0x00030150
	r5 = r1 + 0x00000224
	call fn0000EE08 (retsize: 0;)
	r6 = r25
	r15 = 0x00030160
	r5 = r1 + 0x00000224
	call fn0000D9D8 (retsize: 0;)
	r7 = Mem0[0x00008E9C:word32]
	r6 = r1 + 0x00000224
	r15 = 0x00030178
	r5 = r1 + 0x0000001C
	call fn0000CEF0 (retsize: 0;)
	r8 = 0xFFFF8E88
	r7 = r24
	r6 = r1 + 0x00000224
	r15 = 0x00030194
	r5 = r1 + 0x0000001C
	call fn0000BA7C (retsize: 0;)
	r15 = 0x000301A0
	r5 = r1 + 0x00000224
	call fn0000D1B0 (retsize: 0;)
	r15 = 0x000301AC
	r5 = r1 + 0x00000224
	call fn0000D120 (retsize: 0;)
	r15 = 0x000301B8
	r5 = r1 + 0x0000001C
	call fn00025BC4 (retsize: 0;)
	r15 = 0x000301C4
	r5 = r1 + 0x0000001C
	call fn000256D8 (retsize: 0;)
	r3 = Mem0[0x00008EB4:word32]
	r3 = r3 ^ r23
	branch Test(EQ,r3) l000301E4
	// succ:  l000301DC l000301E4
l000301DC:
	r15 = 0x000301DC
	r5 = r23
	call fn0002F074 (retsize: 0;)
l000301E4:
	r3 = Mem0[0x00008EA8:word32]
	r3 = r3 ^ r19
	branch Test(EQ,r3) l000301E4_ds_t
	// succ:  l000301E4_ds_f l000301E4_ds_t
l000301E4_ds_f:
	r3 = Mem0[r1 + 1216:word32]
	goto l000301F8
	// succ:  l000301F8
l000301E4_ds_t:
	r3 = Mem0[r1 + 1216:word32]
	goto l00030204
	// succ:  l00030204
l000301F8:
	r15 = 0x000301F8
	r5 = r19
	call fn0002F074 (retsize: 0;)
	r3 = Mem0[r1 + 1216:word32]
	// succ:  l00030204
l00030204:
	r4 = Mem0[r1 + 1084:word32]
	r3 = r3 + r4
	branch Test(EQ,r3) l00030204_ds_t
	// succ:  l00030204_ds_f l00030204_ds_t
l00030204_ds_f:
	r5 = 0x00000002
	goto l00030214
	// succ:  l00030214
l00030204_ds_t:
	r5 = 0x00000002
	goto l000302A4
	// succ:  l000302A4
l00030214:
	r15 = 0x00030214
	call fn0002F21C (retsize: 0;)
l0003021C:
	r3 = 0x00006F98
	Mem0[0x00008EA4:word32] = r3
	goto l0002FFEC
	// succ:  l0002FFEC
l00030230:
	r19 = r3 + r3
	r6 = 0x00006FC0
	r15 = 0x0003023C
	r5 = Mem0[r19 + r22:word32]
	call fn0002F048 (retsize: 0;)
	branch Test(NE,r3) l00030230_ds_t
	// succ:  l00030230_ds_f l00030230_ds_t
l00030230_ds_f:
	r23 = r3
	goto l0003024C
	// succ:  l0003024C
l00030230_ds_t:
	r23 = r3
	goto l00030084
	// succ:  l00030084
l0003024C:
	r5 = Mem0[0x00008EB8:word32]
	r8 = Mem0[r19 + r22:word32]
	// succ:  l00030258
l00030258:
	r7 = Mem0[0x00008EA4:word32]
	r6 = 0x00006FC4
	r15 = 0x00030268
	call fn0002EAD0 (retsize: 0;)
	r15 = 0x00030270
	r5 = 0x00000001
	call fn0002F21C (retsize: 0;)
l00030278:
	r7 = Mem0[0x00008EA4:word32]
	r6 = 0x00006FA4
	r5 = Mem0[0x00008EB8:word32]
	r15 = 0x00030290
	call fn0002EAD0 (retsize: 0;)
	r15 = 0x0003029C
	call fn00009B70 (retsize: 0;)
	// succ:  l000302A4
l000302A4:
	r15 = 0x000302A4
	r5 = r3
	call fn0002F21C (retsize: 0;)
l000302AC:
	r15 = 0x000302B0
	call fn0000B1D0 (retsize: 0;)
	r19 = r3
	goto l000300A8
	// succ:  l000300A8
l000302C0:
	r5 = Mem0[0x00008EB8:word32]
	r8 = Mem0[0x00008EA0:word32]
	goto l00030258
	// succ:  l00030258
fn0002FFD0_exit:


