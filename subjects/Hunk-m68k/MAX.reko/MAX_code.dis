void fn00001000(word32 d0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	word32 a6_9 = Mem0[0x00000004<p32>:word32]
	word32 d2_260 = d0
	word32 a2_271 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	word32 a0_13 = 0x00003D90<p32>
	word32 d0_16 = 0xC<u32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem29[0x00003D90<p32>:word32] = fp
	Mem32[0x00003D94<p32>:word32] = a6_9
	word32 d0_34 = FindTask(0<32>)
	word32 d0_109 = OpenLibrary(0x000012BC<p32>, 0<i32>)
	branch d0_109 == 0<32> l00001226
l00001226:
	Alert(0x38007<32>)
l00001056:
	word32 d4_71
	Mem64[0x00003D98<p32>:word32] = d0_109
	branch Mem64[d0_34 + 172<i32>:word32] != 0<32> l00001066
l00001066:
	word32 a0_70 = a0
	d4_71 = 3<i32>
l0000106A:
	branch Mem64[a0_675:byte] != 0x20<8> l00001072
l00001070:
	d4_71 = SEQ(SLICE(d4_71, word16, 16), SLICE(d4_71, word16, 0) + 1<16>)
l00001072:
	a0_70 = a0_675 + 1<i32>
	a0_675 = a0_70
	branch Mem64[a0_675:byte] != 0<8> l0000106A
l00001060:
	d4_71 = 2<i32>
	d2_260 = 8<i32>
l00001076:
	word32 d0_97 = d4_71 << 2<32>
	word32 d0_104 = d0_97 + d2_260
	word32 d1_108 = 0x10001<32>
	d0_109 = AllocMem(d0_104 + 0x11<32>, 0x10001<32>)
	branch d0_109 == 0<32> l0000123E
l0000123E:
	CloseLibrary(Mem64[0x00003D98<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem150[d0_34 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn00001214(d0_34)
	fn0000126C(d0_109)
l00001268:
	return
l00001096:
	word32 dwLoc0C_528
	word32 a0_423
	Mem164[d0_109:word32] = d0_104 + 0x11<32>
	Mem167[d0_109 + 12<i32>:word32] = d4_71 - 1<32>
	Mem170[d0_109 + 8<i32>:word32] = d0_109 + 16<i32> + d0_97
	Mem172[0<32>:word32] = 0<32>
	word32 d0_173 = Mem172[d0_34 + 172<i32>:word32]
	branch d0_173 == 0<32> l00001190
l00001190:
	fn00001214(d0_34)
	Mem178[0x00003D9C<p32>:word32] = d0_173
	Mem179[0x00003DA0<p32>:word32] = d0_173
	Mem183[0<32>:word32] = 0<32>
	dwLoc0C_528 = d0_173
	word32 d0_186 = Mem183[d0_173 + 36<i32>:word32]
	branch d0_186 == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	Supervisor(d0_109)
	Mem197[d0_109 + 4<i32>:word32] = d0_186
	branch d0_186 != 0<32> l000011D2
l000011D2:
	Mem201[0x00003DA4<p32>:word32] = d0_186
	Mem202[0x00003DA8<p32>:word32] = d0_186
	Mem203[0x00003DAC<p32>:word32] = d0_186
	Mem205[d0_34 + 156<i32>:word32] = d0_186
	Mem206[d0_34 + 160<i32>:word32] = d0_186
	word32 d0_210 = Mem206[(d0_186 << 2<32>) + 8<i32>:word32]
	branch d0_210 == 0<32> l000011F4
l000011F0:
	Mem213[d0_34 + 164<i32>:word32] = d0_210
l000011F4:
l000011CC:
l000011CE_thunk_fn0000127C:
	word32 a5_672
	word32 a1_671
	fn0000127C(out a1_671, out a5_672)
	return
l000010B6:
	word32 d0_234 = Mem172[(d0_173 << 2<32>) + 16<i32>:word32]
	word32 a1_237 = Mem172[d0_109 + 8<i32>:word32]
	word32 a0_242 = (d0_234 << 2<32>) + 1<i32>
	word32 d0_244 = (uint32) (uint8) Mem172[d0_234 << 2<32>:byte]
	Mem245[a0_242 + d0_244:byte] = 0<8>
	Mem246[d0_109 + 16<i32>:word32] = a0_242
	word32 a6_247 = d0_109 + 20<i32>
	word32 d3_248 = 1<i32>
	word32 a0_253 = a0 + d2_260
l000010DA:
	a0_253 = a0_253 - 1<i32>
	branch Mem246[a0_253:byte] >u 0x20<8> l000010E2
l000010DE_1:
	word16 v29_261 = SLICE(d2_260, word16, 0)
	d2_260 = SEQ(SLICE(d2_260, word16, 16), v29_261 - 1<i16>)
	branch v29_261 != 0<16> l000010DA
l000010E2:
	Mem266[a0_253 + 1<i32>:byte] = 0<8>
l000010E6:
	byte v31_273 = Mem272[a2_271:byte]
	a2_271 = a2_271 + 1<i32>
	d1_108 = SEQ(SLICE(d1_108, word24, 8), v31_273)
	branch v31_273 == 0<8> l00001148
l000010EA:
	branch v31_273 == 0x20<8> l000010E6
l000010F0:
	branch v31_273 == 9<8> l000010E6
l000010F6:
	branch d3_248 - Mem272[d0_109 + 12<i32>:word32] == 0<32> l00001148
l000010FC:
	Mem293[a6_247:word32] = a1_237
	a6_247 = a6_247 + 4<i32>
	d3_248 = SEQ(SLICE(d3_248, word16, 16), SLICE(d3_248, word16, 0) + 1<16>)
	branch v31_273 == 0x22<8> l0000111A
l0000111A:
	byte v50_304 = Mem303[a2_271:byte]
	word24 v51_307 = SLICE(d1_108, word24, 8)
	a2_271 = a2_271 + 1<i32>
	d1_108 = SEQ(v51_307, v50_304)
	branch v50_304 == 0<8> l00001148
l0000111E:
	branch v50_304 == 0x22<8> l00001116
l00001124:
	branch v50_304 != 0x2A<8> l00001144
l0000112A:
	byte v54_317 = Mem303[a2_271:byte]
	a2_271 = a2_271 + 1<i32>
	d1_108 = SEQ(v51_307, v54_317)
	branch (v54_317 & 0xDF<8>) != 0x4E<8> l0000113C
l0000113C:
	branch (v54_317 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_108 = 27<i32>
l00001138:
	d1_108 = 10<i32>
l00001144:
	Mem342[a1_237:byte] = SLICE(d1_108, byte, 0)
	a1_237 = a1_237 + 1<i32>
l00001106:
	Mem346[a1_237:byte] = v31_273
	a1_237 = a1_237 + 1<i32>
l00001108:
	byte v40_351 = Mem350[a2_271:byte]
	a2_271 = a2_271 + 1<i32>
	d1_108 = SEQ(SLICE(d1_108, word24, 8), v40_351)
	branch v40_351 == 0<8> l00001148
l00001148:
	Mem360[a1_237:byte] = 0<8>
	Mem365[a6_247:word32] = 0<32>
	execPrivate4()
	Mem394[0x00003DA4<p32>:word32] = d0_244
	execPrivate5()
	Mem395[0x00003DA8<p32>:word32] = d0_244
	dwLoc0C_528 = d0_109 + 16<i32>
	dwLoc10 = d3_248
	branch Mem395[Mem395[0x00003D94<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	word32 v64_405 = Mem395[d0_34 + 224<i32>:word32]
	Mem406[0x00003DAC<p32>:word32] = v64_405
	branch v64_405 != 0<32> l0000117E
l0000117A:
	Mem411[0x00003DAC<p32>:word32] = d0_244
l0000117E:
	branch Mem415[d0_34 + 8<i32>:byte] != 0xD<8> l000011F8
l000011F8:
	a0_423 = Mem421[d0_34 + 58<i32>:word32]
l00001186:
	word32 a0_426 = Mem415[d0_34 + 176<i32>:word32]
	a0_423 = a0_426 + 4<i32> - Mem415[a0_426:word32]
l00001202:
	Mem436[0x00003DB8<p32>:word32] = a0_423
	Mem443[0x00003DBC<p32>:word32] = fp - 16<i32>
	fn00001354(dwLoc10, dwLoc0C_528)
l00001212_thunk_fn0000127C:
	word32 a1_673
	word32 a5_674
	fn0000127C(out a1_673, out a5_674)
	return
fn00001000_exit:
l0000110C:
	branch v40_351 == 0x20<8> l00001116
l00001116:
	Mem475[a1_237:byte] = 0<8>
	a1_237 = a1_237 + 1<i32>
l00001112:
	Mem482[a1_237:byte] = v40_351
	a1_237 = a1_237 + 1<i32>


void fn00001214(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a3:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	GetMsg(a3 + 92<i32>)
	return
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


word32 fn00001278(word32 dwArg04, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000012D0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	word32 a1_6
	word32 a5_9
	word32 d1_13 = fn0000127C(out a1_6, out a5_9)
	a1Out = a1_6
	a5Out = a5_9
	return d1_13
fn00001278_exit:


word32 fn0000127C(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
//      fn00001278
// MayUse: 
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	word32 a7_6 = Mem0[0x00003D90<p32>:word32]
	word32 v7_11 = Mem0[a7_6 - 4<i32>:word32]
	word32 v5_8 = Mem0[a7_6 - 8<i32>:word32]
	word32 d1_14 = Mem0[v7_11 + 4<i32>:word32]
	branch d1_14 == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x00003D98<p32>:word32])
	branch v5_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v5_8)
l000012B0:
	FreeMem(v7_11, Mem0[v7_11:word32])
	a1Out = v7_11
	a5Out = v7_11
	return d1_14
fn0000127C_exit:


word32 fn000012D0(word32 dwArg04, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000131C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d1
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch 0x3ED8<32> == 0<32> l00001308
l000012E2:
	word32 d2_16 = 1<i32>
	branch Mem11[0x00003EDC<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_16 = d2_16 + 1<32>
	branch Mem11[0x00003ED8<p32> + (d2_16 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	word32 d2_33 = d2_16 - 1<32>
	branch d2_33 == 0<32> l00001308
l000012FA:
	word32 d0_38 = d2_33 << 2<32>
	call Mem11[0x00003ED8<p32> + d0_38:word32] (retsize: 4;)
		uses: d0:d0_38,Stack +0014:dwArg04
	d2_33 = d2_33 - 1<32>
	branch d2_33 != 0<32> l000012FA
l00001308:
	word32 a1_58
	word32 a5_61
	word32 d1_64 = fn00001278(dwArg04, out a1_58, out a5_61)
	a1Out = a1_58
	a5Out = a5_61
	return d1_64
fn000012D0_exit:


word32 fn0000131C(word32 dwArg04, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
//      fn00002BBC
// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x00003DC0<p32>:word32] != 0<32> l0000134E
l00001328:
	word32 a3_13 = Mem8[0x00003EE8<p32>:word32]
	Mem15[0x00003DC0<p32>:word32] = 1<i32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem15[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_25,Stack +0010:dwArg04
	a3_13 = Mem15[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	d1 = fn000012D0(dwArg04, out a1, out a5)
l0000134E:
	a1Out = a1
	a5Out = a5
	return d1
fn0000131C_exit:


void fn00001354(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	word32 a3_17 = 0x00003ED0<p32>
	word32 d0_10 = 0x3ECC<32>
	branch 0x3ECC<32> == 0<32> l00001372
l00001366:
	branch Mem8[0x00003ED0<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_17:word32] (retsize: 4;)
		uses: Stack +0010:dwArg04,Stack +0014:dwArg08
		defs: d0:d0_23
	a3_17 = a3_17 + 4<i32>
	branch Mem8[a3_17:word32] != 0<32> l0000136A
l00001372:
	word32 a1_83
	word32 a5_84
	fn0000131C(fn00001390(d0_10), out a1_83, out a5_84)
	return
fn00001354_exit:


word32 fn00001390(word32 d0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
// MayUse:  d0:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00001390_entry:
l00001390:
	word32 a1_8
	word32 d1_10
	fn0000141C(fn00002F18(d0, 0x000013DC<p32>, out d1_10, out a1_8), d1_10, a1_8, 0x000013F0<p32>)
	word32 d0_32 = dwLoc08
	branch dwLoc08 - dwLoc04 == 0<32> l000013D8
l000013BE:
	word32 d1_88
	word32 a1_89
	d0_32 = fn00002F18(fn00001408(dwLoc08, dwLoc04), 0x000013F8<p32>, out d1_88, out a1_89)
l000013D8:
	return d0_32
fn00001390_exit:


word32 fn00001408(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZN d0 d1
// Preserved: a7
fn00001408_entry:
l00001408:
	word32 d0_17 = dwArg04
	branch dwArg08 - dwArg04 >= 0<32> l00001416
l00001416:
	d0_17 = dwArg08
l00001414:
l00001418:
	return d0_17
fn00001408_exit:


void fn0000141C(word32 d0, word32 d1, word32 a1, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  a1:[0..31] d0:[0..31] d1:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 d0
// Preserved: a7
fn0000141C_entry:
l0000141C:
	fn00001468(d0, d1, a1, Mem8[0x00003EF4<p32>:word32], dwArg04, fp + 8<i32>)
	return
fn0000141C_exit:


word32 fn00001438(byte bArg07, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  Stack +0007:[0..7] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 d0
// Preserved: a2 a7
fn00001438_entry:
l00001438:
	word32 d0_10 = dwArg08
	branch dwArg08 == 0<32> l00001462
l00001444:
	d0_10 = Mem5[dwArg08 + 4<i32>:word32]
	branch d0_10 - Mem5[dwArg08 + 8<i32>:word32] >=u 0<32> l00001456
l0000144E:
	Mem16[Mem5[dwArg08 + 4<i32>:word32]:byte] = bArg07
l00001456:
	Mem22[dwArg08 + 20<i32>:word32] = Mem20[dwArg08 + 20<i32>:word32] + 1<32>
	Mem25[dwArg08 + 4<i32>:word32] = Mem22[dwArg08 + 4<i32>:word32] - 1<32>
l00001462:
	return d0_10
fn00001438_exit:


void fn00001468(word32 d0, word32 d1, word32 a1, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000141C
// MayUse:  a1:[0..31] d0:[8..31] d1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN d0
// Preserved: X a0 a1 a2 a3 a4 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
fn00001468_entry:
l00001468:
	word32 a7_1282 = fp + -120<i32>
	word32 d2_1050 = dwArg0C
	word32 a4_261 = dwArg08
	word32 a2_104 = dwArg04
	word32 d4_126 = 0<i32>
	word32 d5_1007 = 0<i32>
	branch Mem40[dwArg08:byte] == 0<8> l0000246A
l0000148A:
	word32 d3_124
	word32 d3_1781 = 0<i32>
	branch Mem49[a4_261:byte] != 0x25<8> l00002368
l00002368:
	word32 d0_63 = (uint32) (uint8) Mem49[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), Mem49[a4_261:byte]) & 0xFF<32>):byte]
	d0 = d0_63 & 8<32>
	branch (d0_63 & 8<32>) == 0<32> l000023F4
l000023F4:
	word32 a0_70 = a2_104 + 24<i32>
	Mem72[a0_70:word32] = Mem49[a0_70:word32] | 1<32>
	word32 a0_73 = a2_104 + 20<i32>
	word32 v112_74 = Mem72[a0_73:word32] - 1<32>
	Mem75[a0_73:word32] = v112_74
	branch v112_74 < 0<32> l00002426
l00002426:
	word32 a7_79 = a7_1282 - 4<i32>
	Mem80[a7_79:word32] = a2_104
	word32 a5_5161
	Mem92[a7_79 + 48<i32>:word32] = fn00002604(Mem80[a7_79:word32], out d1, out a1, out a5_5161)
l00002406:
	a1 = a2_104 + 4<i32>
	word32 a0_96 = Mem75[a1:word32]
	word32 a7_97 = a7_1282 - 4<i32>
	Mem98[a7_97:word32] = a2_104
	Mem101[a1:word32] = a0_96 + 1<i32>
	a2_104 = Mem101[a7_97:word32]
	byte v114_105 = Mem101[a0_96:byte]
	Mem110[a7_97:word32] = d1
	Mem115[a7_97 + 48<i32>:word32] = (uint32) (uint8) v114_105
	d1 = Mem115[a7_97:word32]
l00002434:
	d0 = (int32) (int16) Mem121[a4_261:byte]
	d5_1007 = Mem121[a7_1282 + 44<i32>:word32]
	d3_124 = 1<32>
	d4_126 = d4_126 + 1<32>
	branch d0 - Mem121[a7_1282 + 44<i32>:word32] == 0<32> l0000245E
l00002448:
	branch d5_1007 == 0xFFFFFFFF<32> l0000245A
l00002450:
	word32 a7_142 = a7_1282 - 4<i32>
	Mem144[a7_142:word32] = a2_104
	Mem146[a7_142 - 4<i32>:word32] = d5_1007
	d0 = fn00001438(Mem146[a7_142 - 1<i32>:byte], Mem146[a7_142:word32])
l0000245A:
	d3_124 = 0<32>
	d4_126 = d4_126 - 1<32>
l00002384:
	word32 d0_178
	word32 a0_162 = a2_104 + 24<i32>
	Mem165[a0_162:word32] = Mem163[a0_162:word32] | 1<32>
	word32 a0_166 = a2_104 + 20<i32>
	word32 v96_167 = Mem165[a0_166:word32] - 1<32>
	Mem168[a0_166:word32] = v96_167
	branch v96_167 < 0<32> l000023AE
l000023AE:
	word32 a7_172 = a7_1282 - 4<i32>
	Mem173[a7_172:word32] = a2_104
	word32 d1_5159
	word32 a5_5160
	d0_178 = fn00002604(Mem173[a7_172:word32], out d1_5159, out a1, out a5_5160)
	d1 = d0_178
l00002396:
	a1 = a2_104 + 4<i32>
	word32 a0_189 = Mem168[a1:word32]
	word32 a7_190 = a7_1282 - 4<i32>
	Mem191[a7_190:word32] = a2_104
	Mem194[a1:word32] = a0_189 + 1<i32>
	byte v98_198 = Mem194[a0_189:byte]
	a2_104 = Mem194[a7_190:word32]
	d0_178 = SEQ(SLICE(d0, word24, 8), v98_198)
	d1 = (uint32) (uint8) v98_198
l000023BA:
	word32 d0_227 = (uint32) (uint8) Mem224[0x00002BED<p32> + (SEQ(SLICE(d0_178, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d5_1007 = d1
	d4_126 = d4_126 + 1<32>
	d0 = d0_227 & 8<32>
	branch (d0_227 & 8<32>) != 0<32> l00002384
l000023DC:
	branch d1 == 0xFFFFFFFF<32> l000023EE
l000023E4:
	word32 a7_237 = a7_1282 - 4<i32>
	Mem239[a7_237:word32] = a2_104
	Mem241[a7_237 - 4<i32>:word32] = d1
	d0 = fn00001438(Mem241[a7_237 - 1<i32>:byte], Mem241[a7_237:word32])
l000023EE:
	d4_126 = d4_126 - 1<32>
	d3_124 = 1<i32>
l0000245E:
	a4_261 = a4_261 + 1<i32>
l00001494:
	Mem263[a7_1282 + 72<i32>:byte] = 0x69<8>
	Mem264[a7_1282 + 73<i32>:byte] = 0<8>
	word32 a3_265 = a4_261 + 1<i32>
	word32 d0_275 = (uint32) (uint8) Mem264[0x00002BED<p32> + (uint32) ((uint8) Mem264[a3_265:byte]):byte]
	word32 d6_1093 = -1<i32>
	d0 = d0_275 & 4<32>
	branch (d0_275 & 4<32>) == 0<32> l00001518
l000014BC:
	word32 d0_291 = (uint32) (uint8) Mem264[0x00002BED<p32> + (uint32) ((uint8) Mem264[a3_265:byte]):byte]
	d6_1093 = 0<i32>
	d0 = d0_291 & 4<32>
	branch (d0_291 & 4<32>) == 0<32> l00001518
l000014D6:
	word32 a7_299 = a7_1282 - 4<i32>
	Mem301[a7_299:word32] = d2_1050
	word32 d1_307 = __swap(10<i32>) *u SLICE(d6_1093, word16, 0)
	word32 d0_316 = SLICE(d6_1093, word16, 0) *u 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_307, word16, 16), SLICE(d1_307 + __swap(d6_1093) *u 0xA<16>, word16, 0))), word16, 16), 0<16>)
	a3_265 = a3_265 + 1<i32>
	word32 d1_325 = (uint32) (uint8) Mem301[a3_265:byte]
	word32 d0_339 = (uint32) (uint8) Mem301[0x00002BED<p32> + (uint32) ((uint8) Mem301[a3_265:byte]):byte]
	d2_1050 = Mem301[a7_299:word32]
	d1 = d1_325 - 0x30<32>
	d6_1093 = d1_325 - 0x30<32> + d0_316
	d0 = d0_339 & 4<32>
	branch (d0_339 & 4<32>) != 0<32> l000014D6
l00001518:
	branch Mem346[a3_265:byte] == 0x68<8> l00001542
l0000151E:
	branch Mem346[a3_265:byte] == 0x6C<8> l00001542
l00001524:
	branch Mem346[a3_265:byte] == 0x4C<8> l00001542
l0000152A:
	branch Mem346[a3_265:byte] == 0x7A<8> l00001542
l00001530:
	branch Mem346[a3_265:byte] == 0x6A<8> l00001542
l00001536:
	branch Mem346[a3_265:byte] == 0x74<8> l00001542
l0000153C:
	branch Mem346[a3_265:byte] != 0x2A<8> l000015AA
l00001542:
	d7 = SEQ(SLICE(d7, word24, 8), Mem346[a7_1282 + 73<i32>:byte])
	d1 = SEQ(SLICE(d1, word24, 8), Mem346[a7_1282 + 72<i32>:byte])
l0000154A:
	branch Mem346[a3_265:byte] != 0x2A<8> l00001554
l00001554:
	branch SLICE(d1, byte, 0) != 0x68<8> l00001564
l0000155A:
	branch Mem346[a3_265:byte] != 0x68<8> l00001564
l00001564:
	branch SLICE(d1, byte, 0) != 0x6C<8> l00001574
l0000156A:
	branch Mem346[a3_265:byte] != 0x6C<8> l00001574
l00001574:
	d1 = SEQ(SLICE(d1, word24, 8), Mem346[a3_265:byte])
l00001570:
	d1 = 1<i32>
l00001560:
	d1 = 2<i32>
l00001550:
	d7 = 1<i32>
l00001576:
	a3_265 = a3_265 + 1<i32>
	branch Mem346[a3_265:byte] == 0x68<8> l0000154A
l0000157E:
	branch Mem346[a3_265:byte] == 0x6C<8> l0000154A
l00001584:
	branch Mem346[a3_265:byte] == 0x4C<8> l0000154A
l0000158A:
	branch Mem346[a3_265:byte] == 0x7A<8> l0000154A
l00001590:
	branch Mem346[a3_265:byte] == 0x6A<8> l0000154A
l00001596:
	branch Mem346[a3_265:byte] == 0x74<8> l0000154A
l0000159C:
	branch Mem346[a3_265:byte] == 0x2A<8> l0000154A
l000015A2:
	Mem448[a7_1282 + 72<i32>:byte] = SLICE(d1, byte, 0)
	Mem454[a7_1282 + 73<i32>:byte] = SLICE(d7, byte, 0)
l000015AA:
	branch Mem457[a7_1282 + 72<i32>:byte] != 0x6A<8> l000015B8
l000015B2:
	Mem461[a7_1282 + 72<i32>:byte] = 1<8>
l000015B8:
	branch Mem464[a7_1282 + 72<i32>:byte] != 0x74<8> l000015C6
l000015C0:
	Mem468[a7_1282 + 72<i32>:byte] = 0x69<8>
l000015C6:
	branch Mem471[a7_1282 + 72<i32>:byte] != 0x7A<8> l000015D4
l000015CE:
	Mem475[a7_1282 + 72<i32>:byte] = 0x6C<8>
l000015D4:
	byte v76_482 = Mem481[a3_265:byte]
	word24 v77_488 = SLICE(d7, word24, 8)
	word32 a3_1884 = a3_265 + 1<i32>
	d7 = SEQ(v77_488, v76_482)
	branch v76_482 == 0<8> l0000164A
l000015D8:
	branch v76_482 == 0x25<8> l0000164A
l000015DE:
	branch v76_482 == 0x63<8> l0000164A
l000015E4:
	branch v76_482 == 0x6E<8> l0000164A
l000015EA:
	branch v76_482 == 0x5B<8> l0000164A
l000015F0:
	word32 d0_521
	word32 a0_505 = a2_104 + 24<i32>
	Mem508[a0_505:word32] = Mem506[a0_505:word32] | 1<32>
	word32 a0_509 = a2_104 + 20<i32>
	word32 v83_510 = Mem508[a0_509:word32] - 1<32>
	Mem511[a0_509:word32] = v83_510
	branch v83_510 < 0<32> l0000161A
l0000161A:
	word32 a7_515 = a7_1282 - 4<i32>
	Mem516[a7_515:word32] = a2_104
	word32 d1_5157
	word32 a5_5158
	d0_521 = fn00002604(Mem516[a7_515:word32], out d1_5157, out a1, out a5_5158)
	d1 = d0_521
l00001602:
	a1 = a2_104 + 4<i32>
	word32 a0_532 = Mem511[a1:word32]
	word32 a7_533 = a7_1282 - 4<i32>
	Mem534[a7_533:word32] = a2_104
	Mem537[a1:word32] = a0_532 + 1<i32>
	byte v87_541 = Mem537[a0_532:byte]
	a2_104 = Mem537[a7_533:word32]
	d0_521 = SEQ(SLICE(d0, word24, 8), v87_541)
	d1 = (uint32) (uint8) v87_541
l00001626:
	word32 d0_570 = (uint32) (uint8) Mem567[0x00002BED<p32> + (SEQ(SLICE(d0_521, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d5_1007 = d1
	d4_126 = d4_126 + 1<32>
	d0 = d0_570 & 8<32>
	branch (d0_570 & 8<32>) != 0<32> l000015F0
l00001648:
	d3_1781 = 1<i32>
l0000164A:
	word24 v124_587 = SLICE(d1, word24, 8)
	word32 d1_591 = SEQ(v124_587, v76_482 - 0x25<8>)
	branch v76_482 == 0x25<8> l00001A96
l00001A96:
	word32 a0_607 = a2_104 + 24<i32>
	Mem610[a0_607:word32] = Mem608[a0_607:word32] | 1<32>
	word32 a0_611 = a2_104 + 20<i32>
	word32 v136_612 = Mem610[a0_611:word32] - 1<32>
	Mem613[a0_611:word32] = v136_612
	branch v136_612 < 0<32> l00001AC8
l00001AC8:
	word32 a7_619 = a7_1282 - 4<i32>
	Mem620[a7_619:word32] = a2_104
	word32 a5_5162
	d0 = fn00002604(Mem620[a7_619:word32], out d1, out a1, out a5_5162)
	Mem632[a7_619 + 48<i32>:word32] = d0
l00001AA8:
	a1 = a2_104 + 4<i32>
	word32 a0_636 = Mem613[a1:word32]
	word32 a7_637 = a7_1282 - 4<i32>
	Mem638[a7_637:word32] = a2_104
	Mem641[a1:word32] = a0_636 + 1<i32>
	byte v138_645 = Mem641[a0_636:byte]
	a2_104 = Mem641[a7_637:word32]
	Mem660[a7_637:word32] = d1_591
	Mem665[a7_637 + 48<i32>:word32] = (uint32) (uint8) v138_645
	d0 = SEQ(SLICE(d0, word24, 8), v138_645)
	d1 = Mem665[a7_637:word32]
l00001AD6:
	d5_1007 = Mem671[a7_1282 + 44<i32>:word32]
	d3_124 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
	branch Mem671[a7_1282 + 44<i32>:word32] == 0x25<32> l00002362
l00001AEA:
	branch d5_1007 == 0xFFFFFFFF<32> l00001AFC
l00001AF2:
	word32 a7_708 = a7_1282 - 4<i32>
	Mem710[a7_708:word32] = a2_104
	Mem712[a7_708 - 4<i32>:word32] = d5_1007
	d0 = fn00001438(Mem712[a7_708 - 1<i32>:byte], Mem712[a7_708:word32])
l00001AFC:
	d3_124 = d3_124 - 1<32>
	d4_126 = d4_126 - 1<32>
l00001654:
	branch v76_482 == 0x5B<8> l00001792
l00001792:
	Mem732[a7_1282 + 44<i32>:byte] = 0<8>
	branch Mem732[a3_1884:byte] != 0x5E<8> l000017A4
l0000179C:
	Mem739[a7_1282 + 44<i32>:byte] = 1<8>
	a3_1884 = a3_1884 + 1<i32>
l000017A4:
	Mem743[a7_1282 + 52<i32>:word32] = 0<32>
	byte v397_744 = Mem743[a7_1282 + 44<i32>:byte]
	d7 = SEQ(v77_488, v397_744)
	word32 d1_748 = Mem743[a7_1282 + 52<i32>:word32]
l000017B0:
	word32 d5_755
	branch v397_744 == 0<8> l000017BC
l000017BC:
	d5_755 = 0<i32>
l000017B4:
	d5_755 = 0xFF<32>
l000017BE:
	Mem766[a7_1282 + 78<i32> + d1_748:byte] = SLICE(d5_755, byte, 0)
	d1_748 = d1_748 + 1<32>
	branch d1_748 <u 0x20<32> l000017B0
l000017D0:
	Mem789[a7_1282 + 132<i32>:word32] = d2_1050
	Mem792[a7_1282 + 44<i32>:byte] = v397_744
	byte v405_793 = Mem792[a7_1282 + 44<i32>:byte]
l000017DC:
	branch Mem798[a3_1884:byte] == 0<8> l00001852
l000017E0:
	byte v407_803 = Mem798[a3_1884:byte]
	a3_1884 = a3_1884 + 1<i32>
	d1_748 = SEQ(SLICE(d1_748, word24, 8), v407_803)
	branch Mem798[a3_1884:byte] != 0x2D<8> l000017F4
l000017E8:
	branch v407_803 - Mem798[a3_1884 + 1<i32>:byte] >=u 0<8> l000017F4
l000017F4:
	d7 = SEQ(SLICE(d7, word24, 8), v407_803)
l000017EE:
	a3_1884 = a3_1884 + 2<i32>
	d7 = SEQ(SLICE(d7, word24, 8), Mem798[a3_1884 + 1<i32>:byte])
l000017F6:
	word32 d5_831 = (uint32) (uint8) v407_803
	d0 = (uint32) (uint8) SLICE(d7, byte, 0)
	branch d0 - d5_831 <u 0<32> l0000184C
l00001802:
	branch v405_793 == 0<8> l00001826
l00001826:
	word32 a0_850 = a7_1282 + 78<i32> + (d5_831 >>u 3<32>)
	d1_748 = (uint32) (uint8) Mem858[a0_850:byte]
	Mem864[a0_850:byte] = SLICE(1<i32> << (d5_831 & 7<i32>) | d1_748, byte, 0)
l00001806:
	word32 a0_869 = a7_1282 + 78<i32> + (d5_831 >>u 3<32>)
	d1_748 = (uint32) (uint8) Mem858[a0_869:byte]
	Mem883[a0_869:byte] = SLICE(~(1<i32> << (d5_831 & 7<i32>)) & d1_748, byte, 0)
l00001842:
	d5_831 = d5_831 + 1<32>
	d0 = (uint32) (uint8) SLICE(d7, byte, 0)
	branch d0 - d5_831 >=u 0<32> l00001802
l0000184C:
	branch Mem902[a3_1884:byte] != 0x5D<8> l000017DC
l00001852:
	word32 a6_1124
	d2_1050 = Mem915[a7_1282 + 132<i32>:word32]
	a3_1884 = a3_1884 + 1<i32>
	branch Mem915[a7_1282 + 73<i32>:byte] != 0<8> l00001872
l00001872:
	a6_1124 = 0<32>
l0000185E:
	word32 d0_926 = d2_1050 + 3<32> >>u 2<32>
	d2_1050 = (d0_926 << 2<32>) + 4<32>
	d0 = d0_926 << 2<32>
	a6_1124 = Mem915[d2_1050 + -4<i32>:word32]
l00001874:
	word32 a0_944 = a2_104 + 24<i32>
	Mem947[a0_944:word32] = Mem915[a0_944:word32] | 1<32>
	word32 a0_948 = a2_104 + 20<i32>
	word32 v431_949 = Mem947[a0_948:word32] - 1<32>
	Mem950[a0_948:word32] = v431_949
	branch v431_949 < 0<32> l000018A6
l000018A6:
	word32 a7_954 = a7_1282 - 4<i32>
	Mem955[a7_954:word32] = a2_104
	word32 a5_5175
	d0 = fn00002604(Mem955[a7_954:word32], out d1, out a1, out a5_5175)
	Mem967[a7_954 + 48<i32>:word32] = d0
l00001886:
	a1 = a2_104 + 4<i32>
	word32 a0_971 = Mem950[a1:word32]
	word32 a7_972 = a7_1282 - 4<i32>
	Mem973[a7_972:word32] = a2_104
	Mem976[a1:word32] = a0_971 + 1<i32>
	byte v433_980 = Mem976[a0_971:byte]
	a2_104 = Mem976[a7_972:word32]
	Mem995[a7_972:word32] = d1_748
	Mem1000[a7_972 + 48<i32>:word32] = (uint32) (uint8) v433_980
	d0 = SEQ(SLICE(d0, word24, 8), v433_980)
	d1 = Mem1000[a7_972:word32]
l000018B4:
	d5_1007 = Mem1006[a7_1282 + 44<i32>:word32]
	word32 d3_1020 = d3_1781 + 1<32>
	word32 d4_1033 = d4_126 + 1<32>
	branch Mem1006[a7_1282 + 44<i32>:word32] == 0xFFFFFFFF<32> l00001982
l000018C8:
	word32 a7_1039 = a7_1282 - 4<i32>
	Mem1040[a7_1039:word32] = a7_1282 + 78<i32>
	Mem1043[a7_1039 - 4<i32>:word32] = a1
	Mem1045[a7_1039 - 8<i32>:word32] = 0x00000008<p32>
	Mem1047[a7_1039 - 12<i32>:word32] = d5_1007
	d1 = (uint32) (uint8) Mem1047[Mem1047[a7_1039:word32] + fn0000254C(d2_1050, Mem1047[a7_1039 - 12<i32>:word32], Mem1047[a7_1039 - 8<i32>:word32]):byte]
	a1 = Mem1047[a7_1039 - 4<i32>:word32]
	d0 = 1<i32> << (d5_1007 & 7<i32>) & d1
	branch d0 == 0<32> l00001982
l000018F8:
	branch d6_1093 - d3_1020 <u 0<32> l00001982
l000018FE:
	byte v444_1109 = Mem1047[a7_1039 + 77<i32>:byte]
	d7 = SEQ(SLICE(d7, word24, 8), v444_1109)
l00001902:
	branch v444_1109 != 0<8> l00001908
l00001906:
	Mem1125[a6_1124:byte] = SLICE(d5_1007, byte, 0)
	a6_1124 = a6_1124 + 1<i32>
l00001908:
	word32 a0_1130 = a2_104 + 24<i32>
	Mem1134[a0_1130:word32] = Mem1131[a0_1130:word32] | 1<32>
	word32 a0_1135 = a2_104 + 20<i32>
	word32 v448_1136 = Mem1134[a0_1135:word32] - 1<32>
	Mem1137[a0_1135:word32] = v448_1136
	branch v448_1136 < 0<32> l00001932
l00001932:
	word32 a7_1142 = a7_1282 - 4<i32>
	Mem1143[a7_1142:word32] = a2_104
	word32 d1_5176
	word32 a5_5177
	d0 = fn00002604(Mem1143[a7_1142:word32], out d1_5176, out a1, out a5_5177)
	d1 = d0
l0000191A:
	a1 = a2_104 + 4<i32>
	word32 a0_1159 = Mem1137[a1:word32]
	word32 a7_1160 = a7_1282 - 4<i32>
	Mem1161[a7_1160:word32] = a2_104
	Mem1164[a1:word32] = a0_1159 + 1<i32>
	byte v450_1168 = Mem1164[a0_1159:byte]
	a2_104 = Mem1164[a7_1160:word32]
	d0 = SEQ(SLICE(d0, word24, 8), v450_1168)
	d1 = (uint32) (uint8) v450_1168
l0000193E:
	d5_1007 = d1
	d3_1020 = d3_1020 + 1<32>
	d4_1033 = d4_1033 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l0000197E
l0000194C:
	word32 a7_1194 = a7_1282 - 4<i32>
	Mem1195[a7_1194:word32] = a7_1282 + 78<i32>
	Mem1198[a7_1194 - 4<i32>:word32] = a1
	Mem1200[a7_1194 - 8<i32>:word32] = 0x00000008<p32>
	Mem1202[a7_1194 - 12<i32>:word32] = d1
	d1 = (uint32) (uint8) Mem1202[Mem1202[a7_1194:word32] + fn0000254C(d2_1050, Mem1202[a7_1194 - 12<i32>:word32], Mem1202[a7_1194 - 8<i32>:word32]):byte]
	a1 = Mem1202[a7_1194 - 4<i32>:word32]
	d0 = 1<i32> << (d1 & 7<i32>) & d1
	branch d0 == 0<32> l0000197E
l0000197A:
	branch d6_1093 - d3_1020 >=u 0<32> l00001902
l0000197E:
	Mem1248[a7_1282 + 73<i32>:byte] = v444_1109
l00001982:
	branch d5_1007 == 0xFFFFFFFF<32> l00001994
l0000198A:
	word32 a7_1256 = a7_1282 - 4<i32>
	Mem1261[a7_1256:word32] = a2_104
	Mem1263[a7_1256 - 4<i32>:word32] = d5_1007
	d0 = fn00001438(Mem1263[a7_1256 - 1<i32>:byte], Mem1263[a7_1256:word32])
l00001994:
	d3_124 = d3_1020 - 1<32>
	d4_126 = d4_1033 - 1<32>
	branch Mem1283[a7_1282 + 73<i32>:byte] != 0<8> l00002362
l000019A0:
	branch d3_124 == 0<32> l00002362
l000019A6:
	Mem1300[a6_1124:byte] = 0<8>
	Mem1303[a7_1282 + 60<i32>:word32] = Mem1300[a7_1282 + 60<i32>:word32] + 1<32>
l0000165C:
	word32 d1_1307 = SEQ(v124_587, v76_482 - 0x63<8>)
	branch v76_482 == 0x63<8> l00001672
l00001672:
	branch d6_1093 != 0xFFFFFFFF<32> l0000167C
l0000167A:
	d6_1093 = 1<i32>
l0000167C:
	word32 a1_1321
	branch Mem608[a7_1282 + 73<i32>:byte] != 0<8> l00001696
l00001696:
	a1_1321 = 0<32>
l00001682:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	d2_1050 = d0 + 4<32>
	a1_1321 = Mem608[d0:word32]
l00001698:
	word32 a0_1334 = a2_104 + 24<i32>
	Mem1337[a0_1334:word32] = Mem608[a0_1334:word32] | 1<32>
	word32 a0_1338 = a2_104 + 20<i32>
	Mem1340[a0_1338:word32] = Mem1337[a0_1338:word32] - 1<32>
	Mem1344[a7_1282 + 44<i32>:word32] = a1_1321
	branch Mem1344[a0_1338:word32] < 0<32> l000016D0
l000016D0:
	word32 a1_1350 = Mem1344[a7_1282 + 44<i32>:word32]
	word32 a7_1351 = a7_1282 - 4<i32>
	Mem1352[a7_1351:word32] = a2_104
	Mem1353[a7_1351 + 48<i32>:word32] = a1_1350
	word32 a5_5168
	word32 a1_5167
	d0 = fn00002604(Mem1353[a7_1351:word32], out d1, out a1_5167, out a5_5168)
	Mem1365[a7_1351 + 56<i32>:word32] = d0
	Mem1367[a7_1351 + 48<i32>:word32] = Mem1365[a7_1351 + 48<i32>:word32]
l000016B0:
	word32 a1_1370 = a2_104 + 4<i32>
	word32 a0_1371 = Mem1344[a1_1370:word32]
	word32 a7_1372 = a7_1282 - 4<i32>
	Mem1373[a7_1372:word32] = a2_104
	Mem1376[a1_1370:word32] = a0_1371 + 1<i32>
	byte v220_1380 = Mem1376[a0_1371:byte]
	a2_104 = Mem1376[a7_1372:word32]
	Mem1388[a7_1372:word32] = d1_1307
	Mem1393[a7_1372 + 56<i32>:word32] = (uint32) (uint8) v220_1380
	d0 = SEQ(SLICE(d0, word24, 8), v220_1380)
	d1 = Mem1393[a7_1372:word32]
l000016EE:
	a1 = Mem1399[a7_1282 + 44<i32>:word32]
	d5_1007 = Mem1399[a7_1282 + 52<i32>:word32]
	word32 d3_1405 = d3_1781 + 1<32>
	word32 d4_1409 = d4_126 + 1<32>
	branch Mem1399[a7_1282 + 52<i32>:word32] == 0xFFFFFFFF<32> l00001766
l00001704:
	Mem1414[a7_1282 + 44<i32>:word32] = a1
	branch d6_1093 - d3_1405 <u 0<32> l00001766
l0000170C:
	byte v233_1421 = Mem1414[a7_1282 + 73<i32>:byte]
	d7 = SEQ(v77_488, v233_1421)
	word32 a4_1428 = Mem1414[a7_1282 + 44<i32>:word32]
l00001714:
	branch v233_1421 != 0<8> l0000171A
l00001718:
	Mem1437[a4_1428:byte] = SLICE(d5_1007, byte, 0)
	a4_1428 = a4_1428 + 1<i32>
l0000171A:
	word32 a0_1442 = a2_104 + 24<i32>
	Mem1446[a0_1442:word32] = Mem1443[a0_1442:word32] | 1<32>
	word32 a0_1447 = a2_104 + 20<i32>
	word32 v239_1448 = Mem1446[a0_1447:word32] - 1<32>
	Mem1449[a0_1447:word32] = v239_1448
	branch v239_1448 < 0<32> l00001744
l00001744:
	word32 a7_1454 = a7_1282 - 4<i32>
	Mem1455[a7_1454:word32] = a2_104
	word32 d1_5169
	word32 a5_5170
	d0 = fn00002604(Mem1455[a7_1454:word32], out d1_5169, out a1, out a5_5170)
	d1 = d0
l0000172C:
	a1 = a2_104 + 4<i32>
	word32 a0_1471 = Mem1449[a1:word32]
	word32 a7_1472 = a7_1282 - 4<i32>
	Mem1473[a7_1472:word32] = a2_104
	Mem1476[a1:word32] = a0_1471 + 1<i32>
	byte v241_1480 = Mem1476[a0_1471:byte]
	a2_104 = Mem1476[a7_1472:word32]
	d0 = SEQ(SLICE(d0, word24, 8), v241_1480)
	d1 = (uint32) (uint8) v241_1480
l00001750:
	d5_1007 = d1
	d3_1405 = d3_1405 + 1<32>
	d4_1409 = d4_1409 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00001762
l0000175E:
	branch d6_1093 - d3_1405 >=u 0<32> l00001714
l00001762:
	Mem1516[a7_1282 + 73<i32>:byte] = v233_1421
l00001766:
	branch d5_1007 == 0xFFFFFFFF<32> l00001778
l0000176E:
	word32 a7_1524 = a7_1282 - 4<i32>
	Mem1529[a7_1524:word32] = a2_104
	Mem1531[a7_1524 - 4<i32>:word32] = d5_1007
	d0 = fn00001438(Mem1531[a7_1524 - 1<i32>:byte], Mem1531[a7_1524:word32])
l00001778:
	d3_124 = d3_1405 - 1<32>
	d4_126 = d4_1409 - 1<32>
	branch Mem1551[a7_1282 + 73<i32>:byte] != 0<8> l00002362
l00001784:
	branch d3_124 == 0<32> l00002362
l0000178A:
	Mem1562[a7_1282 + 60<i32>:word32] = Mem1551[a7_1282 + 60<i32>:word32] + 1<32>
l00001660:
	d1 = SEQ(v124_587, v76_482 - 0x6E<8>)
	branch v76_482 == 0x6E<8> l00001B04
l00001B04:
	branch Mem608[a7_1282 + 73<i32>:byte] != 0<8> l00001B9C
l00001B0C:
	branch Mem608[a7_1282 + 72<i32>:byte] != 1<8> l00001B2E
l00001B2E:
	branch Mem608[a7_1282 + 72<i32>:byte] != 0x6C<8> l00001B4C
l00001B4C:
	branch Mem608[a7_1282 + 72<i32>:byte] != 0x68<8> l00001B6A
l00001B6A:
	branch Mem608[a7_1282 + 72<i32>:byte] != 2<8> l00001B88
l00001B88:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	Mem1594[Mem608[d0:word32]:word32] = d4_126
	d2_1050 = d0 + 4<32>
l00001B72:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	Mem1606[Mem608[d0:word32]:byte] = SLICE(d4_126, byte, 0)
	d2_1050 = d0 + 4<32>
l00001B54:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	Mem1618[Mem608[d0:word32]:word16] = SLICE(d4_126, word16, 0)
	d2_1050 = d0 + 4<32>
l00001B36:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	Mem1629[Mem608[d0:word32]:word32] = d4_126
	d2_1050 = d0 + 4<32>
l00001B14:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	word32 a0_1639 = Mem608[d0:word32]
	Mem1640[a0_1639 + 4<i32>:word32] = d4_126
	Mem1641[a0_1639:word32] = 0<32>
	d2_1050 = d0 + 4<32>
l00001B9C:
	Mem1650[a7_1282 + 60<i32>:word32] = Mem1648[a7_1282 + 60<i32>:word32] + 1<32>
	d3_124 = 1<i32>
l00001668:
	d1 = SEQ(v124_587, v76_482 - 0x73<8>)
	branch v76_482 == 0x73<8> l000019B0
l000019B0:
	word32 a5_1661
	branch Mem608[a7_1282 + 73<i32>:byte] != 0<8> l000019CA
l000019CA:
	a5_1661 = 0<32>
l000019B6:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	d2_1050 = d0 + 4<32>
	a5_1661 = Mem608[d0:word32]
l000019CC:
	branch d5_1007 == 0xFFFFFFFF<32> l00001A68
l000019D6:
	word32 d0_1699 = (uint32) (uint8) Mem608[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_1699 & 8<32>
	branch (d0_1699 & 8<32>) != 0<32> l00001A68
l000019F2:
	branch d6_1093 - d3_1781 <u 0<32> l00001A68
l000019F6:
	byte v153_1711 = Mem608[a7_1282 + 73<i32>:byte]
	d7 = SEQ(v77_488, v153_1711)
l000019FA:
	branch v153_1711 != 0<8> l00001A00
l000019FE:
	Mem1724[a5_1661:byte] = SLICE(d5_1007, byte, 0)
	a5_1661 = a5_1661 + 1<i32>
l00001A00:
	word32 a0_1729 = a2_104 + 24<i32>
	Mem1733[a0_1729:word32] = Mem1730[a0_1729:word32] | 1<32>
	word32 a0_1734 = a2_104 + 20<i32>
	word32 v159_1735 = Mem1733[a0_1734:word32] - 1<32>
	Mem1736[a0_1734:word32] = v159_1735
	branch v159_1735 < 0<32> l00001A2A
l00001A2A:
	word32 a7_1741 = a7_1282 - 4<i32>
	Mem1742[a7_1741:word32] = a2_104
	word32 d1_5163
	d0 = fn00002604(Mem1742[a7_1741:word32], out d1_5163, out a1, out a5_1661)
	d1 = d0
l00001A12:
	a1 = a2_104 + 4<i32>
	word32 a0_1758 = Mem1736[a1:word32]
	word32 a7_1759 = a7_1282 - 4<i32>
	Mem1760[a7_1759:word32] = a2_104
	Mem1763[a1:word32] = a0_1758 + 1<i32>
	byte v161_1767 = Mem1763[a0_1758:byte]
	a2_104 = Mem1763[a7_1759:word32]
	d0 = SEQ(SLICE(d0, word24, 8), v161_1767)
	d1 = (uint32) (uint8) v161_1767
l00001A36:
	d5_1007 = d1
	d3_1781 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00001A64
l00001A44:
	word32 d0_1802 = (uint32) (uint8) Mem1799[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_1802 & 8<32>
	branch (d0_1802 & 8<32>) != 0<32> l00001A64
l00001A60:
	branch d6_1093 - d3_1781 >=u 0<32> l000019FA
l00001A64:
	Mem1820[a7_1282 + 73<i32>:byte] = v153_1711
l00001A68:
	branch d5_1007 == 0xFFFFFFFF<32> l00001A7A
l00001A70:
	word32 a7_1828 = a7_1282 - 4<i32>
	Mem1833[a7_1828:word32] = a2_104
	Mem1835[a7_1828 - 4<i32>:word32] = d5_1007
	d0 = fn00001438(Mem1835[a7_1828 - 1<i32>:byte], Mem1835[a7_1828:word32])
l00001A7A:
	d3_124 = d3_1781 - 1<32>
	d4_126 = d4_126 - 1<32>
	branch Mem1856[a7_1282 + 73<i32>:byte] != 0<8> l00002362
l00001A86:
	branch d3_124 == 0<32> l00002362
l00001A8C:
	Mem1872[a5_1661:byte] = 0<8>
	Mem1875[a7_1282 + 60<i32>:word32] = Mem1872[a7_1282 + 60<i32>:word32] + 1<32>
l0000166E:
l00001BA6:
	Mem1877[a7_1282 + 48<i32>:word32] = 0<32>
	Mem1878[a7_1282 + 44<i32>:word32] = 0<32>
	Mem1879[a7_1282 + 110<i32>:word32] = 0<32>
	branch v76_482 != 0<8> l00001BB8
l00001BB6:
	a3_1884 = a3_1884 - 1<i32>
l00001BB8:
	branch v76_482 != 0x70<8> l00001BC6
l00001BBE:
	Mem1890[a7_1282 + 72<i32>:byte] = 0x6C<8>
	d7 = 120<i32>
l00001BC6:
	branch d5_1007 != 0x2D<32> l00001BD4
l00001BCE:
	branch SLICE(d7, byte, 0) != 0x75<8> l00001BDC
l00001BD4:
	branch d5_1007 != 0x2B<32> l00001C2C
l00001BDC:
	branch d6_1093 - d3_1781 <u 0<32> l00001C2C
l00001BE0:
	Mem1921[a7_1282 + 110<i32>:word32] = d5_1007
	word32 a0_1926 = a2_104 + 24<i32>
	Mem1928[a0_1926:word32] = Mem1921[a0_1926:word32] | 1<32>
	word32 a0_1929 = a2_104 + 20<i32>
	word32 v182_1930 = Mem1928[a0_1929:word32] - 1<32>
	Mem1931[a0_1929:word32] = v182_1930
	branch v182_1930 < 0<32> l00001C16
l00001C16:
	word32 a7_1934 = a7_1282 - 4<i32>
	Mem1935[a7_1934:word32] = a2_104
	word32 a5_5164
	d0 = fn00002604(Mem1935[a7_1934:word32], out d1, out a1, out a5_5164)
	Mem1947[a7_1934 + 56<i32>:word32] = d0
l00001BF6:
	a1 = a2_104 + 4<i32>
	word32 a0_1951 = Mem1931[a1:word32]
	word32 a7_1952 = a7_1282 - 4<i32>
	Mem1953[a7_1952:word32] = a2_104
	Mem1956[a1:word32] = a0_1951 + 1<i32>
	byte v184_1960 = Mem1956[a0_1951:byte]
	a2_104 = Mem1956[a7_1952:word32]
	Mem1972[a7_1952:word32] = d1
	Mem1977[a7_1952 + 56<i32>:word32] = (uint32) (uint8) v184_1960
	d0 = SEQ(SLICE(d0, word24, 8), v184_1960)
	d1 = Mem1977[a7_1952:word32]
l00001C24:
	d5_1007 = Mem1983[a7_1282 + 52<i32>:word32]
	d3_1781 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
l00001C2C:
	branch SLICE(d7, byte, 0) != 0x69<8> l00001D9E
l00001C34:
	branch d5_1007 != 0x30<32> l00001D60
l00001C3E:
	branch d6_1093 - d3_1781 <u 0<32> l00001D60
l00001D60:
	word32 d0_2030 = (uint32) (uint8) Mem2023[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_2030 & 4<32>
	branch (d0_2030 & 4<32>) != 0<32> l00001D9E
l00001D7C:
	word32 d0_2045 = (uint32) (uint8) Mem2023[0x00002BED<p32> + (SEQ(SLICE(d0_2030 & 4<32>, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_2045 & 0x44<32>
	branch (d0_2045 & 0x44<32>) == 0<32> l00001D9E
l00001D98:
	branch d6_1093 - d3_1781 <u 0<32> l00001D9E
l00001D9C:
	d7 = 120<i32>
l00001C44:
	word32 d0_2075
	word32 a0_2060 = a2_104 + 24<i32>
	Mem2062[a0_2060:word32] = Mem2023[a0_2060:word32] | 1<32>
	word32 a0_2063 = a2_104 + 20<i32>
	word32 v194_2064 = Mem2062[a0_2063:word32] - 1<32>
	Mem2065[a0_2063:word32] = v194_2064
	branch v194_2064 < 0<32> l00001C76
l00001C76:
	word32 a7_2069 = a7_1282 - 4<i32>
	Mem2070[a7_2069:word32] = a2_104
	word32 a5_5165
	d0_2075 = fn00002604(Mem2070[a7_2069:word32], out d1, out a1, out a5_5165)
	Mem2082[a7_2069 + 56<i32>:word32] = d0_2075
l00001C56:
	a1 = a2_104 + 4<i32>
	word32 a0_2086 = Mem2065[a1:word32]
	word32 a7_2087 = a7_1282 - 4<i32>
	Mem2088[a7_2087:word32] = a2_104
	Mem2091[a1:word32] = a0_2086 + 1<i32>
	byte v196_2095 = Mem2091[a0_2086:byte]
	a2_104 = Mem2091[a7_2087:word32]
	Mem2101[a7_2087:word32] = d1
	Mem2106[a7_2087 + 56<i32>:word32] = (uint32) (uint8) v196_2095
	d0_2075 = SEQ(SLICE(d0, word24, 8), v196_2095)
	d1 = Mem2106[a7_2087:word32]
l00001C84:
	Mem2114[a7_1282 + 64<i32>:word32] = Mem2112[a7_1282 + 52<i32>:word32]
	word32 d0_2124 = SEQ(SLICE(d0_2075, word24, 8), Mem2114[a7_1282 + 55<i32>:byte])
	word32 d3_2116 = d3_1781 + 1<32>
	d0 = d0_2124 & 0xFF<32>
	branch __btst(Mem2114[0x00002BED<p32> + (int32) ((int16) (d0_2124 & 0xFF<32>)):byte], 0<16>) l00001CAA
l00001CA6:
	d0 = SEQ(SLICE(d0_2124 & 0xFF<32>, word24, 8), SLICE(d0_2124 & 0xFF<32>, byte, 0) | 0x20<8>)
l00001CAA:
	branch d0 != 0x78<32> l00001D42
l00001CB4:
	branch d6_1093 - d3_2116 <u 0<32> l00001D42
l00001D42:
	d7 = 111<i32>
l00001CBA:
	word32 d0_2167
	word32 a0_2151 = a2_104 + 24<i32>
	Mem2154[a0_2151:word32] = Mem2114[a0_2151:word32] | 1<32>
	word32 a0_2155 = a2_104 + 20<i32>
	word32 v210_2156 = Mem2154[a0_2155:word32] - 1<32>
	Mem2157[a0_2155:word32] = v210_2156
	branch v210_2156 < 0<32> l00001CEC
l00001CEC:
	word32 a7_2161 = a7_1282 - 4<i32>
	Mem2162[a7_2161:word32] = a2_104
	word32 a5_5166
	d0_2167 = fn00002604(Mem2162[a7_2161:word32], out d1, out a1, out a5_5166)
	Mem2174[a7_2161 + 56<i32>:word32] = d0_2167
l00001CCC:
	a1 = a2_104 + 4<i32>
	word32 a0_2178 = Mem2157[a1:word32]
	word32 a7_2179 = a7_1282 - 4<i32>
	Mem2180[a7_2179:word32] = a2_104
	Mem2183[a1:word32] = a0_2178 + 1<i32>
	byte v212_2187 = Mem2183[a0_2178:byte]
	a2_104 = Mem2183[a7_2179:word32]
	Mem2193[a7_2179:word32] = d1
	Mem2198[a7_2179 + 56<i32>:word32] = (uint32) (uint8) v212_2187
	d0_2167 = SEQ(SLICE(d0, word24, 8), v212_2187)
	d1 = Mem2198[a7_2179:word32]
l00001CFA:
	Mem2206[a7_1282 + 74<i32>:word32] = Mem2204[a7_1282 + 52<i32>:word32]
	word32 d0_2226 = (uint32) (uint8) Mem2206[0x00002BED<p32> + (SEQ(SLICE(d0_2167, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_2226 & 0x44<32>
	branch (d0_2226 & 0x44<32>) == 0<32> l00001D26
l00001D20:
	branch d6_1093 - (d3_2116 + 1<32>) <u 0<32> l00001D26
l00001D24:
	d7 = 120<i32>
l00001D26:
	branch Mem2206[a7_1282 + 74<i32>:word32] == 0xFFFFFFFF<32> l00001D3C
l00001D30:
	word32 a7_2243 = a7_1282 - 4<i32>
	Mem2246[a7_2243:word32] = a2_104
	Mem2249[a7_2243 - 4<i32>:word32] = Mem2246[a7_2243 + 78<i32>:word32]
	d0 = fn00001438(Mem2249[a7_2243 - 1<i32>:byte], Mem2249[a7_2243:word32])
l00001D3C:
l00001D44:
	branch Mem2269[a7_1282 + 64<i32>:word32] == 0xFFFFFFFF<32> l00001D5A
l00001D4E:
	word32 a7_2275 = a7_1282 - 4<i32>
	Mem2279[a7_2275:word32] = a2_104
	Mem2282[a7_2275 - 4<i32>:word32] = Mem2279[a7_2275 + 68<i32>:word32]
	d0 = fn00001438(Mem2282[a7_2275 - 1<i32>:byte], Mem2282[a7_2275:word32])
l00001D5A:
l00001D9E:
	word32 d4_2409 = d4_126
	word32 d3_2328 = d3_1781
	branch SLICE(d7, byte, 0) != 0x78<8> l00001ED2
l00001DA6:
	branch d5_1007 != 0x30<32> l00001ED2
l00001DB0:
	branch d6_1093 - d3_1781 <u 0<32> l00001ED2
l00001DB6:
	word32 d0_2354
	word32 a0_2335 = a2_104 + 24<i32>
	Mem2339[a0_2335:word32] = Mem2336[a0_2335:word32] | 1<32>
	word32 a0_2340 = a2_104 + 20<i32>
	word32 v265_2341 = Mem2339[a0_2340:word32] - 1<32>
	Mem2342[a0_2340:word32] = v265_2341
	branch v265_2341 < 0<32> l00001DE8
l00001DE8:
	word32 a7_2348 = a7_1282 - 4<i32>
	Mem2349[a7_2348:word32] = a2_104
	word32 a5_5171
	d0_2354 = fn00002604(Mem2349[a7_2348:word32], out d1, out a1, out a5_5171)
	Mem2361[a7_2348 + 56<i32>:word32] = d0_2354
l00001DC8:
	a1 = a2_104 + 4<i32>
	word32 a0_2365 = Mem2342[a1:word32]
	word32 a7_2366 = a7_1282 - 4<i32>
	Mem2367[a7_2366:word32] = a2_104
	Mem2370[a1:word32] = a0_2365 + 1<i32>
	byte v267_2374 = Mem2370[a0_2365:byte]
	a2_104 = Mem2370[a7_2366:word32]
	Mem2392[a7_2366:word32] = d1
	Mem2397[a7_2366 + 56<i32>:word32] = (uint32) (uint8) v267_2374
	d0_2354 = SEQ(SLICE(d0, word24, 8), v267_2374)
	d1 = Mem2397[a7_2366:word32]
l00001DF6:
	Mem2405[a7_1282 + 64<i32>:word32] = Mem2403[a7_1282 + 52<i32>:word32]
	word32 d0_2416 = SEQ(SLICE(d0_2354, word24, 8), Mem2405[a7_1282 + 55<i32>:byte])
	word32 d3_2407 = d3_1781 + 1<32>
	word32 d4_2411 = d4_126 + 1<32>
	d0 = d0_2416 & 0xFF<32>
	branch __btst(Mem2405[0x00002BED<p32> + (int32) ((int16) (d0_2416 & 0xFF<32>)):byte], 0<16>) l00001E1C
l00001E18:
	d0 = SEQ(SLICE(d0_2416 & 0xFF<32>, word24, 8), SLICE(d0_2416 & 0xFF<32>, byte, 0) | 0x20<8>)
l00001E1C:
	branch d0 != 0x78<32> l00001EB8
l00001E26:
	branch d6_1093 - d3_2407 <u 0<32> l00001EB8
l00001E2C:
	word32 d0_2457
	word32 a0_2441 = a2_104 + 24<i32>
	Mem2444[a0_2441:word32] = Mem2405[a0_2441:word32] | 1<32>
	word32 a0_2445 = a2_104 + 20<i32>
	word32 v280_2446 = Mem2444[a0_2445:word32] - 1<32>
	Mem2447[a0_2445:word32] = v280_2446
	branch v280_2446 < 0<32> l00001E5E
l00001E5E:
	word32 a7_2451 = a7_1282 - 4<i32>
	Mem2452[a7_2451:word32] = a2_104
	word32 a5_5172
	d0_2457 = fn00002604(Mem2452[a7_2451:word32], out d1, out a1, out a5_5172)
	Mem2464[a7_2451 + 56<i32>:word32] = d0_2457
l00001E3E:
	a1 = a2_104 + 4<i32>
	word32 a0_2468 = Mem2447[a1:word32]
	word32 a7_2469 = a7_1282 - 4<i32>
	Mem2470[a7_2469:word32] = a2_104
	Mem2473[a1:word32] = a0_2468 + 1<i32>
	byte v282_2477 = Mem2473[a0_2468:byte]
	a2_104 = Mem2473[a7_2469:word32]
	Mem2483[a7_2469:word32] = d1
	Mem2488[a7_2469 + 56<i32>:word32] = (uint32) (uint8) v282_2477
	d0_2457 = SEQ(SLICE(d0, word24, 8), v282_2477)
	d1 = Mem2488[a7_2469:word32]
l00001E6C:
	Mem2496[a7_1282 + 74<i32>:word32] = Mem2494[a7_1282 + 52<i32>:word32]
	word32 d0_2513 = (uint32) (uint8) Mem2496[0x00002BED<p32> + (SEQ(SLICE(d0_2457, word24, 8), Mem2496[a7_1282 + 55<i32>:byte]) & 0xFF<32>):byte]
	d3_2328 = d3_2407 + 1<32>
	d4_2409 = d4_2411 + 1<32>
	d0 = d0_2513 & 0x44<32>
	branch (d0_2513 & 0x44<32>) == 0<32> l00001E9E
l00001E94:
	branch d6_1093 - (d3_2407 + 1<32>) <u 0<32> l00001E9E
l00001E9E:
	branch Mem2496[a7_1282 + 74<i32>:word32] == 0xFFFFFFFF<32> l00001EB4
l00001EA8:
	word32 a7_2528 = a7_1282 - 4<i32>
	Mem2531[a7_2528:word32] = a2_104
	Mem2534[a7_2528 - 4<i32>:word32] = Mem2531[a7_2528 + 78<i32>:word32]
	d0 = fn00001438(Mem2534[a7_2528 - 1<i32>:byte], Mem2534[a7_2528:word32])
l00001EB4:
l00001EB8:
	branch Mem2553[a7_1282 + 64<i32>:word32] == 0xFFFFFFFF<32> l00001ECE
l00001EC2:
	word32 a7_2558 = a7_1282 - 4<i32>
	Mem2561[a7_2558:word32] = a2_104
	Mem2564[a7_2558 - 4<i32>:word32] = Mem2561[a7_2558 + 68<i32>:word32]
	d0 = fn00001438(Mem2564[a7_2558 - 1<i32>:byte], Mem2564[a7_2558:word32])
l00001ECE:
	d3_2328 = d3_2407 - 1<32>
	d4_2409 = d4_2411 - 1<32>
l00001E98:
	d5_1007 = Mem2496[a7_1282 + 74<i32>:word32]
l00001ED2:
	branch SLICE(d7, byte, 0) == 0x78<8> l00001EDE
l00001ED8:
	branch SLICE(d7, byte, 0) != 0x58<8> l00001EE8
l00001EE8:
	branch SLICE(d7, byte, 0) != 0x6F<8> l00001EF8
l00001EF8:
	Mem2602[a7_1282 + 52<i32>:word32] = 0xA<32>
l00001EEE:
	Mem2604[a7_1282 + 52<i32>:word32] = 8<32>
l00001F00:
	Mem2609[a7_1282 + 64<i32>:word32] = Mem2607[a7_1282 + 52<i32>:word32]
l00001EDE:
	Mem2612[a7_1282 + 64<i32>:word32] = 0x10<32>
l00001F06:
	Mem2617[a7_1282 + 114<i32>:word32] = Mem2615[a7_1282 + 64<i32>:word32]
	word32 d0_2646 = (uint32) (uint8) Mem2617[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	Mem2675[a7_1282 + 132<i32>:word32] = d2_1050
	Mem2680[a7_1282 + 52<i32>:word32] = d4_2409
	Mem2685[a7_1282 + 74<i32>:byte] = SLICE(d7, byte, 0)
	d0 = d0_2646 & 0x44<32>
	branch (d0_2646 & 0x44<32>) == 0<32> l0000216E
l00001F38:
	branch Mem2685[a7_1282 + 114<i32>:word32] != 0xA<32> l00001F6E
l00001F42:
	word32 d0_2702 = (uint32) (uint8) Mem2685[0x00002BED<p32> + (SEQ(SLICE(d0_2646 & 0x44<32>, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	Mem2704[a7_1282 + 132<i32>:word32] = d2_1050
	Mem2705[a7_1282 + 52<i32>:word32] = d4_2409
	Mem2707[a7_1282 + 74<i32>:byte] = SLICE(d7, byte, 0)
	d0 = d0_2702 & 4<32>
	branch (d0_2702 & 4<32>) == 0<32> l0000216E
l00001F6E:
	branch Mem2713[a7_1282 + 114<i32>:word32] != 8<32> l00001F8E
l00001F78:
	Mem2718[a7_1282 + 132<i32>:word32] = d2_1050
	Mem2720[a7_1282 + 52<i32>:word32] = d4_2409
	Mem2723[a7_1282 + 74<i32>:byte] = SLICE(d7, byte, 0)
	branch d5_1007 > 0x37<32> l0000216E
l00001F8E:
	Mem2730[a7_1282 + 132<i32>:word32] = d2_1050
	Mem2732[a7_1282 + 52<i32>:word32] = d4_2409
	Mem2743[a7_1282 + 64<i32>:word32] = d6_1093
	Mem2746[a7_1282 + 74<i32>:byte] = SLICE(d7, byte, 0)
	branch d6_1093 - d3_2328 <u 0<32> l0000216E
l00001FA4:
	d7 = Mem2746[a7_1282 + 114<i32>:word32]
	word32 a4_2758 = Mem2746[a7_1282 + 64<i32>:word32]
l00001FAC:
	word32 a7_2763 = a7_1282 - 4<i32>
	Mem2765[a7_2763:word32] = d2_1050
	word32 v314_2769 = Mem2765[a7_2763:word32]
	Mem2773[a7_2763:word32] = d7 >> 31<i32>
	Mem2775[a7_2763 - 4<i32>:word32] = d7
	Mem2778[a7_2763 - 8<i32>:word32] = a1
	Mem2781[a7_2763 - 12<i32>:word32] = Mem2778[a7_2763 + 52<i32>:word32]
	Mem2784[a7_2763 - 16<i32>:word32] = Mem2781[a7_2763 + 48<i32>:word32]
	Mem2787[a7_2763 - 20<i32>:word32] = d7
	Mem2789[a7_2763 - 24<i32>:word32] = d7 >> 31<i32>
	word32 d1_2792
	Mem2802[a7_2763 + 68<i32>:word32] = fn0000248C(d4_2409, Mem2789[a7_2763 - 24<i32>:word32], Mem2789[a7_2763 - 20<i32>:word32], Mem2789[a7_2763 - 16<i32>:word32], Mem2789[a7_2763 - 12<i32>:word32], out d1_2792)
	Mem2803[a7_2763 + 72<i32>:word32] = d1_2792
	branch ((uint32) (uint8) Mem2803[0x00002BED<p32> + (SEQ(Mem2803[a7_2763 + 1<32>:word24], SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte] & 4<32>) == 0<32> l0000200C
l0000200C:
	d4_2409 = 0<i32>
l00002002:
	d4_2409 = d5_1007 - 0x30<32>
l0000200E:
	word32 d6_2879
	Mem2835[a7_1282 - 4<i32>:word32] = v314_2769
	Mem2842[a7_1282 - 4<i32>:word32] = Mem2835[a7_1282 - 4<i32>:word32]
	word32 d2_2844 = d4_2409 + Mem2842[a7_1282 + 68<i32>:word32]
	Mem2846[a7_1282 + 48<i32>:word32] = d2_2844
	Mem2851[a7_1282 - 8<i32>:word32] = d3_2328
	word32 d0_2837 = d4_2409 >> 31<i32>
	Mem2856[a7_1282 + 44<i32>:word32] = Mem2851[a7_1282 + 64<i32>:word32] + d0_2837 + (d2_2844 <u 0<32>)
	word32 v324_2857 = Mem2856[a7_1282 - 8<i32>:word32]
	word32 v325_2860 = Mem2856[a7_1282 - 4<i32>:word32]
	branch ((uint32) (uint8) Mem2856[0x00002BED<p32> + (SEQ(SLICE(d0_2837, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte] & 1<32>) == 0<32> l0000205E
l0000205E:
	d6_2879 = 0<i32>
l00002054:
	d6_2879 = d5_1007 - 0x37<32>
l00002060:
	word32 d2_2933
	Mem2890[a7_1282 - 4<i32>:word32] = v325_2860
	Mem2897[a7_1282 - 4<i32>:word32] = Mem2890[a7_1282 - 4<i32>:word32]
	word32 d2_2899 = d6_2879 + Mem2897[a7_1282 + 48<i32>:word32]
	Mem2901[a7_1282 + 68<i32>:word32] = d2_2899
	Mem2905[a7_1282 - 8<i32>:word32] = v324_2857
	word32 d0_2892 = d6_2879 >> 31<i32>
	Mem2910[a7_1282 + 64<i32>:word32] = Mem2905[a7_1282 + 44<i32>:word32] + d0_2892 + (d2_2899 <u 0<32>)
	word32 v331_2911 = Mem2910[a7_1282 - 8<i32>:word32]
	branch ((uint32) (uint8) Mem2910[0x00002BED<p32> + (SEQ(SLICE(d0_2892, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte] & 2<32>) == 0<32> l000020B0
l000020B0:
	d2_2933 = 0<i32>
l000020A6:
	d2_2933 = d5_1007 - 0x57<32>
l000020B2:
	word32 d0_2988
	Mem2943[a7_1282 - 4<i32>:word32] = d2_2933
	Mem2950[a7_1282 - 4<i32>:word32] = Mem2943[a7_1282 - 4<i32>:word32]
	word32 d2_2952 = d2_2933 + Mem2950[a7_1282 + 68<i32>:word32]
	Mem2954[a7_1282 + 48<i32>:word32] = d2_2952
	Mem2958[a7_1282 - 8<i32>:word32] = v331_2911
	Mem2962[a7_1282 + 44<i32>:word32] = Mem2958[a7_1282 + 64<i32>:word32] + (d2_2933 >> 31<i32>) + (d2_2952 <u 0<32>)
	word32 a0_2973 = a2_104 + 24<i32>
	word32 v338_2963 = Mem2962[a7_1282 - 8<i32>:word32]
	d2_1050 = Mem2962[a7_1282 - 4<i32>:word32]
	Mem2976[a0_2973:word32] = Mem2962[a0_2973:word32] | 1<i32>
	word32 a0_2977 = a2_104 + 20<i32>
	word32 v341_2978 = Mem2976[a0_2977:word32] - 1<32>
	Mem2979[a0_2977:word32] = v341_2978
	branch v341_2978 < 0<32> l00002104
l00002104:
	Mem2983[a7_1282 - 4<i32>:word32] = a2_104
	word32 d1_5173
	word32 a5_5174
	d0_2988 = fn00002604(Mem2983[a7_1282 - 4<i32>:word32], out d1_5173, out a1, out a5_5174)
	d1 = d0_2988
l000020EC:
	a1 = a2_104 + 4<i32>
	word32 a0_2999 = Mem2979[a1:word32]
	Mem3001[a7_1282 - 4<i32>:word32] = a2_104
	Mem3004[a1:word32] = a0_2999 + 1<i32>
	d0_2988 = (uint32) (uint8) Mem3004[a0_2999:byte]
	a2_104 = Mem3004[a7_1282 - 4<i32>:word32]
	d1 = (uint32) (uint8) SLICE(d0_2988, byte, 0)
l00002110:
	Mem3023[a7_1282 + 52<i32>:word32] = Mem3021[a7_1282 + 52<i32>:word32] + 1<32>
	word32 d0_3035 = (uint32) (uint8) Mem3023[0x00002BED<p32> + (SEQ(SLICE(d0_2988, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d5_1007 = d1
	d3_2328 = v338_2963 + 1<32>
	d0 = d0_3035 & 0x44<32>
	branch (d0_3035 & 0x44<32>) == 0<32> l0000216E
l00002134:
	branch d7 != 0xA<32> l00002158
l0000213C:
	word32 d0_3057 = (uint32) (uint8) Mem3023[0x00002BED<p32> + (SEQ(SLICE(d0_3035 & 0x44<32>, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_3057 & 4<32>
	branch (d0_3057 & 4<32>) == 0<32> l0000216E
l00002158:
	branch d7 != 8<32> l00002168
l00002160:
	branch d1 > 0x37<32> l0000216E
l00002168:
	branch a4_2758 - (v338_2963 + 1<32>) >=u 0<32> l00001FAC
l0000216E:
	byte v347_3089 = Mem3086[a7_1282 + 74<i32>:byte]
	d7 = SEQ(SLICE(d7, word24, 8), v347_3089)
	word32 d4_3094 = Mem3086[a7_1282 + 52<i32>:word32]
	d2_1050 = Mem3086[a7_1282 + 132<i32>:word32]
	branch Mem3086[a7_1282 + 110<i32>:word32] == 0<32> l000021A2
l00002180:
	branch d3_2328 != 2<32> l000021A2
l00002188:
	branch d5_1007 == 0xFFFFFFFF<32> l0000219A
l00002190:
	word32 a7_3110 = a7_1282 - 4<i32>
	Mem3122[a7_3110:word32] = a2_104
	Mem3124[a7_3110 - 4<i32>:word32] = d5_1007
	d0 = fn00001438(Mem3124[a7_3110 - 1<i32>:byte], Mem3124[a7_3110:word32])
l0000219A:
	d3_2328 = d3_2328 - 1<32>
	d4_3094 = d4_3094 - 1<32>
	d5_1007 = Mem3140[a7_1282 + 110<i32>:word32]
l000021A2:
	branch d5_1007 == 0xFFFFFFFF<32> l000021B4
l000021AA:
	word32 a7_3148 = a7_1282 - 4<i32>
	Mem3151[a7_3148:word32] = a2_104
	Mem3153[a7_3148 - 4<i32>:word32] = d5_1007
	d0 = fn00001438(Mem3153[a7_3148 - 1<i32>:byte], Mem3153[a7_3148:word32])
l000021B4:
	d3_124 = d3_2328 - 1<32>
	d4_126 = d4_3094 - 1<32>
	branch Mem3171[a7_1282 + 73<i32>:byte] != 0<8> l00002362
l000021C0:
	branch d3_124 == 0<32> l00002362
l000021C6:
	branch v347_3089 != 0x75<8> l00002288
l00002288:
	branch Mem3171[a7_1282 + 110<i32>:word32] != 0x2D<32> l000022A4
l000022A4:
	Mem3191[a7_1282 + 56<i32>:word32] = Mem3171[a7_1282 + 48<i32>:word32]
	Mem3193[a7_1282 + 52<i32>:word32] = Mem3191[a7_1282 + 44<i32>:word32]
l00002292:
	word32 v385_3195 = a7_1282 + 44<i32>
	d1 = -Mem3171[v385_3195 + 4<i32>:word32]
	d0 = -Mem3171[v385_3195:word32] - (d1 <u 0<32>)
	a7_1282 = Mem3171[a7_1282 + 0x38<32>:word32]
l000022B0:
	word32 a7_3211 = a7_1282 - 4<i32>
	Mem3221[a7_3211:word32] = d0
	Mem3230[a7_3211 + 48<i32>:byte] = Mem3221[a7_3211 + 76<i32>:byte] - 1<8>
	a7_1282 = a7_3211 + 4<i32>
	branch Mem3230[a7_3211 + 48<i32>:byte] == 0<8> l000022DA
l000022DA:
	word32 d0_3244 = d2_1050 + 3<32> >>u 2<32>
	d2_1050 = (d0_3244 << 2<32>) + 4<32>
	word32 a0_3250 = Mem3230[d2_1050 + -4<i32>:word32]
	Mem3252[a0_3250 + 4<i32>:word32] = Mem3230[a7_3211 + 60<i32>:word32]
	Mem3254[a0_3250:word32] = Mem3252[a7_3211 + 56<i32>:word32]
	d0 = d0_3244 << 2<32>
l000022C4:
	byte v394_3256 = Mem3230[a7_3211 + 48<i32>:byte] - 1<8>
	Mem3257[a7_3211 + 48<i32>:byte] = v394_3256
	branch v394_3256 == 0<8> l0000232C
l0000232C:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3257[a7_3211 + 60<i32>:word32]
	Mem3271[Mem3257[d2_1050 + -4<i32>:word32]:byte] = SLICE(d0, byte, 0)
l000022CA:
	byte v395_3273 = Mem3257[a7_3211 + 48<i32>:byte] - 0x66<8>
	Mem3274[a7_3211 + 48<i32>:byte] = v395_3273
	branch v395_3273 == 0<8> l00002312
l00002312:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3274[a7_3211 + 60<i32>:word32]
	Mem3288[Mem3274[d2_1050 + -4<i32>:word32]:word16] = SLICE(d0, word16, 0)
l000022D2:
	byte v396_3290 = Mem3274[a7_3211 + 48<i32>:byte] - 4<8>
	Mem3291[a7_3211 + 48<i32>:byte] = v396_3290
	branch v396_3290 == 0<8> l000022F8
l000022F8:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3291[a7_3211 + 60<i32>:word32]
	Mem3304[Mem3291[d2_1050 + -4<i32>:word32]:word32] = d0
l000022D8:
l00002346:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3291[a7_3211 + 60<i32>:word32]
	Mem3316[Mem3291[d2_1050 + -4<i32>:word32]:word32] = d0
l000021CE:
	word32 a7_3318 = a7_1282 - 4<i32>
	Mem3319[a7_3318:word32] = d0
	Mem3328[a7_3318 + 56<i32>:byte] = Mem3319[a7_3318 + 76<i32>:byte] - 1<8>
	a7_1282 = a7_3318 + 4<i32>
	branch Mem3328[a7_3318 + 56<i32>:byte] == 0<8> l000021F8
l000021F8:
	word32 d0_3338 = d2_1050 + 3<32> >>u 2<32>
	d2_1050 = (d0_3338 << 2<32>) + 4<32>
	word32 a0_3344 = Mem3328[d2_1050 + -4<i32>:word32]
	Mem3346[a0_3344 + 4<i32>:word32] = Mem3328[a7_3318 + 52<i32>:word32]
	Mem3348[a0_3344:word32] = Mem3346[a7_3318 + 48<i32>:word32]
	d0 = d0_3338 << 2<32>
l000021E2:
	byte v376_3350 = Mem3328[a7_3318 + 56<i32>:byte] - 1<8>
	Mem3351[a7_3318 + 56<i32>:byte] = v376_3350
	branch v376_3350 == 0<8> l00002250
l00002250:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3351[a7_3318 + 52<i32>:word32]
	Mem3365[Mem3351[d2_1050 + -4<i32>:word32]:byte] = SLICE(d0, byte, 0)
l000021E8:
	byte v377_3367 = Mem3351[a7_3318 + 56<i32>:byte] - 0x66<8>
	Mem3368[a7_3318 + 56<i32>:byte] = v377_3367
	branch v377_3367 == 0<8> l00002234
l00002234:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3368[a7_3318 + 52<i32>:word32]
	Mem3382[Mem3368[d2_1050 + -4<i32>:word32]:word16] = SLICE(d0, word16, 0)
l000021F0:
	byte v378_3384 = Mem3368[a7_3318 + 56<i32>:byte] - 4<8>
	Mem3385[a7_3318 + 56<i32>:byte] = v378_3384
	branch v378_3384 == 0<8> l00002218
l00002218:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3385[a7_3318 + 52<i32>:word32]
	Mem3398[Mem3385[d2_1050 + -4<i32>:word32]:word32] = d0
l000021F6:
l0000226C:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3385[a7_3318 + 52<i32>:word32]
	Mem3410[Mem3385[d2_1050 + -4<i32>:word32]:word32] = d0
l0000235E:
	Mem3415[a7_1282 + 60<i32>:word32] = Mem3413[a7_1282 + 60<i32>:word32] + 1<32>
l00002362:
	a4_261 = a3_1884
l00002460:
	branch d3_124 == 0<32> l0000246A
l00002464:
	branch Mem3498[a4_261:byte] != 0<8> l0000148A
l0000246A:
	branch d5_1007 != 0xFFFFFFFF<32> l0000247C
l00002472:
	branch false l0000247C
l0000247C:
l00002478:
l00002480:
	return
fn00001468_exit:


word32 fn0000248C(word32 d4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  d4:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn0000248C_entry:
l0000248C:
	word32 d0_23 = __swap(dwArg08)
	word32 d1_25 = __swap(dwArg10)
	word32 d4_29 = SEQ(SLICE(d4, word16, 16), SLICE(dwArg08, word16, 0)) *u SLICE(dwArg10, word16, 0)
	word32 d1_32 = d1_25 *u SLICE(d0_23, word16, 0)
	word32 d2_39 = dwArg08 *u SLICE(d1_25, word16, 0) + __swap(SEQ(SLICE(d4_29, word16, 16), SLICE(d4_29, word16, 0) ^ SLICE(d4_29, word16, 0))) + dwArg10 *u SLICE(d0_23, word16, 0)
	branch d2_39 >=u 0<32> l000024C0
l000024BA:
	d1_32 = d1_32 + 0x10000<32>
l000024C0:
	word32 d2_45 = __swap(d2_39)
	word32 d3_65 = __swap(dwArg0C) *u SLICE(dwArg08, word16, 0)
	word32 d3_71 = __swap(SEQ(SLICE(d3_65, word16, 16), SLICE(d3_65 + __swap(dwArg08) *u SLICE(dwArg0C, word16, 0), word16, 0)))
	word32 d3_83 = __swap(dwArg04) *u SLICE(dwArg10, word16, 0)
	word32 d3_89 = __swap(SEQ(SLICE(d3_83, word16, 16), SLICE(d3_83 + __swap(dwArg10) *u SLICE(dwArg04, word16, 0), word16, 0)))
	d1Out = SEQ(SLICE(d2_45, word16, 16), SLICE(d4_29, word16, 0))
	return (uint32) (uint16) SLICE(d2_45, word16, 0) + d1_32 + (dwArg0C *u SLICE(dwArg08, word16, 0) + SEQ(SLICE(d3_71, word16, 16), SLICE(d3_71, word16, 0) ^ SLICE(d3_71, word16, 0))) + (dwArg04 *u SLICE(dwArg10, word16, 0) + SEQ(SLICE(d3_89, word16, 16), SLICE(d3_89, word16, 0) ^ SLICE(d3_89, word16, 0)))
fn0000248C_exit:


word32 fn0000254C(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a7
fn0000254C_entry:
l0000254C:
	branch dwArg04 > 0<32> l0000256C
l0000256C:
	branch dwArg08 > 0<32> l0000256E_thunk_fn0000257E
l0000256E_thunk_fn0000257E:
	word32 d1_88
	return fn0000257E(dwArg04, dwArg08, d2, out d1_88)
l00002570:
	word32 d1_89
	return -fn0000257E(dwArg04, -dwArg08, d2, out d1_89)
l00002556:
	word32 d0_36 = -dwArg04
	branch dwArg08 > 0<32> l00002564
l00002564:
	word32 d1_43
	return -fn0000257E(d0_36, dwArg08, d2, out d1_43)
l0000255C:
	word32 d1_55
	return fn0000257E(d0_36, -dwArg08, d2, out d1_55)
fn0000254C_exit:


word32 fn0000257E(word32 d0, word32 d1, word32 d2, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000254C
//      fn00003B28
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn0000257E_entry:
l0000257E:
	word32 d1_20 = __swap(d1)
	word16 v9_8 = SLICE(d1_20, word16, 0)
	word16 v10_9 = SLICE(d2, word16, 16)
	word32 d2_10 = SEQ(v10_9, v9_8)
	branch v9_8 != 0<16> l000025A4
l000025A4:
	word32 d3_16 = 16<i32>
	branch SLICE(d1_20, word16, 0) >=u 0x80<16> l000025B2
l000025AE:
	d1_20 = __rol(d1_20, 8<32>)
	d3_16 = 8<32>
l000025B2:
	branch SLICE(d1_20, word16, 0) >=u 0x800<16> l000025BC
l000025B8:
	d1_20 = __rol(d1_20, 4<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 4<16>)
l000025BC:
	branch SLICE(d1_20, word16, 0) >=u 0x2000<16> l000025C6
l000025C2:
	d1_20 = __rol(d1_20, 2<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 2<16>)
l000025C6:
	branch SLICE(d1_20, word16, 0) < 0<16> l000025CE
l000025CA:
	d1_20 = __rol(d1_20, 1<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 1<16>)
l000025CE:
	word32 d0_69 = d0 >>u d3_16
	word32 d2_73 = SEQ(SLICE(__swap(SEQ(v10_9, SLICE(d0, word16, 0))), word16, 16), 0<16>) >>u d3_16
	word16 v51_80 = SLICE(__swap(d3_16), word16, 16)
	uint16 v49_77 = (uint16) (d0_69 /u SLICE(d1_20, uint16, 0))
	word32 d1_88 = __swap(d1_20)
	word32 d3_100 = SEQ(v51_80, v49_77)
	word32 d0_106 = SEQ((uint16) (d0_69 % SLICE(d1_20, uint16, 0)), SLICE(d2_73, word16, 0)) - SEQ(SLICE(d2_73, word16, 16), v49_77) *u SLICE(d1_88, word16, 0)
	branch d0_106 >=u 0<32> l000025F0
l000025EA:
	d3_100 = SEQ(v51_80, v49_77 - 1<16>)
	d0_106 = d0_106 + d1_88
l000025EE:
	branch d0_106 >=u 0<32> l000025EE
l000025F0:
	d1Out = __swap(__rol(d0_106, __swap(d3_100)))
	return (uint32) (uint16) SLICE(d3_100, word16, 0)
l00002586:
	word32 d0_132 = __swap(d0)
	word32 d1_133 = __swap(d1_20)
	word16 v13_135 = SLICE(d0_132, word16, 0)
	word32 d2_137 = SEQ(SLICE(__swap(d2_10), word16, 16), v13_135)
	branch v13_135 == 0<16> l00002594
l00002590:
	uint16 v16_141 = (uint16) (d2_137 /u SLICE(d1_133, uint16, 0))
	d2_137 = SEQ((uint16) (d2_137 % SLICE(d1_133, uint16, 0)), v16_141)
	d0_132 = SEQ(SLICE(d0_132, word16, 16), v16_141)
l00002594:
	word32 d0_148 = __swap(d0_132)
	word32 d2_152 = SEQ(SLICE(d2_137, word16, 16), SLICE(d0_148, word16, 0))
	uint16 v32_155 = (uint16) (d2_152 /u SLICE(d1_133, uint16, 0))
	d1Out = SEQ(SLICE(d1_133, word16, 16), SLICE(__swap(SEQ((uint16) (d2_152 % SLICE(d1_133, uint16, 0)), v32_155)), word16, 0))
	return SEQ(SLICE(d0_148, word16, 16), v32_155)
fn0000257E_exit:


word32 fn00002604(word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d0 d1
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5
fn00002604_entry:
l00002604:
	word32 d0_155
	word32 a5_273
	word32 a1_113
	word32 d1_115 = fn00002BBC(out a1_113, out a5_273)
	branch dwArg04 != 0<32> l0000261C
l0000261C:
	branch (Mem26[dwArg04 + 24<i32>:word32] & 42<i32>) == 32<i32> l0000262E
l0000262E:
	Mem49[dwArg04 + 24<i32>:word32] = Mem26[dwArg04 + 24<i32>:word32] | 1<i32>
	word32 d0_122 = Mem49[dwArg04 + 24<i32>:word32] & 0x200<32>
	branch d0_122 == 0<32> l00002646
l00002640:
	d0_122 = fn00002AEC(out a1_113, out a5_273)
l00002646:
	branch Mem49[dwArg04 + 28<i32>:word32] != 0<32> l00002664
l0000264C:
	d0_122 = Mem49[dwArg04 + 24<i32>:word32] & 4<i32>
	branch d0_122 == 0<32> l0000265C
l0000265C:
	Mem78[dwArg04 + 28<i32>:word32] = 0x400<32>
l00002654:
	Mem81[dwArg04 + 28<i32>:word32] = 1<i32>
	d0_122 = 1<i32>
l00002664:
	branch Mem84[dwArg04 + 8<i32>:word32] != 0<32> l000026A0
l0000266A:
	word32 d4_100
	branch (Mem84[dwArg04 + 24<i32>:word32] & 0x80<32>) == 0<32> l0000267E
l0000267E:
	d4_100 = 1<i32>
l0000267A:
	d4_100 = 2<i32>
l00002680:
	word32 a0_312
	word32 d0_114 = fn00002718(d4_100 + Mem84[dwArg04 + 28<i32>:word32], out d1_115, out a0_312, out a1_113)
	d0_122 = d0_114
	branch d0_114 != 0<32> l00002698
l00002698:
	Mem127[dwArg04 + 8<i32>:word32] = d0_114 + 1<i32>
	a1_113 = d0_114 + 1<i32>
l000026A0:
	Mem133[dwArg04 + 4<i32>:word32] = Mem131[dwArg04 + 8<i32>:word32]
	d1_115 = Mem133[dwArg04:word32]
	execPrivate2()
	Mem142[dwArg04 + 20<i32>:word32] = d0_122
	word32 v23_143 = Mem142[dwArg04 + 20<i32>:word32] - 1<32>
	Mem144[dwArg04 + 20<i32>:word32] = v23_143
	branch v23_143 >= 0<32> l000026E6
l000026E6:
	word32 a0_148 = Mem144[dwArg04 + 4<i32>:word32]
	Mem151[dwArg04 + 4<i32>:word32] = a0_148 + 1<i32>
	a1_113 = dwArg04 + 4<i32>
	d0_155 = SEQ(SLICE(d0_122, word24, 8), Mem151[a0_148:byte]) & 0xFF<32>
l000026C4:
	branch Mem144[dwArg04 + 20<i32>:word32] != -1<i32> l000026D6
l000026D6:
	Mem166[dwArg04 + 24<i32>:word32] = Mem144[dwArg04 + 24<i32>:word32] | 16<i32>
l000026CC:
	Mem173[dwArg04 + 24<i32>:word32] = Mem144[dwArg04 + 24<i32>:word32] | 8<i32>
l000026DE:
	Mem178[dwArg04 + 20<i32>:word32] = 0<32>
	d0_155 = -1<i32>
l00002694:
	d0_155 = -1<i32>
l00002628:
	d0_155 = -1<i32>
l00002616:
	d0_155 = -1<i32>
l000026FA:
	d1Out = d1_115
	a1Out = a1_113
	a5Out = a5_273
	return d0_155
fn00002604_exit:


word32 fn00002718(word32 dwArg04, ptr32 & d1Out, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002604
//      fn00003910
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 a1 d0 d1
// Trashed: CVZN a0 a1 d0 d1
// Preserved: X a7 d2
fn00002718_entry:
l00002718:
	word32 d0_100
	branch dwArg04 != 0<32> l00002726
l00002726:
	branch Mem5[0x00003DC8<p32>:word32] != 0<32> l0000274A
l0000272E:
	word32 a0_13 = Mem5[0x00003DC4<p32>:word32]
	Mem19[0<32>:word32] = 0<32>
	Mem33[0x00003DC8<p32>:word32] = fn00002A0C(dwLoc10, a0_13, a0_13, out d1, out a0, out a1)
l0000274A:
	branch Mem36[0x00003DC8<p32>:word32] != 0<32> l00002756
l00002756:
	word32 d0_53 = fn000028E8(Mem47[0x00003DC8<p32>:word32], dwArg04 + 4<i32>, out d1, out a0)
	a1 = d0_53
	branch d0_53 != 0<32> l00002774
l00002774:
	Mem66[d0_53:word32] = dwArg04
	a0 = d0_53 + 4<i32>
	d0_100 = d0_53 + 4<i32>
l00002770:
	d0_100 = 0<i32>
l00002752:
	d0_100 = 0<i32>
l00002722:
	d0_100 = 0<i32>
l0000277C:
	d1Out = d1
	a0Out = a0
	a1Out = a1
	return d0_100
fn00002718_exit:


void fn00002784(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00002784_entry:
l00002784:
	branch dwArg04 == 0<32> l000027AE
l0000278E:
	branch Mem0[0x00003DC8<p32>:word32] == 0<32> l000027AE
l00002796:
	fn0000284C(Mem21[0x00003DC8<p32>:word32], dwArg04 - 4<i32>, Mem0[dwArg04 - 4<i32>:word32] + 4<i32>)
l000027AE:
	return
fn00002784_exit:


void fn0000284C(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002784
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
fn0000284C_entry:
l0000284C:
	branch Mem20[Mem20[0x00003D94<p32>:word32] + 20<i32>:word16] <u 0x27<16> l0000287C
l0000287C:
	branch dwArg04 == 0<32> l000028E0
l00002880:
	branch dwArg08 == 0<32> l000028E0
l00002884:
	word32 a3_36 = dwArg08 + -12<i32>
	branch dwArg0C - Mem20[dwArg04 + 20<i32>:word32] >=u 0<32> l000028C6
l00002890:
	word32 a2_40 = dwArg04
l00002892:
	a2_40 = Mem20[a2_40:word32]
	branch Mem20[a2_40:word32] == 0<32> l000028E0
l00002898:
	branch Mem20[a2_40 + 8<i32>:byte] == 0<8> l00002892
l0000289E:
	branch dwArg08 - Mem20[a2_40 + 20<i32>:word32] <u 0<32> l00002892
l000028A4:
	branch dwArg08 - Mem20[a2_40 + 24<i32>:word32] >=u 0<32> l00002892
l000028AA:
	Deallocate(a2_40, dwArg08, dwArg0C)
	branch Mem20[a2_40 + 28<i32>:word32] - Mem20[dwArg04 + 16<i32>:word32] != 0<32> l000028E0
l000028C4:
	a3_36 = a2_40
l000028C6:
	Remove(a3_36)
	word32 a3_74 = a3_36 - 4<i32>
	FreeMem(a3_74, Mem20[a3_74:word32])
l0000286A:
	FreePooled(dwArg08, dwArg04)
l000028E0:
	return
fn0000284C_exit:


word32 fn000028E8(word32 dwArg04, word32 dwArg08, ptr32 & d1Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002718
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
fn000028E8_entry:
l000028E8:
	word32 d0_152
	word32 a0_109 = Mem26[0x00003D94<p32>:word32]
	branch Mem26[a0_109 + 20<i32>:word16] <u 0x27<16> l00002914
l00002914:
	word32 a3_114 = 0<32>
	branch dwArg04 == 0<32> l00002A04
l0000291C:
	branch dwArg08 == 0<32> l00002A04
l00002922:
	branch dwArg08 - Mem26[dwArg04 + 20<i32>:word32] >=u 0<32> l000029D6
l000029D6:
	d1 = Mem26[dwArg04 + 12<i32>:word32]
	word32 d0_50 = AllocMem(dwArg08 + 16<i32>, d1)
	a3_114 = d0_50
	branch d0_50 == 0<32> l00002A04
l000029F0:
	Mem55[d0_50:word32] = dwArg08 + 16<i32>
	AddTail(dwArg04, d0_50 + 4<i32>)
	Mem61[d0_50 + 12<i32>:word32] = 0<32>
	a0_109 = dwArg04
	a3_114 = d0_50 + 16<i32>
l0000292A:
	word32 a5_156 = Mem26[dwArg04:word32]
l0000292C:
	branch Mem26[a5_156:word32] == 0<32> l0000294E
l0000294E:
	word32 d3_76 = Mem26[dwArg04 + 16<i32>:word32] + 40<i32>
	d1 = Mem26[dwArg04 + 12<i32>:word32]
	word32 d0_81 = AllocMem(d3_76, d1)
	a3_114 = d0_81
	branch d0_81 == 0<32> l00002A04
l0000296C:
	Mem86[d0_81:word32] = d3_76
	Mem88[d0_81 + 12<i32>:byte] = 0xA<8>
	Mem91[d0_81 + 20<i32>:word32] = d0_81 + 40<i32>
	Mem92[d0_81 + 24<i32>:word32] = d0_81 + 40<i32>
	Mem94[Mem92[d0_81 + 20<i32>:word32]:word32] = 0<32>
	word32 a2_95 = Mem94[d0_81 + 20<i32>:word32]
	Mem98[a2_95 + 4<i32>:word32] = Mem94[dwArg04 + 16<i32>:word32]
	Mem101[d0_81 + 32<i32>:word32] = Mem98[a2_95 + 4<i32>:word32]
	Mem104[d0_81 + 28<i32>:word32] = Mem101[d0_81 + 32<i32>:word32] + Mem101[d0_81 + 20<i32>:word32]
	AddHead(dwArg04, d0_81 + 4<i32>)
	a0_109 = d0_81 + 4<i32>
	a3_114 = Allocate(d0_81 + 4<i32>, dwArg08)
l00002930:
	branch Mem26[a5_156 + 8<i32>:byte] == 0<8> l0000294A
l00002936:
	word32 d0_122 = Allocate(a5_156, dwArg08)
	a0_109 = a5_156
	a3_114 = d0_122
	branch d0_122 != 0<32> l000029BA
l000029BA:
	branch (Mem129[dwArg04 + 12<i32>:word32] & 0x10000<32>) == 0<32> l00002A04
l000029C6:
	word32 a2_136 = a3_114
	word32 d2_139 = dwArg08 + 7<32> >>u 3<32>
l000029CC:
	Mem142[a2_136:word32] = 0<32>
	word32 a2_143 = a2_136 + 4<i32>
	Mem144[a2_143:word32] = 0<32>
	a2_136 = a2_143 + 4<i32>
	d2_139 = d2_139 - 1<32>
	branch d2_139 != 0<32> l000029CC
l000029D4:
l00002A04:
	d0_152 = a3_114
l0000294A:
	a5_156 = Mem26[a5_156:word32]
l00002902:
	a0_109 = dwArg04
	d0_152 = AllocPooled(dwArg08, dwArg04)
l00002A06:
	d1Out = d1
	a0Out = a0_109
	return d0_152
fn000028E8_exit:


word32 fn00002A0C(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & d1Out, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002718
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a0 a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
fn00002A0C_entry:
l00002A0C:
	word32 d0_47
	word32 a0_17 = Mem14[0x00003D94<p32>:word32]
	branch Mem14[a0_17 + 20<i32>:word16] <u 0x27<16> l00002A3A
l00002A3A:
	a1 = 0<32>
	branch dwArg08 - dwArg0C <u 0<32> l00002A74
l00002A40:
	word32 d0_30 = AllocMem(24<i32>, 0<i32>)
	d1 = 0<i32>
	a1 = d0_30
	branch d0_30 == 0<32> l00002A74
l00002A56:
	Mem36[d0_30:word32] = d0_30 + 4<i32>
	Mem37[d0_30 + 4<i32>:word32] = 0<32>
	Mem38[d0_30 + 8<i32>:word32] = d0_30
	Mem40[d0_30 + 12<i32>:word32] = dwArg04
	Mem43[d0_30 + 16<i32>:word32] = dwArg08 + 7<32> & -8<i32>
	Mem44[d0_30 + 20<i32>:word32] = dwArg0C
	a0_17 = d0_30 + 4<i32>
l00002A74:
	d0_47 = a1
l00002A26:
	d1 = dwArg08
	d0_47 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
l00002A76:
	d1Out = d1
	a0Out = a0_17
	a1Out = a1
	return d0_47
fn00002A0C_exit:


void fn00002A7C(word32 d0, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
fn00002A7C_entry:
l00002A7C:
	branch Mem11[Mem11[0x00003D94<p32>:word32] + 20<i32>:word16] <u 0x27<16> l00002AA0
l00002AA0:
	branch dwArg04 == 0<32> l00002AE4
l00002AA4:
	RemHead(dwArg04)
	word32 a2_24 = d0
	branch d0 == 0<32> l00002AD6
l00002AB6:
	word32 a2_29 = a2_24 - 4<i32>
	word32 d0_31 = Mem11[a2_29:word32]
	FreeMem(a2_29, d0_31)
	RemHead(dwArg04)
	a2_24 = d0_31
	branch d0_31 != 0<32> l00002AB6
l00002AD6:
	FreeMem(dwArg04, 24<i32>)
l00002A92:
	DeletePrivatePool(dwArg04)
l00002AE4:
	return
fn00002A7C_exit:


word32 fn00002AEC(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002604
// MayUse: 
// LiveOut: a1 a5 d0
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002AEC_entry:
l00002AEC:
	word32 a2_11 = Mem5[0x00003EEC<p32>:word32]
	word32 d0_41 = a2_11
	branch a2_11 == 0<32> l00002B24
l00002AFA:
	branch (Mem12[a2_11 + 24<i32>:word32] & 0x202<32>) != 0x202<32> l00002B1A
l00002B0C:
	branch Mem12[a2_11:word32] == 0<32> l00002B1A
l00002B10:
	word32 a0_90
	fn00002B28(a2_11, out a0_90, out a1, out a5)
l00002B1A:
	a2_11 = Mem39[a2_11 + 12<i32>:word32]
	d0_41 = a2_11
	branch a2_11 != 0<32> l00002AFA
l00002B24:
	a1Out = a1
	a5Out = a5
	return d0_41
fn00002AEC_exit:


word32 fn00002B28(word32 dwArg04, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002AEC
//      fn00002ED4
//      fn00003910
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 a1 a5 d0
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
fn00002B28_entry:
l00002B28:
	word32 d0_151
	word32 a1_21
	word32 a5_23
	fn00002BBC(out a1_21, out a5_23)
	branch dwArg04 != 0<32> l00002B3E
l00002B3E:
	branch Mem17[dwArg04 + 28<i32>:word32] != 0<32> l00002B5C
l00002B44:
	branch (Mem17[dwArg04 + 24<i32>:word32] & 4<i32>) == 0<32> l00002B54
l00002B54:
	Mem41[dwArg04 + 28<i32>:word32] = 0x400<32>
l00002B4C:
	Mem44[dwArg04 + 28<i32>:word32] = 1<i32>
l00002B5C:
	branch Mem47[dwArg04 + 8<i32>:word32] != 0<32> l00002B66
l00002B66:
	word32 d0_53 = Mem47[dwArg04 + 24<i32>:word32] & 2<i32>
	branch d0_53 == 0<32> l00002BAC
l00002B6E:
	branch Mem47[dwArg04:word32] == 0<32> l00002B9C
l00002B9C:
	d0_151 = 0<i32>
l00002B72:
	word32 d4_66 = Mem47[dwArg04 + 4<i32>:word32] - Mem47[dwArg04 + 8<i32>:word32]
	execPrivate3()
	branch d4_66 - d0_53 == 0<32> l00002BA0
l00002BA0:
	Mem76[dwArg04 + 4<i32>:word32] = Mem47[dwArg04 + 8<i32>:word32]
	Mem78[dwArg04 + 20<i32>:word32] = Mem76[dwArg04 + 28<i32>:word32]
l00002BAC:
	Mem85[dwArg04 + 24<i32>:word32] = Mem83[dwArg04 + 24<i32>:word32] & -4<i32>
	a0 = dwArg04 + 24<i32>
	d0_151 = 0<i32>
l00002B90:
	Mem91[dwArg04 + 24<i32>:word32] = Mem47[dwArg04 + 24<i32>:word32] | 16<i32>
	a0 = dwArg04 + 24<i32>
	d0_151 = -1<i32>
l00002B62:
	d0_151 = 0<i32>
l00002B3A:
	d0_151 = -1<i32>
l00002BB6:
	a0Out = a0
	a1Out = a1_21
	a5Out = a5_23
	return d0_151
fn00002B28_exit:


word32 fn00002BBC(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002604
//      fn00002B28
//      fn00003910
// MayUse: 
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a4 a5 d0 d1
// Preserved: a6 a7
fn00002BBC_entry:
l00002BBC:
	SetSignal(0<i32>, 0x1000<32>)
	word32 d1_21 = 0x1000<32>
	branch 0<32> == 0<32> l00002BE6
l00002BDA:
	d1_21 = fn0000131C(0x00000014<p32>, out a1, out a5)
l00002BE6:
	a1Out = a1
	a5Out = a5
	return d1_21
fn00002BBC_exit:


void fn00002ED4(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002ED4_entry:
l00002ED4:
	branch dwArg04 == 0<32> l00002EEC
l00002EEC:
	word32 a2_10 = Mem5[0x00003EEC<p32>:word32]
	branch a2_10 == 0<32> l00002F12
l00002EF6:
	branch (Mem16[a2_10 + 24<i32>:word32] & 2<i32>) == 0<32> l00002F08
l00002EFE:
	word32 a0_101
	word32 a1_102
	word32 a5_103
	fn00002B28(a2_10, out a0_101, out a1_102, out a5_103)
l00002F08:
	a2_10 = Mem40[a2_10 + 12<i32>:word32]
	branch a2_10 != 0<32> l00002EF6
l00002EE0:
	word32 a0_48
	word32 a1_49
	word32 a5_51
	fn00002B28(dwArg04, out a0_48, out a1_49, out a5_51)
l00002F12:
	return
fn00002ED4_exit:


word32 fn00002F18(word32 d0, word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut: a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00002F18_entry:
l00002F18:
	word32 a1_16
	word32 d1_17
	word32 d0_14 = fn00002F34(d0, Mem8[0x00003EF8<p32>:word32], dwArg04, fp + 8<i32>, out d1_17, out a1_16)
	d1Out = d1_17
	a1Out = a1_16
	return d0_14
fn00002F18_exit:


word32 fn00002F34(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & d1Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F18
// MayUse:  d0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
fn00002F34_entry:
l00002F34:
	word32 d0_1870
	word32 a7_1886 = fp + -112<i32>
	word32 d3_1418 = dwArg0C
	word32 a5_1509 = dwArg04
	word32 a4_1843 = dwArg08
	word32 d6_1416 = 0<i32>
	branch Mem36[dwArg08:byte] == 0<8> l0000387A
l00002F50:
	branch Mem46[a4_1843:byte] != 0x25<8> l00003854
l00003854:
	word32 a7_51 = a7_1886 - 4<i32>
	Mem53[a7_51:word32] = a5_1509
	Mem62[a7_51 - 4<i32>:word32] = (int32) (int16) Mem53[a4_1843:byte]
	a4_1843 = a4_1843 + 1<i32>
	word32 a0_64
	d0 = fn000038B4(Mem62[a7_51 - 4<i32>:word32], Mem62[a7_51:word32], out d1, out a0_64, out a1, out a5_1509)
	a7_1886 = a7_51 + 4<i32>
	branch d0 != 0xFFFFFFFF<32> l00003872
l00003872:
	d6_1416 = d6_1416 + 1<32>
l0000386E:
	d0_1870 = d6_1416
l00002F58:
	Mem83[a7_1886 + 64<i32>:word32] = 0<32>
	Mem85[a7_1886 + 72<i32>:word32] = 0<32>
	Mem89[a7_1886 + 102<i32>:word32] = 0<32>
	word32 d5_248 = -1<i32>
	word32 d4_367 = 105<i32>
	word32 a3_1222 = a7_1886 + 76<i32>
	word32 d7_1002 = 0<i32>
	word32 a2_131 = a4_1843 + 1<i32>
	word32 d2_126 = Mem89[a7_1886 + 72<i32>:word32]
l00002F76:
	word32 d1_100 = 0<i32>
l00002F78:
	word32 a7_97 = a7_1886 - 4<i32>
	Mem99[a7_97:word32] = d0
	d0 = Mem99[a7_97:word32]
	branch Mem99[0x0000388C<p32> + d1_100:byte] - Mem99[a2_131:byte] != 0<8> l00002F9C
l00002F9C:
	d1_100 = d1_100 + 1<32>
	branch d1_100 <u 5<32> l00002F78
l00002F8A:
	Mem117[a7_97:word32] = d1_100
	word32 d1_119 = 1<i32> << d1_100
	d0 = d1_119
	d1_100 = Mem117[a7_97:word32]
	d2_126 = d2_126 | d1_119
	a2_131 = a2_131 + 1<i32>
l00002FA6:
	branch d1_100 <u 5<32> l00002F76
l00002FAE:
	word32 a0_1384
	word32 d0_154
	Mem138[a7_1886 + 72<i32>:word32] = d2_126
	branch Mem138[a2_131:byte] != 0x2A<8> l00002FEC
l00002FEC:
	a0_1384 = 0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), Mem138[a2_131:byte]) & 0xFF<32>)
	word32 d0_153 = (uint32) (uint8) Mem138[a0_1384:byte]
	d0_154 = d0_153 & 4<32>
	branch (d0_153 & 4<32>) == 0<32> l00003058
l00003008:
	d2_126 = Mem138[a7_1886 + 64<i32>:word32]
l0000300C:
	Mem165[a7_1886 - 4<i32>:word32] = d3_1418
	word32 d1_171 = __swap(10<i32>) *u SLICE(d2_126, word16, 0)
	word32 d0_180 = SLICE(d2_126, word16, 0) *u 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_171, word16, 16), SLICE(d1_171 + __swap(d2_126) *u 0xA<16>, word16, 0))), word16, 16), 0<16>)
	a2_131 = a2_131 + 1<i32>
	a0_1384 = 0x00002BED<p32> + (SEQ(SLICE(d0_180, word24, 8), Mem165[a2_131:byte]) & 0xFF<32>)
	word32 d1_190 = (int32) (int16) Mem165[a2_131:byte]
	word32 d0_204 = (uint32) (uint8) Mem165[a0_1384:byte]
	d3_1418 = Mem165[a7_1886 - 4<i32>:word32]
	d1_100 = d1_190 - 0x30<32>
	d2_126 = d1_190 - 0x30<32> + d0_180
	d0_154 = d0_204 & 4<32>
	branch (d0_204 & 4<32>) != 0<32> l0000300C
l00003054:
	Mem210[a7_1886 + 64<i32>:word32] = d2_126
l00002FB8:
	d0_154 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	word32 v31_225 = Mem138[d0_154:word32]
	Mem226[a7_1886 + 44<i32>:word32] = v31_225
	a2_131 = a2_131 + 1<i32>
	d3_1418 = d0_154 + 4<32>
	a0_1384 = d0_154 + 4<32>
	branch v31_225 >= 0<32> l00002FE4
l00002FE4:
	Mem230[a7_1886 + 64<i32>:word32] = Mem226[a7_1886 + 44<i32>:word32]
l00002FD0:
	Mem233[a7_1886 + 72<i32>:word32] = Mem226[a7_1886 + 72<i32>:word32] | 4<32>
	d0_154 = -Mem233[a7_1886 + 44<i32>:word32]
	Mem237[a7_1886 + 64<i32>:word32] = d0_154
l00003058:
	branch Mem240[a2_131:byte] != 0x2E<8> l000030EC
l00003060:
	a2_131 = a2_131 + 1<i32>
	branch Mem240[a2_131:byte] != 0x2A<8> l00003086
l00003086:
	a0_1384 = 0x00002BED<p32> + (SEQ(SLICE(d0_154, word24, 8), Mem240[a2_131:byte]) & 0xFF<32>)
	word32 d0_259 = (uint32) (uint8) Mem240[a0_1384:byte]
	d5_248 = 0<i32>
	d0_154 = d0_259 & 4<32>
	branch (d0_259 & 4<32>) == 0<32> l000030EC
l000030A4:
	word32 a7_267 = a7_1886 - 4<i32>
	Mem269[a7_267:word32] = d2_126
	word32 d1_275 = __swap(10<i32>) *u SLICE(d5_248, word16, 0)
	word32 d0_284 = SLICE(d5_248, word16, 0) *u 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_275, word16, 16), SLICE(d1_275 + __swap(d5_248) *u 0xA<16>, word16, 0))), word16, 16), 0<16>)
	a2_131 = a2_131 + 1<i32>
	a0_1384 = 0x00002BED<p32> + (SEQ(SLICE(d0_284, word24, 8), Mem269[a2_131:byte]) & 0xFF<32>)
	word32 d1_294 = (int32) (int16) Mem269[a2_131:byte]
	word32 d0_308 = (uint32) (uint8) Mem269[a0_1384:byte]
	d2_126 = Mem269[a7_267:word32]
	d1_100 = d1_294 - 0x30<32>
	d5_248 = d1_294 - 0x30<32> + d0_284
	d0_154 = d0_308 & 4<32>
	branch (d0_308 & 4<32>) != 0<32> l000030A4
l00003068:
	d0_154 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	word32 v38_324 = Mem240[d0_154:word32]
	Mem326[a7_1886 + 44<i32>:word32] = v38_324
	a2_131 = a2_131 + 1<i32>
	d3_1418 = d0_154 + 4<32>
	a0_1384 = d0_154 + 4<32>
	branch v38_324 < 0<32> l000030EC
l00003080:
	d5_248 = Mem326[a7_1886 + 44<i32>:word32]
l000030EC:
	word32 a7_1402 = a7_1886
	branch Mem332[a2_131:byte] == 0x68<8> l00003110
l000030F2:
	branch Mem332[a2_131:byte] == 0x6C<8> l00003110
l000030F8:
	branch Mem332[a2_131:byte] == 0x4C<8> l00003110
l000030FE:
	branch Mem332[a2_131:byte] == 0x6A<8> l00003110
l00003104:
	branch Mem332[a2_131:byte] == 0x7A<8> l00003110
l0000310A:
	branch Mem332[a2_131:byte] != 0x74<8> l00003116
l00003110:
	a2_131 = a2_131 + 1<i32>
	d4_367 = (int32) (int16) (int8) (uint32) (uint8) Mem332[a2_131:byte]
l00003116:
	branch d4_367 != 0x68<32> l00003128
l0000311E:
	branch Mem332[a2_131:byte] != 0x68<8> l00003128
l00003124:
	d4_367 = 2<i32>
	a2_131 = a2_131 + 1<i32>
l00003128:
	branch d4_367 != 0x6C<32> l0000313A
l00003130:
	branch Mem332[a2_131:byte] != 0x6C<8> l0000313A
l00003136:
	d4_367 = 1<i32>
	a2_131 = a2_131 + 1<i32>
l0000313A:
	branch d4_367 != 0x6A<32> l00003144
l00003142:
	d4_367 = 1<i32>
l00003144:
	branch d4_367 != 0x7A<32> l0000314E
l0000314C:
	d4_367 = 108<i32>
l0000314E:
	branch d4_367 != 0x74<32> l00003158
l00003156:
	d4_367 = 105<i32>
l00003158:
	word32 d5_1417
	byte v88_419 = Mem332[a2_131:byte]
	word32 a2_1810 = a2_131 + 1<i32>
	d1 = SEQ(SLICE(d1_100, word24, 8), v88_419)
	word32 d0_1408 = SEQ(SLICE(d0_154, word24, 8), v88_419)
	branch v88_419 == 0x25<8> l000035E0
l000035E0:
	Mem455[a7_1886 + 102<i32>:word32] = 1<32>
	a3_1222 = 0x00003888<p32>
	d5_1417 = 0<i32>
l00003164:
	branch v88_419 == 0x58<8> l000031B2
l0000316A:
	branch v88_419 == 0x63<8> l00003560
l00003560:
	branch d4_367 != 0x6C<32> l0000357C
l0000357C:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem500[a3_1222:byte] = Mem332[d0_1408 + 3<32>:byte]
l00003568:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem511[a3_1222:byte] = Mem332[d0_1408 + 3<32>:byte]
l0000358E:
	a0_1384 = (d3_1418 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d3_1418 = (d3_1418 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	Mem514[a7_1886 + 102<i32>:word32] = 1<32>
	d5_1417 = 0<i32>
l00003172:
	branch v88_419 == 0x64<8> l000031B2
l00003178:
	branch v88_419 == 0x69<8> l000031B2
l0000317E:
	Mem524[a7_1886 + 44<i32>:byte] = v88_419
	branch v88_419 == 0x6E<8> l000035F2
l000035F2:
	branch d4_367 != 1<32> l00003614
l00003614:
	branch d4_367 != 0x6C<32> l00003632
l00003632:
	branch d4_367 != 0x68<32> l00003650
l00003650:
	branch d4_367 != 2<32> l0000366E
l0000366E:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a0_1384 = Mem524[d0_1408:word32]
	Mem563[a0_1384:word32] = d6_1416
l00003658:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a0_1384 = Mem524[d0_1408:word32]
	Mem575[a0_1384:byte] = SLICE(d6_1416, byte, 0)
l0000363A:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a0_1384 = Mem524[d0_1408:word32]
	Mem587[a0_1384:word16] = SLICE(d6_1416, word16, 0)
l0000361C:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a0_1384 = Mem524[d0_1408:word32]
	Mem598[a0_1384:word32] = d6_1416
l000035FA:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a0_1384 = Mem524[d0_1408:word32]
	Mem609[a0_1384 + 4<i32>:word32] = d6_1416
	Mem610[a0_1384:word32] = 0<32>
l00003682:
	d3_1418 = (d3_1418 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	Mem617[a7_1886 + 64<i32>:word32] = 0<32>
	d5_1417 = 0<i32>
l0000318A:
	branch Mem524[a7_1886 + 44<i32>:byte] <=u 0x70<8> l000031B2
l00003198:
	byte v105_632 = Mem524[a7_1886 + 44<i32>:byte]
	branch v105_632 == 0x73<8> l0000359C
l0000359C:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a3_1222 = Mem524[d0_1408:word32]
	Mem648[a7_1886 + 102<i32>:word32] = 0<32>
	d3_1418 = d0_1408 + 4<32>
	a0_1384 = d0_1408 + 4<32>
	a1 = a3_1222
	branch d5_248 == 0<32> l000035BE
l000035B8:
	branch d5_248 - Mem648[a7_1886 + 102<i32>:word32] <=u 0<32> l000035DA
l000035BE:
	branch Mem648[a3_1222:byte] == 0<8> l000035DA
l000035C2:
	d0_1408 = Mem648[a7_1886 + 102<i32>:word32]
l000035C6:
	d0_1408 = d0_1408 + 1<32>
	a1 = a1 + 1<i32>
	branch d5_248 <=u 0<32> l000035D2
l000035CE:
	branch d5_248 - d0_1408 <=u 0<32> l000035D6
l000035D2:
	branch Mem648[a1:byte] != 0<8> l000035C6
l000035D6:
	Mem704[a7_1886 + 102<i32>:word32] = d0_1408
l000035DA:
	d5_1417 = 0<i32>
l000031A4:
	branch v105_632 == 0x75<8> l000031B2
l000031AA:
	branch v105_632 != 0x78<8> l0000368A
l0000368A:
	branch v88_419 != 0<8> l00003690
l0000368E:
	a2_1810 = a2_1810 - 1<i32>
l00003690:
	d0_1408 = a2_1810 - a4_1843
	Mem740[a7_1886 + 102<i32>:word32] = d0_1408
	Mem742[a7_1886 + 64<i32>:word32] = 0<32>
	a3_1222 = a4_1843
	d5_1417 = 0<i32>
l000031B2:
	branch v88_419 != 0x70<8> l000031C4
l000031B8:
	Mem756[a7_1886 + 72<i32>:word32] = Mem754[a7_1886 + 72<i32>:word32] | 1<32>
	d4_367 = 108<i32>
	d1 = 120<i32>
l000031C4:
	word32 d3_1022
	word32 a7_1155
	branch SLICE(d1, byte, 0) == 0x64<8> l000031D2
l000031CA:
	branch SLICE(d1, byte, 0) != 0x69<8> l0000331C
l0000331C:
	branch d4_367 != 1<32> l00003340
l00003340:
	branch d4_367 != 0x6C<32> l00003362
l00003362:
	word32 d0_780 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem788[a7_1886 + 60<i32>:word32] = Mem785[d0_780:word32]
	Mem789[a7_1886 + 56<i32>:word32] = 0<32>
	d3_1022 = d0_780 + 4<32>
l00003348:
	word32 d0_797 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem803[a7_1886 + 60<i32>:word32] = Mem785[d0_797:word32]
	Mem804[a7_1886 + 56<i32>:word32] = 0<32>
	d3_1022 = d0_797 + 4<32>
l00003324:
	word32 d0_812 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem818[a7_1886 + 60<i32>:word32] = Mem785[d0_812 + 4<32>:word32]
	Mem820[a7_1886 + 56<i32>:word32] = Mem818[d0_812:word32]
	d3_1022 = d0_812 + 8<32>
l0000337A:
	branch d4_367 != 0x68<32> l00003396
l00003382:
	word16 v191_828 = Mem827[a7_1886 + 62<i32>:word16]
	word32 a7_832 = a7_1886 - 4<i32>
	Mem834[a7_832:word32] = d1
	Mem839[a7_832 + 64<i32>:word32] = (uint32) (uint16) v191_828
	Mem840[a7_832 + 60<i32>:word32] = 0<32>
	d1 = Mem840[a7_832:word32]
l00003396:
	branch d4_367 != 2<32> l000033B2
l0000339E:
	byte v200_851 = Mem850[a7_1886 + 63<i32>:byte]
	word32 a7_855 = a7_1886 - 4<i32>
	Mem857[a7_855:word32] = d1
	Mem862[a7_855 + 64<i32>:word32] = (uint32) (uint8) v200_851
	Mem863[a7_855 + 60<i32>:word32] = 0<32>
	d1 = Mem863[a7_855:word32]
l000033B2:
	word32 d0_871 = Mem870[a7_1886 + 72<i32>:word32] & 1<i32>
	Mem874[a7_1886 + 44<i32>:byte] = SLICE(d1, byte, 0)
	a7_1155 = a7_1886
	branch d0_871 == 0<32> l00003450
l000033C2:
	branch SLICE(d1, byte, 0) != 0x6F<8> l000033FE
l000033C8:
	branch d5_248 != 0<32> l000033F2
l000033CC:
	word32 a7_891 = a7_1886 - 4<i32>
	Mem892[a7_891:word32] = d0_871
	Mem894[a7_891 - 4<i32>:word32] = d1
	word32 d0_895 = Mem894[a7_891 + 64<i32>:word32]
	word32 d1_896 = Mem894[a7_891 + 60<i32>:word32]
	Mem912[a7_891 - 8<i32>:word32] = d2_126
	d2_126 = Mem912[a7_891 - 8<i32>:word32]
	d1 = Mem912[a7_891 - 4<i32>:word32]
	d0_871 = Mem912[a7_891:word32]
	branch d1_896 - (d0_895 <u 0<32>) == 0<32> l000033FE
l000033F2:
	Mem951[a7_1886 + 106<i32>:byte] = 0x30<8>
	d7_1002 = 1<32>
l000033FE:
	a7_1155 = a7_1886
	branch SLICE(d1, byte, 0) == 0x78<8> l0000340E
l00003404:
	Mem960[a7_1886 + 44<i32>:byte] = SLICE(d1, byte, 0)
	branch SLICE(d1, byte, 0) != 0x58<8> l00003450
l0000340E:
	Mem967[a7_1886 + 44<i32>:byte] = SLICE(d1, byte, 0)
	word32 a7_968 = a7_1886 - 4<i32>
	Mem972[a7_968:word32] = d0_871
	Mem974[a7_968 - 4<i32>:word32] = d1
	word32 d0_975 = Mem974[a7_968 + 64<i32>:word32]
	word32 d1_976 = Mem974[a7_968 + 60<i32>:word32]
	Mem981[a7_968 - 8<i32>:word32] = d2_126
	word32 d1_990 = Mem981[a7_968 - 4<i32>:word32]
	a7_1155 = a7_968 + 4<i32>
	branch d1_976 - (d0_975 <u 0<32>) == 0<32> l00003450
l00003438:
	Mem1000[a7_968 + 110<i32> + d7_1002:byte] = 0x30<8>
	word32 d7_999 = d7_1002 + 1<32>
	Mem1005[a7_968 + 110<i32> + d7_999:byte] = SLICE(d1_990, byte, 0)
	Mem1007[a7_968 + 48<i32>:byte] = SLICE(d1_990, byte, 0)
	d7_1002 = d7_999 + 1<32>
l000031D2:
	word32 d0_1032
	branch d4_367 != 1<32> l000031F8
l000031F8:
	branch d4_367 != 0x6C<32> l00003224
l00003224:
	word32 d0_1020 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	word32 d0_1025 = Mem785[d0_1020:word32]
	Mem1027[a7_1886 + 52<i32>:word32] = d0_1025
	word32 a7_1028 = a7_1886 - 4<i32>
	Mem1030[a7_1028:word32] = d1
	Mem1034[a7_1028 + 52<i32>:word32] = d0_1025 >> 31<i32>
	word32 v172_1035 = Mem1034[a7_1028:word32]
	d3_1022 = d0_1020 + 4<32>
	d0_1032 = d0_1025 >> 31<i32>
	d1 = v172_1035
	branch d4_367 != 0x68<32> l0000326A
l0000324E:
	word16 v174_1041 = Mem1034[a7_1028 + 58<i32>:word16]
	Mem1045[a7_1028:word32] = v172_1035
	word32 d1_1049 = (int32) v174_1041
	Mem1050[a7_1028 + 56<i32>:word32] = d1_1049
	Mem1052[a7_1028 - 4<i32>:word32] = SEQ(SLICE(d0_1025 >> 31<i32>, word16, 16), v174_1041)
	Mem1056[a7_1028 + 52<i32>:word32] = d1_1049 >> 31<i32>
	d1 = Mem1056[a7_1028 - 4<i32>:word32]
	d0_1032 = Mem1056[a7_1028:word32]
l0000326A:
	branch d4_367 != 2<32> l00003290
l00003272:
	byte v181_1070 = Mem1069[a7_1886 + 55<i32>:byte]
	word32 a7_1074 = a7_1886 - 4<i32>
	Mem1076[a7_1074:word32] = d1
	word32 d1_1081 = (int32) (int16) v181_1070
	Mem1082[a7_1074 + 56<i32>:word32] = d1_1081
	Mem1084[a7_1074 - 4<i32>:word32] = SEQ(SLICE(d0_1032, word24, 8), v181_1070)
	Mem1088[a7_1074 + 52<i32>:word32] = d1_1081 >> 31<i32>
	d1 = Mem1088[a7_1074 - 4<i32>:word32]
	d0_1032 = Mem1088[a7_1074:word32]
l00003200:
	word32 d0_1099 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	word32 d0_1103 = Mem785[d0_1099:word32]
	Mem1104[a7_1886 + 52<i32>:word32] = d0_1103
	word32 a7_1105 = a7_1886 - 4<i32>
	Mem1106[a7_1105:word32] = d1
	Mem1110[a7_1105 + 52<i32>:word32] = d0_1103 >> 31<i32>
	d3_1022 = d0_1099 + 4<32>
	d0_1032 = d0_1103 >> 31<i32>
	d1 = Mem1110[a7_1105:word32]
l000031DA:
	d0_1032 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem1124[a7_1886 + 52<i32>:word32] = Mem785[d0_1032 + 4<32>:word32]
	Mem1126[a7_1886 + 48<i32>:word32] = Mem1124[d0_1032:word32]
	d3_1022 = d0_1032 + 8<32>
l00003290:
	Mem1131[a7_1886 + 44<i32>:byte] = SLICE(d1, byte, 0)
	word32 a7_1132 = a7_1886 - 4<i32>
	Mem1134[a7_1132:word32] = d0_1032
	Mem1136[a7_1132 - 4<i32>:word32] = d1
	word32 d0_1137 = Mem1136[a7_1132 + 56<i32>:word32]
	word32 d1_1138 = Mem1136[a7_1132 + 52<i32>:word32]
	Mem1143[a7_1132 - 8<i32>:word32] = d2_126
	a7_1155 = a7_1132 + 4<i32>
	branch d1_1138 - (d0_1137 <u 0<32>) >= 0<32> l000032DA
l000032DA:
	byte v134_1157 = Mem1143[a7_1132 + 48<i32>:byte]
	branch (Mem1143[a7_1132 + 76<i32>:word32] & 16<i32>) == 0<32> l000032F4
l000032F4:
	branch (Mem1143[a7_1132 + 76<i32>:word32] & 8<i32>) == 0<32> l00003308
l000032FC:
	Mem1179[a7_1132 + 110<i32>:byte] = 0x20<8>
	d7_1002 = 1<32>
l000032E6:
	Mem1185[a7_1132 + 110<i32>:byte] = 0x2B<8>
	d7_1002 = 1<32>
l00003308:
	Mem1190[a7_1132 + 64<i32>:word32] = Mem1188[a7_1132 + 56<i32>:word32]
	Mem1192[a7_1132 + 60<i32>:word32] = Mem1190[a7_1132 + 52<i32>:word32]
	Mem1195[a7_1132 + 48<i32>:byte] = v134_1157
l000032BA:
	Mem1200[a7_1132 + 110<i32>:byte] = 0x2D<8>
	d7_1002 = 1<32>
	a7_1155 = Mem1200[a7_1132 + 0x40<32>:word32]
l00003450:
	byte v128_1218 = Mem1217[a7_1155 + 44<i32>:byte]
	a3_1222 = a7_1155 + 98<i32>
	branch v128_1218 == 0x78<8> l00003464
l0000345E:
	branch v128_1218 != 0x58<8> l0000346E
l0000346E:
	branch v128_1218 != 0x6F<8> l0000347E
l0000347E:
	Mem1232[a7_1155 + 48<i32>:word32] = 0xA<32>
l00003474:
	Mem1234[a7_1155 + 48<i32>:word32] = 8<32>
l00003486:
	Mem1239[a7_1155 + 44<i32>:word32] = Mem1237[a7_1155 + 48<i32>:word32]
l00003464:
	Mem1242[a7_1155 + 44<i32>:word32] = 0x10<32>
l0000348C:
	word32 a6_1254
	Mem1247[a7_1155 + 108<i32>:word32] = Mem1245[a7_1155 + 44<i32>:word32]
	branch v128_1218 == 0x58<8> l0000349E
l0000349E:
	a6_1254 = 0x000038A4<p32>
l00003498:
	a6_1254 = 0x00003894<p32>
l000034A2:
	Mem1258[a7_1155 + 44<i32>:word32] = a6_1254
	Mem1273[a7_1155 + 124<i32>:word32] = d3_1022
	Mem1286[a7_1155 + 68<i32>:word32] = d5_248
	Mem1304[a7_1155 + 48<i32>:word32] = d6_1416
	Mem1311[a7_1155 + 98<i32>:word32] = d7_1002
	word32 v147_1312 = a7_1155 + 56<i32>
	word32 d6_1313 = Mem1311[v147_1312:word32]
	word32 d7_1315 = Mem1311[v147_1312 + 4<i32>:word32]
	word32 d3_1317 = Mem1311[a7_1155 + 102<i32>:word32]
	a1 = Mem1311[a7_1155 + 44<i32>:word32]
l000034C4:
	word32 d1_1322 = Mem1321[a7_1155 + 108<i32>:word32]
	word32 a7_1327 = a7_1155 - 4<i32>
	Mem1328[a7_1327:word32] = d1_1322 >> 31<i32>
	Mem1330[a7_1327 - 4<i32>:word32] = d1_1322
	Mem1333[a7_1327 - 8<i32>:word32] = a1
	Mem1336[a7_1327 - 12<i32>:word32] = d1_1322
	Mem1338[a7_1327 - 16<i32>:word32] = d1_1322 >> 31<i32>
	Mem1341[a7_1327 - 20<i32>:word32] = d7_1315
	Mem1344[a7_1327 - 24<i32>:word32] = d6_1313
	word32 d1_1347 = fn00003C74(Mem1344[a7_1327 - 24<i32>:word32], Mem1344[a7_1327 - 20<i32>:word32], Mem1344[a7_1327 - 16<i32>:word32], Mem1344[a7_1327 - 12<i32>:word32])
	word32 v148_1355 = Mem1344[a7_1327 - 8<i32>:word32]
	word32 d1_1360 = Mem1344[a7_1327 - 4<i32>:word32]
	word32 d0_1362 = Mem1344[a7_1327:word32]
	a3_1222 = a3_1222 - 1<i32>
	Mem1368[a3_1222:byte] = Mem1344[v148_1355 + d1_1347:byte]
	Mem1370[a7_1327:word32] = d0_1362
	Mem1372[a7_1327 - 4<i32>:word32] = d1_1360
	Mem1374[a7_1327 - 8<i32>:word32] = v148_1355
	Mem1377[a7_1327 - 12<i32>:word32] = d1_1360
	Mem1379[a7_1327 - 16<i32>:word32] = d0_1362
	Mem1381[a7_1327 - 20<i32>:word32] = d7_1315
	Mem1383[a7_1327 - 24<i32>:word32] = d6_1313
	word32 d1_1387
	word32 d0_1386 = fn00003A24(Mem1383[a7_1327 - 24<i32>:word32], Mem1383[a7_1327 - 20<i32>:word32], Mem1383[a7_1327 - 16<i32>:word32], Mem1383[a7_1327 - 12<i32>:word32], out d1_1387, out a0_1384)
	a1 = Mem1383[a7_1327 - 8<i32>:word32]
	d6_1313 = d0_1386
	d7_1315 = d1_1387
	a7_1402 = a7_1327 + 4<i32>
	d3_1317 = d3_1317 + 1<32>
	d0_1408 = d1_1387
	d1 = d0_1386 - (d1_1387 <u 0<32>)
	branch d1 != 0<32> l000034C4
l00003532:
	Mem1414[a7_1327 + 106<i32>:word32] = d3_1317
	d7_1002 = Mem1414[a7_1327 + 102<i32>:word32]
	d6_1416 = Mem1414[a7_1327 + 52<i32>:word32]
	d5_1417 = Mem1414[a7_1327 + 72<i32>:word32]
	d3_1418 = Mem1414[a7_1327 + 128<i32>:word32]
	branch d5_1417 != 0xFFFFFFFF<32> l00003554
l00003554:
	Mem1423[a7_1327 + 76<i32>:word32] = Mem1414[a7_1327 + 76<i32>:word32] & 0xFFFFFFFD<32>
l0000354E:
	d5_1417 = 0<i32>
l000036A0:
	branch d5_1417 - Mem1432[a7_1402 + 102<i32>:word32] >u 0<32> l000036AE
l000036AE:
	Mem1437[a7_1402 + 44<i32>:word32] = d5_1417
l000036A6:
	Mem1440[a7_1402 + 44<i32>:word32] = Mem1432[a7_1402 + 102<i32>:word32]
l000036B2:
	word32 a7_1443 = a7_1402 - 4<i32>
	Mem1450[a7_1443:word32] = d0_1408
	Mem1464[a7_1443 + 52<i32>:word32] = Mem1450[a7_1443 + 48<i32>:word32] + d7_1002
	Mem1469[a7_1443:word32] = Mem1464[a7_1443:word32]
	word32 d0_1473 = Mem1469[a7_1443:word32]
	branch Mem1469[a7_1443 + 52<i32>:word32] - Mem1469[a7_1443 + 68<i32>:word32] <u 0<32> l000036D6
l000036D6:
	Mem1477[a7_1443:word32] = d0_1473
	Mem1481[a7_1443 + 48<i32>:word32] = Mem1477[a7_1443 + 68<i32>:word32] - Mem1477[a7_1443 + 52<i32>:word32]
l000036D0:
	Mem1486[a7_1443 + 48<i32>:word32] = 0<32>
l000036E6:
	Mem1494[a7_1402 + 48<i32>:word32] = Mem1492[a7_1402 + 44<i32>:word32]
	branch (Mem1494[a7_1402 + 72<i32>:word32] & 2<i32>) == 0<32> l00003728
l000036F4:
	word32 d2_1501 = 0<i32>
	branch d7_1002 == 0<32> l00003728
l000036FA:
	word32 a7_1508 = a7_1402 - 4<i32>
	Mem1510[a7_1508:word32] = a5_1509
	Mem1521[a7_1508 - 4<i32>:word32] = (int32) (int16) Mem1510[a7_1508 + 110<i32> + d2_1501:byte]
	branch fn000038B4(Mem1521[a7_1508 - 4<i32>:word32], Mem1521[a7_1508:word32], out d1, out a0_1384, out a1, out a5_1509) != 0xFFFFFFFF<32> l00003720
l00003720:
	d2_1501 = d2_1501 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch d7_1002 - d2_1501 >u 0<32> l000036FA
l00003728:
	branch (Mem1547[a7_1402 + 72<i32>:word32] & 4<i32>) != 0<32> l0000377A
l00003730:
	word32 d2_1553 = 0<i32>
	branch Mem1547[a7_1402 + 48<i32>:word32] == 0<32> l0000377A
l00003738:
	word32 d4_1558 = Mem1547[a7_1402 + 72<i32>:word32]
	word32 a4_1560 = Mem1547[a7_1402 + 48<i32>:word32]
l00003740:
	word32 a0_1574
	word32 a7_1562 = a7_1402 - 4<i32>
	Mem1564[a7_1562:word32] = a5_1509
	branch (d4_1558 & 2<i32>) == 0<32> l0000374E
l0000374E:
	a0_1574 = SEQ(SLICE(a0_1384, word16, 16), 0x20<16>)
l00003748:
	a0_1574 = SEQ(SLICE(a0_1384, word16, 16), 0x30<16>)
l00003752:
	Mem1580[a7_1402 - 8<i32>:word32] = a0_1574
	branch fn000038B4(Mem1580[a7_1402 - 8<i32>:word32], Mem1580[a7_1402 - 4<i32>:word32], out d1, out a0_1384, out a1, out a5_1509) != 0xFFFFFFFF<32> l0000376A
l0000376A:
	d2_1553 = d2_1553 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch a4_1560 - d2_1553 >u 0<32> l00003740
l00003772:
	Mem1608[a7_1562 + 52<i32>:word32] = a4_1560
	Mem1610[a7_1562 + 76<i32>:word32] = d4_1558
l0000377A:
	branch (Mem1614[a7_1402 + 72<i32>:word32] & 2<i32>) != 0<32> l000037B6
l00003782:
	word32 d2_1620 = 0<i32>
	branch d7_1002 == 0<32> l000037B6
l00003788:
	word32 a7_1630 = a7_1402 - 4<i32>
	Mem1632[a7_1630:word32] = a5_1509
	Mem1643[a7_1630 - 4<i32>:word32] = (int32) (int16) Mem1632[a7_1630 + 110<i32> + d2_1620:byte]
	word32 a0_2838
	branch fn000038B4(Mem1643[a7_1630 - 4<i32>:word32], Mem1643[a7_1630:word32], out d1, out a0_2838, out a1, out a5_1509) != 0xFFFFFFFF<32> l000037AE
l000037AE:
	d2_1620 = d2_1620 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch d7_1002 - d2_1620 >u 0<32> l00003788
l000037B6:
	word32 d2_1669 = Mem1668[a7_1402 + 102<i32>:word32]
	branch d5_1417 - Mem1668[a7_1402 + 102<i32>:word32] <=u 0<32> l000037E4
l000037C0:
	word32 a7_1683 = a7_1402 - 4<i32>
	Mem1685[a7_1683:word32] = a5_1509
	Mem1688[a7_1683 - 4<i32>:word32] = 0x00000030<p32>
	word32 a0_2839
	branch fn000038B4(Mem1688[a7_1683 - 4<i32>:word32], Mem1688[a7_1683:word32], out d1, out a0_2839, out a1, out a5_1509) != 0xFFFFFFFF<32> l000037DC
l000037DC:
	d2_1669 = d2_1669 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch d5_1417 - d2_1669 >u 0<32> l000037C0
l000037E4:
	word32 d2_1712 = 0<i32>
	branch Mem1714[a7_1402 + 102<i32>:word32] == 0<32> l0000381A
l000037EC:
	word32 a4_1719 = Mem1714[a7_1402 + 102<i32>:word32]
l000037F0:
	word32 a7_1721 = a7_1402 - 4<i32>
	Mem1723[a7_1721:word32] = a5_1509
	Mem1734[a7_1721 - 4<i32>:word32] = (int32) (int16) Mem1723[a3_1222 + d2_1712:byte]
	word32 a0_2840
	branch fn000038B4(Mem1734[a7_1721 - 4<i32>:word32], Mem1734[a7_1721:word32], out d1, out a0_2840, out a1, out a5_1509) != 0xFFFFFFFF<32> l00003812
l00003812:
	d2_1712 = d2_1712 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch a4_1719 - d2_1712 >u 0<32> l000037F0
l0000381A:
	d0 = Mem1760[a7_1402 + 72<i32>:word32] & 4<i32>
	branch d0 == 0<32> l00003850
l00003822:
	word32 d2_1766 = 0<i32>
	branch Mem1760[a7_1402 + 48<i32>:word32] == 0<32> l00003850
l0000382A:
	word32 a3_1771 = Mem1760[a7_1402 + 48<i32>:word32]
l0000382E:
	word32 a7_1773 = a7_1402 - 4<i32>
	Mem1775[a7_1773:word32] = a5_1509
	Mem1778[a7_1773 - 4<i32>:word32] = 0x00000020<p32>
	word32 a0_2841
	d0 = fn000038B4(Mem1778[a7_1773 - 4<i32>:word32], Mem1778[a7_1773:word32], out d1, out a0_2841, out a1, out a5_1509)
	branch d0 != 0xFFFFFFFF<32> l00003848
l00003848:
	d2_1766 = d2_1766 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch a3_1771 - d2_1766 >u 0<32> l0000382E
l00003850:
	a7_1886 = a7_1402
	a4_1843 = a2_1810
l00003874:
	branch Mem1845[a4_1843:byte] != 0<8> l00002F50
l0000387A:
	d0_1870 = d6_1416
l00003844:
	d0_1870 = d6_1416
l0000380E:
	d0_1870 = d6_1416
l000037D6:
	d0_1870 = d6_1416
l000037A8:
	d0_1870 = d6_1416
l00003764:
	d0_1870 = d6_1416
l0000371A:
	d0_1870 = d6_1416
l0000387C:
	d1Out = d1
	a1Out = a1
	return d0_1870
fn00002F34_exit:


word32 fn000038B4(word32 dwArg04, word32 dwArg08, ptr32 & d1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F34
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a1 a5 d0 d1
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn000038B4_entry:
l000038B4:
	word32 a1_102
	word32 a0_101
	word32 d1_51
	Mem17[dwArg08 + 24<i32>:word32] = Mem11[dwArg08 + 24<i32>:word32] | 2<i32>
	word32 v13_19 = Mem17[dwArg08 + 20<i32>:word32] - 1<32>
	Mem20[dwArg08 + 20<i32>:word32] = v13_19
	branch v13_19 < 0<32> l000038F8
l000038D0:
	branch dwArg04 != 10<i32> l000038E2
l000038D6:
	branch (Mem20[dwArg08 + 24<i32>:word32] & 0x80<32>) != 0<32> l000038F8
l000038F8:
	d1_51 = fn00003910(dwArg04, dwArg08, out a0_101, out a1_102, out a5)
l000038E2:
	a0_101 = Mem20[dwArg08 + 4<i32>:word32]
	Mem60[dwArg08 + 4<i32>:word32] = a0_101 + 1<i32>
	Mem63[a0_101:byte] = SLICE(dwArg04, byte, 0)
	a1_102 = dwArg08 + 4<i32>
	d1_51 = (uint32) (uint8) Mem63[a0_101:byte]
l00003906:
	d1Out = d1_51
	a0Out = a0_101
	a1Out = a1_102
	a5Out = a5
	return d1_51
fn000038B4_exit:


word32 fn00003910(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000038B4
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a1 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
fn00003910_entry:
l00003910:
	word32 d0_107
	word32 a5_123
	word32 a1_121
	fn00002BBC(out a1_121, out a5_123)
	branch dwArg08 != 0<32> l0000392C
l0000392C:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 73<i32>) == 64<i32> l0000393E
l0000393E:
	branch Mem29[dwArg08 + 28<i32>:word32] != 0<32> l0000395C
l00003944:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 4<i32>) == 0<32> l00003954
l00003954:
	Mem61[dwArg08 + 28<i32>:word32] = 0x400<32>
l0000394C:
	Mem64[dwArg08 + 28<i32>:word32] = 1<i32>
l0000395C:
	branch Mem67[dwArg08 + 8<i32>:word32] != 0<32> l0000399C
l0000399C:
	branch Mem67[dwArg08:word32] == 0<32> l000039F6
l000039F6:
	d0_107 = 0<i32>
l000039A0:
	word32 d0_79 = Mem67[dwArg08 + 24<i32>:word32] & 0x80<32>
	branch d0_79 == 0<32> l000039CC
l000039AC:
	d0_79 = 10<i32>
	branch dwArg04 != 10<i32> l000039CC
l000039CC:
	word32 d4_93 = Mem67[dwArg08 + 4<i32>:word32] - Mem67[dwArg08 + 8<i32>:word32]
	execPrivate3()
	branch d4_93 - d0_79 == 0<32> l000039FA
l000039EA:
	Mem106[dwArg08 + 24<i32>:word32] = Mem67[dwArg08 + 24<i32>:word32] | 16<i32>
	a0 = dwArg08 + 24<i32>
	d0_107 = -1<i32>
l000039B2:
	word32 a0_110 = Mem67[dwArg08 + 4<i32>:word32]
	Mem113[dwArg08 + 4<i32>:word32] = a0_110 + 1<i32>
	Mem115[a0_110:byte] = SLICE(dwArg04, byte, 0)
	d0_107 = fn00002B28(dwArg08, out a0, out a1_121, out a5_123)
l00003962:
	word32 d4_139
	branch (Mem67[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00003976
l00003976:
	d4_139 = 1<i32>
l00003972:
	d4_139 = 2<i32>
l00003978:
	word32 d1_156
	word32 d0_155 = fn00002718(d4_139 + Mem67[dwArg08 + 28<i32>:word32], out d1_156, out a0, out a1_121)
	branch d0_155 != 0<32> l00003992
l00003992:
	Mem168[dwArg08 + 8<i32>:word32] = d0_155 + 1<i32>
l000039FA:
	Mem175[dwArg08 + 24<i32>:word32] = Mem173[dwArg08 + 24<i32>:word32] | 2<i32>
	a0 = Mem175[dwArg08 + 8<i32>:word32]
	Mem182[a0:byte] = SLICE(dwArg04, byte, 0)
	word32 a1_183 = Mem182[dwArg08 + 8<i32>:word32]
	Mem185[dwArg08 + 4<i32>:word32] = a1_183 + 1<i32>
	Mem189[dwArg08 + 20<i32>:word32] = Mem185[dwArg08 + 28<i32>:word32] - 1<32>
	a1_121 = a1_183 + 1<i32>
	d0_107 = 0<i32>
l0000398C:
	d0_107 = -1<i32>
l00003938:
	d0_107 = -1<i32>
l00003926:
	d0_107 = -1<i32>
l00003A1E:
	a0Out = a0
	a1Out = a1_121
	a5Out = a5_123
	return d0_107
fn00003910_exit:


word32 fn00003A24(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F34
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: a0 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00003A24_entry:
l00003A24:
	word32 d0_196
	word32 d1_142 = dwArg08
	word32 a0_20 = dwArg08
	word32 d3_166 = dwArg10
	branch dwArg0C != 0<32> l00003A7A
l00003A7A:
	branch dwArg04 - dwArg0C >=u 0<32> l00003A84
l00003A84:
	word32 d4_29 = 24<i32>
	word32 d6_30 = __rol(dwArg0C, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l00003AA2
l00003A8E:
	d4_29 = 16<i32>
	d6_30 = __rol(d6_30, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l00003AA2
l00003A96:
	d4_29 = 8<i32>
	d6_30 = __rol(d6_30, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l00003AA2
l00003A9E:
	d4_29 = 0<i32>
	d6_30 = SEQ(SLICE(d6_30, word24, 8), SLICE(dwArg0C, byte, 0))
l00003AA2:
	word32 d4_61 = SEQ(SLICE(d4_29, word24, 8), SLICE(d4_29, byte, 0) + Mem17[0x00003DCC<p32> + (int32) (SLICE(d6_30, word16, 0) & 0xFF<16>):byte])
	word32 d5_63 = 32<i32> - d4_61
	branch d5_63 != 0<32> l00003AC2
l00003AC2:
	word32 d1_86
	word32 d2_322
	word32 d0_85 = fn00003B28(dwArg04 >>u d4_61, dwArg04 << d5_63 | dwArg08 >>u d4_61, dwArg0C << d5_63 | dwArg10 >>u d4_61, out d1_86, out d2_322)
	word32 d3_72 = dwArg10 << d5_63
	word32 d5_101 = __swap(d0_85)
	word32 d6_103 = __swap(d3_72)
	word32 d3_102 = d3_72 *u SLICE(d5_101, word16, 0)
	word32 d2_107 = __swap(d0_85 *u SLICE(d3_72, word16, 0))
	word16 v34_108 = SLICE(d2_107 + d3_102, word16, 0)
	word16 v35_109 = SLICE(d2_107, word16, 16)
	word32 d4_104 = d0_85 *u SLICE(d6_103, word16, 0)
	word16 v39_116 = SLICE(SEQ(v35_109, v34_108) + d4_104, word16, 0)
	word32 d6_82 = dwArg08 << d5_63
	word32 d2_124 = __swap(SEQ(v35_109, v39_116))
	word32 d5_105 = d5_101 *u SLICE(d6_103, word16, 0)
	a0_20 = d6_82
	d1_142 = d0_85
	word32 v48_134 = d1_86 - ((__swap(SEQ(SLICE(d3_102, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_104, word16, 16), 0<16>))) + SEQ(SLICE(d5_105, word16, 16), (SLICE(d5_105, word16, 0) + (v34_108 <u 0<16>)) + (v39_116 <u 0<16>)))
	branch v48_134 <u 0<32> l00003B1E
l00003B18:
	branch v48_134 != 0<32> l00003B20
l00003B1A:
	branch d6_82 - d2_124 >=u 0<32> l00003B20
l00003B1E:
	d1_142 = d0_85 - 1<32>
l00003AB6:
	branch dwArg0C - dwArg04 <u 0<32> l00003ABE
l00003ABA:
	branch dwArg10 - dwArg08 >u 0<32> l00003A7E
l00003ABE:
l00003A7E:
l00003A3C:
	branch dwArg04 - dwArg10 >=u 0<32> l00003A4E
l00003A4E:
	branch dwArg10 != 0<32> l00003A5A
l00003A52:
	d3_166 = (int32) (uint16) (1<i32> /u SLICE(dwArg10, uint16, 0))
l00003A5A:
	word32 d1_175
	word32 d2_176
	word32 d0_174 = fn00003B28(0<i32>, dwArg04, d3_166, out d1_175, out d2_176)
	word32 d2_321
	word32 d1_320
	d1_142 = fn00003B28(d1_175, dwArg08, d2_176, out d1_320, out d2_321)
	d0_196 = d0_174
l00003A40:
	word32 d2_319
	word32 d1_318
	d1_142 = fn00003B28(dwArg04, dwArg08, dwArg10, out d1_318, out d2_319)
l00003B20:
	d0_196 = 0<i32>
l00003B22:
	d1Out = d1_142
	a0Out = a0_20
	return d0_196
fn00003A24_exit:


word32 fn00003B28(word32 d0, word32 d1, word32 d2, ptr32 & d1Out, ptr32 & d2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A24
//      fn00003C74
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1 d2
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn00003B28_entry:
l00003B28:
	word32 d7_13 = d2
	branch d2 == 0<32> l00003B42
l00003B30:
	word32 d6_17 = d1
	word32 d5_19 = d0
	branch d0 != 0<32> l00003B50
l00003B50:
	word32 d2_22 = __swap(d2)
	branch SLICE(d2_22, word16, 0) != 0<16> l00003B78
l00003B78:
	byte bLoc26_362 = 0<8>
	word32 d0_44 = 0<i32>
	branch d2 < 0<32> l00003B94
l00003B8A:
	d6_17 = d6_17 * 2<32>
	d0_44 = SEQ(SLICE(d0_44, word16, 16), SLICE(d0_44, word16, 0) + 1<16>)
	d5_19 = d5_19 * 2<32> + (d6_17 <u 0<32>)
	d7_13 = d7_13 * 2<32>
	branch d7_13 > 0<32> l00003B8A
l00003B94:
	word16 v40_64 = SLICE(d0_44, word16, 0)
l00003B96:
	word32 d1_104
	word32 d2_73 = __swap(d5_19)
	word32 d3_74 = __swap(d7_13)
	branch SLICE(d2_73 - d3_74, word16, 0) != 0<16> l00003BA8
l00003BA8:
	d1_104 = __swap(SEQ(SLICE(__swap(SEQ((uint16) (d5_19 % SLICE(d3_74, uint16, 0)), (uint16) (d5_19 /u SLICE(d3_74, uint16, 0)))), word16, 16), 0<16>))
l00003BA2:
	d1_104 = 0xFFFF<32>
l00003BB2:
	word32 d6_98 = __swap(SEQ(SLICE(d6_17, word16, 16), 0<16>))
l00003BB8:
	word32 d4_113 = __swap(d5_19 - __swap(d7_13) *u SLICE(d1_104, word16, 0))
	word16 wLoc22_442 = SLICE(dwLoc24, word16, 0)
	word32 d2_106 = d1_104 *u SLICE(d7_13, word16, 0)
	word32 d4_121 = SEQ(SLICE(d4_113, word16, 16), SLICE(d6_98, word16, 0))
	branch SLICE(d4_113, word16, 0) != 0<16> l00003BD8
l00003BD0:
	branch d2_106 - d4_121 <=u 0<32> l00003BD8
l00003BD8:
	word32 d6_133 = __swap(d1_104)
	word32 d3_140 = __swap(d6_133)
	word32 d4_142 = __swap(d7_13)
	word32 d5_141 = d7_13 *u SLICE(d3_140, word16, 0)
	word32 d6_146 = __swap(d6_133 *u SLICE(d7_13, word16, 0))
	word16 v54_147 = SLICE(d6_146 + d5_141, word16, 0)
	word16 v55_148 = SLICE(d6_146, word16, 16)
	word32 d2_143 = d6_133 *u SLICE(d4_142, word16, 0)
	word16 v58_155 = SLICE(SEQ(v55_148, v54_147) + d2_143, word16, 0)
	word32 d3_144 = d3_140 *u SLICE(d4_142, word16, 0)
	word32 d6_178 = d6_17 - __swap(SEQ(v55_148, v58_155))
	word32 d5_181 = d5_19 - ((__swap(SEQ(SLICE(d5_141, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d2_143, word16, 16), 0<16>))) + SEQ(SLICE(d3_144, word16, 16), (SLICE(d3_144, word16, 0) + (v54_147 <u 0<16>)) + (v58_155 <u 0<16>))) - (d6_178 <u 0<32>)
	branch d5_181 >=u 0<32> l00003C30
l00003C1A:
	d6_178 = d6_178 + SEQ(SLICE(__swap(d7_13), word16, 16), 0<16>)
	d1_104 = d1_104 - 1<32>
	d5_181 = d5_181 + (d6_178 <u 0<32>) + __swap(SEQ(SLICE(d7_13, word16, 16), 0<16>))
l00003C30:
	branch bLoc26_362 != 0<8> l00003C4C
l00003C4C:
	word32 d6_220 = __swap(SEQ(SLICE(d6_178, word16, 16), SLICE(d5_181, word16, 0)))
	d0 = SEQ(SLICE(dwLoc24, word16, 16), SLICE(d1_104, word16, 0))
	word32 d5_221 = __swap(d5_181)
	word16 v80_224 = SLICE(d7_13, word16, 16)
	branch v40_64 == 0<16> l00003C66
l00003C5C:
	word32 d7_230 = SEQ(v80_224, v40_64 - 1<16>)
l00003C5E:
	d5_221 = d5_221 >>u 1<32>
	word16 v84_241 = SLICE(d7_230, word16, 0)
	d6_220 = __rcr(d6_220, 1<32>, SLICE(cond(d5_221), bool, 4))
	d7_230 = SEQ(SLICE(d7_230, word16, 16), v84_241 - 1<i16>)
	branch v84_241 != 0<16> l00003C5E
l00003C66:
	d1 = d6_220
	d2 = d2_22
l00003C36:
	word32 d5_266 = __swap(d5_181)
	word32 d6_267 = __swap(d6_178)
	d5_19 = SEQ(SLICE(d5_266, word16, 16), SLICE(d6_267, word16, 0))
	d6_17 = SEQ(SLICE(d6_267, word16, 16), 0<16>)
	bLoc26_362 = true
	dwLoc24 = SEQ(SLICE(d1_104, word16, 0), wLoc22_442) (alias)
l00003BD4:
	d1_104 = d1_104 - 1<32>
l00003B56:
	word32 d0_281 = __swap(d0)
	word32 d1_282 = __swap(d1)
	word32 d0_285 = SEQ(SLICE(d0_281, word16, 16), SLICE(d1_282, word16, 0))
	word32 d0_295 = SEQ((uint16) (d0_285 % SLICE(d2, uint16, 0)), SLICE(__swap(d1_282), word16, 0))
	d2 = SEQ(SLICE(__swap((uint32) (uint16) (d0_285 /u SLICE(d2, uint16, 0))), word16, 16), (uint16) (d0_295 /u SLICE(d2, uint16, 0)))
	d1 = __swap(SEQ((uint16) (d0_295 % SLICE(d2, uint16, 0)), 0<16>))
	d0 = d2
l00003B36:
	branch d1 == 0<32> l00003C6E
l00003B3C:
	branch d2 - d1 >u 0<32> l00003C6E
l00003B42:
	d0 = fn0000257E(d1, d2, d2, out d1)
l00003C6E:
	d1Out = d1
	d2Out = d2
	return d0
fn00003B28_exit:


word32 fn00003C74(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F34
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
fn00003C74_entry:
l00003C74:
	word32 d1_171 = dwArg08
	word32 d3_202 = dwArg10
	branch dwArg0C != 0<32> l00003CC6
l00003CC6:
	branch dwArg04 - dwArg0C <u 0<32> l00003D80
l00003CCC:
	word32 d4_32 = 24<i32>
	word32 d6_33 = __rol(dwArg0C, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00003CEA
l00003CD6:
	d4_32 = 16<i32>
	d6_33 = __rol(d6_33, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00003CEA
l00003CDE:
	d4_32 = 8<i32>
	d6_33 = __rol(d6_33, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00003CEA
l00003CE6:
	d4_32 = 0<i32>
	d6_33 = SEQ(SLICE(d6_33, word24, 8), SLICE(dwArg0C, byte, 0))
l00003CEA:
	word32 d4_64 = SEQ(SLICE(d4_32, word24, 8), SLICE(d4_32, byte, 0) + Mem20[0x00003DCC<p32> + (int32) (SLICE(d6_33, word16, 0) & 0xFF<16>):byte])
	word32 d5_66 = 32<i32> - d4_64
	branch d5_66 != 0<32> l00003D0C
l00003D0C:
	word32 d1_89
	word32 d2_90
	word32 d0_88 = fn00003B28(dwArg04 >>u d4_64, dwArg04 << d5_66 | dwArg08 >>u d4_64, dwArg0C << d5_66 | dwArg10 >>u d4_64, out d1_89, out d2_90)
	word32 d3_75 = dwArg10 << d5_66
	word32 d7_104 = __swap(d0_88)
	word32 d6_106 = __swap(d3_75)
	word32 d3_105 = d3_75 *u SLICE(d7_104, word16, 0)
	word32 d2_110 = __swap(d0_88 *u SLICE(d3_75, word16, 0))
	word16 v36_111 = SLICE(d2_110 + d3_105, word16, 0)
	word16 v37_112 = SLICE(d2_110, word16, 16)
	word32 d4_107 = d0_88 *u SLICE(d6_106, word16, 0)
	word16 v40_119 = SLICE(SEQ(v37_112, v36_111) + d4_107, word16, 0)
	word32 d2_127 = __swap(SEQ(v37_112, v40_119))
	word32 d7_108 = d7_104 *u SLICE(d6_106, word16, 0)
	word32 d6_85 = dwArg08 << d5_66
	word32 d3_135 = __swap(SEQ(SLICE(d3_105, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_107, word16, 16), 0<16>)) + SEQ(SLICE(d7_108, word16, 16), (SLICE(d7_108, word16, 0) + (v36_111 <u 0<16>)) + (v40_119 <u 0<16>))
	word32 v49_137 = d1_89 - d2_127
	branch v49_137 <u 0<32> l00003D68
l00003D62:
	branch v49_137 != 0<32> l00003D6C
l00003D64:
	branch d6_85 - d3_135 >=u 0<32> l00003D6C
l00003D68:
	d3_135 = d3_135 - d3_75
	d2_127 = d2_127 - d2_90 - (d3_135 <u 0<32>)
l00003D6C:
	word32 d6_157 = d6_85 - d3_135
	d1_171 = d1_89 - d2_127 - (d6_157 <u 0<32>) << 32<i32> - d5_66 | d6_157 >>u d5_66
l00003CFE:
	branch dwArg0C - dwArg04 <u 0<32> l00003D06
l00003D02:
	branch dwArg10 - dwArg08 >u 0<32> l00003D80
l00003D06:
	d1_171 = dwArg08 - dwArg10
l00003C8C:
	branch dwArg04 - dwArg10 >=u 0<32> l00003C9E
l00003C9E:
	branch dwArg10 != 0<32> l00003CAA
l00003CA2:
	d3_202 = (int32) (uint16) (1<i32> /u SLICE(dwArg10, uint16, 0))
l00003CAA:
	word32 d1_211
	word32 d2_212
	fn00003B28(0<i32>, dwArg04, d3_202, out d1_211, out d2_212)
	word32 d2_355
	fn00003B28(d1_211, dwArg08, d2_212, out d1_171, out d2_355)
l00003C90:
	word32 d2_354
	fn00003B28(dwArg04, dwArg08, dwArg10, out d1_171, out d2_354)
l00003D80:
	return d1_171
fn00003C74_exit:


