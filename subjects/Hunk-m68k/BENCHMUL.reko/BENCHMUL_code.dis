void fn00001000(word32 d0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	word32 a6_9 = Mem0[0x00000004<p32>:word32]
	word32 d2_260 = d0
	word32 a2_271 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	word32 a0_13 = 0x000040F8<p32>
	word32 d0_16 = 0xC<u32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem29[0x000040F8<p32>:word32] = fp
	Mem32[0x000040FC<p32>:word32] = a6_9
	word32 d0_34 = FindTask(0<32>)
	word32 d0_109 = OpenLibrary(0x000012BC<p32>, 0<i32>)
	branch d0_109 == 0<32> l00001226
l00001226:
	Alert(0x38007<32>)
l00001056:
	word32 d4_71
	Mem64[0x00004100<p32>:word32] = d0_109
	branch Mem64[d0_34 + 172<i32>:word32] != 0<32> l00001066
l00001066:
	word32 a0_70 = a0
	d4_71 = 3<i32>
l0000106A:
	branch Mem64[a0_675:byte] != 0x20<8> l00001072
l00001070:
	d4_71 = SEQ(SLICE(d4_71, word16, 16), SLICE(d4_71, word16, 0) + 1<16>)
l00001072:
	a0_70 = a0_675 + 1<i32>
	a0_675 = a0_70
	branch Mem64[a0_675:byte] != 0<8> l0000106A
l00001060:
	d4_71 = 2<i32>
	d2_260 = 8<i32>
l00001076:
	word32 d0_97 = d4_71 << 2<32>
	word32 d0_104 = d0_97 + d2_260
	word32 d1_108 = 0x10001<32>
	d0_109 = AllocMem(d0_104 + 0x11<32>, 0x10001<32>)
	branch d0_109 == 0<32> l0000123E
l0000123E:
	CloseLibrary(Mem64[0x00004100<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem150[d0_34 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn00001214(d0_34)
	fn0000126C(d0_109)
l00001268:
	return
l00001096:
	word32 dwLoc0C_528
	word32 a0_423
	Mem164[d0_109:word32] = d0_104 + 0x11<32>
	Mem167[d0_109 + 12<i32>:word32] = d4_71 - 1<32>
	Mem170[d0_109 + 8<i32>:word32] = d0_109 + 16<i32> + d0_97
	Mem172[0<32>:word32] = 0<32>
	word32 d0_173 = Mem172[d0_34 + 172<i32>:word32]
	branch d0_173 == 0<32> l00001190
l00001190:
	fn00001214(d0_34)
	Mem178[0x00004104<p32>:word32] = d0_173
	Mem179[0x00004108<p32>:word32] = d0_173
	Mem183[0<32>:word32] = 0<32>
	dwLoc0C_528 = d0_173
	word32 d0_186 = Mem183[d0_173 + 36<i32>:word32]
	branch d0_186 == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	Supervisor(d0_109)
	Mem197[d0_109 + 4<i32>:word32] = d0_186
	branch d0_186 != 0<32> l000011D2
l000011D2:
	Mem201[0x0000410C<p32>:word32] = d0_186
	Mem202[0x00004110<p32>:word32] = d0_186
	Mem203[0x00004114<p32>:word32] = d0_186
	Mem205[d0_34 + 156<i32>:word32] = d0_186
	Mem206[d0_34 + 160<i32>:word32] = d0_186
	word32 d0_210 = Mem206[(d0_186 << 2<32>) + 8<i32>:word32]
	branch d0_210 == 0<32> l000011F4
l000011F0:
	Mem213[d0_34 + 164<i32>:word32] = d0_210
l000011F4:
l000011CC:
l000011CE_thunk_fn0000127C:
	word32 a5_672
	word32 a1_671
	fn0000127C(out a1_671, out a5_672)
	return
l000010B6:
	word32 d0_234 = Mem172[(d0_173 << 2<32>) + 16<i32>:word32]
	word32 a1_237 = Mem172[d0_109 + 8<i32>:word32]
	word32 a0_242 = (d0_234 << 2<32>) + 1<i32>
	word32 d0_244 = (uint32) (uint8) Mem172[d0_234 << 2<32>:byte]
	Mem245[a0_242 + d0_244:byte] = 0<8>
	Mem246[d0_109 + 16<i32>:word32] = a0_242
	word32 a6_247 = d0_109 + 20<i32>
	word32 d3_248 = 1<i32>
	word32 a0_253 = a0 + d2_260
l000010DA:
	a0_253 = a0_253 - 1<i32>
	branch Mem246[a0_253:byte] >u 0x20<8> l000010E2
l000010DE_1:
	word16 v29_261 = SLICE(d2_260, word16, 0)
	d2_260 = SEQ(SLICE(d2_260, word16, 16), v29_261 - 1<i16>)
	branch v29_261 != 0<16> l000010DA
l000010E2:
	Mem266[a0_253 + 1<i32>:byte] = 0<8>
l000010E6:
	byte v31_273 = Mem272[a2_271:byte]
	a2_271 = a2_271 + 1<i32>
	d1_108 = SEQ(SLICE(d1_108, word24, 8), v31_273)
	branch v31_273 == 0<8> l00001148
l000010EA:
	branch v31_273 == 0x20<8> l000010E6
l000010F0:
	branch v31_273 == 9<8> l000010E6
l000010F6:
	branch d3_248 - Mem272[d0_109 + 12<i32>:word32] == 0<32> l00001148
l000010FC:
	Mem293[a6_247:word32] = a1_237
	a6_247 = a6_247 + 4<i32>
	d3_248 = SEQ(SLICE(d3_248, word16, 16), SLICE(d3_248, word16, 0) + 1<16>)
	branch v31_273 == 0x22<8> l0000111A
l0000111A:
	byte v50_304 = Mem303[a2_271:byte]
	word24 v51_307 = SLICE(d1_108, word24, 8)
	a2_271 = a2_271 + 1<i32>
	d1_108 = SEQ(v51_307, v50_304)
	branch v50_304 == 0<8> l00001148
l0000111E:
	branch v50_304 == 0x22<8> l00001116
l00001124:
	branch v50_304 != 0x2A<8> l00001144
l0000112A:
	byte v54_317 = Mem303[a2_271:byte]
	a2_271 = a2_271 + 1<i32>
	d1_108 = SEQ(v51_307, v54_317)
	branch (v54_317 & 0xDF<8>) != 0x4E<8> l0000113C
l0000113C:
	branch (v54_317 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_108 = 27<i32>
l00001138:
	d1_108 = 10<i32>
l00001144:
	Mem342[a1_237:byte] = SLICE(d1_108, byte, 0)
	a1_237 = a1_237 + 1<i32>
l00001106:
	Mem346[a1_237:byte] = v31_273
	a1_237 = a1_237 + 1<i32>
l00001108:
	byte v40_351 = Mem350[a2_271:byte]
	a2_271 = a2_271 + 1<i32>
	d1_108 = SEQ(SLICE(d1_108, word24, 8), v40_351)
	branch v40_351 == 0<8> l00001148
l00001148:
	Mem360[a1_237:byte] = 0<8>
	Mem365[a6_247:word32] = 0<32>
	execPrivate4()
	Mem394[0x0000410C<p32>:word32] = d0_244
	execPrivate5()
	Mem395[0x00004110<p32>:word32] = d0_244
	dwLoc0C_528 = d0_109 + 16<i32>
	dwLoc10 = d3_248
	branch Mem395[Mem395[0x000040FC<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	word32 v64_405 = Mem395[d0_34 + 224<i32>:word32]
	Mem406[0x00004114<p32>:word32] = v64_405
	branch v64_405 != 0<32> l0000117E
l0000117A:
	Mem411[0x00004114<p32>:word32] = d0_244
l0000117E:
	branch Mem415[d0_34 + 8<i32>:byte] != 0xD<8> l000011F8
l000011F8:
	a0_423 = Mem421[d0_34 + 58<i32>:word32]
l00001186:
	word32 a0_426 = Mem415[d0_34 + 176<i32>:word32]
	a0_423 = a0_426 + 4<i32> - Mem415[a0_426:word32]
l00001202:
	Mem436[0x00004120<p32>:word32] = a0_423
	Mem443[0x00004124<p32>:word32] = fp - 16<i32>
	fn00001354(dwLoc10, dwLoc0C_528)
l00001212_thunk_fn0000127C:
	word32 a1_673
	word32 a5_674
	fn0000127C(out a1_673, out a5_674)
	return
fn00001000_exit:
l0000110C:
	branch v40_351 == 0x20<8> l00001116
l00001116:
	Mem475[a1_237:byte] = 0<8>
	a1_237 = a1_237 + 1<i32>
l00001112:
	Mem482[a1_237:byte] = v40_351
	a1_237 = a1_237 + 1<i32>


void fn00001214(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a3:[0..31]
// LiveOut:
// Trashed: a0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	GetMsg(a3 + 92<i32>)
	return
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


word32 fn00001278(word32 dwArg04, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000012D0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	word32 a1_6
	word32 a5_9
	word32 d1_13 = fn0000127C(out a1_6, out a5_9)
	a1Out = a1_6
	a5Out = a5_9
	return d1_13
fn00001278_exit:


word32 fn0000127C(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
//      fn00001278
// MayUse: 
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	word32 a7_6 = Mem0[0x000040F8<p32>:word32]
	word32 v7_11 = Mem0[a7_6 - 4<i32>:word32]
	word32 v5_8 = Mem0[a7_6 - 8<i32>:word32]
	word32 d1_14 = Mem0[v7_11 + 4<i32>:word32]
	branch d1_14 == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x00004100<p32>:word32])
	branch v5_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v5_8)
l000012B0:
	FreeMem(v7_11, Mem0[v7_11:word32])
	a1Out = v7_11
	a5Out = v7_11
	return d1_14
fn0000127C_exit:


word32 fn000012D0(word32 dwArg04, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000131C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d1
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch 0x4240<32> == 0<32> l00001308
l000012E2:
	word32 d2_16 = 1<i32>
	branch Mem11[0x00004244<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_16 = d2_16 + 1<32>
	branch Mem11[0x00004240<p32> + (d2_16 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	word32 d2_33 = d2_16 - 1<32>
	branch d2_33 == 0<32> l00001308
l000012FA:
	word32 d0_38 = d2_33 << 2<32>
	call Mem11[0x00004240<p32> + d0_38:word32] (retsize: 4;)
		uses: d0:d0_38,Stack +0014:dwArg04
	d2_33 = d2_33 - 1<32>
	branch d2_33 != 0<32> l000012FA
l00001308:
	word32 a1_58
	word32 a5_61
	word32 d1_64 = fn00001278(dwArg04, out a1_58, out a5_61)
	a1Out = a1_58
	a5Out = a5_61
	return d1_64
fn000012D0_exit:


word32 fn0000131C(word32 dwArg04, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
//      fn00002688
// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x00004128<p32>:word32] != 0<32> l0000134E
l00001328:
	word32 a3_13 = Mem8[0x00004250<p32>:word32]
	Mem15[0x00004128<p32>:word32] = 1<i32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem15[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_25,Stack +0010:dwArg04
	a3_13 = Mem15[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	d1 = fn000012D0(dwArg04, out a1, out a5)
l0000134E:
	a1Out = a1
	a5Out = a5
	return d1
fn0000131C_exit:


void fn00001354(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	word32 a3_17 = 0x00004238<p32>
	branch 0x4234<32> == 0<32> l00001372
l00001366:
	branch Mem8[0x00004238<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_17:word32] (retsize: 4;)
		uses: Stack +0010:dwArg04,Stack +0014:dwArg08
	a3_17 = a3_17 + 4<i32>
	branch Mem8[a3_17:word32] != 0<32> l0000136A
l00001372:
	word32 a1_83
	word32 a5_84
	fn0000131C(fn00001390(), out a1_83, out a5_84)
	return
fn00001354_exit:


word32 fn00001390()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
// MayUse: 
// LiveOut: d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00001390_entry:
l00001390:
	word32 a1_23
	word32 d1_25
	word32 a1_50
	word32 d1_52
	word32 d0_489 = fn00002E40(fn00002E40(fn000016FC(fn00002E40(fn00004068(0x000016B0<p32>, out d1_25, out a1_23), d1_25, a1_23, 0x000016CC<p32>), 0x000016D0<p32>, out d1_52, out a1_50), d1_52, a1_50, 0x000016EC<p32>), d1_52, a1_50, 0x000016F0<p32>)
	word32 d3_481 = 1<i32>
l0000168E:
	branch d3_481 - dwLoc04 <= 0<32> l000013EA
l000013EA:
	word32 d2_478 = 1<i32>
l00001684:
	d0_489 = 40<i32>
	branch d2_478 <= 40<i32> l000013F0
l000013F0:
	word32 d4_106 = __swap(3<i32>) *u SLICE(dwLoc14, word16, 0)
	word32 d0_115 = SLICE(dwLoc14, word16, 0) *u 3<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d4_106, word16, 16), SLICE(d4_106 + __swap(dwLoc14) *u 3<16>, word16, 0))), word16, 16), 0<16>)
	word32 d4_121 = __swap(d0_115) *u SLICE(dwLoc14, word16, 0)
	word32 d0_130 = d0_115 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_121, word16, 16), SLICE(d4_121 + __swap(dwLoc14) *u SLICE(d0_115, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_136 = __swap(d0_130) *u SLICE(dwLoc14, word16, 0)
	word32 d0_145 = d0_130 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_136, word16, 16), SLICE(d4_136 + __swap(dwLoc14) *u SLICE(d0_130, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_151 = __swap(d0_145) *u SLICE(dwLoc14, word16, 0)
	word32 d0_160 = d0_145 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_151, word16, 16), SLICE(d4_151 + __swap(dwLoc14) *u SLICE(d0_145, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_166 = __swap(d0_160) *u SLICE(dwLoc14, word16, 0)
	word32 d0_175 = d0_160 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_166, word16, 16), SLICE(d4_166 + __swap(dwLoc14) *u SLICE(d0_160, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_181 = __swap(d0_175) *u SLICE(dwLoc14, word16, 0)
	word32 d0_190 = d0_175 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_181, word16, 16), SLICE(d4_181 + __swap(dwLoc14) *u SLICE(d0_175, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_196 = __swap(d0_190) *u SLICE(dwLoc14, word16, 0)
	word32 d0_205 = d0_190 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_196, word16, 16), SLICE(d4_196 + __swap(dwLoc14) *u SLICE(d0_190, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_211 = __swap(d0_205) *u SLICE(dwLoc14, word16, 0)
	word32 d0_220 = d0_205 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_211, word16, 16), SLICE(d4_211 + __swap(dwLoc14) *u SLICE(d0_205, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_226 = __swap(d0_220) *u SLICE(dwLoc14, word16, 0)
	word32 d0_235 = d0_220 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_226, word16, 16), SLICE(d4_226 + __swap(dwLoc14) *u SLICE(d0_220, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_241 = __swap(d0_235) *u SLICE(dwLoc14, word16, 0)
	word32 d0_250 = d0_235 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_241, word16, 16), SLICE(d4_241 + __swap(dwLoc14) *u SLICE(d0_235, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_256 = __swap(d0_250) *u SLICE(dwLoc14, word16, 0)
	word32 d0_265 = d0_250 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_256, word16, 16), SLICE(d4_256 + __swap(dwLoc14) *u SLICE(d0_250, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_271 = __swap(d0_265) *u SLICE(dwLoc14, word16, 0)
	word32 d0_280 = d0_265 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_271, word16, 16), SLICE(d4_271 + __swap(dwLoc14) *u SLICE(d0_265, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_286 = __swap(d0_280) *u SLICE(dwLoc14, word16, 0)
	word32 d0_295 = d0_280 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_286, word16, 16), SLICE(d4_286 + __swap(dwLoc14) *u SLICE(d0_280, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_301 = __swap(d0_295) *u SLICE(dwLoc14, word16, 0)
	word32 d0_310 = d0_295 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_301, word16, 16), SLICE(d4_301 + __swap(dwLoc14) *u SLICE(d0_295, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_316 = __swap(d0_310) *u SLICE(dwLoc14, word16, 0)
	word32 d0_325 = d0_310 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_316, word16, 16), SLICE(d4_316 + __swap(dwLoc14) *u SLICE(d0_310, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_331 = __swap(d0_325) *u SLICE(dwLoc14, word16, 0)
	word32 d0_340 = d0_325 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_331, word16, 16), SLICE(d4_331 + __swap(dwLoc14) *u SLICE(d0_325, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_346 = __swap(d0_340) *u SLICE(dwLoc14, word16, 0)
	word32 d0_355 = d0_340 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_346, word16, 16), SLICE(d4_346 + __swap(dwLoc14) *u SLICE(d0_340, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_361 = __swap(d0_355) *u SLICE(dwLoc14, word16, 0)
	word32 d0_370 = d0_355 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_361, word16, 16), SLICE(d4_361 + __swap(dwLoc14) *u SLICE(d0_355, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_376 = __swap(d0_370) *u SLICE(dwLoc14, word16, 0)
	word32 d0_385 = d0_370 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_376, word16, 16), SLICE(d4_376 + __swap(dwLoc14) *u SLICE(d0_370, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_391 = __swap(d0_385) *u SLICE(dwLoc14, word16, 0)
	word32 d0_400 = d0_385 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_391, word16, 16), SLICE(d4_391 + __swap(dwLoc14) *u SLICE(d0_385, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_406 = __swap(d0_400) *u SLICE(dwLoc14, word16, 0)
	word32 d0_415 = d0_400 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_406, word16, 16), SLICE(d4_406 + __swap(dwLoc14) *u SLICE(d0_400, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_421 = __swap(d0_415) *u SLICE(dwLoc14, word16, 0)
	word32 d0_430 = d0_415 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_421, word16, 16), SLICE(d4_421 + __swap(dwLoc14) *u SLICE(d0_415, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_436 = __swap(d0_430) *u SLICE(dwLoc14, word16, 0)
	word32 d0_445 = d0_430 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_436, word16, 16), SLICE(d4_436 + __swap(dwLoc14) *u SLICE(d0_430, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d4_451 = __swap(d0_445) *u SLICE(dwLoc14, word16, 0)
	word32 d0_460 = d0_445 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d4_451, word16, 16), SLICE(d4_451 + __swap(dwLoc14) *u SLICE(d0_445, word16, 0), word16, 0))), word16, 16), 0<16>)
	word32 d5_467 = __swap(d0_460) *u SLICE(dwLoc14, word16, 0)
	dwLoc14 = d0_460 *u SLICE(dwLoc14, word16, 0) + SEQ(SLICE(__swap(SEQ(SLICE(d5_467, word16, 16), SLICE(d5_467 + __swap(dwLoc14) *u SLICE(d0_460, word16, 0), word16, 0))), word16, 16), 0<16>)
	d2_478 = d2_478 + 1<32>
l0000168C:
	d3_481 = d3_481 + 1<32>
l00001696:
	word32 d1_546
	word32 a1_547
	return fn000016FC(d0_489, 0x000016F4<p32>, out d1_546, out a1_547)
fn00001390_exit:


word32 fn000016FC(word32 d0, word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut: a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn000016FC_entry:
l000016FC:
	word32 a1_16
	word32 d1_17
	word32 d0_14 = fn00001718(d0, Mem8[0x00004258<p32>:word32], dwArg04, fp + 8<i32>, out d1_17, out a1_16)
	d1Out = d1_17
	a1Out = a1_16
	return d0_14
fn000016FC_exit:


word32 fn00001718(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & d1Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000016FC
// MayUse:  d0:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
fn00001718_entry:
l00001718:
	word32 d0_1870
	word32 a7_1886 = fp + -112<i32>
	word32 d3_1418 = dwArg0C
	word32 a5_1509 = dwArg04
	word32 a4_1843 = dwArg08
	word32 d6_1416 = 0<i32>
	branch Mem36[dwArg08:byte] == 0<8> l0000205E
l00001734:
	branch Mem46[a4_1843:byte] != 0x25<8> l00002038
l00002038:
	word32 a7_51 = a7_1886 - 4<i32>
	Mem53[a7_51:word32] = a5_1509
	Mem62[a7_51 - 4<i32>:word32] = (int32) (int16) Mem53[a4_1843:byte]
	a4_1843 = a4_1843 + 1<i32>
	word32 a0_64
	d0 = fn00002098(Mem62[a7_51 - 4<i32>:word32], Mem62[a7_51:word32], out d1, out a0_64, out a1, out a5_1509)
	a7_1886 = a7_51 + 4<i32>
	branch d0 != 0xFFFFFFFF<32> l00002056
l00002056:
	d6_1416 = d6_1416 + 1<32>
l00002052:
	d0_1870 = d6_1416
l0000173C:
	Mem83[a7_1886 + 64<i32>:word32] = 0<32>
	Mem85[a7_1886 + 72<i32>:word32] = 0<32>
	Mem89[a7_1886 + 102<i32>:word32] = 0<32>
	word32 d5_248 = -1<i32>
	word32 d4_367 = 105<i32>
	word32 a3_1222 = a7_1886 + 76<i32>
	word32 d7_1002 = 0<i32>
	word32 a2_131 = a4_1843 + 1<i32>
	word32 d2_126 = Mem89[a7_1886 + 72<i32>:word32]
l0000175A:
	word32 d1_100 = 0<i32>
l0000175C:
	word32 a7_97 = a7_1886 - 4<i32>
	Mem99[a7_97:word32] = d0
	d0 = Mem99[a7_97:word32]
	branch Mem99[0x00002070<p32> + d1_100:byte] - Mem99[a2_131:byte] != 0<8> l00001780
l00001780:
	d1_100 = d1_100 + 1<32>
	branch d1_100 <u 5<32> l0000175C
l0000176E:
	Mem117[a7_97:word32] = d1_100
	word32 d1_119 = 1<i32> << d1_100
	d0 = d1_119
	d1_100 = Mem117[a7_97:word32]
	d2_126 = d2_126 | d1_119
	a2_131 = a2_131 + 1<i32>
l0000178A:
	branch d1_100 <u 5<32> l0000175A
l00001792:
	word32 a0_1384
	word32 d0_154
	Mem138[a7_1886 + 72<i32>:word32] = d2_126
	branch Mem138[a2_131:byte] != 0x2A<8> l000017D0
l000017D0:
	a0_1384 = 0x00002B15<p32> + (SEQ(SLICE(d0, word24, 8), Mem138[a2_131:byte]) & 0xFF<32>)
	word32 d0_153 = (uint32) (uint8) Mem138[a0_1384:byte]
	d0_154 = d0_153 & 4<32>
	branch (d0_153 & 4<32>) == 0<32> l0000183C
l000017EC:
	d2_126 = Mem138[a7_1886 + 64<i32>:word32]
l000017F0:
	Mem165[a7_1886 - 4<i32>:word32] = d3_1418
	word32 d1_171 = __swap(10<i32>) *u SLICE(d2_126, word16, 0)
	word32 d0_180 = SLICE(d2_126, word16, 0) *u 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_171, word16, 16), SLICE(d1_171 + __swap(d2_126) *u 0xA<16>, word16, 0))), word16, 16), 0<16>)
	a2_131 = a2_131 + 1<i32>
	a0_1384 = 0x00002B15<p32> + (SEQ(SLICE(d0_180, word24, 8), Mem165[a2_131:byte]) & 0xFF<32>)
	word32 d1_190 = (int32) (int16) Mem165[a2_131:byte]
	word32 d0_204 = (uint32) (uint8) Mem165[a0_1384:byte]
	d3_1418 = Mem165[a7_1886 - 4<i32>:word32]
	d1_100 = d1_190 - 0x30<32>
	d2_126 = d1_190 - 0x30<32> + d0_180
	d0_154 = d0_204 & 4<32>
	branch (d0_204 & 4<32>) != 0<32> l000017F0
l00001838:
	Mem210[a7_1886 + 64<i32>:word32] = d2_126
l0000179C:
	d0_154 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	word32 v31_225 = Mem138[d0_154:word32]
	Mem226[a7_1886 + 44<i32>:word32] = v31_225
	a2_131 = a2_131 + 1<i32>
	d3_1418 = d0_154 + 4<32>
	a0_1384 = d0_154 + 4<32>
	branch v31_225 >= 0<32> l000017C8
l000017C8:
	Mem230[a7_1886 + 64<i32>:word32] = Mem226[a7_1886 + 44<i32>:word32]
l000017B4:
	Mem233[a7_1886 + 72<i32>:word32] = Mem226[a7_1886 + 72<i32>:word32] | 4<32>
	d0_154 = -Mem233[a7_1886 + 44<i32>:word32]
	Mem237[a7_1886 + 64<i32>:word32] = d0_154
l0000183C:
	branch Mem240[a2_131:byte] != 0x2E<8> l000018D0
l00001844:
	a2_131 = a2_131 + 1<i32>
	branch Mem240[a2_131:byte] != 0x2A<8> l0000186A
l0000186A:
	a0_1384 = 0x00002B15<p32> + (SEQ(SLICE(d0_154, word24, 8), Mem240[a2_131:byte]) & 0xFF<32>)
	word32 d0_259 = (uint32) (uint8) Mem240[a0_1384:byte]
	d5_248 = 0<i32>
	d0_154 = d0_259 & 4<32>
	branch (d0_259 & 4<32>) == 0<32> l000018D0
l00001888:
	word32 a7_267 = a7_1886 - 4<i32>
	Mem269[a7_267:word32] = d2_126
	word32 d1_275 = __swap(10<i32>) *u SLICE(d5_248, word16, 0)
	word32 d0_284 = SLICE(d5_248, word16, 0) *u 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_275, word16, 16), SLICE(d1_275 + __swap(d5_248) *u 0xA<16>, word16, 0))), word16, 16), 0<16>)
	a2_131 = a2_131 + 1<i32>
	a0_1384 = 0x00002B15<p32> + (SEQ(SLICE(d0_284, word24, 8), Mem269[a2_131:byte]) & 0xFF<32>)
	word32 d1_294 = (int32) (int16) Mem269[a2_131:byte]
	word32 d0_308 = (uint32) (uint8) Mem269[a0_1384:byte]
	d2_126 = Mem269[a7_267:word32]
	d1_100 = d1_294 - 0x30<32>
	d5_248 = d1_294 - 0x30<32> + d0_284
	d0_154 = d0_308 & 4<32>
	branch (d0_308 & 4<32>) != 0<32> l00001888
l0000184C:
	d0_154 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	word32 v38_324 = Mem240[d0_154:word32]
	Mem326[a7_1886 + 44<i32>:word32] = v38_324
	a2_131 = a2_131 + 1<i32>
	d3_1418 = d0_154 + 4<32>
	a0_1384 = d0_154 + 4<32>
	branch v38_324 < 0<32> l000018D0
l00001864:
	d5_248 = Mem326[a7_1886 + 44<i32>:word32]
l000018D0:
	word32 a7_1402 = a7_1886
	branch Mem332[a2_131:byte] == 0x68<8> l000018F4
l000018D6:
	branch Mem332[a2_131:byte] == 0x6C<8> l000018F4
l000018DC:
	branch Mem332[a2_131:byte] == 0x4C<8> l000018F4
l000018E2:
	branch Mem332[a2_131:byte] == 0x6A<8> l000018F4
l000018E8:
	branch Mem332[a2_131:byte] == 0x7A<8> l000018F4
l000018EE:
	branch Mem332[a2_131:byte] != 0x74<8> l000018FA
l000018F4:
	a2_131 = a2_131 + 1<i32>
	d4_367 = (int32) (int16) (int8) (uint32) (uint8) Mem332[a2_131:byte]
l000018FA:
	branch d4_367 != 0x68<32> l0000190C
l00001902:
	branch Mem332[a2_131:byte] != 0x68<8> l0000190C
l00001908:
	d4_367 = 2<i32>
	a2_131 = a2_131 + 1<i32>
l0000190C:
	branch d4_367 != 0x6C<32> l0000191E
l00001914:
	branch Mem332[a2_131:byte] != 0x6C<8> l0000191E
l0000191A:
	d4_367 = 1<i32>
	a2_131 = a2_131 + 1<i32>
l0000191E:
	branch d4_367 != 0x6A<32> l00001928
l00001926:
	d4_367 = 1<i32>
l00001928:
	branch d4_367 != 0x7A<32> l00001932
l00001930:
	d4_367 = 108<i32>
l00001932:
	branch d4_367 != 0x74<32> l0000193C
l0000193A:
	d4_367 = 105<i32>
l0000193C:
	word32 d5_1417
	byte v88_419 = Mem332[a2_131:byte]
	word32 a2_1810 = a2_131 + 1<i32>
	d1 = SEQ(SLICE(d1_100, word24, 8), v88_419)
	word32 d0_1408 = SEQ(SLICE(d0_154, word24, 8), v88_419)
	branch v88_419 == 0x25<8> l00001DC4
l00001DC4:
	Mem455[a7_1886 + 102<i32>:word32] = 1<32>
	a3_1222 = 0x0000206C<p32>
	d5_1417 = 0<i32>
l00001948:
	branch v88_419 == 0x58<8> l00001996
l0000194E:
	branch v88_419 == 0x63<8> l00001D44
l00001D44:
	branch d4_367 != 0x6C<32> l00001D60
l00001D60:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem500[a3_1222:byte] = Mem332[d0_1408 + 3<32>:byte]
l00001D4C:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem511[a3_1222:byte] = Mem332[d0_1408 + 3<32>:byte]
l00001D72:
	a0_1384 = (d3_1418 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d3_1418 = (d3_1418 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	Mem514[a7_1886 + 102<i32>:word32] = 1<32>
	d5_1417 = 0<i32>
l00001956:
	branch v88_419 == 0x64<8> l00001996
l0000195C:
	branch v88_419 == 0x69<8> l00001996
l00001962:
	Mem524[a7_1886 + 44<i32>:byte] = v88_419
	branch v88_419 == 0x6E<8> l00001DD6
l00001DD6:
	branch d4_367 != 1<32> l00001DF8
l00001DF8:
	branch d4_367 != 0x6C<32> l00001E16
l00001E16:
	branch d4_367 != 0x68<32> l00001E34
l00001E34:
	branch d4_367 != 2<32> l00001E52
l00001E52:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a0_1384 = Mem524[d0_1408:word32]
	Mem563[a0_1384:word32] = d6_1416
l00001E3C:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a0_1384 = Mem524[d0_1408:word32]
	Mem575[a0_1384:byte] = SLICE(d6_1416, byte, 0)
l00001E1E:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a0_1384 = Mem524[d0_1408:word32]
	Mem587[a0_1384:word16] = SLICE(d6_1416, word16, 0)
l00001E00:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a0_1384 = Mem524[d0_1408:word32]
	Mem598[a0_1384:word32] = d6_1416
l00001DDE:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a0_1384 = Mem524[d0_1408:word32]
	Mem609[a0_1384 + 4<i32>:word32] = d6_1416
	Mem610[a0_1384:word32] = 0<32>
l00001E66:
	d3_1418 = (d3_1418 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	Mem617[a7_1886 + 64<i32>:word32] = 0<32>
	d5_1417 = 0<i32>
l0000196E:
	branch Mem524[a7_1886 + 44<i32>:byte] <=u 0x70<8> l00001996
l0000197C:
	byte v105_632 = Mem524[a7_1886 + 44<i32>:byte]
	branch v105_632 == 0x73<8> l00001D80
l00001D80:
	d0_1408 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	a3_1222 = Mem524[d0_1408:word32]
	Mem648[a7_1886 + 102<i32>:word32] = 0<32>
	d3_1418 = d0_1408 + 4<32>
	a0_1384 = d0_1408 + 4<32>
	a1 = a3_1222
	branch d5_248 == 0<32> l00001DA2
l00001D9C:
	branch d5_248 - Mem648[a7_1886 + 102<i32>:word32] <=u 0<32> l00001DBE
l00001DA2:
	branch Mem648[a3_1222:byte] == 0<8> l00001DBE
l00001DA6:
	d0_1408 = Mem648[a7_1886 + 102<i32>:word32]
l00001DAA:
	d0_1408 = d0_1408 + 1<32>
	a1 = a1 + 1<i32>
	branch d5_248 <=u 0<32> l00001DB6
l00001DB2:
	branch d5_248 - d0_1408 <=u 0<32> l00001DBA
l00001DB6:
	branch Mem648[a1:byte] != 0<8> l00001DAA
l00001DBA:
	Mem704[a7_1886 + 102<i32>:word32] = d0_1408
l00001DBE:
	d5_1417 = 0<i32>
l00001988:
	branch v105_632 == 0x75<8> l00001996
l0000198E:
	branch v105_632 != 0x78<8> l00001E6E
l00001E6E:
	branch v88_419 != 0<8> l00001E74
l00001E72:
	a2_1810 = a2_1810 - 1<i32>
l00001E74:
	d0_1408 = a2_1810 - a4_1843
	Mem740[a7_1886 + 102<i32>:word32] = d0_1408
	Mem742[a7_1886 + 64<i32>:word32] = 0<32>
	a3_1222 = a4_1843
	d5_1417 = 0<i32>
l00001996:
	branch v88_419 != 0x70<8> l000019A8
l0000199C:
	Mem756[a7_1886 + 72<i32>:word32] = Mem754[a7_1886 + 72<i32>:word32] | 1<32>
	d4_367 = 108<i32>
	d1 = 120<i32>
l000019A8:
	word32 d3_1022
	word32 a7_1155
	branch SLICE(d1, byte, 0) == 0x64<8> l000019B6
l000019AE:
	branch SLICE(d1, byte, 0) != 0x69<8> l00001B00
l00001B00:
	branch d4_367 != 1<32> l00001B24
l00001B24:
	branch d4_367 != 0x6C<32> l00001B46
l00001B46:
	word32 d0_780 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem788[a7_1886 + 60<i32>:word32] = Mem785[d0_780:word32]
	Mem789[a7_1886 + 56<i32>:word32] = 0<32>
	d3_1022 = d0_780 + 4<32>
l00001B2C:
	word32 d0_797 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem803[a7_1886 + 60<i32>:word32] = Mem785[d0_797:word32]
	Mem804[a7_1886 + 56<i32>:word32] = 0<32>
	d3_1022 = d0_797 + 4<32>
l00001B08:
	word32 d0_812 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem818[a7_1886 + 60<i32>:word32] = Mem785[d0_812 + 4<32>:word32]
	Mem820[a7_1886 + 56<i32>:word32] = Mem818[d0_812:word32]
	d3_1022 = d0_812 + 8<32>
l00001B5E:
	branch d4_367 != 0x68<32> l00001B7A
l00001B66:
	word16 v191_828 = Mem827[a7_1886 + 62<i32>:word16]
	word32 a7_832 = a7_1886 - 4<i32>
	Mem834[a7_832:word32] = d1
	Mem839[a7_832 + 64<i32>:word32] = (uint32) (uint16) v191_828
	Mem840[a7_832 + 60<i32>:word32] = 0<32>
	d1 = Mem840[a7_832:word32]
l00001B7A:
	branch d4_367 != 2<32> l00001B96
l00001B82:
	byte v200_851 = Mem850[a7_1886 + 63<i32>:byte]
	word32 a7_855 = a7_1886 - 4<i32>
	Mem857[a7_855:word32] = d1
	Mem862[a7_855 + 64<i32>:word32] = (uint32) (uint8) v200_851
	Mem863[a7_855 + 60<i32>:word32] = 0<32>
	d1 = Mem863[a7_855:word32]
l00001B96:
	word32 d0_871 = Mem870[a7_1886 + 72<i32>:word32] & 1<i32>
	Mem874[a7_1886 + 44<i32>:byte] = SLICE(d1, byte, 0)
	a7_1155 = a7_1886
	branch d0_871 == 0<32> l00001C34
l00001BA6:
	branch SLICE(d1, byte, 0) != 0x6F<8> l00001BE2
l00001BAC:
	branch d5_248 != 0<32> l00001BD6
l00001BB0:
	word32 a7_891 = a7_1886 - 4<i32>
	Mem892[a7_891:word32] = d0_871
	Mem894[a7_891 - 4<i32>:word32] = d1
	word32 d0_895 = Mem894[a7_891 + 64<i32>:word32]
	word32 d1_896 = Mem894[a7_891 + 60<i32>:word32]
	Mem912[a7_891 - 8<i32>:word32] = d2_126
	d2_126 = Mem912[a7_891 - 8<i32>:word32]
	d1 = Mem912[a7_891 - 4<i32>:word32]
	d0_871 = Mem912[a7_891:word32]
	branch d1_896 - (d0_895 <u 0<32>) == 0<32> l00001BE2
l00001BD6:
	Mem951[a7_1886 + 106<i32>:byte] = 0x30<8>
	d7_1002 = 1<32>
l00001BE2:
	a7_1155 = a7_1886
	branch SLICE(d1, byte, 0) == 0x78<8> l00001BF2
l00001BE8:
	Mem960[a7_1886 + 44<i32>:byte] = SLICE(d1, byte, 0)
	branch SLICE(d1, byte, 0) != 0x58<8> l00001C34
l00001BF2:
	Mem967[a7_1886 + 44<i32>:byte] = SLICE(d1, byte, 0)
	word32 a7_968 = a7_1886 - 4<i32>
	Mem972[a7_968:word32] = d0_871
	Mem974[a7_968 - 4<i32>:word32] = d1
	word32 d0_975 = Mem974[a7_968 + 64<i32>:word32]
	word32 d1_976 = Mem974[a7_968 + 60<i32>:word32]
	Mem981[a7_968 - 8<i32>:word32] = d2_126
	word32 d1_990 = Mem981[a7_968 - 4<i32>:word32]
	a7_1155 = a7_968 + 4<i32>
	branch d1_976 - (d0_975 <u 0<32>) == 0<32> l00001C34
l00001C1C:
	Mem1000[a7_968 + 110<i32> + d7_1002:byte] = 0x30<8>
	word32 d7_999 = d7_1002 + 1<32>
	Mem1005[a7_968 + 110<i32> + d7_999:byte] = SLICE(d1_990, byte, 0)
	Mem1007[a7_968 + 48<i32>:byte] = SLICE(d1_990, byte, 0)
	d7_1002 = d7_999 + 1<32>
l000019B6:
	word32 d0_1032
	branch d4_367 != 1<32> l000019DC
l000019DC:
	branch d4_367 != 0x6C<32> l00001A08
l00001A08:
	word32 d0_1020 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	word32 d0_1025 = Mem785[d0_1020:word32]
	Mem1027[a7_1886 + 52<i32>:word32] = d0_1025
	word32 a7_1028 = a7_1886 - 4<i32>
	Mem1030[a7_1028:word32] = d1
	Mem1034[a7_1028 + 52<i32>:word32] = d0_1025 >> 31<i32>
	word32 v172_1035 = Mem1034[a7_1028:word32]
	d3_1022 = d0_1020 + 4<32>
	d0_1032 = d0_1025 >> 31<i32>
	d1 = v172_1035
	branch d4_367 != 0x68<32> l00001A4E
l00001A32:
	word16 v174_1041 = Mem1034[a7_1028 + 58<i32>:word16]
	Mem1045[a7_1028:word32] = v172_1035
	word32 d1_1049 = (int32) v174_1041
	Mem1050[a7_1028 + 56<i32>:word32] = d1_1049
	Mem1052[a7_1028 - 4<i32>:word32] = SEQ(SLICE(d0_1025 >> 31<i32>, word16, 16), v174_1041)
	Mem1056[a7_1028 + 52<i32>:word32] = d1_1049 >> 31<i32>
	d1 = Mem1056[a7_1028 - 4<i32>:word32]
	d0_1032 = Mem1056[a7_1028:word32]
l00001A4E:
	branch d4_367 != 2<32> l00001A74
l00001A56:
	byte v181_1070 = Mem1069[a7_1886 + 55<i32>:byte]
	word32 a7_1074 = a7_1886 - 4<i32>
	Mem1076[a7_1074:word32] = d1
	word32 d1_1081 = (int32) (int16) v181_1070
	Mem1082[a7_1074 + 56<i32>:word32] = d1_1081
	Mem1084[a7_1074 - 4<i32>:word32] = SEQ(SLICE(d0_1032, word24, 8), v181_1070)
	Mem1088[a7_1074 + 52<i32>:word32] = d1_1081 >> 31<i32>
	d1 = Mem1088[a7_1074 - 4<i32>:word32]
	d0_1032 = Mem1088[a7_1074:word32]
l000019E4:
	word32 d0_1099 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	word32 d0_1103 = Mem785[d0_1099:word32]
	Mem1104[a7_1886 + 52<i32>:word32] = d0_1103
	word32 a7_1105 = a7_1886 - 4<i32>
	Mem1106[a7_1105:word32] = d1
	Mem1110[a7_1105 + 52<i32>:word32] = d0_1103 >> 31<i32>
	d3_1022 = d0_1099 + 4<32>
	d0_1032 = d0_1103 >> 31<i32>
	d1 = Mem1110[a7_1105:word32]
l000019BE:
	d0_1032 = d3_1418 + 3<32> >>u 2<32> << 2<32>
	Mem1124[a7_1886 + 52<i32>:word32] = Mem785[d0_1032 + 4<32>:word32]
	Mem1126[a7_1886 + 48<i32>:word32] = Mem1124[d0_1032:word32]
	d3_1022 = d0_1032 + 8<32>
l00001A74:
	Mem1131[a7_1886 + 44<i32>:byte] = SLICE(d1, byte, 0)
	word32 a7_1132 = a7_1886 - 4<i32>
	Mem1134[a7_1132:word32] = d0_1032
	Mem1136[a7_1132 - 4<i32>:word32] = d1
	word32 d0_1137 = Mem1136[a7_1132 + 56<i32>:word32]
	word32 d1_1138 = Mem1136[a7_1132 + 52<i32>:word32]
	Mem1143[a7_1132 - 8<i32>:word32] = d2_126
	a7_1155 = a7_1132 + 4<i32>
	branch d1_1138 - (d0_1137 <u 0<32>) >= 0<32> l00001ABE
l00001ABE:
	byte v134_1157 = Mem1143[a7_1132 + 48<i32>:byte]
	branch (Mem1143[a7_1132 + 76<i32>:word32] & 16<i32>) == 0<32> l00001AD8
l00001AD8:
	branch (Mem1143[a7_1132 + 76<i32>:word32] & 8<i32>) == 0<32> l00001AEC
l00001AE0:
	Mem1179[a7_1132 + 110<i32>:byte] = 0x20<8>
	d7_1002 = 1<32>
l00001ACA:
	Mem1185[a7_1132 + 110<i32>:byte] = 0x2B<8>
	d7_1002 = 1<32>
l00001AEC:
	Mem1190[a7_1132 + 64<i32>:word32] = Mem1188[a7_1132 + 56<i32>:word32]
	Mem1192[a7_1132 + 60<i32>:word32] = Mem1190[a7_1132 + 52<i32>:word32]
	Mem1195[a7_1132 + 48<i32>:byte] = v134_1157
l00001A9E:
	Mem1200[a7_1132 + 110<i32>:byte] = 0x2D<8>
	d7_1002 = 1<32>
	a7_1155 = Mem1200[a7_1132 + 0x40<32>:word32]
l00001C34:
	byte v128_1218 = Mem1217[a7_1155 + 44<i32>:byte]
	a3_1222 = a7_1155 + 98<i32>
	branch v128_1218 == 0x78<8> l00001C48
l00001C42:
	branch v128_1218 != 0x58<8> l00001C52
l00001C52:
	branch v128_1218 != 0x6F<8> l00001C62
l00001C62:
	Mem1232[a7_1155 + 48<i32>:word32] = 0xA<32>
l00001C58:
	Mem1234[a7_1155 + 48<i32>:word32] = 8<32>
l00001C6A:
	Mem1239[a7_1155 + 44<i32>:word32] = Mem1237[a7_1155 + 48<i32>:word32]
l00001C48:
	Mem1242[a7_1155 + 44<i32>:word32] = 0x10<32>
l00001C70:
	word32 a6_1254
	Mem1247[a7_1155 + 108<i32>:word32] = Mem1245[a7_1155 + 44<i32>:word32]
	branch v128_1218 == 0x58<8> l00001C82
l00001C82:
	a6_1254 = 0x00002088<p32>
l00001C7C:
	a6_1254 = 0x00002078<p32>
l00001C86:
	Mem1258[a7_1155 + 44<i32>:word32] = a6_1254
	Mem1273[a7_1155 + 124<i32>:word32] = d3_1022
	Mem1286[a7_1155 + 68<i32>:word32] = d5_248
	Mem1304[a7_1155 + 48<i32>:word32] = d6_1416
	Mem1311[a7_1155 + 98<i32>:word32] = d7_1002
	word32 v147_1312 = a7_1155 + 56<i32>
	word32 d6_1313 = Mem1311[v147_1312:word32]
	word32 d7_1315 = Mem1311[v147_1312 + 4<i32>:word32]
	word32 d3_1317 = Mem1311[a7_1155 + 102<i32>:word32]
	a1 = Mem1311[a7_1155 + 44<i32>:word32]
l00001CA8:
	word32 d1_1322 = Mem1321[a7_1155 + 108<i32>:word32]
	word32 a7_1327 = a7_1155 - 4<i32>
	Mem1328[a7_1327:word32] = d1_1322 >> 31<i32>
	Mem1330[a7_1327 - 4<i32>:word32] = d1_1322
	Mem1333[a7_1327 - 8<i32>:word32] = a1
	Mem1336[a7_1327 - 12<i32>:word32] = d1_1322
	Mem1338[a7_1327 - 16<i32>:word32] = d1_1322 >> 31<i32>
	Mem1341[a7_1327 - 20<i32>:word32] = d7_1315
	Mem1344[a7_1327 - 24<i32>:word32] = d6_1313
	word32 d1_1347 = fn00002A00(Mem1344[a7_1327 - 24<i32>:word32], Mem1344[a7_1327 - 20<i32>:word32], Mem1344[a7_1327 - 16<i32>:word32], Mem1344[a7_1327 - 12<i32>:word32])
	word32 v148_1355 = Mem1344[a7_1327 - 8<i32>:word32]
	word32 d1_1360 = Mem1344[a7_1327 - 4<i32>:word32]
	word32 d0_1362 = Mem1344[a7_1327:word32]
	a3_1222 = a3_1222 - 1<i32>
	Mem1368[a3_1222:byte] = Mem1344[v148_1355 + d1_1347:byte]
	Mem1370[a7_1327:word32] = d0_1362
	Mem1372[a7_1327 - 4<i32>:word32] = d1_1360
	Mem1374[a7_1327 - 8<i32>:word32] = v148_1355
	Mem1377[a7_1327 - 12<i32>:word32] = d1_1360
	Mem1379[a7_1327 - 16<i32>:word32] = d0_1362
	Mem1381[a7_1327 - 20<i32>:word32] = d7_1315
	Mem1383[a7_1327 - 24<i32>:word32] = d6_1313
	word32 d1_1387
	word32 d0_1386 = fn000026B8(Mem1383[a7_1327 - 24<i32>:word32], Mem1383[a7_1327 - 20<i32>:word32], Mem1383[a7_1327 - 16<i32>:word32], Mem1383[a7_1327 - 12<i32>:word32], out d1_1387, out a0_1384)
	a1 = Mem1383[a7_1327 - 8<i32>:word32]
	d6_1313 = d0_1386
	d7_1315 = d1_1387
	a7_1402 = a7_1327 + 4<i32>
	d3_1317 = d3_1317 + 1<32>
	d0_1408 = d1_1387
	d1 = d0_1386 - (d1_1387 <u 0<32>)
	branch d1 != 0<32> l00001CA8
l00001D16:
	Mem1414[a7_1327 + 106<i32>:word32] = d3_1317
	d7_1002 = Mem1414[a7_1327 + 102<i32>:word32]
	d6_1416 = Mem1414[a7_1327 + 52<i32>:word32]
	d5_1417 = Mem1414[a7_1327 + 72<i32>:word32]
	d3_1418 = Mem1414[a7_1327 + 128<i32>:word32]
	branch d5_1417 != 0xFFFFFFFF<32> l00001D38
l00001D38:
	Mem1423[a7_1327 + 76<i32>:word32] = Mem1414[a7_1327 + 76<i32>:word32] & 0xFFFFFFFD<32>
l00001D32:
	d5_1417 = 0<i32>
l00001E84:
	branch d5_1417 - Mem1432[a7_1402 + 102<i32>:word32] >u 0<32> l00001E92
l00001E92:
	Mem1437[a7_1402 + 44<i32>:word32] = d5_1417
l00001E8A:
	Mem1440[a7_1402 + 44<i32>:word32] = Mem1432[a7_1402 + 102<i32>:word32]
l00001E96:
	word32 a7_1443 = a7_1402 - 4<i32>
	Mem1450[a7_1443:word32] = d0_1408
	Mem1464[a7_1443 + 52<i32>:word32] = Mem1450[a7_1443 + 48<i32>:word32] + d7_1002
	Mem1469[a7_1443:word32] = Mem1464[a7_1443:word32]
	word32 d0_1473 = Mem1469[a7_1443:word32]
	branch Mem1469[a7_1443 + 52<i32>:word32] - Mem1469[a7_1443 + 68<i32>:word32] <u 0<32> l00001EBA
l00001EBA:
	Mem1477[a7_1443:word32] = d0_1473
	Mem1481[a7_1443 + 48<i32>:word32] = Mem1477[a7_1443 + 68<i32>:word32] - Mem1477[a7_1443 + 52<i32>:word32]
l00001EB4:
	Mem1486[a7_1443 + 48<i32>:word32] = 0<32>
l00001ECA:
	Mem1494[a7_1402 + 48<i32>:word32] = Mem1492[a7_1402 + 44<i32>:word32]
	branch (Mem1494[a7_1402 + 72<i32>:word32] & 2<i32>) == 0<32> l00001F0C
l00001ED8:
	word32 d2_1501 = 0<i32>
	branch d7_1002 == 0<32> l00001F0C
l00001EDE:
	word32 a7_1508 = a7_1402 - 4<i32>
	Mem1510[a7_1508:word32] = a5_1509
	Mem1521[a7_1508 - 4<i32>:word32] = (int32) (int16) Mem1510[a7_1508 + 110<i32> + d2_1501:byte]
	branch fn00002098(Mem1521[a7_1508 - 4<i32>:word32], Mem1521[a7_1508:word32], out d1, out a0_1384, out a1, out a5_1509) != 0xFFFFFFFF<32> l00001F04
l00001F04:
	d2_1501 = d2_1501 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch d7_1002 - d2_1501 >u 0<32> l00001EDE
l00001F0C:
	branch (Mem1547[a7_1402 + 72<i32>:word32] & 4<i32>) != 0<32> l00001F5E
l00001F14:
	word32 d2_1553 = 0<i32>
	branch Mem1547[a7_1402 + 48<i32>:word32] == 0<32> l00001F5E
l00001F1C:
	word32 d4_1558 = Mem1547[a7_1402 + 72<i32>:word32]
	word32 a4_1560 = Mem1547[a7_1402 + 48<i32>:word32]
l00001F24:
	word32 a0_1574
	word32 a7_1562 = a7_1402 - 4<i32>
	Mem1564[a7_1562:word32] = a5_1509
	branch (d4_1558 & 2<i32>) == 0<32> l00001F32
l00001F32:
	a0_1574 = SEQ(SLICE(a0_1384, word16, 16), 0x20<16>)
l00001F2C:
	a0_1574 = SEQ(SLICE(a0_1384, word16, 16), 0x30<16>)
l00001F36:
	Mem1580[a7_1402 - 8<i32>:word32] = a0_1574
	branch fn00002098(Mem1580[a7_1402 - 8<i32>:word32], Mem1580[a7_1402 - 4<i32>:word32], out d1, out a0_1384, out a1, out a5_1509) != 0xFFFFFFFF<32> l00001F4E
l00001F4E:
	d2_1553 = d2_1553 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch a4_1560 - d2_1553 >u 0<32> l00001F24
l00001F56:
	Mem1608[a7_1562 + 52<i32>:word32] = a4_1560
	Mem1610[a7_1562 + 76<i32>:word32] = d4_1558
l00001F5E:
	branch (Mem1614[a7_1402 + 72<i32>:word32] & 2<i32>) != 0<32> l00001F9A
l00001F66:
	word32 d2_1620 = 0<i32>
	branch d7_1002 == 0<32> l00001F9A
l00001F6C:
	word32 a7_1630 = a7_1402 - 4<i32>
	Mem1632[a7_1630:word32] = a5_1509
	Mem1643[a7_1630 - 4<i32>:word32] = (int32) (int16) Mem1632[a7_1630 + 110<i32> + d2_1620:byte]
	word32 a0_2838
	branch fn00002098(Mem1643[a7_1630 - 4<i32>:word32], Mem1643[a7_1630:word32], out d1, out a0_2838, out a1, out a5_1509) != 0xFFFFFFFF<32> l00001F92
l00001F92:
	d2_1620 = d2_1620 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch d7_1002 - d2_1620 >u 0<32> l00001F6C
l00001F9A:
	word32 d2_1669 = Mem1668[a7_1402 + 102<i32>:word32]
	branch d5_1417 - Mem1668[a7_1402 + 102<i32>:word32] <=u 0<32> l00001FC8
l00001FA4:
	word32 a7_1683 = a7_1402 - 4<i32>
	Mem1685[a7_1683:word32] = a5_1509
	Mem1688[a7_1683 - 4<i32>:word32] = 0x00000030<p32>
	word32 a0_2839
	branch fn00002098(Mem1688[a7_1683 - 4<i32>:word32], Mem1688[a7_1683:word32], out d1, out a0_2839, out a1, out a5_1509) != 0xFFFFFFFF<32> l00001FC0
l00001FC0:
	d2_1669 = d2_1669 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch d5_1417 - d2_1669 >u 0<32> l00001FA4
l00001FC8:
	word32 d2_1712 = 0<i32>
	branch Mem1714[a7_1402 + 102<i32>:word32] == 0<32> l00001FFE
l00001FD0:
	word32 a4_1719 = Mem1714[a7_1402 + 102<i32>:word32]
l00001FD4:
	word32 a7_1721 = a7_1402 - 4<i32>
	Mem1723[a7_1721:word32] = a5_1509
	Mem1734[a7_1721 - 4<i32>:word32] = (int32) (int16) Mem1723[a3_1222 + d2_1712:byte]
	word32 a0_2840
	branch fn00002098(Mem1734[a7_1721 - 4<i32>:word32], Mem1734[a7_1721:word32], out d1, out a0_2840, out a1, out a5_1509) != 0xFFFFFFFF<32> l00001FF6
l00001FF6:
	d2_1712 = d2_1712 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch a4_1719 - d2_1712 >u 0<32> l00001FD4
l00001FFE:
	d0 = Mem1760[a7_1402 + 72<i32>:word32] & 4<i32>
	branch d0 == 0<32> l00002034
l00002006:
	word32 d2_1766 = 0<i32>
	branch Mem1760[a7_1402 + 48<i32>:word32] == 0<32> l00002034
l0000200E:
	word32 a3_1771 = Mem1760[a7_1402 + 48<i32>:word32]
l00002012:
	word32 a7_1773 = a7_1402 - 4<i32>
	Mem1775[a7_1773:word32] = a5_1509
	Mem1778[a7_1773 - 4<i32>:word32] = 0x00000020<p32>
	word32 a0_2841
	d0 = fn00002098(Mem1778[a7_1773 - 4<i32>:word32], Mem1778[a7_1773:word32], out d1, out a0_2841, out a1, out a5_1509)
	branch d0 != 0xFFFFFFFF<32> l0000202C
l0000202C:
	d2_1766 = d2_1766 + 1<32>
	d6_1416 = d6_1416 + 1<32>
	branch a3_1771 - d2_1766 >u 0<32> l00002012
l00002034:
	a7_1886 = a7_1402
	a4_1843 = a2_1810
l00002058:
	branch Mem1845[a4_1843:byte] != 0<8> l00001734
l0000205E:
	d0_1870 = d6_1416
l00002028:
	d0_1870 = d6_1416
l00001FF2:
	d0_1870 = d6_1416
l00001FBA:
	d0_1870 = d6_1416
l00001F8C:
	d0_1870 = d6_1416
l00001F48:
	d0_1870 = d6_1416
l00001EFE:
	d0_1870 = d6_1416
l00002060:
	d1Out = d1
	a1Out = a1
	return d0_1870
fn00001718_exit:


word32 fn00002098(word32 dwArg04, word32 dwArg08, ptr32 & d1Out, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001718
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a1 a5 d0 d1
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00002098_entry:
l00002098:
	word32 a1_102
	word32 a0_101
	word32 d1_51
	Mem17[dwArg08 + 24<i32>:word32] = Mem11[dwArg08 + 24<i32>:word32] | 2<i32>
	word32 v13_19 = Mem17[dwArg08 + 20<i32>:word32] - 1<32>
	Mem20[dwArg08 + 20<i32>:word32] = v13_19
	branch v13_19 < 0<32> l000020DC
l000020B4:
	branch dwArg04 != 10<i32> l000020C6
l000020BA:
	branch (Mem20[dwArg08 + 24<i32>:word32] & 0x80<32>) != 0<32> l000020DC
l000020DC:
	d1_51 = fn000020F4(dwArg04, dwArg08, out a0_101, out a1_102, out a5)
l000020C6:
	a0_101 = Mem20[dwArg08 + 4<i32>:word32]
	Mem60[dwArg08 + 4<i32>:word32] = a0_101 + 1<i32>
	Mem63[a0_101:byte] = SLICE(dwArg04, byte, 0)
	a1_102 = dwArg08 + 4<i32>
	d1_51 = (uint32) (uint8) Mem63[a0_101:byte]
l000020EA:
	d1Out = d1_51
	a0Out = a0_101
	a1Out = a1_102
	a5Out = a5
	return d1_51
fn00002098_exit:


word32 fn000020F4(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002098
//      fn00004068
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a1 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
fn000020F4_entry:
l000020F4:
	word32 d0_107
	word32 a5_123
	word32 a1_121
	fn00002688(out a1_121, out a5_123)
	branch dwArg08 != 0<32> l00002110
l00002110:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 73<i32>) == 64<i32> l00002122
l00002122:
	branch Mem29[dwArg08 + 28<i32>:word32] != 0<32> l00002140
l00002128:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 4<i32>) == 0<32> l00002138
l00002138:
	Mem61[dwArg08 + 28<i32>:word32] = 0x400<32>
l00002130:
	Mem64[dwArg08 + 28<i32>:word32] = 1<i32>
l00002140:
	branch Mem67[dwArg08 + 8<i32>:word32] != 0<32> l00002180
l00002180:
	branch Mem67[dwArg08:word32] == 0<32> l000021DA
l000021DA:
	d0_107 = 0<i32>
l00002184:
	word32 d0_79 = Mem67[dwArg08 + 24<i32>:word32] & 0x80<32>
	branch d0_79 == 0<32> l000021B0
l00002190:
	d0_79 = 10<i32>
	branch dwArg04 != 10<i32> l000021B0
l000021B0:
	word32 d4_93 = Mem67[dwArg08 + 4<i32>:word32] - Mem67[dwArg08 + 8<i32>:word32]
	execPrivate3()
	branch d4_93 - d0_79 == 0<32> l000021DE
l000021CE:
	Mem106[dwArg08 + 24<i32>:word32] = Mem67[dwArg08 + 24<i32>:word32] | 16<i32>
	a0 = dwArg08 + 24<i32>
	d0_107 = -1<i32>
l00002196:
	word32 a0_110 = Mem67[dwArg08 + 4<i32>:word32]
	Mem113[dwArg08 + 4<i32>:word32] = a0_110 + 1<i32>
	Mem115[a0_110:byte] = SLICE(dwArg04, byte, 0)
	d0_107 = fn00002208(dwArg08, out a0, out a1_121, out a5_123)
l00002146:
	word32 d4_139
	branch (Mem67[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l0000215A
l0000215A:
	d4_139 = 1<i32>
l00002156:
	d4_139 = 2<i32>
l0000215C:
	word32 d1_156
	word32 d0_155 = fn000022B4(d4_139 + Mem67[dwArg08 + 28<i32>:word32], out d1_156, out a0, out a1_121)
	branch d0_155 != 0<32> l00002176
l00002176:
	Mem168[dwArg08 + 8<i32>:word32] = d0_155 + 1<i32>
l000021DE:
	Mem175[dwArg08 + 24<i32>:word32] = Mem173[dwArg08 + 24<i32>:word32] | 2<i32>
	a0 = Mem175[dwArg08 + 8<i32>:word32]
	Mem182[a0:byte] = SLICE(dwArg04, byte, 0)
	word32 a1_183 = Mem182[dwArg08 + 8<i32>:word32]
	Mem185[dwArg08 + 4<i32>:word32] = a1_183 + 1<i32>
	Mem189[dwArg08 + 20<i32>:word32] = Mem185[dwArg08 + 28<i32>:word32] - 1<32>
	a1_121 = a1_183 + 1<i32>
	d0_107 = 0<i32>
l00002170:
	d0_107 = -1<i32>
l0000211C:
	d0_107 = -1<i32>
l0000210A:
	d0_107 = -1<i32>
l00002202:
	a0Out = a0
	a1Out = a1_121
	a5Out = a5_123
	return d0_107
fn000020F4_exit:


word32 fn00002208(word32 dwArg04, ptr32 & a0Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000020F4
//      fn00002DFC
//      fn0000402C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 a1 a5 d0
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
fn00002208_entry:
l00002208:
	word32 d0_151
	word32 a1_21
	word32 a5_23
	fn00002688(out a1_21, out a5_23)
	branch dwArg04 != 0<32> l0000221E
l0000221E:
	branch Mem17[dwArg04 + 28<i32>:word32] != 0<32> l0000223C
l00002224:
	branch (Mem17[dwArg04 + 24<i32>:word32] & 4<i32>) == 0<32> l00002234
l00002234:
	Mem41[dwArg04 + 28<i32>:word32] = 0x400<32>
l0000222C:
	Mem44[dwArg04 + 28<i32>:word32] = 1<i32>
l0000223C:
	branch Mem47[dwArg04 + 8<i32>:word32] != 0<32> l00002246
l00002246:
	word32 d0_53 = Mem47[dwArg04 + 24<i32>:word32] & 2<i32>
	branch d0_53 == 0<32> l0000228C
l0000224E:
	branch Mem47[dwArg04:word32] == 0<32> l0000227C
l0000227C:
	d0_151 = 0<i32>
l00002252:
	word32 d4_66 = Mem47[dwArg04 + 4<i32>:word32] - Mem47[dwArg04 + 8<i32>:word32]
	execPrivate3()
	branch d4_66 - d0_53 == 0<32> l00002280
l00002280:
	Mem76[dwArg04 + 4<i32>:word32] = Mem47[dwArg04 + 8<i32>:word32]
	Mem78[dwArg04 + 20<i32>:word32] = Mem76[dwArg04 + 28<i32>:word32]
l0000228C:
	Mem85[dwArg04 + 24<i32>:word32] = Mem83[dwArg04 + 24<i32>:word32] & -4<i32>
	a0 = dwArg04 + 24<i32>
	d0_151 = 0<i32>
l00002270:
	Mem91[dwArg04 + 24<i32>:word32] = Mem47[dwArg04 + 24<i32>:word32] | 16<i32>
	a0 = dwArg04 + 24<i32>
	d0_151 = -1<i32>
l00002242:
	d0_151 = 0<i32>
l0000221A:
	d0_151 = -1<i32>
l00002296:
	a0Out = a0
	a1Out = a1_21
	a5Out = a5_23
	return d0_151
fn00002208_exit:


word32 fn000022B4(word32 dwArg04, ptr32 & d1Out, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000020F4
//      fn00003F30
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 a1 d0 d1
// Trashed: CVZN a0 a1 d0 d1
// Preserved: X a7 d2
fn000022B4_entry:
l000022B4:
	word32 d0_100
	branch dwArg04 != 0<32> l000022C2
l000022C2:
	branch Mem5[0x00004130<p32>:word32] != 0<32> l000022E6
l000022CA:
	word32 a0_13 = Mem5[0x0000412C<p32>:word32]
	Mem19[0<32>:word32] = 0<32>
	Mem33[0x00004130<p32>:word32] = fn000025A8(dwLoc10, a0_13, a0_13, out d1, out a0, out a1)
l000022E6:
	branch Mem36[0x00004130<p32>:word32] != 0<32> l000022F2
l000022F2:
	word32 d0_53 = fn00002484(Mem47[0x00004130<p32>:word32], dwArg04 + 4<i32>, out d1, out a0)
	a1 = d0_53
	branch d0_53 != 0<32> l00002310
l00002310:
	Mem66[d0_53:word32] = dwArg04
	a0 = d0_53 + 4<i32>
	d0_100 = d0_53 + 4<i32>
l0000230C:
	d0_100 = 0<i32>
l000022EE:
	d0_100 = 0<i32>
l000022BE:
	d0_100 = 0<i32>
l00002318:
	d1Out = d1
	a0Out = a0
	a1Out = a1
	return d0_100
fn000022B4_exit:


void fn00002320(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00002320_entry:
l00002320:
	branch dwArg04 == 0<32> l0000234A
l0000232A:
	branch Mem0[0x00004130<p32>:word32] == 0<32> l0000234A
l00002332:
	fn000023E8(Mem21[0x00004130<p32>:word32], dwArg04 - 4<i32>, Mem0[dwArg04 - 4<i32>:word32] + 4<i32>)
l0000234A:
	return
fn00002320_exit:


void fn000023E8(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002320
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
fn000023E8_entry:
l000023E8:
	branch Mem20[Mem20[0x000040FC<p32>:word32] + 20<i32>:word16] <u 0x27<16> l00002418
l00002418:
	branch dwArg04 == 0<32> l0000247C
l0000241C:
	branch dwArg08 == 0<32> l0000247C
l00002420:
	word32 a3_36 = dwArg08 + -12<i32>
	branch dwArg0C - Mem20[dwArg04 + 20<i32>:word32] >=u 0<32> l00002462
l0000242C:
	word32 a2_40 = dwArg04
l0000242E:
	a2_40 = Mem20[a2_40:word32]
	branch Mem20[a2_40:word32] == 0<32> l0000247C
l00002434:
	branch Mem20[a2_40 + 8<i32>:byte] == 0<8> l0000242E
l0000243A:
	branch dwArg08 - Mem20[a2_40 + 20<i32>:word32] <u 0<32> l0000242E
l00002440:
	branch dwArg08 - Mem20[a2_40 + 24<i32>:word32] >=u 0<32> l0000242E
l00002446:
	Deallocate(a2_40, dwArg08, dwArg0C)
	branch Mem20[a2_40 + 28<i32>:word32] - Mem20[dwArg04 + 16<i32>:word32] != 0<32> l0000247C
l00002460:
	a3_36 = a2_40
l00002462:
	Remove(a3_36)
	word32 a3_74 = a3_36 - 4<i32>
	FreeMem(a3_74, Mem20[a3_74:word32])
l00002406:
	FreePooled(dwArg08, dwArg04)
l0000247C:
	return
fn000023E8_exit:


word32 fn00002484(word32 dwArg04, word32 dwArg08, ptr32 & d1Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000022B4
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
fn00002484_entry:
l00002484:
	word32 d0_152
	word32 a0_109 = Mem26[0x000040FC<p32>:word32]
	branch Mem26[a0_109 + 20<i32>:word16] <u 0x27<16> l000024B0
l000024B0:
	word32 a3_114 = 0<32>
	branch dwArg04 == 0<32> l000025A0
l000024B8:
	branch dwArg08 == 0<32> l000025A0
l000024BE:
	branch dwArg08 - Mem26[dwArg04 + 20<i32>:word32] >=u 0<32> l00002572
l00002572:
	d1 = Mem26[dwArg04 + 12<i32>:word32]
	word32 d0_50 = AllocMem(dwArg08 + 16<i32>, d1)
	a3_114 = d0_50
	branch d0_50 == 0<32> l000025A0
l0000258C:
	Mem55[d0_50:word32] = dwArg08 + 16<i32>
	AddTail(dwArg04, d0_50 + 4<i32>)
	Mem61[d0_50 + 12<i32>:word32] = 0<32>
	a0_109 = dwArg04
	a3_114 = d0_50 + 16<i32>
l000024C6:
	word32 a5_156 = Mem26[dwArg04:word32]
l000024C8:
	branch Mem26[a5_156:word32] == 0<32> l000024EA
l000024EA:
	word32 d3_76 = Mem26[dwArg04 + 16<i32>:word32] + 40<i32>
	d1 = Mem26[dwArg04 + 12<i32>:word32]
	word32 d0_81 = AllocMem(d3_76, d1)
	a3_114 = d0_81
	branch d0_81 == 0<32> l000025A0
l00002508:
	Mem86[d0_81:word32] = d3_76
	Mem88[d0_81 + 12<i32>:byte] = 0xA<8>
	Mem91[d0_81 + 20<i32>:word32] = d0_81 + 40<i32>
	Mem92[d0_81 + 24<i32>:word32] = d0_81 + 40<i32>
	Mem94[Mem92[d0_81 + 20<i32>:word32]:word32] = 0<32>
	word32 a2_95 = Mem94[d0_81 + 20<i32>:word32]
	Mem98[a2_95 + 4<i32>:word32] = Mem94[dwArg04 + 16<i32>:word32]
	Mem101[d0_81 + 32<i32>:word32] = Mem98[a2_95 + 4<i32>:word32]
	Mem104[d0_81 + 28<i32>:word32] = Mem101[d0_81 + 32<i32>:word32] + Mem101[d0_81 + 20<i32>:word32]
	AddHead(dwArg04, d0_81 + 4<i32>)
	a0_109 = d0_81 + 4<i32>
	a3_114 = Allocate(d0_81 + 4<i32>, dwArg08)
l000024CC:
	branch Mem26[a5_156 + 8<i32>:byte] == 0<8> l000024E6
l000024D2:
	word32 d0_122 = Allocate(a5_156, dwArg08)
	a0_109 = a5_156
	a3_114 = d0_122
	branch d0_122 != 0<32> l00002556
l00002556:
	branch (Mem129[dwArg04 + 12<i32>:word32] & 0x10000<32>) == 0<32> l000025A0
l00002562:
	word32 a2_136 = a3_114
	word32 d2_139 = dwArg08 + 7<32> >>u 3<32>
l00002568:
	Mem142[a2_136:word32] = 0<32>
	word32 a2_143 = a2_136 + 4<i32>
	Mem144[a2_143:word32] = 0<32>
	a2_136 = a2_143 + 4<i32>
	d2_139 = d2_139 - 1<32>
	branch d2_139 != 0<32> l00002568
l00002570:
l000025A0:
	d0_152 = a3_114
l000024E6:
	a5_156 = Mem26[a5_156:word32]
l0000249E:
	a0_109 = dwArg04
	d0_152 = AllocPooled(dwArg08, dwArg04)
l000025A2:
	d1Out = d1
	a0Out = a0_109
	return d0_152
fn00002484_exit:


word32 fn000025A8(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & d1Out, ptr32 & a0Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000022B4
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a0 a1 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
fn000025A8_entry:
l000025A8:
	word32 d0_47
	word32 a0_17 = Mem14[0x000040FC<p32>:word32]
	branch Mem14[a0_17 + 20<i32>:word16] <u 0x27<16> l000025D6
l000025D6:
	a1 = 0<32>
	branch dwArg08 - dwArg0C <u 0<32> l00002610
l000025DC:
	word32 d0_30 = AllocMem(24<i32>, 0<i32>)
	d1 = 0<i32>
	a1 = d0_30
	branch d0_30 == 0<32> l00002610
l000025F2:
	Mem36[d0_30:word32] = d0_30 + 4<i32>
	Mem37[d0_30 + 4<i32>:word32] = 0<32>
	Mem38[d0_30 + 8<i32>:word32] = d0_30
	Mem40[d0_30 + 12<i32>:word32] = dwArg04
	Mem43[d0_30 + 16<i32>:word32] = dwArg08 + 7<32> & -8<i32>
	Mem44[d0_30 + 20<i32>:word32] = dwArg0C
	a0_17 = d0_30 + 4<i32>
l00002610:
	d0_47 = a1
l000025C2:
	d1 = dwArg08
	d0_47 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
l00002612:
	d1Out = d1
	a0Out = a0_17
	a1Out = a1
	return d0_47
fn000025A8_exit:


void fn00002618(word32 d0, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
fn00002618_entry:
l00002618:
	branch Mem11[Mem11[0x000040FC<p32>:word32] + 20<i32>:word16] <u 0x27<16> l0000263C
l0000263C:
	branch dwArg04 == 0<32> l00002680
l00002640:
	RemHead(dwArg04)
	word32 a2_24 = d0
	branch d0 == 0<32> l00002672
l00002652:
	word32 a2_29 = a2_24 - 4<i32>
	word32 d0_31 = Mem11[a2_29:word32]
	FreeMem(a2_29, d0_31)
	RemHead(dwArg04)
	a2_24 = d0_31
	branch d0_31 != 0<32> l00002652
l00002672:
	FreeMem(dwArg04, 24<i32>)
l0000262E:
	DeletePrivatePool(dwArg04)
l00002680:
	return
fn00002618_exit:


word32 fn00002688(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000020F4
//      fn00002208
//      fn00003F30
// MayUse: 
// LiveOut: a1 a5 d1
// Trashed: CVZN a1 a4 a5 d0 d1
// Preserved: a6 a7
fn00002688_entry:
l00002688:
	SetSignal(0<i32>, 0x1000<32>)
	word32 d1_21 = 0x1000<32>
	branch 0<32> == 0<32> l000026B2
l000026A6:
	d1_21 = fn0000131C(0x00000014<p32>, out a1, out a5)
l000026B2:
	a1Out = a1
	a5Out = a5
	return d1_21
fn00002688_exit:


word32 fn000026B8(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001718
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: a0 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn000026B8_entry:
l000026B8:
	word32 d0_196
	word32 d1_142 = dwArg08
	word32 a0_20 = dwArg08
	word32 d3_166 = dwArg10
	branch dwArg0C != 0<32> l0000270E
l0000270E:
	branch dwArg04 - dwArg0C >=u 0<32> l00002718
l00002718:
	word32 d4_29 = 24<i32>
	word32 d6_30 = __rol(dwArg0C, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l00002736
l00002722:
	d4_29 = 16<i32>
	d6_30 = __rol(d6_30, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l00002736
l0000272A:
	d4_29 = 8<i32>
	d6_30 = __rol(d6_30, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l00002736
l00002732:
	d4_29 = 0<i32>
	d6_30 = SEQ(SLICE(d6_30, word24, 8), SLICE(dwArg0C, byte, 0))
l00002736:
	word32 d4_61 = SEQ(SLICE(d4_29, word24, 8), SLICE(d4_29, byte, 0) + Mem17[0x00004134<p32> + (int32) (SLICE(d6_30, word16, 0) & 0xFF<16>):byte])
	word32 d5_63 = 32<i32> - d4_61
	branch d5_63 != 0<32> l00002756
l00002756:
	word32 d1_86
	word32 d2_322
	word32 d0_85 = fn000027BC(dwArg04 >>u d4_61, dwArg04 << d5_63 | dwArg08 >>u d4_61, dwArg0C << d5_63 | dwArg10 >>u d4_61, out d1_86, out d2_322)
	word32 d3_72 = dwArg10 << d5_63
	word32 d5_101 = __swap(d0_85)
	word32 d6_103 = __swap(d3_72)
	word32 d3_102 = d3_72 *u SLICE(d5_101, word16, 0)
	word32 d2_107 = __swap(d0_85 *u SLICE(d3_72, word16, 0))
	word16 v34_108 = SLICE(d2_107 + d3_102, word16, 0)
	word16 v35_109 = SLICE(d2_107, word16, 16)
	word32 d4_104 = d0_85 *u SLICE(d6_103, word16, 0)
	word16 v39_116 = SLICE(SEQ(v35_109, v34_108) + d4_104, word16, 0)
	word32 d6_82 = dwArg08 << d5_63
	word32 d2_124 = __swap(SEQ(v35_109, v39_116))
	word32 d5_105 = d5_101 *u SLICE(d6_103, word16, 0)
	a0_20 = d6_82
	d1_142 = d0_85
	word32 v48_134 = d1_86 - ((__swap(SEQ(SLICE(d3_102, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_104, word16, 16), 0<16>))) + SEQ(SLICE(d5_105, word16, 16), (SLICE(d5_105, word16, 0) + (v34_108 <u 0<16>)) + (v39_116 <u 0<16>)))
	branch v48_134 <u 0<32> l000027B2
l000027AC:
	branch v48_134 != 0<32> l000027B4
l000027AE:
	branch d6_82 - d2_124 >=u 0<32> l000027B4
l000027B2:
	d1_142 = d0_85 - 1<32>
l0000274A:
	branch dwArg0C - dwArg04 <u 0<32> l00002752
l0000274E:
	branch dwArg10 - dwArg08 >u 0<32> l00002712
l00002752:
l00002712:
l000026D0:
	branch dwArg04 - dwArg10 >=u 0<32> l000026E2
l000026E2:
	branch dwArg10 != 0<32> l000026EE
l000026E6:
	d3_166 = (int32) (uint16) (1<i32> /u SLICE(dwArg10, uint16, 0))
l000026EE:
	word32 d1_175
	word32 d2_176
	word32 d0_174 = fn000027BC(0<i32>, dwArg04, d3_166, out d1_175, out d2_176)
	word32 d2_321
	word32 d1_320
	d1_142 = fn000027BC(d1_175, dwArg08, d2_176, out d1_320, out d2_321)
	d0_196 = d0_174
l000026D4:
	word32 d2_319
	word32 d1_318
	d1_142 = fn000027BC(dwArg04, dwArg08, dwArg10, out d1_318, out d2_319)
l000027B4:
	d0_196 = 0<i32>
l000027B6:
	d1Out = d1_142
	a0Out = a0_20
	return d0_196
fn000026B8_exit:


word32 fn000027BC(word32 d0, word32 d1, word32 d2, ptr32 & d1Out, ptr32 & d2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000026B8
//      fn00002A00
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1 d2
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn000027BC_entry:
l000027BC:
	word32 d7_13 = d2
	branch d2 == 0<32> l000027D6
l000027C4:
	word32 d6_17 = d1
	word32 d5_19 = d0
	branch d0 != 0<32> l000027E4
l000027E4:
	word32 d2_22 = __swap(d2)
	branch SLICE(d2_22, word16, 0) != 0<16> l0000280C
l0000280C:
	byte bLoc26_362 = 0<8>
	word32 d0_44 = 0<i32>
	branch d2 < 0<32> l00002828
l0000281E:
	d6_17 = d6_17 * 2<32>
	d0_44 = SEQ(SLICE(d0_44, word16, 16), SLICE(d0_44, word16, 0) + 1<16>)
	d5_19 = d5_19 * 2<32> + (d6_17 <u 0<32>)
	d7_13 = d7_13 * 2<32>
	branch d7_13 > 0<32> l0000281E
l00002828:
	word16 v40_64 = SLICE(d0_44, word16, 0)
l0000282A:
	word32 d1_104
	word32 d2_73 = __swap(d5_19)
	word32 d3_74 = __swap(d7_13)
	branch SLICE(d2_73 - d3_74, word16, 0) != 0<16> l0000283C
l0000283C:
	d1_104 = __swap(SEQ(SLICE(__swap(SEQ((uint16) (d5_19 % SLICE(d3_74, uint16, 0)), (uint16) (d5_19 /u SLICE(d3_74, uint16, 0)))), word16, 16), 0<16>))
l00002836:
	d1_104 = 0xFFFF<32>
l00002846:
	word32 d6_98 = __swap(SEQ(SLICE(d6_17, word16, 16), 0<16>))
l0000284C:
	word32 d4_113 = __swap(d5_19 - __swap(d7_13) *u SLICE(d1_104, word16, 0))
	word16 wLoc22_442 = SLICE(dwLoc24, word16, 0)
	word32 d2_106 = d1_104 *u SLICE(d7_13, word16, 0)
	word32 d4_121 = SEQ(SLICE(d4_113, word16, 16), SLICE(d6_98, word16, 0))
	branch SLICE(d4_113, word16, 0) != 0<16> l0000286C
l00002864:
	branch d2_106 - d4_121 <=u 0<32> l0000286C
l0000286C:
	word32 d6_133 = __swap(d1_104)
	word32 d3_140 = __swap(d6_133)
	word32 d4_142 = __swap(d7_13)
	word32 d5_141 = d7_13 *u SLICE(d3_140, word16, 0)
	word32 d6_146 = __swap(d6_133 *u SLICE(d7_13, word16, 0))
	word16 v54_147 = SLICE(d6_146 + d5_141, word16, 0)
	word16 v55_148 = SLICE(d6_146, word16, 16)
	word32 d2_143 = d6_133 *u SLICE(d4_142, word16, 0)
	word16 v58_155 = SLICE(SEQ(v55_148, v54_147) + d2_143, word16, 0)
	word32 d3_144 = d3_140 *u SLICE(d4_142, word16, 0)
	word32 d6_178 = d6_17 - __swap(SEQ(v55_148, v58_155))
	word32 d5_181 = d5_19 - ((__swap(SEQ(SLICE(d5_141, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d2_143, word16, 16), 0<16>))) + SEQ(SLICE(d3_144, word16, 16), (SLICE(d3_144, word16, 0) + (v54_147 <u 0<16>)) + (v58_155 <u 0<16>))) - (d6_178 <u 0<32>)
	branch d5_181 >=u 0<32> l000028C4
l000028AE:
	d6_178 = d6_178 + SEQ(SLICE(__swap(d7_13), word16, 16), 0<16>)
	d1_104 = d1_104 - 1<32>
	d5_181 = d5_181 + (d6_178 <u 0<32>) + __swap(SEQ(SLICE(d7_13, word16, 16), 0<16>))
l000028C4:
	branch bLoc26_362 != 0<8> l000028E0
l000028E0:
	word32 d6_220 = __swap(SEQ(SLICE(d6_178, word16, 16), SLICE(d5_181, word16, 0)))
	d0 = SEQ(SLICE(dwLoc24, word16, 16), SLICE(d1_104, word16, 0))
	word32 d5_221 = __swap(d5_181)
	word16 v80_224 = SLICE(d7_13, word16, 16)
	branch v40_64 == 0<16> l000028FA
l000028F0:
	word32 d7_230 = SEQ(v80_224, v40_64 - 1<16>)
l000028F2:
	d5_221 = d5_221 >>u 1<32>
	word16 v84_241 = SLICE(d7_230, word16, 0)
	d6_220 = __rcr(d6_220, 1<32>, SLICE(cond(d5_221), bool, 4))
	d7_230 = SEQ(SLICE(d7_230, word16, 16), v84_241 - 1<i16>)
	branch v84_241 != 0<16> l000028F2
l000028FA:
	d1 = d6_220
	d2 = d2_22
l000028CA:
	word32 d5_266 = __swap(d5_181)
	word32 d6_267 = __swap(d6_178)
	d5_19 = SEQ(SLICE(d5_266, word16, 16), SLICE(d6_267, word16, 0))
	d6_17 = SEQ(SLICE(d6_267, word16, 16), 0<16>)
	bLoc26_362 = true
	dwLoc24 = SEQ(SLICE(d1_104, word16, 0), wLoc22_442) (alias)
l00002868:
	d1_104 = d1_104 - 1<32>
l000027EA:
	word32 d0_281 = __swap(d0)
	word32 d1_282 = __swap(d1)
	word32 d0_285 = SEQ(SLICE(d0_281, word16, 16), SLICE(d1_282, word16, 0))
	word32 d0_295 = SEQ((uint16) (d0_285 % SLICE(d2, uint16, 0)), SLICE(__swap(d1_282), word16, 0))
	d2 = SEQ(SLICE(__swap((uint32) (uint16) (d0_285 /u SLICE(d2, uint16, 0))), word16, 16), (uint16) (d0_295 /u SLICE(d2, uint16, 0)))
	d1 = __swap(SEQ((uint16) (d0_295 % SLICE(d2, uint16, 0)), 0<16>))
	d0 = d2
l000027CA:
	branch d1 == 0<32> l00002902
l000027D0:
	branch d2 - d1 >u 0<32> l00002902
l000027D6:
	d0 = fn0000297A(d1, d2, d2, out d1)
l00002902:
	d1Out = d1
	d2Out = d2
	return d0
fn000027BC_exit:


word32 fn00002948(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002E8C
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a7
fn00002948_entry:
l00002948:
	branch dwArg04 > 0<32> l00002968
l00002968:
	branch dwArg08 > 0<32> l0000296A_thunk_fn0000297A
l0000296A_thunk_fn0000297A:
	word32 d1_88
	return fn0000297A(dwArg04, dwArg08, d2, out d1_88)
l0000296C:
	word32 d1_89
	return -fn0000297A(dwArg04, -dwArg08, d2, out d1_89)
l00002952:
	word32 d0_36 = -dwArg04
	branch dwArg08 > 0<32> l00002960
l00002960:
	word32 d1_43
	return -fn0000297A(d0_36, dwArg08, d2, out d1_43)
l00002958:
	word32 d1_55
	return fn0000297A(d0_36, -dwArg08, d2, out d1_55)
fn00002948_exit:


word32 fn0000297A(word32 d0, word32 d1, word32 d2, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000027BC
//      fn00002948
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn0000297A_entry:
l0000297A:
	word32 d1_20 = __swap(d1)
	word16 v9_8 = SLICE(d1_20, word16, 0)
	word16 v10_9 = SLICE(d2, word16, 16)
	word32 d2_10 = SEQ(v10_9, v9_8)
	branch v9_8 != 0<16> l000029A0
l000029A0:
	word32 d3_16 = 16<i32>
	branch SLICE(d1_20, word16, 0) >=u 0x80<16> l000029AE
l000029AA:
	d1_20 = __rol(d1_20, 8<32>)
	d3_16 = 8<32>
l000029AE:
	branch SLICE(d1_20, word16, 0) >=u 0x800<16> l000029B8
l000029B4:
	d1_20 = __rol(d1_20, 4<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 4<16>)
l000029B8:
	branch SLICE(d1_20, word16, 0) >=u 0x2000<16> l000029C2
l000029BE:
	d1_20 = __rol(d1_20, 2<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 2<16>)
l000029C2:
	branch SLICE(d1_20, word16, 0) < 0<16> l000029CA
l000029C6:
	d1_20 = __rol(d1_20, 1<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 1<16>)
l000029CA:
	word32 d0_69 = d0 >>u d3_16
	word32 d2_73 = SEQ(SLICE(__swap(SEQ(v10_9, SLICE(d0, word16, 0))), word16, 16), 0<16>) >>u d3_16
	word16 v51_80 = SLICE(__swap(d3_16), word16, 16)
	uint16 v49_77 = (uint16) (d0_69 /u SLICE(d1_20, uint16, 0))
	word32 d1_88 = __swap(d1_20)
	word32 d3_100 = SEQ(v51_80, v49_77)
	word32 d0_106 = SEQ((uint16) (d0_69 % SLICE(d1_20, uint16, 0)), SLICE(d2_73, word16, 0)) - SEQ(SLICE(d2_73, word16, 16), v49_77) *u SLICE(d1_88, word16, 0)
	branch d0_106 >=u 0<32> l000029EC
l000029E6:
	d3_100 = SEQ(v51_80, v49_77 - 1<16>)
	d0_106 = d0_106 + d1_88
l000029EA:
	branch d0_106 >=u 0<32> l000029EA
l000029EC:
	d1Out = __swap(__rol(d0_106, __swap(d3_100)))
	return (uint32) (uint16) SLICE(d3_100, word16, 0)
l00002982:
	word32 d0_132 = __swap(d0)
	word32 d1_133 = __swap(d1_20)
	word16 v13_135 = SLICE(d0_132, word16, 0)
	word32 d2_137 = SEQ(SLICE(__swap(d2_10), word16, 16), v13_135)
	branch v13_135 == 0<16> l00002990
l0000298C:
	uint16 v16_141 = (uint16) (d2_137 /u SLICE(d1_133, uint16, 0))
	d2_137 = SEQ((uint16) (d2_137 % SLICE(d1_133, uint16, 0)), v16_141)
	d0_132 = SEQ(SLICE(d0_132, word16, 16), v16_141)
l00002990:
	word32 d0_148 = __swap(d0_132)
	word32 d2_152 = SEQ(SLICE(d2_137, word16, 16), SLICE(d0_148, word16, 0))
	uint16 v32_155 = (uint16) (d2_152 /u SLICE(d1_133, uint16, 0))
	d1Out = SEQ(SLICE(d1_133, word16, 16), SLICE(__swap(SEQ((uint16) (d2_152 % SLICE(d1_133, uint16, 0)), v32_155)), word16, 0))
	return SEQ(SLICE(d0_148, word16, 16), v32_155)
fn0000297A_exit:


word32 fn00002A00(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001718
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
fn00002A00_entry:
l00002A00:
	word32 d1_171 = dwArg08
	word32 d3_202 = dwArg10
	branch dwArg0C != 0<32> l00002A52
l00002A52:
	branch dwArg04 - dwArg0C <u 0<32> l00002B0C
l00002A58:
	word32 d4_32 = 24<i32>
	word32 d6_33 = __rol(dwArg0C, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00002A76
l00002A62:
	d4_32 = 16<i32>
	d6_33 = __rol(d6_33, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00002A76
l00002A6A:
	d4_32 = 8<i32>
	d6_33 = __rol(d6_33, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00002A76
l00002A72:
	d4_32 = 0<i32>
	d6_33 = SEQ(SLICE(d6_33, word24, 8), SLICE(dwArg0C, byte, 0))
l00002A76:
	word32 d4_64 = SEQ(SLICE(d4_32, word24, 8), SLICE(d4_32, byte, 0) + Mem20[0x00004134<p32> + (int32) (SLICE(d6_33, word16, 0) & 0xFF<16>):byte])
	word32 d5_66 = 32<i32> - d4_64
	branch d5_66 != 0<32> l00002A98
l00002A98:
	word32 d1_89
	word32 d2_90
	word32 d0_88 = fn000027BC(dwArg04 >>u d4_64, dwArg04 << d5_66 | dwArg08 >>u d4_64, dwArg0C << d5_66 | dwArg10 >>u d4_64, out d1_89, out d2_90)
	word32 d3_75 = dwArg10 << d5_66
	word32 d7_104 = __swap(d0_88)
	word32 d6_106 = __swap(d3_75)
	word32 d3_105 = d3_75 *u SLICE(d7_104, word16, 0)
	word32 d2_110 = __swap(d0_88 *u SLICE(d3_75, word16, 0))
	word16 v36_111 = SLICE(d2_110 + d3_105, word16, 0)
	word16 v37_112 = SLICE(d2_110, word16, 16)
	word32 d4_107 = d0_88 *u SLICE(d6_106, word16, 0)
	word16 v40_119 = SLICE(SEQ(v37_112, v36_111) + d4_107, word16, 0)
	word32 d2_127 = __swap(SEQ(v37_112, v40_119))
	word32 d7_108 = d7_104 *u SLICE(d6_106, word16, 0)
	word32 d6_85 = dwArg08 << d5_66
	word32 d3_135 = __swap(SEQ(SLICE(d3_105, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_107, word16, 16), 0<16>)) + SEQ(SLICE(d7_108, word16, 16), (SLICE(d7_108, word16, 0) + (v36_111 <u 0<16>)) + (v40_119 <u 0<16>))
	word32 v49_137 = d1_89 - d2_127
	branch v49_137 <u 0<32> l00002AF4
l00002AEE:
	branch v49_137 != 0<32> l00002AF8
l00002AF0:
	branch d6_85 - d3_135 >=u 0<32> l00002AF8
l00002AF4:
	d3_135 = d3_135 - d3_75
	d2_127 = d2_127 - d2_90 - (d3_135 <u 0<32>)
l00002AF8:
	word32 d6_157 = d6_85 - d3_135
	d1_171 = d1_89 - d2_127 - (d6_157 <u 0<32>) << 32<i32> - d5_66 | d6_157 >>u d5_66
l00002A8A:
	branch dwArg0C - dwArg04 <u 0<32> l00002A92
l00002A8E:
	branch dwArg10 - dwArg08 >u 0<32> l00002B0C
l00002A92:
	d1_171 = dwArg08 - dwArg10
l00002A18:
	branch dwArg04 - dwArg10 >=u 0<32> l00002A2A
l00002A2A:
	branch dwArg10 != 0<32> l00002A36
l00002A2E:
	d3_202 = (int32) (uint16) (1<i32> /u SLICE(dwArg10, uint16, 0))
l00002A36:
	word32 d1_211
	word32 d2_212
	fn000027BC(0<i32>, dwArg04, d3_202, out d1_211, out d2_212)
	word32 d2_355
	fn000027BC(d1_211, dwArg08, d2_212, out d1_171, out d2_355)
l00002A1C:
	word32 d2_354
	fn000027BC(dwArg04, dwArg08, dwArg10, out d1_171, out d2_354)
l00002B0C:
	return d1_171
fn00002A00_exit:


void fn00002DFC(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002DFC_entry:
l00002DFC:
	branch dwArg04 == 0<32> l00002E14
l00002E14:
	word32 a2_10 = Mem5[0x00004260<p32>:word32]
	branch a2_10 == 0<32> l00002E3A
l00002E1E:
	branch (Mem16[a2_10 + 24<i32>:word32] & 2<i32>) == 0<32> l00002E30
l00002E26:
	word32 a0_101
	word32 a1_102
	word32 a5_103
	fn00002208(a2_10, out a0_101, out a1_102, out a5_103)
l00002E30:
	a2_10 = Mem40[a2_10 + 12<i32>:word32]
	branch a2_10 != 0<32> l00002E1E
l00002E08:
	word32 a0_48
	word32 a1_49
	word32 a5_51
	fn00002208(dwArg04, out a0_48, out a1_49, out a5_51)
l00002E3A:
	return
fn00002DFC_exit:


word32 fn00002E40(word32 d0, word32 d1, word32 a1, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  a1:[0..31] d0:[0..31] d1:[0..31] Stack +0004:[0..31]
// LiveOut: d0
// Trashed: CVZN a0 d0
// Preserved: a7
fn00002E40_entry:
l00002E40:
	return fn00002E8C(d0, d1, a1, Mem8[0x00004254<p32>:word32], dwArg04, fp + 8<i32>)
fn00002E40_exit:


word32 fn00002E5C(byte bArg07, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002E8C
// MayUse:  Stack +0007:[0..7] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 d0
// Preserved: a2 a7
fn00002E5C_entry:
l00002E5C:
	word32 d0_10 = dwArg08
	branch dwArg08 == 0<32> l00002E86
l00002E68:
	d0_10 = Mem5[dwArg08 + 4<i32>:word32]
	branch d0_10 - Mem5[dwArg08 + 8<i32>:word32] >=u 0<32> l00002E7A
l00002E72:
	Mem16[Mem5[dwArg08 + 4<i32>:word32]:byte] = bArg07
l00002E7A:
	Mem22[dwArg08 + 20<i32>:word32] = Mem20[dwArg08 + 20<i32>:word32] + 1<32>
	Mem25[dwArg08 + 4<i32>:word32] = Mem22[dwArg08 + 4<i32>:word32] - 1<32>
l00002E86:
	return d0_10
fn00002E5C_exit:


word32 fn00002E8C(word32 d0, word32 d1, word32 a1, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002E40
// MayUse:  a1:[0..31] d0:[8..31] d1:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: d0
// Trashed: CVZN d0
// Preserved: X a0 a1 a2 a3 a4 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
fn00002E8C_entry:
l00002E8C:
	word32 a7_1282 = fp + -120<i32>
	word32 d2_1050 = dwArg0C
	word32 a4_261 = dwArg08
	word32 a2_104 = dwArg04
	word32 d4_126 = 0<i32>
	word32 d5_1007 = 0<i32>
	branch Mem40[dwArg08:byte] == 0<8> l00003E8E
l00002EAE:
	word32 d3_124
	word32 d3_1781 = 0<i32>
	branch Mem49[a4_261:byte] != 0x25<8> l00003D8C
l00003D8C:
	word32 d0_63 = (uint32) (uint8) Mem49[0x00002B15<p32> + (SEQ(SLICE(d0, word24, 8), Mem49[a4_261:byte]) & 0xFF<32>):byte]
	d0 = d0_63 & 8<32>
	branch (d0_63 & 8<32>) == 0<32> l00003E18
l00003E18:
	word32 a0_70 = a2_104 + 24<i32>
	Mem72[a0_70:word32] = Mem49[a0_70:word32] | 1<32>
	word32 a0_73 = a2_104 + 20<i32>
	word32 v112_74 = Mem72[a0_73:word32] - 1<32>
	Mem75[a0_73:word32] = v112_74
	branch v112_74 < 0<32> l00003E4A
l00003E4A:
	word32 a7_79 = a7_1282 - 4<i32>
	Mem80[a7_79:word32] = a2_104
	word32 a5_5161
	Mem92[a7_79 + 48<i32>:word32] = fn00003F30(Mem80[a7_79:word32], out d1, out a1, out a5_5161)
l00003E2A:
	a1 = a2_104 + 4<i32>
	word32 a0_96 = Mem75[a1:word32]
	word32 a7_97 = a7_1282 - 4<i32>
	Mem98[a7_97:word32] = a2_104
	Mem101[a1:word32] = a0_96 + 1<i32>
	a2_104 = Mem101[a7_97:word32]
	byte v114_105 = Mem101[a0_96:byte]
	Mem110[a7_97:word32] = d1
	Mem115[a7_97 + 48<i32>:word32] = (uint32) (uint8) v114_105
	d1 = Mem115[a7_97:word32]
l00003E58:
	d0 = (int32) (int16) Mem121[a4_261:byte]
	d5_1007 = Mem121[a7_1282 + 44<i32>:word32]
	d3_124 = 1<32>
	d4_126 = d4_126 + 1<32>
	branch d0 - Mem121[a7_1282 + 44<i32>:word32] == 0<32> l00003E82
l00003E6C:
	branch d5_1007 == 0xFFFFFFFF<32> l00003E7E
l00003E74:
	word32 a7_142 = a7_1282 - 4<i32>
	Mem144[a7_142:word32] = a2_104
	Mem146[a7_142 - 4<i32>:word32] = d5_1007
	d0 = fn00002E5C(Mem146[a7_142 - 1<i32>:byte], Mem146[a7_142:word32])
l00003E7E:
	d3_124 = 0<32>
	d4_126 = d4_126 - 1<32>
l00003DA8:
	word32 d0_178
	word32 a0_162 = a2_104 + 24<i32>
	Mem165[a0_162:word32] = Mem163[a0_162:word32] | 1<32>
	word32 a0_166 = a2_104 + 20<i32>
	word32 v96_167 = Mem165[a0_166:word32] - 1<32>
	Mem168[a0_166:word32] = v96_167
	branch v96_167 < 0<32> l00003DD2
l00003DD2:
	word32 a7_172 = a7_1282 - 4<i32>
	Mem173[a7_172:word32] = a2_104
	word32 d1_5159
	word32 a5_5160
	d0_178 = fn00003F30(Mem173[a7_172:word32], out d1_5159, out a1, out a5_5160)
	d1 = d0_178
l00003DBA:
	a1 = a2_104 + 4<i32>
	word32 a0_189 = Mem168[a1:word32]
	word32 a7_190 = a7_1282 - 4<i32>
	Mem191[a7_190:word32] = a2_104
	Mem194[a1:word32] = a0_189 + 1<i32>
	byte v98_198 = Mem194[a0_189:byte]
	a2_104 = Mem194[a7_190:word32]
	d0_178 = SEQ(SLICE(d0, word24, 8), v98_198)
	d1 = (uint32) (uint8) v98_198
l00003DDE:
	word32 d0_227 = (uint32) (uint8) Mem224[0x00002B15<p32> + (SEQ(SLICE(d0_178, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d5_1007 = d1
	d4_126 = d4_126 + 1<32>
	d0 = d0_227 & 8<32>
	branch (d0_227 & 8<32>) != 0<32> l00003DA8
l00003E00:
	branch d1 == 0xFFFFFFFF<32> l00003E12
l00003E08:
	word32 a7_237 = a7_1282 - 4<i32>
	Mem239[a7_237:word32] = a2_104
	Mem241[a7_237 - 4<i32>:word32] = d1
	d0 = fn00002E5C(Mem241[a7_237 - 1<i32>:byte], Mem241[a7_237:word32])
l00003E12:
	d4_126 = d4_126 - 1<32>
	d3_124 = 1<i32>
l00003E82:
	a4_261 = a4_261 + 1<i32>
l00002EB8:
	Mem263[a7_1282 + 72<i32>:byte] = 0x69<8>
	Mem264[a7_1282 + 73<i32>:byte] = 0<8>
	word32 a3_265 = a4_261 + 1<i32>
	word32 d0_275 = (uint32) (uint8) Mem264[0x00002B15<p32> + (uint32) ((uint8) Mem264[a3_265:byte]):byte]
	word32 d6_1093 = -1<i32>
	d0 = d0_275 & 4<32>
	branch (d0_275 & 4<32>) == 0<32> l00002F3C
l00002EE0:
	word32 d0_291 = (uint32) (uint8) Mem264[0x00002B15<p32> + (uint32) ((uint8) Mem264[a3_265:byte]):byte]
	d6_1093 = 0<i32>
	d0 = d0_291 & 4<32>
	branch (d0_291 & 4<32>) == 0<32> l00002F3C
l00002EFA:
	word32 a7_299 = a7_1282 - 4<i32>
	Mem301[a7_299:word32] = d2_1050
	word32 d1_307 = __swap(10<i32>) *u SLICE(d6_1093, word16, 0)
	word32 d0_316 = SLICE(d6_1093, word16, 0) *u 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_307, word16, 16), SLICE(d1_307 + __swap(d6_1093) *u 0xA<16>, word16, 0))), word16, 16), 0<16>)
	a3_265 = a3_265 + 1<i32>
	word32 d1_325 = (uint32) (uint8) Mem301[a3_265:byte]
	word32 d0_339 = (uint32) (uint8) Mem301[0x00002B15<p32> + (uint32) ((uint8) Mem301[a3_265:byte]):byte]
	d2_1050 = Mem301[a7_299:word32]
	d1 = d1_325 - 0x30<32>
	d6_1093 = d1_325 - 0x30<32> + d0_316
	d0 = d0_339 & 4<32>
	branch (d0_339 & 4<32>) != 0<32> l00002EFA
l00002F3C:
	branch Mem346[a3_265:byte] == 0x68<8> l00002F66
l00002F42:
	branch Mem346[a3_265:byte] == 0x6C<8> l00002F66
l00002F48:
	branch Mem346[a3_265:byte] == 0x4C<8> l00002F66
l00002F4E:
	branch Mem346[a3_265:byte] == 0x7A<8> l00002F66
l00002F54:
	branch Mem346[a3_265:byte] == 0x6A<8> l00002F66
l00002F5A:
	branch Mem346[a3_265:byte] == 0x74<8> l00002F66
l00002F60:
	branch Mem346[a3_265:byte] != 0x2A<8> l00002FCE
l00002F66:
	d7 = SEQ(SLICE(d7, word24, 8), Mem346[a7_1282 + 73<i32>:byte])
	d1 = SEQ(SLICE(d1, word24, 8), Mem346[a7_1282 + 72<i32>:byte])
l00002F6E:
	branch Mem346[a3_265:byte] != 0x2A<8> l00002F78
l00002F78:
	branch SLICE(d1, byte, 0) != 0x68<8> l00002F88
l00002F7E:
	branch Mem346[a3_265:byte] != 0x68<8> l00002F88
l00002F88:
	branch SLICE(d1, byte, 0) != 0x6C<8> l00002F98
l00002F8E:
	branch Mem346[a3_265:byte] != 0x6C<8> l00002F98
l00002F98:
	d1 = SEQ(SLICE(d1, word24, 8), Mem346[a3_265:byte])
l00002F94:
	d1 = 1<i32>
l00002F84:
	d1 = 2<i32>
l00002F74:
	d7 = 1<i32>
l00002F9A:
	a3_265 = a3_265 + 1<i32>
	branch Mem346[a3_265:byte] == 0x68<8> l00002F6E
l00002FA2:
	branch Mem346[a3_265:byte] == 0x6C<8> l00002F6E
l00002FA8:
	branch Mem346[a3_265:byte] == 0x4C<8> l00002F6E
l00002FAE:
	branch Mem346[a3_265:byte] == 0x7A<8> l00002F6E
l00002FB4:
	branch Mem346[a3_265:byte] == 0x6A<8> l00002F6E
l00002FBA:
	branch Mem346[a3_265:byte] == 0x74<8> l00002F6E
l00002FC0:
	branch Mem346[a3_265:byte] == 0x2A<8> l00002F6E
l00002FC6:
	Mem448[a7_1282 + 72<i32>:byte] = SLICE(d1, byte, 0)
	Mem454[a7_1282 + 73<i32>:byte] = SLICE(d7, byte, 0)
l00002FCE:
	branch Mem457[a7_1282 + 72<i32>:byte] != 0x6A<8> l00002FDC
l00002FD6:
	Mem461[a7_1282 + 72<i32>:byte] = 1<8>
l00002FDC:
	branch Mem464[a7_1282 + 72<i32>:byte] != 0x74<8> l00002FEA
l00002FE4:
	Mem468[a7_1282 + 72<i32>:byte] = 0x69<8>
l00002FEA:
	branch Mem471[a7_1282 + 72<i32>:byte] != 0x7A<8> l00002FF8
l00002FF2:
	Mem475[a7_1282 + 72<i32>:byte] = 0x6C<8>
l00002FF8:
	byte v76_482 = Mem481[a3_265:byte]
	word24 v77_488 = SLICE(d7, word24, 8)
	word32 a3_1884 = a3_265 + 1<i32>
	d7 = SEQ(v77_488, v76_482)
	branch v76_482 == 0<8> l0000306E
l00002FFC:
	branch v76_482 == 0x25<8> l0000306E
l00003002:
	branch v76_482 == 0x63<8> l0000306E
l00003008:
	branch v76_482 == 0x6E<8> l0000306E
l0000300E:
	branch v76_482 == 0x5B<8> l0000306E
l00003014:
	word32 d0_521
	word32 a0_505 = a2_104 + 24<i32>
	Mem508[a0_505:word32] = Mem506[a0_505:word32] | 1<32>
	word32 a0_509 = a2_104 + 20<i32>
	word32 v83_510 = Mem508[a0_509:word32] - 1<32>
	Mem511[a0_509:word32] = v83_510
	branch v83_510 < 0<32> l0000303E
l0000303E:
	word32 a7_515 = a7_1282 - 4<i32>
	Mem516[a7_515:word32] = a2_104
	word32 d1_5157
	word32 a5_5158
	d0_521 = fn00003F30(Mem516[a7_515:word32], out d1_5157, out a1, out a5_5158)
	d1 = d0_521
l00003026:
	a1 = a2_104 + 4<i32>
	word32 a0_532 = Mem511[a1:word32]
	word32 a7_533 = a7_1282 - 4<i32>
	Mem534[a7_533:word32] = a2_104
	Mem537[a1:word32] = a0_532 + 1<i32>
	byte v87_541 = Mem537[a0_532:byte]
	a2_104 = Mem537[a7_533:word32]
	d0_521 = SEQ(SLICE(d0, word24, 8), v87_541)
	d1 = (uint32) (uint8) v87_541
l0000304A:
	word32 d0_570 = (uint32) (uint8) Mem567[0x00002B15<p32> + (SEQ(SLICE(d0_521, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d5_1007 = d1
	d4_126 = d4_126 + 1<32>
	d0 = d0_570 & 8<32>
	branch (d0_570 & 8<32>) != 0<32> l00003014
l0000306C:
	d3_1781 = 1<i32>
l0000306E:
	word24 v124_587 = SLICE(d1, word24, 8)
	word32 d1_591 = SEQ(v124_587, v76_482 - 0x25<8>)
	branch v76_482 == 0x25<8> l000034BA
l000034BA:
	word32 a0_607 = a2_104 + 24<i32>
	Mem610[a0_607:word32] = Mem608[a0_607:word32] | 1<32>
	word32 a0_611 = a2_104 + 20<i32>
	word32 v136_612 = Mem610[a0_611:word32] - 1<32>
	Mem613[a0_611:word32] = v136_612
	branch v136_612 < 0<32> l000034EC
l000034EC:
	word32 a7_619 = a7_1282 - 4<i32>
	Mem620[a7_619:word32] = a2_104
	word32 a5_5162
	d0 = fn00003F30(Mem620[a7_619:word32], out d1, out a1, out a5_5162)
	Mem632[a7_619 + 48<i32>:word32] = d0
l000034CC:
	a1 = a2_104 + 4<i32>
	word32 a0_636 = Mem613[a1:word32]
	word32 a7_637 = a7_1282 - 4<i32>
	Mem638[a7_637:word32] = a2_104
	Mem641[a1:word32] = a0_636 + 1<i32>
	byte v138_645 = Mem641[a0_636:byte]
	a2_104 = Mem641[a7_637:word32]
	Mem660[a7_637:word32] = d1_591
	Mem665[a7_637 + 48<i32>:word32] = (uint32) (uint8) v138_645
	d0 = SEQ(SLICE(d0, word24, 8), v138_645)
	d1 = Mem665[a7_637:word32]
l000034FA:
	d5_1007 = Mem671[a7_1282 + 44<i32>:word32]
	d3_124 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
	branch Mem671[a7_1282 + 44<i32>:word32] == 0x25<32> l00003D86
l0000350E:
	branch d5_1007 == 0xFFFFFFFF<32> l00003520
l00003516:
	word32 a7_708 = a7_1282 - 4<i32>
	Mem710[a7_708:word32] = a2_104
	Mem712[a7_708 - 4<i32>:word32] = d5_1007
	d0 = fn00002E5C(Mem712[a7_708 - 1<i32>:byte], Mem712[a7_708:word32])
l00003520:
	d3_124 = d3_124 - 1<32>
	d4_126 = d4_126 - 1<32>
l00003078:
	branch v76_482 == 0x5B<8> l000031B6
l000031B6:
	Mem732[a7_1282 + 44<i32>:byte] = 0<8>
	branch Mem732[a3_1884:byte] != 0x5E<8> l000031C8
l000031C0:
	Mem739[a7_1282 + 44<i32>:byte] = 1<8>
	a3_1884 = a3_1884 + 1<i32>
l000031C8:
	Mem743[a7_1282 + 52<i32>:word32] = 0<32>
	byte v397_744 = Mem743[a7_1282 + 44<i32>:byte]
	d7 = SEQ(v77_488, v397_744)
	word32 d1_748 = Mem743[a7_1282 + 52<i32>:word32]
l000031D4:
	word32 d5_755
	branch v397_744 == 0<8> l000031E0
l000031E0:
	d5_755 = 0<i32>
l000031D8:
	d5_755 = 0xFF<32>
l000031E2:
	Mem766[a7_1282 + 78<i32> + d1_748:byte] = SLICE(d5_755, byte, 0)
	d1_748 = d1_748 + 1<32>
	branch d1_748 <u 0x20<32> l000031D4
l000031F4:
	Mem789[a7_1282 + 132<i32>:word32] = d2_1050
	Mem792[a7_1282 + 44<i32>:byte] = v397_744
	byte v405_793 = Mem792[a7_1282 + 44<i32>:byte]
l00003200:
	branch Mem798[a3_1884:byte] == 0<8> l00003276
l00003204:
	byte v407_803 = Mem798[a3_1884:byte]
	a3_1884 = a3_1884 + 1<i32>
	d1_748 = SEQ(SLICE(d1_748, word24, 8), v407_803)
	branch Mem798[a3_1884:byte] != 0x2D<8> l00003218
l0000320C:
	branch v407_803 - Mem798[a3_1884 + 1<i32>:byte] >=u 0<8> l00003218
l00003218:
	d7 = SEQ(SLICE(d7, word24, 8), v407_803)
l00003212:
	a3_1884 = a3_1884 + 2<i32>
	d7 = SEQ(SLICE(d7, word24, 8), Mem798[a3_1884 + 1<i32>:byte])
l0000321A:
	word32 d5_831 = (uint32) (uint8) v407_803
	d0 = (uint32) (uint8) SLICE(d7, byte, 0)
	branch d0 - d5_831 <u 0<32> l00003270
l00003226:
	branch v405_793 == 0<8> l0000324A
l0000324A:
	word32 a0_850 = a7_1282 + 78<i32> + (d5_831 >>u 3<32>)
	d1_748 = (uint32) (uint8) Mem858[a0_850:byte]
	Mem864[a0_850:byte] = SLICE(1<i32> << (d5_831 & 7<i32>) | d1_748, byte, 0)
l0000322A:
	word32 a0_869 = a7_1282 + 78<i32> + (d5_831 >>u 3<32>)
	d1_748 = (uint32) (uint8) Mem858[a0_869:byte]
	Mem883[a0_869:byte] = SLICE(~(1<i32> << (d5_831 & 7<i32>)) & d1_748, byte, 0)
l00003266:
	d5_831 = d5_831 + 1<32>
	d0 = (uint32) (uint8) SLICE(d7, byte, 0)
	branch d0 - d5_831 >=u 0<32> l00003226
l00003270:
	branch Mem902[a3_1884:byte] != 0x5D<8> l00003200
l00003276:
	word32 a6_1124
	d2_1050 = Mem915[a7_1282 + 132<i32>:word32]
	a3_1884 = a3_1884 + 1<i32>
	branch Mem915[a7_1282 + 73<i32>:byte] != 0<8> l00003296
l00003296:
	a6_1124 = 0<32>
l00003282:
	word32 d0_926 = d2_1050 + 3<32> >>u 2<32>
	d2_1050 = (d0_926 << 2<32>) + 4<32>
	d0 = d0_926 << 2<32>
	a6_1124 = Mem915[d2_1050 + -4<i32>:word32]
l00003298:
	word32 a0_944 = a2_104 + 24<i32>
	Mem947[a0_944:word32] = Mem915[a0_944:word32] | 1<32>
	word32 a0_948 = a2_104 + 20<i32>
	word32 v431_949 = Mem947[a0_948:word32] - 1<32>
	Mem950[a0_948:word32] = v431_949
	branch v431_949 < 0<32> l000032CA
l000032CA:
	word32 a7_954 = a7_1282 - 4<i32>
	Mem955[a7_954:word32] = a2_104
	word32 a5_5175
	d0 = fn00003F30(Mem955[a7_954:word32], out d1, out a1, out a5_5175)
	Mem967[a7_954 + 48<i32>:word32] = d0
l000032AA:
	a1 = a2_104 + 4<i32>
	word32 a0_971 = Mem950[a1:word32]
	word32 a7_972 = a7_1282 - 4<i32>
	Mem973[a7_972:word32] = a2_104
	Mem976[a1:word32] = a0_971 + 1<i32>
	byte v433_980 = Mem976[a0_971:byte]
	a2_104 = Mem976[a7_972:word32]
	Mem995[a7_972:word32] = d1_748
	Mem1000[a7_972 + 48<i32>:word32] = (uint32) (uint8) v433_980
	d0 = SEQ(SLICE(d0, word24, 8), v433_980)
	d1 = Mem1000[a7_972:word32]
l000032D8:
	d5_1007 = Mem1006[a7_1282 + 44<i32>:word32]
	word32 d3_1020 = d3_1781 + 1<32>
	word32 d4_1033 = d4_126 + 1<32>
	branch Mem1006[a7_1282 + 44<i32>:word32] == 0xFFFFFFFF<32> l000033A6
l000032EC:
	word32 a7_1039 = a7_1282 - 4<i32>
	Mem1040[a7_1039:word32] = a7_1282 + 78<i32>
	Mem1043[a7_1039 - 4<i32>:word32] = a1
	Mem1045[a7_1039 - 8<i32>:word32] = 0x00000008<p32>
	Mem1047[a7_1039 - 12<i32>:word32] = d5_1007
	d1 = (uint32) (uint8) Mem1047[Mem1047[a7_1039:word32] + fn00002948(d2_1050, Mem1047[a7_1039 - 12<i32>:word32], Mem1047[a7_1039 - 8<i32>:word32]):byte]
	a1 = Mem1047[a7_1039 - 4<i32>:word32]
	d0 = 1<i32> << (d5_1007 & 7<i32>) & d1
	branch d0 == 0<32> l000033A6
l0000331C:
	branch d6_1093 - d3_1020 <u 0<32> l000033A6
l00003322:
	byte v444_1109 = Mem1047[a7_1039 + 77<i32>:byte]
	d7 = SEQ(SLICE(d7, word24, 8), v444_1109)
l00003326:
	branch v444_1109 != 0<8> l0000332C
l0000332A:
	Mem1125[a6_1124:byte] = SLICE(d5_1007, byte, 0)
	a6_1124 = a6_1124 + 1<i32>
l0000332C:
	word32 a0_1130 = a2_104 + 24<i32>
	Mem1134[a0_1130:word32] = Mem1131[a0_1130:word32] | 1<32>
	word32 a0_1135 = a2_104 + 20<i32>
	word32 v448_1136 = Mem1134[a0_1135:word32] - 1<32>
	Mem1137[a0_1135:word32] = v448_1136
	branch v448_1136 < 0<32> l00003356
l00003356:
	word32 a7_1142 = a7_1282 - 4<i32>
	Mem1143[a7_1142:word32] = a2_104
	word32 d1_5176
	word32 a5_5177
	d0 = fn00003F30(Mem1143[a7_1142:word32], out d1_5176, out a1, out a5_5177)
	d1 = d0
l0000333E:
	a1 = a2_104 + 4<i32>
	word32 a0_1159 = Mem1137[a1:word32]
	word32 a7_1160 = a7_1282 - 4<i32>
	Mem1161[a7_1160:word32] = a2_104
	Mem1164[a1:word32] = a0_1159 + 1<i32>
	byte v450_1168 = Mem1164[a0_1159:byte]
	a2_104 = Mem1164[a7_1160:word32]
	d0 = SEQ(SLICE(d0, word24, 8), v450_1168)
	d1 = (uint32) (uint8) v450_1168
l00003362:
	d5_1007 = d1
	d3_1020 = d3_1020 + 1<32>
	d4_1033 = d4_1033 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l000033A2
l00003370:
	word32 a7_1194 = a7_1282 - 4<i32>
	Mem1195[a7_1194:word32] = a7_1282 + 78<i32>
	Mem1198[a7_1194 - 4<i32>:word32] = a1
	Mem1200[a7_1194 - 8<i32>:word32] = 0x00000008<p32>
	Mem1202[a7_1194 - 12<i32>:word32] = d1
	d1 = (uint32) (uint8) Mem1202[Mem1202[a7_1194:word32] + fn00002948(d2_1050, Mem1202[a7_1194 - 12<i32>:word32], Mem1202[a7_1194 - 8<i32>:word32]):byte]
	a1 = Mem1202[a7_1194 - 4<i32>:word32]
	d0 = 1<i32> << (d1 & 7<i32>) & d1
	branch d0 == 0<32> l000033A2
l0000339E:
	branch d6_1093 - d3_1020 >=u 0<32> l00003326
l000033A2:
	Mem1248[a7_1282 + 73<i32>:byte] = v444_1109
l000033A6:
	branch d5_1007 == 0xFFFFFFFF<32> l000033B8
l000033AE:
	word32 a7_1256 = a7_1282 - 4<i32>
	Mem1261[a7_1256:word32] = a2_104
	Mem1263[a7_1256 - 4<i32>:word32] = d5_1007
	d0 = fn00002E5C(Mem1263[a7_1256 - 1<i32>:byte], Mem1263[a7_1256:word32])
l000033B8:
	d3_124 = d3_1020 - 1<32>
	d4_126 = d4_1033 - 1<32>
	branch Mem1283[a7_1282 + 73<i32>:byte] != 0<8> l00003D86
l000033C4:
	branch d3_124 == 0<32> l00003D86
l000033CA:
	Mem1300[a6_1124:byte] = 0<8>
	Mem1303[a7_1282 + 60<i32>:word32] = Mem1300[a7_1282 + 60<i32>:word32] + 1<32>
l00003080:
	word32 d1_1307 = SEQ(v124_587, v76_482 - 0x63<8>)
	branch v76_482 == 0x63<8> l00003096
l00003096:
	branch d6_1093 != 0xFFFFFFFF<32> l000030A0
l0000309E:
	d6_1093 = 1<i32>
l000030A0:
	word32 a1_1321
	branch Mem608[a7_1282 + 73<i32>:byte] != 0<8> l000030BA
l000030BA:
	a1_1321 = 0<32>
l000030A6:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	d2_1050 = d0 + 4<32>
	a1_1321 = Mem608[d0:word32]
l000030BC:
	word32 a0_1334 = a2_104 + 24<i32>
	Mem1337[a0_1334:word32] = Mem608[a0_1334:word32] | 1<32>
	word32 a0_1338 = a2_104 + 20<i32>
	Mem1340[a0_1338:word32] = Mem1337[a0_1338:word32] - 1<32>
	Mem1344[a7_1282 + 44<i32>:word32] = a1_1321
	branch Mem1344[a0_1338:word32] < 0<32> l000030F4
l000030F4:
	word32 a1_1350 = Mem1344[a7_1282 + 44<i32>:word32]
	word32 a7_1351 = a7_1282 - 4<i32>
	Mem1352[a7_1351:word32] = a2_104
	Mem1353[a7_1351 + 48<i32>:word32] = a1_1350
	word32 a5_5168
	word32 a1_5167
	d0 = fn00003F30(Mem1353[a7_1351:word32], out d1, out a1_5167, out a5_5168)
	Mem1365[a7_1351 + 56<i32>:word32] = d0
	Mem1367[a7_1351 + 48<i32>:word32] = Mem1365[a7_1351 + 48<i32>:word32]
l000030D4:
	word32 a1_1370 = a2_104 + 4<i32>
	word32 a0_1371 = Mem1344[a1_1370:word32]
	word32 a7_1372 = a7_1282 - 4<i32>
	Mem1373[a7_1372:word32] = a2_104
	Mem1376[a1_1370:word32] = a0_1371 + 1<i32>
	byte v220_1380 = Mem1376[a0_1371:byte]
	a2_104 = Mem1376[a7_1372:word32]
	Mem1388[a7_1372:word32] = d1_1307
	Mem1393[a7_1372 + 56<i32>:word32] = (uint32) (uint8) v220_1380
	d0 = SEQ(SLICE(d0, word24, 8), v220_1380)
	d1 = Mem1393[a7_1372:word32]
l00003112:
	a1 = Mem1399[a7_1282 + 44<i32>:word32]
	d5_1007 = Mem1399[a7_1282 + 52<i32>:word32]
	word32 d3_1405 = d3_1781 + 1<32>
	word32 d4_1409 = d4_126 + 1<32>
	branch Mem1399[a7_1282 + 52<i32>:word32] == 0xFFFFFFFF<32> l0000318A
l00003128:
	Mem1414[a7_1282 + 44<i32>:word32] = a1
	branch d6_1093 - d3_1405 <u 0<32> l0000318A
l00003130:
	byte v233_1421 = Mem1414[a7_1282 + 73<i32>:byte]
	d7 = SEQ(v77_488, v233_1421)
	word32 a4_1428 = Mem1414[a7_1282 + 44<i32>:word32]
l00003138:
	branch v233_1421 != 0<8> l0000313E
l0000313C:
	Mem1437[a4_1428:byte] = SLICE(d5_1007, byte, 0)
	a4_1428 = a4_1428 + 1<i32>
l0000313E:
	word32 a0_1442 = a2_104 + 24<i32>
	Mem1446[a0_1442:word32] = Mem1443[a0_1442:word32] | 1<32>
	word32 a0_1447 = a2_104 + 20<i32>
	word32 v239_1448 = Mem1446[a0_1447:word32] - 1<32>
	Mem1449[a0_1447:word32] = v239_1448
	branch v239_1448 < 0<32> l00003168
l00003168:
	word32 a7_1454 = a7_1282 - 4<i32>
	Mem1455[a7_1454:word32] = a2_104
	word32 d1_5169
	word32 a5_5170
	d0 = fn00003F30(Mem1455[a7_1454:word32], out d1_5169, out a1, out a5_5170)
	d1 = d0
l00003150:
	a1 = a2_104 + 4<i32>
	word32 a0_1471 = Mem1449[a1:word32]
	word32 a7_1472 = a7_1282 - 4<i32>
	Mem1473[a7_1472:word32] = a2_104
	Mem1476[a1:word32] = a0_1471 + 1<i32>
	byte v241_1480 = Mem1476[a0_1471:byte]
	a2_104 = Mem1476[a7_1472:word32]
	d0 = SEQ(SLICE(d0, word24, 8), v241_1480)
	d1 = (uint32) (uint8) v241_1480
l00003174:
	d5_1007 = d1
	d3_1405 = d3_1405 + 1<32>
	d4_1409 = d4_1409 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00003186
l00003182:
	branch d6_1093 - d3_1405 >=u 0<32> l00003138
l00003186:
	Mem1516[a7_1282 + 73<i32>:byte] = v233_1421
l0000318A:
	branch d5_1007 == 0xFFFFFFFF<32> l0000319C
l00003192:
	word32 a7_1524 = a7_1282 - 4<i32>
	Mem1529[a7_1524:word32] = a2_104
	Mem1531[a7_1524 - 4<i32>:word32] = d5_1007
	d0 = fn00002E5C(Mem1531[a7_1524 - 1<i32>:byte], Mem1531[a7_1524:word32])
l0000319C:
	d3_124 = d3_1405 - 1<32>
	d4_126 = d4_1409 - 1<32>
	branch Mem1551[a7_1282 + 73<i32>:byte] != 0<8> l00003D86
l000031A8:
	branch d3_124 == 0<32> l00003D86
l000031AE:
	Mem1562[a7_1282 + 60<i32>:word32] = Mem1551[a7_1282 + 60<i32>:word32] + 1<32>
l00003084:
	d1 = SEQ(v124_587, v76_482 - 0x6E<8>)
	branch v76_482 == 0x6E<8> l00003528
l00003528:
	branch Mem608[a7_1282 + 73<i32>:byte] != 0<8> l000035C0
l00003530:
	branch Mem608[a7_1282 + 72<i32>:byte] != 1<8> l00003552
l00003552:
	branch Mem608[a7_1282 + 72<i32>:byte] != 0x6C<8> l00003570
l00003570:
	branch Mem608[a7_1282 + 72<i32>:byte] != 0x68<8> l0000358E
l0000358E:
	branch Mem608[a7_1282 + 72<i32>:byte] != 2<8> l000035AC
l000035AC:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	Mem1594[Mem608[d0:word32]:word32] = d4_126
	d2_1050 = d0 + 4<32>
l00003596:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	Mem1606[Mem608[d0:word32]:byte] = SLICE(d4_126, byte, 0)
	d2_1050 = d0 + 4<32>
l00003578:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	Mem1618[Mem608[d0:word32]:word16] = SLICE(d4_126, word16, 0)
	d2_1050 = d0 + 4<32>
l0000355A:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	Mem1629[Mem608[d0:word32]:word32] = d4_126
	d2_1050 = d0 + 4<32>
l00003538:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	word32 a0_1639 = Mem608[d0:word32]
	Mem1640[a0_1639 + 4<i32>:word32] = d4_126
	Mem1641[a0_1639:word32] = 0<32>
	d2_1050 = d0 + 4<32>
l000035C0:
	Mem1650[a7_1282 + 60<i32>:word32] = Mem1648[a7_1282 + 60<i32>:word32] + 1<32>
	d3_124 = 1<i32>
l0000308C:
	d1 = SEQ(v124_587, v76_482 - 0x73<8>)
	branch v76_482 == 0x73<8> l000033D4
l000033D4:
	word32 a5_1661
	branch Mem608[a7_1282 + 73<i32>:byte] != 0<8> l000033EE
l000033EE:
	a5_1661 = 0<32>
l000033DA:
	d0 = d2_1050 + 3<32> >>u 2<32> << 2<32>
	d2_1050 = d0 + 4<32>
	a5_1661 = Mem608[d0:word32]
l000033F0:
	branch d5_1007 == 0xFFFFFFFF<32> l0000348C
l000033FA:
	word32 d0_1699 = (uint32) (uint8) Mem608[0x00002B15<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_1699 & 8<32>
	branch (d0_1699 & 8<32>) != 0<32> l0000348C
l00003416:
	branch d6_1093 - d3_1781 <u 0<32> l0000348C
l0000341A:
	byte v153_1711 = Mem608[a7_1282 + 73<i32>:byte]
	d7 = SEQ(v77_488, v153_1711)
l0000341E:
	branch v153_1711 != 0<8> l00003424
l00003422:
	Mem1724[a5_1661:byte] = SLICE(d5_1007, byte, 0)
	a5_1661 = a5_1661 + 1<i32>
l00003424:
	word32 a0_1729 = a2_104 + 24<i32>
	Mem1733[a0_1729:word32] = Mem1730[a0_1729:word32] | 1<32>
	word32 a0_1734 = a2_104 + 20<i32>
	word32 v159_1735 = Mem1733[a0_1734:word32] - 1<32>
	Mem1736[a0_1734:word32] = v159_1735
	branch v159_1735 < 0<32> l0000344E
l0000344E:
	word32 a7_1741 = a7_1282 - 4<i32>
	Mem1742[a7_1741:word32] = a2_104
	word32 d1_5163
	d0 = fn00003F30(Mem1742[a7_1741:word32], out d1_5163, out a1, out a5_1661)
	d1 = d0
l00003436:
	a1 = a2_104 + 4<i32>
	word32 a0_1758 = Mem1736[a1:word32]
	word32 a7_1759 = a7_1282 - 4<i32>
	Mem1760[a7_1759:word32] = a2_104
	Mem1763[a1:word32] = a0_1758 + 1<i32>
	byte v161_1767 = Mem1763[a0_1758:byte]
	a2_104 = Mem1763[a7_1759:word32]
	d0 = SEQ(SLICE(d0, word24, 8), v161_1767)
	d1 = (uint32) (uint8) v161_1767
l0000345A:
	d5_1007 = d1
	d3_1781 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00003488
l00003468:
	word32 d0_1802 = (uint32) (uint8) Mem1799[0x00002B15<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_1802 & 8<32>
	branch (d0_1802 & 8<32>) != 0<32> l00003488
l00003484:
	branch d6_1093 - d3_1781 >=u 0<32> l0000341E
l00003488:
	Mem1820[a7_1282 + 73<i32>:byte] = v153_1711
l0000348C:
	branch d5_1007 == 0xFFFFFFFF<32> l0000349E
l00003494:
	word32 a7_1828 = a7_1282 - 4<i32>
	Mem1833[a7_1828:word32] = a2_104
	Mem1835[a7_1828 - 4<i32>:word32] = d5_1007
	d0 = fn00002E5C(Mem1835[a7_1828 - 1<i32>:byte], Mem1835[a7_1828:word32])
l0000349E:
	d3_124 = d3_1781 - 1<32>
	d4_126 = d4_126 - 1<32>
	branch Mem1856[a7_1282 + 73<i32>:byte] != 0<8> l00003D86
l000034AA:
	branch d3_124 == 0<32> l00003D86
l000034B0:
	Mem1872[a5_1661:byte] = 0<8>
	Mem1875[a7_1282 + 60<i32>:word32] = Mem1872[a7_1282 + 60<i32>:word32] + 1<32>
l00003092:
l000035CA:
	Mem1877[a7_1282 + 48<i32>:word32] = 0<32>
	Mem1878[a7_1282 + 44<i32>:word32] = 0<32>
	Mem1879[a7_1282 + 110<i32>:word32] = 0<32>
	branch v76_482 != 0<8> l000035DC
l000035DA:
	a3_1884 = a3_1884 - 1<i32>
l000035DC:
	branch v76_482 != 0x70<8> l000035EA
l000035E2:
	Mem1890[a7_1282 + 72<i32>:byte] = 0x6C<8>
	d7 = 120<i32>
l000035EA:
	branch d5_1007 != 0x2D<32> l000035F8
l000035F2:
	branch SLICE(d7, byte, 0) != 0x75<8> l00003600
l000035F8:
	branch d5_1007 != 0x2B<32> l00003650
l00003600:
	branch d6_1093 - d3_1781 <u 0<32> l00003650
l00003604:
	Mem1921[a7_1282 + 110<i32>:word32] = d5_1007
	word32 a0_1926 = a2_104 + 24<i32>
	Mem1928[a0_1926:word32] = Mem1921[a0_1926:word32] | 1<32>
	word32 a0_1929 = a2_104 + 20<i32>
	word32 v182_1930 = Mem1928[a0_1929:word32] - 1<32>
	Mem1931[a0_1929:word32] = v182_1930
	branch v182_1930 < 0<32> l0000363A
l0000363A:
	word32 a7_1934 = a7_1282 - 4<i32>
	Mem1935[a7_1934:word32] = a2_104
	word32 a5_5164
	d0 = fn00003F30(Mem1935[a7_1934:word32], out d1, out a1, out a5_5164)
	Mem1947[a7_1934 + 56<i32>:word32] = d0
l0000361A:
	a1 = a2_104 + 4<i32>
	word32 a0_1951 = Mem1931[a1:word32]
	word32 a7_1952 = a7_1282 - 4<i32>
	Mem1953[a7_1952:word32] = a2_104
	Mem1956[a1:word32] = a0_1951 + 1<i32>
	byte v184_1960 = Mem1956[a0_1951:byte]
	a2_104 = Mem1956[a7_1952:word32]
	Mem1972[a7_1952:word32] = d1
	Mem1977[a7_1952 + 56<i32>:word32] = (uint32) (uint8) v184_1960
	d0 = SEQ(SLICE(d0, word24, 8), v184_1960)
	d1 = Mem1977[a7_1952:word32]
l00003648:
	d5_1007 = Mem1983[a7_1282 + 52<i32>:word32]
	d3_1781 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
l00003650:
	branch SLICE(d7, byte, 0) != 0x69<8> l000037C2
l00003658:
	branch d5_1007 != 0x30<32> l00003784
l00003662:
	branch d6_1093 - d3_1781 <u 0<32> l00003784
l00003784:
	word32 d0_2030 = (uint32) (uint8) Mem2023[0x00002B15<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_2030 & 4<32>
	branch (d0_2030 & 4<32>) != 0<32> l000037C2
l000037A0:
	word32 d0_2045 = (uint32) (uint8) Mem2023[0x00002B15<p32> + (SEQ(SLICE(d0_2030 & 4<32>, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_2045 & 0x44<32>
	branch (d0_2045 & 0x44<32>) == 0<32> l000037C2
l000037BC:
	branch d6_1093 - d3_1781 <u 0<32> l000037C2
l000037C0:
	d7 = 120<i32>
l00003668:
	word32 d0_2075
	word32 a0_2060 = a2_104 + 24<i32>
	Mem2062[a0_2060:word32] = Mem2023[a0_2060:word32] | 1<32>
	word32 a0_2063 = a2_104 + 20<i32>
	word32 v194_2064 = Mem2062[a0_2063:word32] - 1<32>
	Mem2065[a0_2063:word32] = v194_2064
	branch v194_2064 < 0<32> l0000369A
l0000369A:
	word32 a7_2069 = a7_1282 - 4<i32>
	Mem2070[a7_2069:word32] = a2_104
	word32 a5_5165
	d0_2075 = fn00003F30(Mem2070[a7_2069:word32], out d1, out a1, out a5_5165)
	Mem2082[a7_2069 + 56<i32>:word32] = d0_2075
l0000367A:
	a1 = a2_104 + 4<i32>
	word32 a0_2086 = Mem2065[a1:word32]
	word32 a7_2087 = a7_1282 - 4<i32>
	Mem2088[a7_2087:word32] = a2_104
	Mem2091[a1:word32] = a0_2086 + 1<i32>
	byte v196_2095 = Mem2091[a0_2086:byte]
	a2_104 = Mem2091[a7_2087:word32]
	Mem2101[a7_2087:word32] = d1
	Mem2106[a7_2087 + 56<i32>:word32] = (uint32) (uint8) v196_2095
	d0_2075 = SEQ(SLICE(d0, word24, 8), v196_2095)
	d1 = Mem2106[a7_2087:word32]
l000036A8:
	Mem2114[a7_1282 + 64<i32>:word32] = Mem2112[a7_1282 + 52<i32>:word32]
	word32 d0_2124 = SEQ(SLICE(d0_2075, word24, 8), Mem2114[a7_1282 + 55<i32>:byte])
	word32 d3_2116 = d3_1781 + 1<32>
	d0 = d0_2124 & 0xFF<32>
	branch __btst(Mem2114[0x00002B15<p32> + (int32) ((int16) (d0_2124 & 0xFF<32>)):byte], 0<16>) l000036CE
l000036CA:
	d0 = SEQ(SLICE(d0_2124 & 0xFF<32>, word24, 8), SLICE(d0_2124 & 0xFF<32>, byte, 0) | 0x20<8>)
l000036CE:
	branch d0 != 0x78<32> l00003766
l000036D8:
	branch d6_1093 - d3_2116 <u 0<32> l00003766
l00003766:
	d7 = 111<i32>
l000036DE:
	word32 d0_2167
	word32 a0_2151 = a2_104 + 24<i32>
	Mem2154[a0_2151:word32] = Mem2114[a0_2151:word32] | 1<32>
	word32 a0_2155 = a2_104 + 20<i32>
	word32 v210_2156 = Mem2154[a0_2155:word32] - 1<32>
	Mem2157[a0_2155:word32] = v210_2156
	branch v210_2156 < 0<32> l00003710
l00003710:
	word32 a7_2161 = a7_1282 - 4<i32>
	Mem2162[a7_2161:word32] = a2_104
	word32 a5_5166
	d0_2167 = fn00003F30(Mem2162[a7_2161:word32], out d1, out a1, out a5_5166)
	Mem2174[a7_2161 + 56<i32>:word32] = d0_2167
l000036F0:
	a1 = a2_104 + 4<i32>
	word32 a0_2178 = Mem2157[a1:word32]
	word32 a7_2179 = a7_1282 - 4<i32>
	Mem2180[a7_2179:word32] = a2_104
	Mem2183[a1:word32] = a0_2178 + 1<i32>
	byte v212_2187 = Mem2183[a0_2178:byte]
	a2_104 = Mem2183[a7_2179:word32]
	Mem2193[a7_2179:word32] = d1
	Mem2198[a7_2179 + 56<i32>:word32] = (uint32) (uint8) v212_2187
	d0_2167 = SEQ(SLICE(d0, word24, 8), v212_2187)
	d1 = Mem2198[a7_2179:word32]
l0000371E:
	Mem2206[a7_1282 + 74<i32>:word32] = Mem2204[a7_1282 + 52<i32>:word32]
	word32 d0_2226 = (uint32) (uint8) Mem2206[0x00002B15<p32> + (SEQ(SLICE(d0_2167, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_2226 & 0x44<32>
	branch (d0_2226 & 0x44<32>) == 0<32> l0000374A
l00003744:
	branch d6_1093 - (d3_2116 + 1<32>) <u 0<32> l0000374A
l00003748:
	d7 = 120<i32>
l0000374A:
	branch Mem2206[a7_1282 + 74<i32>:word32] == 0xFFFFFFFF<32> l00003760
l00003754:
	word32 a7_2243 = a7_1282 - 4<i32>
	Mem2246[a7_2243:word32] = a2_104
	Mem2249[a7_2243 - 4<i32>:word32] = Mem2246[a7_2243 + 78<i32>:word32]
	d0 = fn00002E5C(Mem2249[a7_2243 - 1<i32>:byte], Mem2249[a7_2243:word32])
l00003760:
l00003768:
	branch Mem2269[a7_1282 + 64<i32>:word32] == 0xFFFFFFFF<32> l0000377E
l00003772:
	word32 a7_2275 = a7_1282 - 4<i32>
	Mem2279[a7_2275:word32] = a2_104
	Mem2282[a7_2275 - 4<i32>:word32] = Mem2279[a7_2275 + 68<i32>:word32]
	d0 = fn00002E5C(Mem2282[a7_2275 - 1<i32>:byte], Mem2282[a7_2275:word32])
l0000377E:
l000037C2:
	word32 d4_2409 = d4_126
	word32 d3_2328 = d3_1781
	branch SLICE(d7, byte, 0) != 0x78<8> l000038F6
l000037CA:
	branch d5_1007 != 0x30<32> l000038F6
l000037D4:
	branch d6_1093 - d3_1781 <u 0<32> l000038F6
l000037DA:
	word32 d0_2354
	word32 a0_2335 = a2_104 + 24<i32>
	Mem2339[a0_2335:word32] = Mem2336[a0_2335:word32] | 1<32>
	word32 a0_2340 = a2_104 + 20<i32>
	word32 v265_2341 = Mem2339[a0_2340:word32] - 1<32>
	Mem2342[a0_2340:word32] = v265_2341
	branch v265_2341 < 0<32> l0000380C
l0000380C:
	word32 a7_2348 = a7_1282 - 4<i32>
	Mem2349[a7_2348:word32] = a2_104
	word32 a5_5171
	d0_2354 = fn00003F30(Mem2349[a7_2348:word32], out d1, out a1, out a5_5171)
	Mem2361[a7_2348 + 56<i32>:word32] = d0_2354
l000037EC:
	a1 = a2_104 + 4<i32>
	word32 a0_2365 = Mem2342[a1:word32]
	word32 a7_2366 = a7_1282 - 4<i32>
	Mem2367[a7_2366:word32] = a2_104
	Mem2370[a1:word32] = a0_2365 + 1<i32>
	byte v267_2374 = Mem2370[a0_2365:byte]
	a2_104 = Mem2370[a7_2366:word32]
	Mem2392[a7_2366:word32] = d1
	Mem2397[a7_2366 + 56<i32>:word32] = (uint32) (uint8) v267_2374
	d0_2354 = SEQ(SLICE(d0, word24, 8), v267_2374)
	d1 = Mem2397[a7_2366:word32]
l0000381A:
	Mem2405[a7_1282 + 64<i32>:word32] = Mem2403[a7_1282 + 52<i32>:word32]
	word32 d0_2416 = SEQ(SLICE(d0_2354, word24, 8), Mem2405[a7_1282 + 55<i32>:byte])
	word32 d3_2407 = d3_1781 + 1<32>
	word32 d4_2411 = d4_126 + 1<32>
	d0 = d0_2416 & 0xFF<32>
	branch __btst(Mem2405[0x00002B15<p32> + (int32) ((int16) (d0_2416 & 0xFF<32>)):byte], 0<16>) l00003840
l0000383C:
	d0 = SEQ(SLICE(d0_2416 & 0xFF<32>, word24, 8), SLICE(d0_2416 & 0xFF<32>, byte, 0) | 0x20<8>)
l00003840:
	branch d0 != 0x78<32> l000038DC
l0000384A:
	branch d6_1093 - d3_2407 <u 0<32> l000038DC
l00003850:
	word32 d0_2457
	word32 a0_2441 = a2_104 + 24<i32>
	Mem2444[a0_2441:word32] = Mem2405[a0_2441:word32] | 1<32>
	word32 a0_2445 = a2_104 + 20<i32>
	word32 v280_2446 = Mem2444[a0_2445:word32] - 1<32>
	Mem2447[a0_2445:word32] = v280_2446
	branch v280_2446 < 0<32> l00003882
l00003882:
	word32 a7_2451 = a7_1282 - 4<i32>
	Mem2452[a7_2451:word32] = a2_104
	word32 a5_5172
	d0_2457 = fn00003F30(Mem2452[a7_2451:word32], out d1, out a1, out a5_5172)
	Mem2464[a7_2451 + 56<i32>:word32] = d0_2457
l00003862:
	a1 = a2_104 + 4<i32>
	word32 a0_2468 = Mem2447[a1:word32]
	word32 a7_2469 = a7_1282 - 4<i32>
	Mem2470[a7_2469:word32] = a2_104
	Mem2473[a1:word32] = a0_2468 + 1<i32>
	byte v282_2477 = Mem2473[a0_2468:byte]
	a2_104 = Mem2473[a7_2469:word32]
	Mem2483[a7_2469:word32] = d1
	Mem2488[a7_2469 + 56<i32>:word32] = (uint32) (uint8) v282_2477
	d0_2457 = SEQ(SLICE(d0, word24, 8), v282_2477)
	d1 = Mem2488[a7_2469:word32]
l00003890:
	Mem2496[a7_1282 + 74<i32>:word32] = Mem2494[a7_1282 + 52<i32>:word32]
	word32 d0_2513 = (uint32) (uint8) Mem2496[0x00002B15<p32> + (SEQ(SLICE(d0_2457, word24, 8), Mem2496[a7_1282 + 55<i32>:byte]) & 0xFF<32>):byte]
	d3_2328 = d3_2407 + 1<32>
	d4_2409 = d4_2411 + 1<32>
	d0 = d0_2513 & 0x44<32>
	branch (d0_2513 & 0x44<32>) == 0<32> l000038C2
l000038B8:
	branch d6_1093 - (d3_2407 + 1<32>) <u 0<32> l000038C2
l000038C2:
	branch Mem2496[a7_1282 + 74<i32>:word32] == 0xFFFFFFFF<32> l000038D8
l000038CC:
	word32 a7_2528 = a7_1282 - 4<i32>
	Mem2531[a7_2528:word32] = a2_104
	Mem2534[a7_2528 - 4<i32>:word32] = Mem2531[a7_2528 + 78<i32>:word32]
	d0 = fn00002E5C(Mem2534[a7_2528 - 1<i32>:byte], Mem2534[a7_2528:word32])
l000038D8:
l000038DC:
	branch Mem2553[a7_1282 + 64<i32>:word32] == 0xFFFFFFFF<32> l000038F2
l000038E6:
	word32 a7_2558 = a7_1282 - 4<i32>
	Mem2561[a7_2558:word32] = a2_104
	Mem2564[a7_2558 - 4<i32>:word32] = Mem2561[a7_2558 + 68<i32>:word32]
	d0 = fn00002E5C(Mem2564[a7_2558 - 1<i32>:byte], Mem2564[a7_2558:word32])
l000038F2:
	d3_2328 = d3_2407 - 1<32>
	d4_2409 = d4_2411 - 1<32>
l000038BC:
	d5_1007 = Mem2496[a7_1282 + 74<i32>:word32]
l000038F6:
	branch SLICE(d7, byte, 0) == 0x78<8> l00003902
l000038FC:
	branch SLICE(d7, byte, 0) != 0x58<8> l0000390C
l0000390C:
	branch SLICE(d7, byte, 0) != 0x6F<8> l0000391C
l0000391C:
	Mem2602[a7_1282 + 52<i32>:word32] = 0xA<32>
l00003912:
	Mem2604[a7_1282 + 52<i32>:word32] = 8<32>
l00003924:
	Mem2609[a7_1282 + 64<i32>:word32] = Mem2607[a7_1282 + 52<i32>:word32]
l00003902:
	Mem2612[a7_1282 + 64<i32>:word32] = 0x10<32>
l0000392A:
	Mem2617[a7_1282 + 114<i32>:word32] = Mem2615[a7_1282 + 64<i32>:word32]
	word32 d0_2646 = (uint32) (uint8) Mem2617[0x00002B15<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	Mem2675[a7_1282 + 132<i32>:word32] = d2_1050
	Mem2680[a7_1282 + 52<i32>:word32] = d4_2409
	Mem2685[a7_1282 + 74<i32>:byte] = SLICE(d7, byte, 0)
	d0 = d0_2646 & 0x44<32>
	branch (d0_2646 & 0x44<32>) == 0<32> l00003B92
l0000395C:
	branch Mem2685[a7_1282 + 114<i32>:word32] != 0xA<32> l00003992
l00003966:
	word32 d0_2702 = (uint32) (uint8) Mem2685[0x00002B15<p32> + (SEQ(SLICE(d0_2646 & 0x44<32>, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte]
	Mem2704[a7_1282 + 132<i32>:word32] = d2_1050
	Mem2705[a7_1282 + 52<i32>:word32] = d4_2409
	Mem2707[a7_1282 + 74<i32>:byte] = SLICE(d7, byte, 0)
	d0 = d0_2702 & 4<32>
	branch (d0_2702 & 4<32>) == 0<32> l00003B92
l00003992:
	branch Mem2713[a7_1282 + 114<i32>:word32] != 8<32> l000039B2
l0000399C:
	Mem2718[a7_1282 + 132<i32>:word32] = d2_1050
	Mem2720[a7_1282 + 52<i32>:word32] = d4_2409
	Mem2723[a7_1282 + 74<i32>:byte] = SLICE(d7, byte, 0)
	branch d5_1007 > 0x37<32> l00003B92
l000039B2:
	Mem2730[a7_1282 + 132<i32>:word32] = d2_1050
	Mem2732[a7_1282 + 52<i32>:word32] = d4_2409
	Mem2743[a7_1282 + 64<i32>:word32] = d6_1093
	Mem2746[a7_1282 + 74<i32>:byte] = SLICE(d7, byte, 0)
	branch d6_1093 - d3_2328 <u 0<32> l00003B92
l000039C8:
	d7 = Mem2746[a7_1282 + 114<i32>:word32]
	word32 a4_2758 = Mem2746[a7_1282 + 64<i32>:word32]
l000039D0:
	word32 a7_2763 = a7_1282 - 4<i32>
	Mem2765[a7_2763:word32] = d2_1050
	word32 v314_2769 = Mem2765[a7_2763:word32]
	Mem2773[a7_2763:word32] = d7 >> 31<i32>
	Mem2775[a7_2763 - 4<i32>:word32] = d7
	Mem2778[a7_2763 - 8<i32>:word32] = a1
	Mem2781[a7_2763 - 12<i32>:word32] = Mem2778[a7_2763 + 52<i32>:word32]
	Mem2784[a7_2763 - 16<i32>:word32] = Mem2781[a7_2763 + 48<i32>:word32]
	Mem2787[a7_2763 - 20<i32>:word32] = d7
	Mem2789[a7_2763 - 24<i32>:word32] = d7 >> 31<i32>
	word32 d1_2792
	Mem2802[a7_2763 + 68<i32>:word32] = fn00003EB0(d4_2409, Mem2789[a7_2763 - 24<i32>:word32], Mem2789[a7_2763 - 20<i32>:word32], Mem2789[a7_2763 - 16<i32>:word32], Mem2789[a7_2763 - 12<i32>:word32], out d1_2792)
	Mem2803[a7_2763 + 72<i32>:word32] = d1_2792
	branch ((uint32) (uint8) Mem2803[0x00002B15<p32> + (SEQ(Mem2803[a7_2763 + 1<32>:word24], SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte] & 4<32>) == 0<32> l00003A30
l00003A30:
	d4_2409 = 0<i32>
l00003A26:
	d4_2409 = d5_1007 - 0x30<32>
l00003A32:
	word32 d6_2879
	Mem2835[a7_1282 - 4<i32>:word32] = v314_2769
	Mem2842[a7_1282 - 4<i32>:word32] = Mem2835[a7_1282 - 4<i32>:word32]
	word32 d2_2844 = d4_2409 + Mem2842[a7_1282 + 68<i32>:word32]
	Mem2846[a7_1282 + 48<i32>:word32] = d2_2844
	Mem2851[a7_1282 - 8<i32>:word32] = d3_2328
	word32 d0_2837 = d4_2409 >> 31<i32>
	Mem2856[a7_1282 + 44<i32>:word32] = Mem2851[a7_1282 + 64<i32>:word32] + d0_2837 + (d2_2844 <u 0<32>)
	word32 v324_2857 = Mem2856[a7_1282 - 8<i32>:word32]
	word32 v325_2860 = Mem2856[a7_1282 - 4<i32>:word32]
	branch ((uint32) (uint8) Mem2856[0x00002B15<p32> + (SEQ(SLICE(d0_2837, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte] & 1<32>) == 0<32> l00003A82
l00003A82:
	d6_2879 = 0<i32>
l00003A78:
	d6_2879 = d5_1007 - 0x37<32>
l00003A84:
	word32 d2_2933
	Mem2890[a7_1282 - 4<i32>:word32] = v325_2860
	Mem2897[a7_1282 - 4<i32>:word32] = Mem2890[a7_1282 - 4<i32>:word32]
	word32 d2_2899 = d6_2879 + Mem2897[a7_1282 + 48<i32>:word32]
	Mem2901[a7_1282 + 68<i32>:word32] = d2_2899
	Mem2905[a7_1282 - 8<i32>:word32] = v324_2857
	word32 d0_2892 = d6_2879 >> 31<i32>
	Mem2910[a7_1282 + 64<i32>:word32] = Mem2905[a7_1282 + 44<i32>:word32] + d0_2892 + (d2_2899 <u 0<32>)
	word32 v331_2911 = Mem2910[a7_1282 - 8<i32>:word32]
	branch ((uint32) (uint8) Mem2910[0x00002B15<p32> + (SEQ(SLICE(d0_2892, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte] & 2<32>) == 0<32> l00003AD4
l00003AD4:
	d2_2933 = 0<i32>
l00003ACA:
	d2_2933 = d5_1007 - 0x57<32>
l00003AD6:
	word32 d0_2988
	Mem2943[a7_1282 - 4<i32>:word32] = d2_2933
	Mem2950[a7_1282 - 4<i32>:word32] = Mem2943[a7_1282 - 4<i32>:word32]
	word32 d2_2952 = d2_2933 + Mem2950[a7_1282 + 68<i32>:word32]
	Mem2954[a7_1282 + 48<i32>:word32] = d2_2952
	Mem2958[a7_1282 - 8<i32>:word32] = v331_2911
	Mem2962[a7_1282 + 44<i32>:word32] = Mem2958[a7_1282 + 64<i32>:word32] + (d2_2933 >> 31<i32>) + (d2_2952 <u 0<32>)
	word32 a0_2973 = a2_104 + 24<i32>
	word32 v338_2963 = Mem2962[a7_1282 - 8<i32>:word32]
	d2_1050 = Mem2962[a7_1282 - 4<i32>:word32]
	Mem2976[a0_2973:word32] = Mem2962[a0_2973:word32] | 1<i32>
	word32 a0_2977 = a2_104 + 20<i32>
	word32 v341_2978 = Mem2976[a0_2977:word32] - 1<32>
	Mem2979[a0_2977:word32] = v341_2978
	branch v341_2978 < 0<32> l00003B28
l00003B28:
	Mem2983[a7_1282 - 4<i32>:word32] = a2_104
	word32 d1_5173
	word32 a5_5174
	d0_2988 = fn00003F30(Mem2983[a7_1282 - 4<i32>:word32], out d1_5173, out a1, out a5_5174)
	d1 = d0_2988
l00003B10:
	a1 = a2_104 + 4<i32>
	word32 a0_2999 = Mem2979[a1:word32]
	Mem3001[a7_1282 - 4<i32>:word32] = a2_104
	Mem3004[a1:word32] = a0_2999 + 1<i32>
	d0_2988 = (uint32) (uint8) Mem3004[a0_2999:byte]
	a2_104 = Mem3004[a7_1282 - 4<i32>:word32]
	d1 = (uint32) (uint8) SLICE(d0_2988, byte, 0)
l00003B34:
	Mem3023[a7_1282 + 52<i32>:word32] = Mem3021[a7_1282 + 52<i32>:word32] + 1<32>
	word32 d0_3035 = (uint32) (uint8) Mem3023[0x00002B15<p32> + (SEQ(SLICE(d0_2988, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d5_1007 = d1
	d3_2328 = v338_2963 + 1<32>
	d0 = d0_3035 & 0x44<32>
	branch (d0_3035 & 0x44<32>) == 0<32> l00003B92
l00003B58:
	branch d7 != 0xA<32> l00003B7C
l00003B60:
	word32 d0_3057 = (uint32) (uint8) Mem3023[0x00002B15<p32> + (SEQ(SLICE(d0_3035 & 0x44<32>, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte]
	d0 = d0_3057 & 4<32>
	branch (d0_3057 & 4<32>) == 0<32> l00003B92
l00003B7C:
	branch d7 != 8<32> l00003B8C
l00003B84:
	branch d1 > 0x37<32> l00003B92
l00003B8C:
	branch a4_2758 - (v338_2963 + 1<32>) >=u 0<32> l000039D0
l00003B92:
	byte v347_3089 = Mem3086[a7_1282 + 74<i32>:byte]
	d7 = SEQ(SLICE(d7, word24, 8), v347_3089)
	word32 d4_3094 = Mem3086[a7_1282 + 52<i32>:word32]
	d2_1050 = Mem3086[a7_1282 + 132<i32>:word32]
	branch Mem3086[a7_1282 + 110<i32>:word32] == 0<32> l00003BC6
l00003BA4:
	branch d3_2328 != 2<32> l00003BC6
l00003BAC:
	branch d5_1007 == 0xFFFFFFFF<32> l00003BBE
l00003BB4:
	word32 a7_3110 = a7_1282 - 4<i32>
	Mem3122[a7_3110:word32] = a2_104
	Mem3124[a7_3110 - 4<i32>:word32] = d5_1007
	d0 = fn00002E5C(Mem3124[a7_3110 - 1<i32>:byte], Mem3124[a7_3110:word32])
l00003BBE:
	d3_2328 = d3_2328 - 1<32>
	d4_3094 = d4_3094 - 1<32>
	d5_1007 = Mem3140[a7_1282 + 110<i32>:word32]
l00003BC6:
	branch d5_1007 == 0xFFFFFFFF<32> l00003BD8
l00003BCE:
	word32 a7_3148 = a7_1282 - 4<i32>
	Mem3151[a7_3148:word32] = a2_104
	Mem3153[a7_3148 - 4<i32>:word32] = d5_1007
	d0 = fn00002E5C(Mem3153[a7_3148 - 1<i32>:byte], Mem3153[a7_3148:word32])
l00003BD8:
	d3_124 = d3_2328 - 1<32>
	d4_126 = d4_3094 - 1<32>
	branch Mem3171[a7_1282 + 73<i32>:byte] != 0<8> l00003D86
l00003BE4:
	branch d3_124 == 0<32> l00003D86
l00003BEA:
	branch v347_3089 != 0x75<8> l00003CAC
l00003CAC:
	branch Mem3171[a7_1282 + 110<i32>:word32] != 0x2D<32> l00003CC8
l00003CC8:
	Mem3191[a7_1282 + 56<i32>:word32] = Mem3171[a7_1282 + 48<i32>:word32]
	Mem3193[a7_1282 + 52<i32>:word32] = Mem3191[a7_1282 + 44<i32>:word32]
l00003CB6:
	word32 v385_3195 = a7_1282 + 44<i32>
	d1 = -Mem3171[v385_3195 + 4<i32>:word32]
	d0 = -Mem3171[v385_3195:word32] - (d1 <u 0<32>)
	a7_1282 = Mem3171[a7_1282 + 0x38<32>:word32]
l00003CD4:
	word32 a7_3211 = a7_1282 - 4<i32>
	Mem3221[a7_3211:word32] = d0
	Mem3230[a7_3211 + 48<i32>:byte] = Mem3221[a7_3211 + 76<i32>:byte] - 1<8>
	a7_1282 = a7_3211 + 4<i32>
	branch Mem3230[a7_3211 + 48<i32>:byte] == 0<8> l00003CFE
l00003CFE:
	word32 d0_3244 = d2_1050 + 3<32> >>u 2<32>
	d2_1050 = (d0_3244 << 2<32>) + 4<32>
	word32 a0_3250 = Mem3230[d2_1050 + -4<i32>:word32]
	Mem3252[a0_3250 + 4<i32>:word32] = Mem3230[a7_3211 + 60<i32>:word32]
	Mem3254[a0_3250:word32] = Mem3252[a7_3211 + 56<i32>:word32]
	d0 = d0_3244 << 2<32>
l00003CE8:
	byte v394_3256 = Mem3230[a7_3211 + 48<i32>:byte] - 1<8>
	Mem3257[a7_3211 + 48<i32>:byte] = v394_3256
	branch v394_3256 == 0<8> l00003D50
l00003D50:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3257[a7_3211 + 60<i32>:word32]
	Mem3271[Mem3257[d2_1050 + -4<i32>:word32]:byte] = SLICE(d0, byte, 0)
l00003CEE:
	byte v395_3273 = Mem3257[a7_3211 + 48<i32>:byte] - 0x66<8>
	Mem3274[a7_3211 + 48<i32>:byte] = v395_3273
	branch v395_3273 == 0<8> l00003D36
l00003D36:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3274[a7_3211 + 60<i32>:word32]
	Mem3288[Mem3274[d2_1050 + -4<i32>:word32]:word16] = SLICE(d0, word16, 0)
l00003CF6:
	byte v396_3290 = Mem3274[a7_3211 + 48<i32>:byte] - 4<8>
	Mem3291[a7_3211 + 48<i32>:byte] = v396_3290
	branch v396_3290 == 0<8> l00003D1C
l00003D1C:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3291[a7_3211 + 60<i32>:word32]
	Mem3304[Mem3291[d2_1050 + -4<i32>:word32]:word32] = d0
l00003CFC:
l00003D6A:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3291[a7_3211 + 60<i32>:word32]
	Mem3316[Mem3291[d2_1050 + -4<i32>:word32]:word32] = d0
l00003BF2:
	word32 a7_3318 = a7_1282 - 4<i32>
	Mem3319[a7_3318:word32] = d0
	Mem3328[a7_3318 + 56<i32>:byte] = Mem3319[a7_3318 + 76<i32>:byte] - 1<8>
	a7_1282 = a7_3318 + 4<i32>
	branch Mem3328[a7_3318 + 56<i32>:byte] == 0<8> l00003C1C
l00003C1C:
	word32 d0_3338 = d2_1050 + 3<32> >>u 2<32>
	d2_1050 = (d0_3338 << 2<32>) + 4<32>
	word32 a0_3344 = Mem3328[d2_1050 + -4<i32>:word32]
	Mem3346[a0_3344 + 4<i32>:word32] = Mem3328[a7_3318 + 52<i32>:word32]
	Mem3348[a0_3344:word32] = Mem3346[a7_3318 + 48<i32>:word32]
	d0 = d0_3338 << 2<32>
l00003C06:
	byte v376_3350 = Mem3328[a7_3318 + 56<i32>:byte] - 1<8>
	Mem3351[a7_3318 + 56<i32>:byte] = v376_3350
	branch v376_3350 == 0<8> l00003C74
l00003C74:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3351[a7_3318 + 52<i32>:word32]
	Mem3365[Mem3351[d2_1050 + -4<i32>:word32]:byte] = SLICE(d0, byte, 0)
l00003C0C:
	byte v377_3367 = Mem3351[a7_3318 + 56<i32>:byte] - 0x66<8>
	Mem3368[a7_3318 + 56<i32>:byte] = v377_3367
	branch v377_3367 == 0<8> l00003C58
l00003C58:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3368[a7_3318 + 52<i32>:word32]
	Mem3382[Mem3368[d2_1050 + -4<i32>:word32]:word16] = SLICE(d0, word16, 0)
l00003C14:
	byte v378_3384 = Mem3368[a7_3318 + 56<i32>:byte] - 4<8>
	Mem3385[a7_3318 + 56<i32>:byte] = v378_3384
	branch v378_3384 == 0<8> l00003C3C
l00003C3C:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3385[a7_3318 + 52<i32>:word32]
	Mem3398[Mem3385[d2_1050 + -4<i32>:word32]:word32] = d0
l00003C1A:
l00003C90:
	d2_1050 = (d2_1050 + 3<32> >>u 2<32> << 2<32>) + 4<32>
	d0 = Mem3385[a7_3318 + 52<i32>:word32]
	Mem3410[Mem3385[d2_1050 + -4<i32>:word32]:word32] = d0
l00003D82:
	Mem3415[a7_1282 + 60<i32>:word32] = Mem3413[a7_1282 + 60<i32>:word32] + 1<32>
l00003D86:
	a4_261 = a3_1884
l00003E84:
	branch d3_124 == 0<32> l00003E8E
l00003E88:
	branch Mem3498[a4_261:byte] != 0<8> l00002EAE
l00003E8E:
	word32 d0_3539
	branch d5_1007 != 0xFFFFFFFF<32> l00003EA0
l00003E96:
	branch false l00003EA0
l00003EA0:
	d0_3539 = 0<32>
l00003E9C:
	d0_3539 = d5_1007
l00003EA4:
	return d0_3539
fn00002E8C_exit:


word32 fn00003EB0(word32 d4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002E8C
// MayUse:  d4:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00003EB0_entry:
l00003EB0:
	word32 d0_23 = __swap(dwArg08)
	word32 d1_25 = __swap(dwArg10)
	word32 d4_29 = SEQ(SLICE(d4, word16, 16), SLICE(dwArg08, word16, 0)) *u SLICE(dwArg10, word16, 0)
	word32 d1_32 = d1_25 *u SLICE(d0_23, word16, 0)
	word32 d2_39 = dwArg08 *u SLICE(d1_25, word16, 0) + __swap(SEQ(SLICE(d4_29, word16, 16), SLICE(d4_29, word16, 0) ^ SLICE(d4_29, word16, 0))) + dwArg10 *u SLICE(d0_23, word16, 0)
	branch d2_39 >=u 0<32> l00003EE4
l00003EDE:
	d1_32 = d1_32 + 0x10000<32>
l00003EE4:
	word32 d2_45 = __swap(d2_39)
	word32 d3_65 = __swap(dwArg0C) *u SLICE(dwArg08, word16, 0)
	word32 d3_71 = __swap(SEQ(SLICE(d3_65, word16, 16), SLICE(d3_65 + __swap(dwArg08) *u SLICE(dwArg0C, word16, 0), word16, 0)))
	word32 d3_83 = __swap(dwArg04) *u SLICE(dwArg10, word16, 0)
	word32 d3_89 = __swap(SEQ(SLICE(d3_83, word16, 16), SLICE(d3_83 + __swap(dwArg10) *u SLICE(dwArg04, word16, 0), word16, 0)))
	d1Out = SEQ(SLICE(d2_45, word16, 16), SLICE(d4_29, word16, 0))
	return (uint32) (uint16) SLICE(d2_45, word16, 0) + d1_32 + (dwArg0C *u SLICE(dwArg08, word16, 0) + SEQ(SLICE(d3_71, word16, 16), SLICE(d3_71, word16, 0) ^ SLICE(d3_71, word16, 0))) + (dwArg04 *u SLICE(dwArg10, word16, 0) + SEQ(SLICE(d3_89, word16, 16), SLICE(d3_89, word16, 0) ^ SLICE(d3_89, word16, 0)))
fn00003EB0_exit:


word32 fn00003F30(word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002E8C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 a5 d0 d1
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5
fn00003F30_entry:
l00003F30:
	word32 d0_155
	word32 a5_273
	word32 a1_113
	word32 d1_115 = fn00002688(out a1_113, out a5_273)
	branch dwArg04 != 0<32> l00003F48
l00003F48:
	branch (Mem26[dwArg04 + 24<i32>:word32] & 42<i32>) == 32<i32> l00003F5A
l00003F5A:
	Mem49[dwArg04 + 24<i32>:word32] = Mem26[dwArg04 + 24<i32>:word32] | 1<i32>
	word32 d0_122 = Mem49[dwArg04 + 24<i32>:word32] & 0x200<32>
	branch d0_122 == 0<32> l00003F72
l00003F6C:
	d0_122 = fn0000402C(out a1_113, out a5_273)
l00003F72:
	branch Mem49[dwArg04 + 28<i32>:word32] != 0<32> l00003F90
l00003F78:
	d0_122 = Mem49[dwArg04 + 24<i32>:word32] & 4<i32>
	branch d0_122 == 0<32> l00003F88
l00003F88:
	Mem78[dwArg04 + 28<i32>:word32] = 0x400<32>
l00003F80:
	Mem81[dwArg04 + 28<i32>:word32] = 1<i32>
	d0_122 = 1<i32>
l00003F90:
	branch Mem84[dwArg04 + 8<i32>:word32] != 0<32> l00003FCC
l00003F96:
	word32 d4_100
	branch (Mem84[dwArg04 + 24<i32>:word32] & 0x80<32>) == 0<32> l00003FAA
l00003FAA:
	d4_100 = 1<i32>
l00003FA6:
	d4_100 = 2<i32>
l00003FAC:
	word32 a0_312
	word32 d0_114 = fn000022B4(d4_100 + Mem84[dwArg04 + 28<i32>:word32], out d1_115, out a0_312, out a1_113)
	d0_122 = d0_114
	branch d0_114 != 0<32> l00003FC4
l00003FC4:
	Mem127[dwArg04 + 8<i32>:word32] = d0_114 + 1<i32>
	a1_113 = d0_114 + 1<i32>
l00003FCC:
	Mem133[dwArg04 + 4<i32>:word32] = Mem131[dwArg04 + 8<i32>:word32]
	d1_115 = Mem133[dwArg04:word32]
	execPrivate2()
	Mem142[dwArg04 + 20<i32>:word32] = d0_122
	word32 v23_143 = Mem142[dwArg04 + 20<i32>:word32] - 1<32>
	Mem144[dwArg04 + 20<i32>:word32] = v23_143
	branch v23_143 >= 0<32> l00004012
l00004012:
	word32 a0_148 = Mem144[dwArg04 + 4<i32>:word32]
	Mem151[dwArg04 + 4<i32>:word32] = a0_148 + 1<i32>
	a1_113 = dwArg04 + 4<i32>
	d0_155 = SEQ(SLICE(d0_122, word24, 8), Mem151[a0_148:byte]) & 0xFF<32>
l00003FF0:
	branch Mem144[dwArg04 + 20<i32>:word32] != -1<i32> l00004002
l00004002:
	Mem166[dwArg04 + 24<i32>:word32] = Mem144[dwArg04 + 24<i32>:word32] | 16<i32>
l00003FF8:
	Mem173[dwArg04 + 24<i32>:word32] = Mem144[dwArg04 + 24<i32>:word32] | 8<i32>
l0000400A:
	Mem178[dwArg04 + 20<i32>:word32] = 0<32>
	d0_155 = -1<i32>
l00003FC0:
	d0_155 = -1<i32>
l00003F54:
	d0_155 = -1<i32>
l00003F42:
	d0_155 = -1<i32>
l00004026:
	d1Out = d1_115
	a1Out = a1_113
	a5Out = a5_273
	return d0_155
fn00003F30_exit:


word32 fn0000402C(ptr32 & a1Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003F30
// MayUse: 
// LiveOut: a1 a5 d0
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn0000402C_entry:
l0000402C:
	word32 a2_11 = Mem5[0x00004260<p32>:word32]
	word32 d0_41 = a2_11
	branch a2_11 == 0<32> l00004064
l0000403A:
	branch (Mem12[a2_11 + 24<i32>:word32] & 0x202<32>) != 0x202<32> l0000405A
l0000404C:
	branch Mem12[a2_11:word32] == 0<32> l0000405A
l00004050:
	word32 a0_90
	fn00002208(a2_11, out a0_90, out a1, out a5)
l0000405A:
	a2_11 = Mem39[a2_11 + 12<i32>:word32]
	d0_41 = a2_11
	branch a2_11 != 0<32> l0000403A
l00004064:
	a1Out = a1
	a5Out = a5
	return d0_41
fn0000402C_exit:


word32 fn00004068(word32 dwArg04, ptr32 & d1Out, ptr32 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  Stack +0004:[0..31]
// LiveOut: a1 d0 d1
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00004068_entry:
l00004068:
	word32 d0_107
	word32 a2_12 = dwArg04
	word32 d2_106 = 0<i32>
	branch Mem11[dwArg04:byte] == 0<8> l000040E8
l00004076:
	word32 a0_19 = Mem18[0x00004258<p32>:word32]
	Mem23[a0_19 + 24<i32>:word32] = Mem18[a0_19 + 24<i32>:word32] | 2<i32>
	word32 v15_25 = Mem23[a0_19 + 20<i32>:word32] - 1<32>
	Mem26[a0_19 + 20<i32>:word32] = v15_25
	branch v15_25 < 0<32> l000040BE
l0000408C:
	branch Mem26[a2_12:byte] != 0xA<8> l000040A4
l00004092:
	branch (Mem26[Mem26[0x00004258<p32>:word32] + 24<i32>:word32] & 0x80<32>) != 0<32> l000040BE
l000040BE:
	word32 a5_57
	word32 a0_60
	d1 = fn000020F4((int32) (int16) Mem45[a2_12:byte], Mem26[0x00004258<p32>:word32], out a0_60, out a1, out a5_57)
l000040A4:
	word32 a1_70 = Mem26[0x00004258<p32>:word32]
	word32 a0_72 = Mem26[a1_70 + 4<i32>:word32]
	Mem75[a1_70 + 4<i32>:word32] = a0_72 + 1<i32>
	Mem78[a0_72:byte] = Mem75[a2_12:byte]
	a1 = a1_70 + 4<i32>
	d1 = (uint32) (uint8) Mem78[a0_72:byte]
l000040D6:
	branch d1 != -1<i32> l000040E0
l000040E0:
	a2_12 = a2_12 + 1<i32>
	d2_106 = d2_106 + 1<32>
	branch Mem101[a2_12:byte] != 0<8> l00004076
l000040E8:
	d0_107 = d2_106
l000040DC:
	d0_107 = -1<i32>
l000040EA:
	d1Out = d1
	a1Out = a1
	return d0_107
fn00004068_exit:


