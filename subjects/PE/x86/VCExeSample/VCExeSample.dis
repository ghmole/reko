int32 main(int32 argc, char ** argv)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: eax
// Preserved:
main_entry:
l00401000:
	test1(Mem19[argv:word32], argc, 0x004020C0, 1.0F)
	return 0x00000000
main_exit:


void test1(char * arg1, int32 arg2, char * arg3, real32 arg4)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed:
// Preserved:
test1_entry:
l00401030:
	printf(0x004020C8, arg1, arg2, arg3, (real64) arg4)
	return
test1_exit:


void test2(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO FPU -1 Top
// Preserved: ebp esp
test2_entry:
l00401060:
	test1(0x004020D8, 0x00000002, 0x004020D4, Mem10[0x004020E8:real32])
	branch dwArg04 != 0x00000000 l004010A5
l00401087:
	test1(0x004020E0, 0x00000006, 0x004020DC, Mem25[0x004020E4:real32])
l004010A5:
	return
test2_exit:


void indirect_call_test3(cdecl_class * c)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
indirect_call_test3_entry:
l004010B0:
	Mem12[Mem12[c:word32] + 0x00000004:word32](c, 0x000003E8)
	return
indirect_call_test3_exit:


void test4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
test4_entry:
l004010D0:
	Mem10[Mem10[Mem10[0x00403018:word32]:word32]:word32](Mem6[0x00403018:word32])
	return
test4_exit:


void test5()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO eax ecx edx FPU -1 Top
// Preserved: ebp esp
test5_entry:
l004010F0:
	Mem18[Mem18[Mem18[0x00403018:word32]:word32] + 0x00000004:word32](Mem15[0x00403018:word32], 0x000003E7, Mem9[0x004020EC:real32])
	return
test5_exit:


void test6(cdecl_class * c, int32 a, int32 b)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed:
// Preserved:
test6_entry:
l00401120:
	Mem37[Mem37[c:word32] + 0x00000004:word32](c, Mem19[Mem19[c:word32] + 0x00000008:word32](c, a, b))
	return
test6_exit:


void test7(real64 rArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..63]
// LiveOut:
// Trashed: SCZO eax ecx edx FPU -1 FPUF Top
// Preserved: ebp esp
test7_entry:
l00401160:
	branch rArg04 <= 1.0 l00401189
l0040116F:
	Mem17[Mem17[Mem17[0x00403024:word32]:word32]:word32](Mem17[0x00403024:word32], rArg04)
l00401189:
	Mem40[Mem40[Mem40[0x00403024:word32]:word32] + 0x00000004:word32](Mem40[0x00403024:word32], 0x0000000D, rArg04)
	return
test7_exit:


void nested_if_blocks_test8(real64 rArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..63]
// LiveOut:
// Trashed: SCZO eax ecx edx FPU -1 FPUF Top
// Preserved: ebp esp
nested_if_blocks_test8_entry:
l004011B0:
	Mem15[Mem15[Mem15[0x00403024:word32]:word32] + 0x00000004:word32](Mem15[0x00403024:word32], 0xFFFFFFFF, rArg04)
	branch Mem15[0x004020F8:real64] == rArg04 l0040120D
l004011E2:
	branch Mem15[0x004020F0:real64] <= rArg04 l0040120D
l004011F2:
	Mem42[Mem42[Mem42[0x00403024:word32]:word32]:word32](Mem42[0x00403024:word32], rArg04)
l0040120D:
	test6(Mem58[0x00403018:word32], 0x00000006, 0x00000007)
	return
nested_if_blocks_test8_exit:


void loop_test9(real32 rArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx FPU -1 FPU -2 FPUF Top
// Preserved: ebp esp
loop_test9_entry:
l00401230:
	word32 dwLoc08_65 = 0x00000000
l00401248:
	branch Mem25[Mem25[Mem25[0x00403024:word32]:word32] + 0x00000004:word32](Mem25[0x00403024:word32], dwLoc08_65, (real64) rArg04) <= (real64) dwLoc08_65 l00401294
l00401294:
	return
loop_test9_exit:
l00401278:
	Mem48[Mem48[Mem48[0x00403024:word32]:word32]:word32](Mem48[0x00403024:word32], (real64) rArg04)
l0040123F:
	dwLoc08_65 = dwLoc08_65 + 0x00000001


void const_div_test10(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
const_div_test10_entry:
l004012A0:
	word32 eax_18 = 0x0000000A
	word32 ecx_20 = 0x00000003
	branch dwArg04 == 0x00000000 l004012BA
l004012B4:
	eax_18 = 0x00000003
	ecx_20 = 0x00000001
l004012BA:
	Mem22[0x0040301C:word32] = ecx_20
	Mem24[0x00403020:word32] = eax_18
	return
const_div_test10_exit:


void loop_test11(real64 rArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..63]
// LiveOut:
// Trashed: SCZO Top
// Preserved: eax ebp ecx edx esp FPU -1 FPUF
loop_test11_entry:
l004012D0:
	word32 dwLoc08_100 = 0x00000005
l004012DD:
	branch dwLoc08_100 <= 0x00000000 l00401329
l00401329:
	return
loop_test11_exit:
l004012E3:
	word32 eax_19 = dwLoc08_100 & 0x80000001
	branch (dwLoc08_100 & 0x80000001) >= 0x00000000 l004012F2
l004012ED:
	eax_19 = ((dwLoc08_100 & 0x80000001) - 0x00000001 | 0xFFFFFFFE) + 0x00000001
l004012F2:
	branch eax_19 != 0x00000000 l0040130D
l0040130D:
	nested_if_blocks_test8(rArg04)
l004012F6:
	loop_test9((real32) rArg04)
l0040131E:
	dwLoc08_100 = dwLoc08_100 - 0x00000001


void nested_structs_test12(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: eax ecx edx Top
// Preserved: ebp esp
nested_structs_test12_entry:
l00401330:
	Mem9[dwArg04:word32] = 0x00000001
	Mem11[dwArg04 + 0x00000004:word32] = 0x00000002
	Mem13[dwArg04 + 0x00000008:word32] = 0x00000003
	Mem15[dwArg04 + 0x0000000C:word32] = 0x00000004
	return
nested_structs_test12_exit:


void nested_structs_test13(nested_structs_type * str)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
nested_structs_test13_entry:
l00401360:
	nested_structs_test12(str)
	return
nested_structs_test13_exit:


