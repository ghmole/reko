void fn0000000000015180(word64 ra, word64 gp, word64 a0, word64 a1, word64 a7, word64 s5, word64 s11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..63] a1:[0..63] a7:[0..63] gp:[0..63] ra:[0..63] s11:[0..63] s5:[0..63]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 t1 t3
// Preserved: sp
fn0000000000015180_entry:
l0000000000015180:
	word64 a5_7 = Mem5[gp + -1936<i32>:word64]
	word64 s3_1036 = a0
	word32 dwLoc01A4_1569 = 0<32>
	word64 s0_126 = 0<i32>
	word64 s6_43 = 0<i32>
	word64 s9_44 = 0<i32>
	word64 s10_45 = 0<i32>
	word64 s7_49 = 1<i32>
l0000000000015200:
	word64 a0_60 = (uint64) (uint32) getopt_long(a0, a1, 0x119A8<64>, 0x108E0<64>, 0<i32>)
	branch a0_60 == -1<i32> l0000000000015348
l0000000000015348:
	word64 s1_139
	word64 s4_325
	word64 a4_65 = (int64) Mem50[gp + -1904<i32>:int32]
	branch a4_65 >= a0 l0000000000015428
l0000000000015428:
	s4_325 = 0<i32>
	s1_139 = 0<i32>
l0000000000015350:
	word64 a1_68 = (int64) ((word32) a4_65 + 1<i32>)
	Mem71[gp + 2192<i64>:word32] = (word32) a1_68
	word64 s2_70 = a1 + (a4_65 << 3<u32>)
	s1_139 = Mem71[s2_70:word64]
	s4_325 = 0<i32>
	branch a1_68 >= a0 l0000000000015378
l000000000001536C:
	s4_325 = Mem71[s2_70 + 8<i32>:word64]
	Mem76[gp + 2192<i64>:word32] = (word32) (int64) ((word32) a4_65 + 2<i32>)
l0000000000015378:
	branch s6_43 != 0<64> l0000000000015588
l0000000000015588:
	__printf_chk(1<i32>, 0x119C8<64>, 0<32>)
l000000000001537C:
	branch 0<i64> == 0<64> l00000000000153B4
l0000000000015384:
	branch 0<i64> == 0<64> l00000000000153B4
l00000000000153B4:
	word64 a6_1006
	word64 a4_463
	word64 a0_460
	word64 a5_334
	word64 a0_172
	word64 a0_333
	word64 a5_254
	word64 s2_121
	word64 qwLoc0188_2009
	branch s9_44 == 0<64> l0000000000015924
l0000000000015924:
	word64 a1_101
	word64 a2_102
	word64 a3_103
	word64 a4_3406
	branch fn0000000000017924(gp, out a1_101, out a2_102, out a3_103, out a4_3406, out a6_1006) != 0<64> l0000000000015458
l0000000000015930:
	branch (s0_126 & 65544<i64>) != 65544<i64> l0000000000015458
l0000000000015940:
l00000000000153BC:
	s2_121 = s0_126 | 2<i32>
	word64 a1_115
	word64 a2_116
	word64 a3_117
	word64 a4_3407
	branch fn0000000000017924(gp, out a1_115, out a2_116, out a3_117, out a4_3407, out a6_1006) == 0<64> l0000000000015434
l0000000000015434:
	branch (s0_126 & 65544<i64>) != 65544<i64> l00000000000153CC
l0000000000015444:
	s0_126 = s0_126 | 2<i32>
l0000000000015448:
	s2_121 = s0_126 | 0x4000<64>
	branch s9_44 != 0<64> l00000000000153CC
l0000000000015454:
	s0_126 = s2_121
l0000000000015458:
	a5_254 = a0_60
	branch s10_45 == 0<64> l0000000000015CE4
l0000000000015CE4:
	branch s1_139 != 0<64> l0000000000015510
l0000000000015CE8:
	branch (int64) Mem94[gp + -2028<i32>:int32] != 0<64> l00000000000153D8
l0000000000015CF0:
	fwrite(0x11A30<64>, 1<i32>, 28<i32>, Mem94[gp + -1920<i32>:word64])
	fn0000000000015FCC(gp, 1<i32>)
l000000000001545C:
	word64 a0_163 = fn00000000000166F4(gp, fp + -420<i32>, s10_45, 1<i32>)
	branch a0_163 < 0<64> l0000000000015BC8
l0000000000015BC8:
	branch (int64) Mem94[gp + -2028<i32>:int32] != 0<64> l00000000000153D8
l0000000000015BD0:
	a0_172 = Mem94[gp + -1920<i32>:word64]
	branch false l0000000000015E7C
l0000000000015E7C:
l0000000000015BDC:
l0000000000015474:
	branch (uint64) (uint32) clock_gettime(2<i32>, fp + -408<i32>) < 0<64> l0000000000015CB0
l0000000000015494:
	branch 0<i64> == 0<64> l0000000000015C48
l0000000000015C48:
	branch fn00000000000164D0(fp + -192<i32>, 4<i32>) < 0<64> l0000000000015CB0
l0000000000015C64:
	branch a0_163 <= 15<i32> l0000000000015C7C
l0000000000015C6C:
	word64 a3_197 = 1<i32>
	branch a3_197 >=u (qwLoc0190 | 4<i32>) l0000000000015DB8
l0000000000015DB8:
	branch (qwLoc0190 | 4<i32>) == a3_197 l0000000000015E00
l0000000000015E00:
l0000000000015DBC:
l0000000000015C7C:
l0000000000015C84:
	branch inet_ntop(2<i32>, fp + -424<i32>, fp + -184<i32>, 64<i32>) != 0<64> l00000000000154DC
l0000000000015498:
	qwLoc0188_2009 = SEQ(nLoc0187, (byte) (qwLoc0190 & 1<i32> | -4<i32>)) (alias)
	branch fn00000000000164D0(fp + -391<i32>, 15<i32>) < 0<64> l0000000000015CB0
l00000000000154BC:
	branch inet_ntop(10<i32>, fp + -392<i32>, fp + -184<i32>, 64<i32>) == 0<64> l0000000000015CB0
l00000000000154DC:
	a5_254 = a0_163
	branch (uint64) (uint32) __asprintf_chk(fp + -416<i32>, 1<i32>, 0x11A90<64>, 0<32>) == -1<i32> l0000000000015CB0
l0000000000015508:
	s1_139 = 0<64>
	branch 0<64> == 0<64> l0000000000015CB0
l0000000000015CB0:
	branch (int64) Mem260[gp + -2028<i32>:int32] != 0<64> l00000000000153D8
l0000000000015CB8:
	__fprintf_chk(Mem260[gp + -1920<i32>:word64], 1<i32>, 0x11A98<64>, 0<32>)
l00000000000153CC:
	branch s10_45 == 0<64> l00000000000155A8
l00000000000155A8:
	branch false l0000000000015944
l0000000000015944:
	word64 a0_281 = fn00000000000169D8(gp, s9_44)
	s1_139 = a0_281
	s0_126 = s2_121
	a5_254 = a0_60
	branch a0_281 != 0<64> l0000000000015510
l0000000000015510:
	branch false l00000000000155D8
l00000000000155B0:
	branch 0<i64> == 0<64> l000000000001598C
l000000000001598C:
	word64 a0_298 = fn00000000000169D8(gp, s9_44)
	s1_139 = a0_298
	branch a0_298 == 0<64> l0000000000015964
l00000000000159A4:
	s0_126 = s2_121
	a5_254 = a0_60
l0000000000015518:
	branch strchr(s1_139, 58<i32>) == 0<64> l00000000000155D8
l0000000000015530:
	dwLoc01A4_1569 = 1<32>
	branch s4_325 == 0<64> l0000000000015BEC
l0000000000015BEC:
	a0_333 = strchr(s1_139, 47<i32>)
	a5_334 = a5_254
	branch a0_333 != 0<64> l0000000000015BB8
l0000000000015C04:
l00000000000155B8:
	word64 a0_338 = fn00000000000169D8(gp, s9_44)
	s1_139 = a0_338
	branch a0_338 == 0<64> l0000000000015964
l0000000000015964:
	branch (int64) Mem346[gp + -2028<i32>:int32] != 0<64> l00000000000153D8
l000000000001596C:
	__fprintf_chk(Mem346[gp + -1920<i32>:word64], 1<i32>, 0x11A50<64>, 0<32>)
l00000000000155D0:
	a5_254 = a0_60
	s0_126 = s2_121
l00000000000155D8:
	branch s4_325 == 0<64> l0000000000015BA0
l0000000000015BA0:
	a0_333 = strchr(s1_139, 47<i32>)
	a5_334 = a5_254
	branch a0_333 == 0<64> l00000000000155FC
l0000000000015BB8:
	Mem368[a0_333:byte] = 0<8>
	s4_325 = a0_333 + 1<i32>
	branch s4_325 == 0<64> l00000000000155FC
l0000000000015BC4:
l00000000000155DC:
	branch false l000000000001553C
l000000000001553C:
	branch (int64) Mem376[gp + -2028<i32>:int32] != 0<64> l00000000000153D8
l0000000000015544:
	__fprintf_chk(Mem376[gp + -1920<i32>:word64], 1<i32>, 0x11AD0<64>, 0<32>)
	fn0000000000015FCC(gp, 1<i32>)
l00000000000155E4:
	word64 a0_399 = fn00000000000166F4(gp, fp + -420<i32>, s4_325, 0<i32>)
	a5_334 = a0_399
	branch a0_399 < 0<64> l0000000000015B6C
l0000000000015B6C:
	branch (int64) Mem406[gp + -2028<i32>:int32] != 0<64> l00000000000153D8
l0000000000015B74:
	a0_172 = Mem406[gp + -1920<i32>:word64]
	branch (int64) dwLoc01A4_1569 != 0<64> l0000000000015CD8
l0000000000015CD8:
l0000000000015B80:
l0000000000015B88:
l0000000000015B8C:
	__fprintf_chk(a0_172, 1<i32>, 0x11A70<64>, 0<32>)
l00000000000155FC:
	branch (int64) dwLoc01A4_1569 == 0<64> l00000000000159B0
l00000000000159B0:
	a0_460 = fn0000000000016D74(ra, gp, s1_139, a5_334, fp + -392<i32>, s0_126, out a4_463)
l0000000000015604:
	a0_460 = fn00000000000175BC(ra, gp, s1_139, s1_139, a5_334, fp + -392<i32>, s0_126, out a4_463)
l0000000000015618:
	branch a0_460 < 0<64> l00000000000153D8
l000000000001561C:
	branch (s0_126 & 4294623231<i64>) != 0<64> l0000000000015630
l000000000001562C:
	s0_126 = s0_126 | 8<i32>
l0000000000015630:
	branch (uint64) (uint32) isatty(1<i32>) == 0<64> l0000000000015644
l000000000001563C:
	a4_463 = 1<i32>
	Mem491[gp + 2064<i64>:word32] = (word32) a4_463
l0000000000015644:
	branch (s0_126 & 8<i32>) == 0<64> l00000000000159C8
l00000000000159C8:
	branch (s0_126 & 128<i32>) != 0<64> l0000000000015D18
l0000000000015D18:
	__printf_chk(1<i32>, 0x11C28<64>, 0<32>)
l00000000000159D0:
	branch (s0_126 & 512<i32>) != 0<64> l0000000000015D48
l0000000000015D48:
	__printf_chk(1<i32>, 0x11C38<64>, 0<32>)
l00000000000159D8:
	branch (s0_126 & 64<i32>) == 0<64> l00000000000159FC
l00000000000159E0:
	branch (int64) dwLoc01A4_1569 != 0<64> l00000000000159FC
l00000000000159E8:
	__printf_chk(1<i32>, 0x11C48<64>, 0<32>)
l00000000000159FC:
	branch (s0_126 & 256<i32>) != 0<64> l0000000000015D30
l0000000000015D30:
	__printf_chk(1<i32>, 0x11C58<64>, 0<32>)
l0000000000015A04:
	branch s0_126 << 0xE<u32> < 0<64> l0000000000015D78
l0000000000015D78:
	__printf_chk(1<i32>, 0x11C68<64>, 0<32>)
l0000000000015A0C:
	branch (s0_126 & 1024<i32>) == 0<64> l0000000000015A2C
l0000000000015A14:
	branch qwLocE0 == 0<64> l0000000000015A2C
l0000000000015A1C:
	__printf_chk(1<i32>, 0x11C78<64>, 0<32>)
l0000000000015A2C:
	branch s0_126 << 0x14<u32> >= 0<64> l0000000000015A4C
l0000000000015A34:
	branch qwLocD8 == 0<64> l0000000000015A4C
l0000000000015A3C:
	__printf_chk(1<i32>, 0x11C88<64>, 0<32>)
l0000000000015A4C:
	branch s0_126 << 0x12<u32> >= 0<64> l0000000000015A80
l0000000000015A54:
	branch qwLocD0 == 0<64> l0000000000015A80
l0000000000015A5C:
	branch strchr(qwLocD0, 32<i32>) == 0<64> l0000000000015DA4
l0000000000015DA4:
	__printf_chk(1<i32>, 0x11CA8<64>, 0<32>)
l0000000000015A70:
	__printf_chk(1<i32>, 0x11C98<64>, 0<32>)
l0000000000015A80:
	branch s0_126 << 0x13<u32> >= 0<64> l0000000000015AAC
l0000000000015A88:
	branch strchr(fp + -296<i32>, 32<i32>) == 0<64> l0000000000015D90
l0000000000015D90:
	__printf_chk(1<i32>, 0x11CC8<64>, 0<32>)
l0000000000015A9C:
	__printf_chk(1<i32>, 0x11CB8<64>, 0<32>)
l0000000000015AAC:
	branch (s0_126 & 1<i32>) == 0<64> l0000000000015ACC
l0000000000015AB4:
	branch qwLoc0150 == 0<64> l0000000000015ACC
l0000000000015ABC:
	__printf_chk(1<i32>, 0x11CD8<64>, 0<32>)
l0000000000015ACC:
	branch (s0_126 & 2<i32>) != 0<64> l0000000000015D60
l0000000000015D60:
	__printf_chk(1<i32>, 0x11CE8<64>, 0<32>)
l0000000000015AD4:
	branch (s0_126 & 0xC000<64>) != 0xC000<64> l00000000000153DC
l0000000000015AE0:
	branch qwLoc0140 == 0<64> l0000000000015AF8
l0000000000015AE8:
	__printf_chk(1<i32>, 0x11CF8<64>, 0<32>)
l0000000000015AF8:
	branch qwLoc0148 == 0<64> l0000000000015B24
l0000000000015B00:
	branch strchr(qwLoc0148, 32<i32>) == 0<64> l0000000000015E90
l0000000000015E90:
	__printf_chk(1<i32>, 0x11D18<64>, 0<32>)
l0000000000015B14:
	__printf_chk(1<i32>, 0x11D08<64>, 0<32>)
l0000000000015B24:
	branch qwLoc0138 == 0<64> l0000000000015B50
l0000000000015B2C:
	branch strchr(qwLoc0138, 32<i32>) == 0<64> l0000000000015EA4
l0000000000015EA4:
	__printf_chk(1<i32>, 0x11D38<64>, 0<32>)
l0000000000015B40:
	__printf_chk(1<i32>, 0x11D28<64>, 0<32>)
l0000000000015B50:
	branch qwLoc0130 == 0<64> l00000000000153DC
l0000000000015B58:
	__printf_chk(1<i32>, 0x11D48<64>, 0<32>)
l000000000001564C:
	word64 a4_1002
	word64 s0_1034
	word64 a5_1017
	word64 a5_676
	word64 s4_767
	word64 s2_1030 = (int64) dwLocE8
	branch (int64) dwLoc01A4_1569 != 0<64> l000000000001590C
l000000000001590C:
	a5_676 = 128<i32>
	branch s2_1030 != a5_676 l0000000000015660
l0000000000015658:
	a5_676 = 32<i32>
	branch s2_1030 == a5_676 l0000000000015914
l0000000000015914:
	branch qwLoc0180 == 0<64> l0000000000015DDC
l0000000000015DDC:
	word64 a5_3412
	gp = fn000000000001654C(ra, gp, s0_126, 0x12000<64>, 0x11B08<64>, 0x11B10<64>, qwLoc0188_2009, a4_463, a5_676, a6_1006, a7, 0x12000<64>, a0, out a4_1002, out a5_3412, out a6_1006, out a7)
l000000000001591C:
	s4_767 = 1<i32>
l0000000000015660:
	branch s10_45 == 0<64> l0000000000015860
l0000000000015860:
	s3_1036 = qwLoc0188_2009
	branch (uint64) (uint32) strcmp(qwLoc0168, qwLoc0188_2009) == 0<64> l0000000000015664
l0000000000015874:
	s4_767 = 0<i32>
	branch qwLoc0180 == 0<64> l0000000000015E14
l0000000000015E14:
	word64 a4_3411
	gp = fn000000000001654C(ra, gp, s0_126, 0x12000<64>, 0x11B08<64>, 0x11B10<64>, qwLoc0188_2009, a4_463, a5_676, a6_1006, a7, 0x12000<64>, qwLoc0188_2009, out a4_3411, out a5_676, out a6_1006, out a7)
	s2_1030 = (int64) dwLocE8
l0000000000015880:
	word64 a4_835
	word64 a5_836
	word64 a6_837
	word64 a7_838
	gp = fn000000000001654C(ra, fn000000000001654C(ra, gp, s0_126, 0x12000<64>, 0x11B08<64>, 0x11AF8<64>, qwLoc0180, a4_463, a5_676, a6_1006, a7, 0x12000<64>, s3_1036, out a4_835, out a5_836, out a6_837, out a7_838), s0_126, 0x12000<64>, 0x11B08<64>, 0x11B10<64>, qwLoc0188_2009, a4_835, a5_836, a6_837, a7_838, 0x12000<64>, s3_1036, out a4_1002, out a5_676, out a6_1006, out a7)
	branch s4_767 == 0<64> l0000000000015E74
l0000000000015E74:
	s2_1030 = (int64) dwLocE8
l00000000000158B8:
	a5_1017 = 65544<i64>
	s0_1034 = s0_126 & 65544<i64>
	branch s0_1034 == 65544<i64> l0000000000015E64
l0000000000015E64:
	s0_1034 = 1<i32>
	branch qwLoc0170 != 0<64> l0000000000015C2C
l0000000000015E70:
l0000000000015664:
l0000000000015668:
	s3_1036 = 0x12000<64>
	branch qwLoc0178 == 0<64> l0000000000015690
l0000000000015674:
	word64 a4_3409
	gp = fn000000000001654C(ra, gp, s0_126, 0x12000<64>, 0x11B08<64>, 0x11B28<64>, qwLoc0178, s2_1030, a5_676, a6_1006, a7, s2_1030, 0x12000<64>, out a4_3409, out a5_676, out a6_1006, out a7)
	s2_1030 = (int64) dwLocE8
l0000000000015690:
	word64 a5_932
	word64 a6_933
	word64 a7_934
	word64 a5_950
	word64 a4_3408
	gp = fn000000000001654C(ra, fn000000000001654C(ra, gp, s0_126, 0x12000<64>, 0x11B08<64>, 0x11B38<64>, qwLoc0168, s2_1030, a5_676, a6_1006, a7, s2_1030, 0x12000<64>, out a4_3408, out a5_932, out a6_933, out a7_934), s0_126, 0x12000<64>, 0x11B08<64>, 0x11B58<64>, qwLoc0158, (int64) dwLocE8, a5_932, a6_933, a7_934, s2_1030, 0x12000<64>, out a4_1002, out a5_950, out a6_1006, out a7)
	branch qwLoc0160 == 0<64> l00000000000156EC
l00000000000156D4:
	s2_1030 = 0x12000<64>
	word64 a5_3410
	gp = fn000000000001654C(ra, gp, s0_126, 0x12000<64>, 0x11B08<64>, 0x11B68<64>, qwLoc0160, a4_1002, a5_950, a6_1006, a7, 0x12000<64>, 0x12000<64>, out a4_1002, out a5_3410, out a6_1006, out a7)
l00000000000156EC:
	a5_1017 = 65544<i64>
	s0_1034 = s0_126 & 65544<i64>
	branch s0_1034 == 65544<i64> l0000000000015C1C
l0000000000015C1C:
	branch qwLoc0170 == 0<64> l00000000000156FC
l0000000000015C24:
	s0_1034 = 0<i32>
l0000000000015C2C:
	s2_1030 = 0x12000<64>
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B08<64>, 0x11B78<64>, qwLoc0170, a4_1002, 65544<i64>, a6_1006, a7, 0x12000<64>, s3_1036, out a4_1002, out a5_1017, out a6_1006, out a7)
	branch s0_1034 != 0<64> l00000000000158C8
l00000000000158C8:
	s2_1030 = 0x12000<64>
	branch qwLocD0 == 0<64> l00000000000158E8
l00000000000158D0:
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B98<64>, 0x11B88<64>, qwLocD0, a4_1002, a5_1017, a6_1006, a7, 0x12000<64>, s3_1036, out a4_1002, out a5_1017, out a6_1006, out a7)
l00000000000158E8:
	branch qwLocC8 == 0<64> l00000000000157BC
l00000000000158F0:
	word64 a5_3413
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B98<64>, 0x11BA0<64>, qwLocC8, a4_1002, a5_1017, a6_1006, a7, 0x12000<64>, s3_1036, out a4_1002, out a5_3413, out a6_1006, out a7)
l0000000000015C44:
l00000000000156FC:
	putchar(10<i32>)
	branch qwLocD0 == 0<64> l0000000000015728
l000000000001570C:
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B98<64>, 0x11B88<64>, qwLocD0, a4_1002, a5_1017, a6_1006, a7, s2_1030, s3_1036, out a4_1002, out a5_1017, out a6_1006, out a7)
l0000000000015728:
	branch qwLocC8 == 0<64> l000000000001574C
l0000000000015730:
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B98<64>, 0x11BA0<64>, qwLocC8, a4_1002, a5_1017, a6_1006, a7, s2_1030, s3_1036, out a4_1002, out a5_1017, out a6_1006, out a7)
l000000000001574C:
	branch qwLocE0 == 0<64> l000000000001576C
l0000000000015754:
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B08<64>, 0x11BB0<64>, qwLocE0, a4_1002, a5_1017, a6_1006, a7, s2_1030, s3_1036, out a4_1002, out a5_1017, out a6_1006, out a7)
l000000000001576C:
	branch qwLocD8 == 0<64> l000000000001578C
l0000000000015774:
	word64 a5_3414
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B08<64>, 0x11BC0<64>, qwLocD8, a4_1002, a5_1017, a6_1006, a7, s2_1030, s3_1036, out a4_1002, out a5_3414, out a6_1006, out a7)
l000000000001578C:
	word64 a5_1206 = (int64) dwLoc01A4_1569
	branch a5_1206 == 0<64> l00000000000157A0
l0000000000015794:
	a5_1206 = (int64) dwLocE8
	a4_1002 = 111<i32>
	branch a4_1002 >=u a5_1206 l0000000000015E3C
l0000000000015E3C:
	word64 a5_3416
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B08<64>, 0x11BE0<64>, (int64) (word32) (128<i32> - a5_1206), fp + -296<i32>, a5_1206, a6_1006, a7, s2_1030, s3_1036, out a4_1002, out a5_3416, out a6_1006, out a7)
l00000000000157A0:
	word64 a5_3415
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B08<64>, 0x11BE0<64>, fp + -296<i32>, a4_1002, a5_1206, a6_1006, a7, s2_1030, s3_1036, out a4_1002, out a5_3415, out a6_1006, out a7)
l00000000000157BC:
	word64 a5_1268 = qwLoc0148
	branch qwLoc0148 == 0<64> l0000000000015C08
l0000000000015C08:
	a5_1268 = qwLoc0138
	branch qwLoc0138 != 0<64> l00000000000157C4
l0000000000015C10:
	a5_1268 = qwLoc0130
	branch qwLoc0130 != 0<64> l00000000000157C4
l0000000000015C18:
l00000000000157C4:
	putchar(10<i32>)
	branch qwLoc0140 == 0<64> l00000000000157F0
l00000000000157D4:
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B98<64>, 0x11BF0<64>, qwLoc0140, a4_1002, a5_1268, a6_1006, a7, s2_1030, s3_1036, out a4_1002, out a5_1268, out a6_1006, out a7)
l00000000000157F0:
	branch qwLoc0148 == 0<64> l0000000000015814
l00000000000157F8:
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B98<64>, 0x11C00<64>, qwLoc0148, a4_1002, a5_1268, a6_1006, a7, s2_1030, s3_1036, out a4_1002, out a5_1268, out a6_1006, out a7)
l0000000000015814:
	branch qwLoc0138 == 0<64> l0000000000015838
l000000000001581C:
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B98<64>, 0x11C10<64>, qwLoc0138, a4_1002, a5_1268, a6_1006, a7, s2_1030, s3_1036, out a4_1002, out a5_1268, out a6_1006, out a7)
l0000000000015838:
	branch qwLoc0130 == 0<64> l00000000000153DC
l0000000000015840:
	word64 a7_3420
	word64 a4_3417
	word64 a5_3418
	word64 a6_3419
	gp = fn000000000001654C(ra, gp, s0_1034, 0x12000<64>, 0x11B98<64>, 0x11C18<64>, qwLoc0130, a4_1002, a5_1268, a6_1006, a7, s2_1030, s3_1036, out a4_3417, out a5_3418, out a6_3419, out a7_3420)
l00000000000153D0:
	branch (int64) Mem94[gp + -2028<i32>:int32] == 0<64> l000000000001556C
l000000000001556C:
	fwrite(0x11A08<64>, 1<i32>, 37<i32>, Mem94[gp + -1920<i32>:word64])
l000000000001538C:
	branch (int64) Mem88[gp + -2028<i32>:int32] != 0<64> l00000000000153D8
l00000000000153D8:
l0000000000015394:
	fwrite(0x119D8<64>, 1<i32>, 46<i32>, Mem88[gp + -1920<i32>:word64])
l00000000000153DC:
	branch a5_7 != Mem1425[gp + -1936<i32>:word64] l0000000000015E8C
l0000000000015E8C:
	__stack_chk_fail()
l00000000000153EC:
	return
l0000000000015224:
	branch a0_60 >u 118<i32> l0000000000015200
l000000000001522C:
	word64 a5_1524 = (int64) Mem50[(a0_60 << 0<u32> >>u 0x1E<u32>) + 0x102A0<64>:int32]
	word64 a6_1550
	word64 a7_1551
	word64 t1_1552
	word64 t3_1553
	call a5_1524 (retsize: 0;)
		uses: a0:a0_60,a1:a1,a4:0x102A0<64>,a5:a5_1524,a6:a6_1550,a7:a7_1551,gp:gp,ra:ra,s0:s0_42,s1:0x108E0<64>,s10:s10_45,s11:s11,s2:a1,s3:a0,s4:0x12000<64>,s5:s5,s6:s6_43,s7:s7_49,s8:0x1000<64>,s9:s9_44,Stack +0030:qwLoc0190,Stack +0039:nLoc0187,Stack +0040:qwLoc0180,Stack +0048:qwLoc0178,Stack +0050:qwLoc0170,Stack +0058:qwLoc0168,Stack +0060:qwLoc0160,Stack +0068:qwLoc0158,Stack +0070:qwLoc0150,Stack +0078:qwLoc0148,Stack +0080:qwLoc0140,Stack +0088:qwLoc0138,Stack +0090:qwLoc0130,Stack +00D8:dwLocE8,Stack +00E0:qwLocE0,Stack +00E8:qwLocD8,Stack +00F0:qwLocD0,Stack +00F8:qwLocC8,Stack +0101:nLocBF,t1:t1_1552,t3:t3_1553
		defs: a6:a6_1550,a7:a7_1551,t1:t1_1552,t3:t3_1553
	return
fn0000000000015180_exit:


void fn0000000000015EB8(word64 a0, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 gp sp
// Preserved:
fn0000000000015EB8_entry:
l0000000000015EB8:
	__libc_start_main(0x0000000000015180<p64>, qwArg00, fp + 8<i32>, 0x00000000000182E8<p64>, 0x0000000000018378<p64>, a0, fp & -16<i32>)
	return
fn0000000000015EB8_exit:


void fn0000000000015EF0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015F64
// MayUse: 
// LiveOut:
// Trashed: a0 a4 a5 ra t1
// Preserved: sp
fn0000000000015EF0_entry:
l0000000000015EF0:
	branch true l0000000000015F20
l0000000000015F0C:
	branch 0<64> == 0<64> l0000000000015F20
l0000000000015F20:
	return
l0000000000015F18:
	word64 t1_16
	word64 ra_17
	call 0<64> (retsize: 0;)
		uses: a0:0x102A0<64>,ra:ra_17,t1:t1_16
		defs: ra:ra_17,t1:t1_16
	return
fn0000000000015EF0_exit:


void fn0000000000015F24()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015F94
// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: sp
fn0000000000015F24_entry:
l0000000000015F24:
	branch 0<i64> == 0<64> l0000000000015F60
l0000000000015F4C:
	branch 0<64> == 0<64> l0000000000015F60
l0000000000015F60:
	return
l0000000000015F58:
	word64 t1_19
	call 0<64> (retsize: 0;)
		uses: a0:0x102A0<64>,t1:t1_19
		defs: t1:t1_19
	return
fn0000000000015F24_exit:


void fn0000000000015F64(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp:[0..63]
// LiveOut:
// Trashed: a0 a4 a5 t1
// Preserved: ra s0 sp
fn0000000000015F64_entry:
l0000000000015F64:
	branch (int64) Mem5[gp + -1900<i32>:byte] != 0<64> l0000000000015F84
l0000000000015F78:
	fn0000000000015EF0()
	Mem16[gp + 2196<i64>:byte] = 1<8>
l0000000000015F84:
	return
fn0000000000015F64_exit:


void fn0000000000015F94(word64 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ra:[0..63]
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: ra sp
fn0000000000015F94_entry:
l0000000000015F94:
	branch Mem0[0x19E28<64>:word64] != 0<64> l0000000000015FA8
l0000000000015FA8:
	branch 0<64> == 0<64> l0000000000015FA4
l0000000000015FB4:
	call 0<64> (retsize: 0;)
		uses: ra:ra,Stack +0008:ra
l0000000000015FC8_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
l0000000000015FA4:
l0000000000015FA4_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
fn0000000000015F94_exit:


void fn0000000000015FCC(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..63] gp:[0..63]
// LiveOut:
// Trashed: a0 a1 a2 a3
// Preserved: ra s0 sp
fn0000000000015FCC_entry:
l0000000000015FCC:
	word64 a3_9 = Mem7[gp + -1920<i32>:word64]
	branch a0 != 0<64> l0000000000016090
l0000000000016090:
	fwrite(0x10BE0<64>, 1<i32>, 26<i32>, a3_9)
	fwrite(0x10C00<64>, 1<i32>, 54<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10C38<64>, 1<i32>, 77<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10C88<64>, 1<i32>, 62<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10CC8<64>, 1<i32>, 79<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10D18<64>, 1<i32>, 79<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10D68<64>, 1<i32>, 42<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10D98<64>, 1<i32>, 76<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10DE8<64>, 1<i32>, 77<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10E38<64>, 1<i32>, 77<i32>, Mem7[gp + -1920<i32>:word64])
	fputc(10<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10E88<64>, 1<i32>, 23<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10EA0<64>, 1<i32>, 71<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10EE8<64>, 1<i32>, 57<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10F28<64>, 1<i32>, 58<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10F68<64>, 1<i32>, 57<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10FA8<64>, 1<i32>, 77<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x10FF8<64>, 1<i32>, 77<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11048<64>, 1<i32>, 77<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11098<64>, 1<i32>, 46<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x110C8<64>, 1<i32>, 72<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11118<64>, 1<i32>, 45<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11148<64>, 1<i32>, 67<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11190<64>, 1<i32>, 64<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x111D8<64>, 1<i32>, 72<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11228<64>, 1<i32>, 46<i32>, Mem7[gp + -1920<i32>:word64])
	fputc(10<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11258<64>, 1<i32>, 15<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11268<64>, 1<i32>, 87<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x112C0<64>, 1<i32>, 60<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11300<64>, 1<i32>, 68<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11348<64>, 1<i32>, 58<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11388<64>, 1<i32>, 57<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x113C8<64>, 1<i32>, 62<i32>, Mem7[gp + -1920<i32>:word64])
	return
l0000000000015FE0:
	fwrite(0x11408<64>, 1<i32>, 77<i32>, a3_9)
	fwrite(0x11458<64>, 1<i32>, 62<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11498<64>, 1<i32>, 65<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x114E0<64>, 1<i32>, 76<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11530<64>, 1<i32>, 65<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x11578<64>, 1<i32>, 41<i32>, Mem7[gp + -1920<i32>:word64])
	fwrite(0x115A8<64>, 1<i32>, 30<i32>, Mem7[gp + -1920<i32>:word64])
	return
fn0000000000015FCC_exit:


word64 fn00000000000163B0(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000175BC
// MayUse:  gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn00000000000163B0_entry:
l00000000000163B0:
	word64 a5_27 = Mem25[gp + -1936<i32>:word64]
	__sprintf_chk(fp + -232<i32>, 1<i32>, 128<i32>, 0x115C8<64>, 0<32>)
	word64 s3_37 = 16<i32>
	word64 s0_38 = 1<i64>
	word64 s1_42 = fp + -230<i32>
	word64 s6_43 = 128<i32>
	word64 s5_44 = 1<i32>
	word64 s9_45 = 15<i32>
	word64 s7_46 = 58<i32>
	branch s3_37 == 1<i64> l000000000001646C
l0000000000016430:
	__sprintf_chk(s1_42, s5_44, s6_43, 0x115C8<64>, 0<32>)
	word64 a4_61 = s1_42 + 2<i32>
	branch (s0_38 & 1<i32>) == 0<64> l00000000000164B8
l00000000000164B8:
	s1_42 = a4_61
l0000000000016454:
	branch s0_38 == s9_45 l00000000000164C4
l00000000000164C4:
	s1_42 = a4_61
l0000000000016458:
	Mem67[s1_42 + 2<i64>:byte] = (byte) s7_46
	s1_42 = s1_42 + 3<i32>
l0000000000016464:
	s0_38 = (int64) ((word32) s0_38 + 1<i32>)
	branch s0_38 != s3_37 l0000000000016430
l000000000001646C:
	Mem76[s1_42:byte] = 0<8>
	word64 a0_81 = __strdup(fp + -232<i32>)
	branch a5_27 != Mem76[gp + -1936<i32>:word64] l00000000000164CC
l00000000000164CC:
	__stack_chk_fail()
l0000000000016484:
	return a0_81
fn00000000000163B0_exit:


word64 fn00000000000164D0(word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..31] a1:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2
// Preserved: ra s0 s1 s2 sp
fn00000000000164D0_entry:
l00000000000164D0:
	word64 a0_20
	word64 a0_19 = (uint64) (uint32) open(0x115D0<64>, 0<i32>)
	branch a0_19 < 0<64> l0000000000016544
l0000000000016544:
	a0_20 = -1<i32>
l0000000000016500:
	word64 a0_25 = (uint64) (uint32) read(a0_19, a0, a1 << 0<u32> >>u 0<u32>)
	close(a0_19)
	a0_20 = (int64) (word32) (0<64> - (word64) ((int64) ((word32) (a0_25 - a1)) != 0<64>))
l000000000001652C:
	return a0_20
fn00000000000164D0_exit:


word64 fn000000000001654C(word64 ra, word64 gp, word64 s0, word64 s1, word64 a0, word64 a1, word64 a3, word64 a4, word64 a5, word64 a6, word64 a7, word64 s2, word64 s3, ptr64 & a4Out, ptr64 & a5Out, ptr64 & a6Out, ptr64 & a7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..63] a1:[0..63] a3:[0..63] a4:[0..63] a5:[0..63] a6:[0..63] a7:[0..63] gp:[0..63] ra:[0..63] s0:[0..63] s1:[0..63] s2:[0..63] s3:[0..63]
// LiveOut: a4 a5 a6 a7 gp
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 gp t1 t3
// Preserved: ra s0 s1 s2 s3 sp
fn000000000001654C_entry:
l000000000001654C:
	word64 t3_7 = Mem5[gp + -1936<i32>:word64]
	word64 gp_40
	word64 s2_42
	word64 s3_43
	word64 a0_45
	word64 a6_51
	word64 a7_52
	call __vasprintf_chk (retsize: 0;)
		uses: a0:fp + -112<i32>,a1:1<i32>,a3:fp + -40<i32>,a4:a4,a5:a5,a6:a6,a7:a7,gp:gp,ra:ra,s0:s0,s1:s1,s2:a1,s3:a0,Stack +0008:fp + -40<i32>,Stack +0010:0<64>,Stack +0018:t3_7,Stack +0028:s3,Stack +0030:s2,Stack +0038:s1,Stack +0040:s0,Stack +0048:ra,Stack +0058:a3,Stack +0060:a4,Stack +0068:a5,Stack +0070:a6,Stack +0078:a7,t1:fp + -40<i32>,t3:t3_7
		defs: a0:a0_45,a6:a6_51,a7:a7_52,gp:gp_40,s2:s2_42,s3:s3_43
	branch a0_45 < 0<64> l00000000000165D8
l00000000000165A8:
	fputs(s2_42, Mem36[gp_40 + -1912<i32>:word64])
	branch (int64) Mem36[gp_40 + -2032<i32>:int32] != 0<64> l000000000001661C
l000000000001661C:
	fputs(s3_43, Mem36[gp_40 + -1912<i32>:word64])
l00000000000165BC:
	fputs(0<64>, Mem36[gp_40 + -1912<i32>:word64])
	branch (int64) Mem36[gp_40 + -2032<i32>:int32] != 0<64> l0000000000016600
l0000000000016600:
	fwrite(0x115E0<64>, 1<i32>, 4<i32>, Mem36[gp_40 + -1912<i32>:word64])
l00000000000165D0:
	free(0<64>)
l00000000000165D8:
	word64 a5_82 = Mem36[gp_40 + -1936<i32>:word64]
	branch t3_7 != a5_82 l000000000001662C
l000000000001662C:
	__stack_chk_fail()
l00000000000165E4:
	a4Out = t3_7
	a5Out = a5_82
	a6Out = a6_51
	a7Out = a7_52
	return gp_40
fn000000000001654C_exit:


word64 fn0000000000016630(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000166F4
// MayUse:  a0:[0..63] a1:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 sp
fn0000000000016630_entry:
l0000000000016630:
	word64 a5_31
	word64 a5_7 = Mem5[gp + -1936<i32>:word64]
	word64 a0_22 = __errno_location()
	Mem23[a0_22:word32] = 0<32>
	word64 a0_28 = (uint64) (uint32) strtol(a0)
	branch 0<64> == 0<64> l000000000001668C
l0000000000016680:
	branch a0 == 0<64> l000000000001668C
l0000000000016684:
	branch (int64) Mem23[0<64>:byte] == 0<64> l00000000000166C4
l00000000000166C4:
	a5_31 = (int64) Mem23[a0_22:int32]
	branch a5_31 != 0<64> l0000000000016690
l00000000000166CC:
	word64 a4_32 = (int64) (word32) a0_28
	branch a0_28 != a4_32 l00000000000166E0
l00000000000166E0:
	a5_31 = -34<i32>
l00000000000166D8:
	Mem35[a1:word32] = (word32) a4_32
l000000000001668C:
	a5_31 = (int64) Mem23[a0_22:int32]
l0000000000016690:
	branch a5_31 <= 0<64> l00000000000166E8
l00000000000166E8:
	a5_31 = -22<i32>
l0000000000016694:
	a5_31 = (int64) (word32) (0<64> - a5_31)
l0000000000016698:
	branch a5_7 != Mem45[gp + -1936<i32>:word64] l00000000000166F0
l00000000000166F0:
	__stack_chk_fail()
l00000000000166A8:
	return a5_31
fn0000000000016630_exit:


word64 fn00000000000166F4(word64 gp, word64 a0, word64 a1, word64 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000166F4_entry:
l00000000000166F4:
	word64 a0_204
	word64 a5_7 = Mem5[gp + -1936<i32>:word64]
	word64 s0_11 = (int64) Mem9[a0:int32]
	branch s0_11 != 0<64> l00000000000167C8
l000000000001672C:
	branch strchr(a1, 46<i32>) == 0<64> l00000000000167C8
l00000000000167C8:
	branch fn0000000000016630(gp, a1, fp + -64<i32>) == 0<64> l0000000000016794
l00000000000167D8:
l000000000001673C:
	branch (uint64) (uint32) inet_pton(2<i32>, a1, fp + -64<i32>) == 0<64> l000000000001678C
l0000000000016750:
	word64 a3_46
	word64 a4_234
	word64 a0_45 = fn00000000000182B4((int64) dwLoc40, out a3_46, out a4_234)
	branch a0_45 == 0<64> l0000000000016790
l000000000001675C:
	branch (a0_45 & 1<i32>) != 0<64> l0000000000016778
l0000000000016764:
	word64 a5_51 = (int64) (word32) (a0_45 >>u 1<i32>)
	branch a5_51 == 0<64> l0000000000016790
l000000000001676C:
	branch (a5_51 & 1<i32>) == 0<64> l0000000000016820
l0000000000016820:
	a0_45 = (int64) (word32) (a0_45 >>u 2<i32>)
	branch a0_45 != 0<64> l000000000001675C
l0000000000016828:
l0000000000016774:
	a0_45 = a5_51
l0000000000016778:
	a0_45 = (int64) (word32) (a0_45 >>u 1<i32>)
	s0_11 = (int64) ((word32) s0_11 + 1<i32>)
	branch a0_45 == 0<64> l0000000000016790
l0000000000016784:
	branch (a0_45 & 1<i32>) != 0<64> l0000000000016778
l000000000001678C:
	s0_11 = -1<i32>
l0000000000016790:
	dwLoc40 = (word32) s0_11
l0000000000016794:
	word64 a5_71 = (int64) dwLoc40
	branch a2 == 0<64> l00000000000167DC
l000000000001679C:
	branch a5_71 <= 32<i32> l00000000000167DC
l00000000000167DC:
	a0_204 = a5_71
	branch a5_71 < 0<64> l00000000000167C0
l00000000000167E4:
	branch (int64) Mem69[a0:int32] != 0<64> l00000000000167B8
l00000000000167EC:
	branch a5_71 > 32<i32> l00000000000167C0
l00000000000167A8:
	branch (int64) Mem69[a0:int32] != 0<64> l00000000000167B8
l00000000000167B0:
	Mem94[a0:word32] = 1<32>
l00000000000167B8:
	a0_204 = a5_71
	branch a5_71 <= 128<i32> l00000000000167F4
l00000000000167C0:
	a0_204 = -1<i32>
l00000000000167F4:
	branch a5_7 != Mem102[gp + -1936<i32>:word64] l000000000001682C
l000000000001682C:
	__stack_chk_fail()
l0000000000016800:
	return a0_204
fn00000000000166F4_exit:


word64 fn0000000000016830(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000168B8
//      fn0000000000016D74
// MayUse:  a0:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a4 a5
// Preserved: ra s0 sp
fn0000000000016830_entry:
l0000000000016830:
	word64 a5_7 = Mem5[gp + -1936<i32>:word64]
	branch a0 == 0<64> l0000000000016864
l0000000000016864:
	branch a5_7 != Mem11[gp + -1936<i32>:word64] l0000000000016884
l0000000000016884:
	__stack_chk_fail()
l0000000000016874:
	return 0<i64>
fn0000000000016830_exit:
l000000000001684C:


void fn00000000000168B8(word64 gp, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1:[0..63] gp:[0..63]
// LiveOut:
// Trashed: a0 a4 a5
// Preserved: ra s0 sp
fn00000000000168B8_entry:
l00000000000168B8:
	fn0000000000016830(gp, a1)
	return
fn00000000000168B8_exit:


word64 fn00000000000168E4(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000016D74
//      fn00000000000175BC
// MayUse:  a0:[0..63] a1:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a5 a6 a7 t1 t3 t4 t5
// Preserved: ra s0 s1 sp
fn00000000000168E4_entry:
l00000000000168E4:
	word64 a0_100
	word64 a0_35
	word64 a4_7 = Mem5[gp + -1936<i32>:word64]
	branch a0 == 2<i32> l0000000000016984
l0000000000016984:
	a0_35 = (uint64) (uint32) getnameinfo(fp + -88<i32>, 16<i32>, gp + -1896<i32>, 1025<i32>, 0<i32>, 0<i32>, 0<i32>)
l0000000000016908:
	branch a0 == 10<i32> l0000000000016934
l0000000000016934:
	memcpy(fp + -64<i32>, a1, 16<i32>)
	a0_35 = (uint64) (uint32) getnameinfo(fp + -72<i32>, 28<i32>, gp + -1896<i32>, 1025<i32>, 0<i32>, 0<i32>, 0<i32>)
l0000000000016974:
	branch a0_35 != 0<64> l0000000000016910
l0000000000016978:
	a0_100 = __strdup(gp + -1896<i32>)
l0000000000016910:
	a0_100 = 0<i32>
l0000000000016914:
	branch a4_7 != Mem61[gp + -1936<i32>:word64] l00000000000169D4
l00000000000169D4:
	__stack_chk_fail()
l0000000000016920:
	return a0_100
fn00000000000168E4_exit:


word64 fn00000000000169D8(word64 gp, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a1:[0..31] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000169D8_entry:
l00000000000169D8:
	word64 a0_143
	word64 a5_7 = Mem5[gp + -1936<i32>:word64]
	branch (uint64) (uint32) getaddrinfo(a1, 0<i32>, fp + -104<i32>, fp + -112<i32>) != 0<64> l0000000000016AD8
l0000000000016AD8:
	a0_143 = 0<i32>
l0000000000016A34:
	word64 s0_35 = qwLoc70
	branch qwLoc70 == 0<64> l0000000000016AA0
l0000000000016A3C:
	word64 s3_37 = 2<i32>
	word64 s2_38 = 64<i32>
l0000000000016A68:
	word64 a0_41 = (int64) Mem32[s0_35 + 4<i32>:int32]
	word64 a1_42 = Mem32[s0_35 + 24<i32>:word64]
	branch a0_41 != s3_37 l0000000000016A4C
l0000000000016A4C:
	branch inet_ntop(a0_41, a1_42 + 8<i32>, gp + -864<i32>, s2_38) != 0<64> l0000000000016A88
l0000000000016A74:
	branch inet_ntop(a0_41, a1_42 + 4<i32>, gp + -864<i32>, s2_38) == 0<64> l0000000000016A60
l0000000000016A60:
	s0_35 = Mem32[s0_35 + 40<i32>:word64]
	branch s0_35 == 0<64> l0000000000016A9C
l0000000000016A9C:
l0000000000016AA0:
	freeaddrinfo(qwLoc70)
	a0_143 = 0<i32>
l0000000000016A88:
	freeaddrinfo(qwLoc70)
	a0_143 = __strdup(gp + -864<i32>)
l0000000000016AAC:
	branch a5_7 != Mem32[gp + -1936<i32>:word64] l0000000000016AE0
l0000000000016AE0:
	__stack_chk_fail()
l0000000000016AB8:
	return a0_143
fn00000000000169D8_exit:


void fn0000000000016B38(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..63]
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
fn0000000000016B38_entry:
l0000000000016B38:
	branch a0 >u 127<i32> l0000000000016B5C
l0000000000016B5C:
	return
l0000000000016B40:
	return
fn0000000000016B38_exit:


word64 fn0000000000016B68(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000016D74
// MayUse:  a0:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra sp
fn0000000000016B68_entry:
l0000000000016B68:
	word64 a4_100
	word64 a3_8
	word64 a4_137
	word64 a0_7 = fn00000000000182B4(a0, out a3_8, out a4_137)
	word64 a5_11 = (int64) (word32) (a0_7 >>u 24<i32>)
	branch a5_11 == 0<64> l0000000000016BD8
l0000000000016BD8:
	a4_100 = 0x115E8<64>
l0000000000016B7C:
	branch a5_11 == 10<i32> l0000000000016C2C
l0000000000016B84:
	word64 a4_16 = (int64) (word32) (a0_7 >>u 16<i32>)
	branch a5_11 == 100<i32> l0000000000016C58
l0000000000016C58:
	branch (a4_16 & 192<i32>) != 64<i32> l0000000000016BC0
l0000000000016C64:
	a4_100 = 0x11618<64>
l0000000000016B90:
	branch a5_11 == 127<i32> l0000000000016C70
l0000000000016C70:
	a4_100 = 0x11630<64>
l0000000000016B98:
	word64 a2_24 = (int64) (word32) (a0_7 >>u 8<i32>)
	branch a5_11 == 169<i32> l0000000000016C44
l0000000000016C44:
	branch (a4_16 & 255<i32>) != 254<i32> l0000000000016BC0
l0000000000016C4C:
	a4_100 = 0x11640<64>
l0000000000016BAC:
	branch a5_11 != 172<i32> l0000000000016BF0
l0000000000016BF0:
	branch a5_11 != 192<i32> l0000000000016C7C
l0000000000016C7C:
	branch a5_11 != 203<i32> l0000000000016D18
l0000000000016D18:
	word64 a2_34 = 255<i32>
	branch a5_11 != a2_34 l0000000000016D4C
l0000000000016D4C:
	branch a5_11 != 198<i32> l0000000000016BC0
l0000000000016D54:
	a4_100 = 0x11650<64>
	branch (a4_16 & 254<i32>) != 18<i32> l0000000000016BE0
l0000000000016D68:
	a4_100 = 0x11738<64>
l0000000000016D20:
	a4_100 = 0x11710<64>
	branch (a4_16 & 255<i32>) != a5_11 l0000000000016BE0
l0000000000016D2C:
	a4_100 = 0x11710<64>
	branch (a2_24 & 255<i32>) != a2_34 l0000000000016BE0
l0000000000016D38:
	branch (a0_7 & a2_34) != (a2_24 & 255<i32>) l0000000000016BE0
l0000000000016D40:
	a4_100 = 0x11720<64>
l0000000000016C84:
	branch (a4_16 & 255<i32>) != 0<64> l0000000000016BC0
l0000000000016C88:
	branch (a2_24 & 255<i32>) != 113<i32> l0000000000016BC0
l0000000000016C90:
	a4_100 = 0x116C0<64>
l0000000000016BF8:
	branch ((a4_16 | a2_24) & 255<i32>) == 0<64> l0000000000016CD0
l0000000000016CD0:
	a4_100 = 0x11660<64>
l0000000000016C04:
	branch (a4_16 & 255<i32>) == 2<i32> l0000000000016CDC
l0000000000016CDC:
	branch (a2_24 & 255<i32>) != 0<64> l0000000000016BC0
l0000000000016CE0:
	a4_100 = 0x11680<64>
l0000000000016C0C:
	branch (a4_16 & 255<i32>) == 51<i32> l0000000000016C9C
l0000000000016C9C:
	branch (a2_24 & 255<i32>) != 100<i32> l0000000000016BC0
l0000000000016CA4:
	a4_100 = 0x116A0<64>
l0000000000016C14:
	branch (a4_16 & 255<i32>) == 88<i32> l0000000000016CB0
l0000000000016CB0:
	branch (a2_24 & 255<i32>) == 99<i32> l0000000000016D00
l0000000000016D00:
	a4_100 = 0x116E0<64>
l0000000000016C1C:
	branch (a4_16 & 255<i32>) == 52<i32> l0000000000016CEC
l0000000000016CEC:
	branch (a2_24 & 255<i32>) != 193<i32> l0000000000016BC0
l0000000000016CF4:
	a4_100 = 0x11708<64>
l0000000000016C24:
	branch (a4_16 & 255<i32>) != 168<i32> l0000000000016BC0
l0000000000016BB4:
	branch (a4_16 & 240<i32>) == 16<i32> l0000000000016C2C
l0000000000016C2C:
	return 0x11608<64>
l0000000000016BC0:
	branch (int64) ((word32) a5_11 + -224<i32>) >u 15<i32> l0000000000016CB8
l0000000000016CB8:
	branch (a5_11 & 240<i32>) == 240<i32> l0000000000016D0C
l0000000000016D0C:
	a4_100 = 0x11710<64>
l0000000000016CC4:
	a4_100 = 0x11650<64>
l0000000000016BCC:
	a4_100 = 0x11748<64>
l0000000000016BE0:
	return a4_100
fn0000000000016B68_exit:


word64 fn0000000000016D74(word64 ra, word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, ptr64 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] a3:[0..63] gp:[0..63] ra:[0..63]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a4 a5
// Preserved: a3 a6 a7 fa3 fa4 fa5 gp ra s0 s1 s2 s3 s4 s5 s6 s7 s8 sp t1 t3 t4 t5
fn0000000000016D74_entry:
l0000000000016D74:
	word64 a0_366
	word64 a5_7 = Mem5[gp + -1936<i32>:word64]
	memset(a2, 0<i32>, 200<i32>)
	word64 s6_11 = a2
	word64 s5_116 = a1
	branch (uint64) (uint32) inet_pton(2<i32>, a0, fp + -440<i32>) <= 0<64> l0000000000016E60
l0000000000016E60:
	branch (int64) Mem37[gp + -2028<i32>:int32] != 0<64> l0000000000016E20
l0000000000016E68:
	__fprintf_chk(Mem37[gp + -1920<i32>:word64], 1<i32>, 0x11788<64>, 0<32>)
	a0_366 = -1<i32>
l0000000000016DDC:
	word64 a0_138
	branch a1 < 0<64> l0000000000016E88
l0000000000016E88:
	s5_116 = 32<i32>
	branch a3 << 0xD<u32> >= 0<64> l0000000000016EBC
l0000000000016E94:
	word64 a3_771
	word64 a4_772
	word64 a0_55 = fn00000000000182B4((int64) dwLoc01B8, out a3_771, out a4_772)
	s5_116 = 8<i32>
	word64 a5_59 = (int64) (word32) (a0_55 >>u 24<i32>)
	branch a0_55 >= 0<64> l0000000000016EBC
l0000000000016EA8:
	s5_116 = 24<i32>
	branch (int64) ((word32) a5_59 + -128<i32>) >u 63<i32> l0000000000016EBC
l0000000000016EB8:
	s5_116 = 16<i32>
l0000000000016DE0:
	word64 a0_65 = a0
	word64 s0_66 = 3<i32>
	word64 s2_67 = 46<i32>
l0000000000016DF0:
	word64 a0_71 = strchr(a0_65, s2_67)
	branch a0_71 == 0<64> l0000000000017194
l0000000000017194:
	word64 s3_75 = 1<i32>
	word64 s2_76 = -1<i32>
l00000000000171A0:
	branch (uint64) (uint32) __asprintf_chk(fp + -400<i32>, s3_75, 0x117A8<64>, 0<32>) == s2_76 l00000000000172BC
l00000000000172BC:
	a0_138 = Mem73[gp + -1920<i32>:word64]
l00000000000171B8:
	s0_66 = (int64) ((word32) s0_66 + -1<i32>)
	branch s0_66 != 0<64> l00000000000171A0
l00000000000171C4:
l0000000000016E00:
	a0_65 = a0_71 + 1<i32>
	s0_66 = (int64) ((word32) s0_66 + -1<i32>)
	branch s0_66 != 0<64> l0000000000016DF0
l0000000000016E10:
	branch a1 <= 32<i32> l0000000000016EBC
l0000000000016EBC:
	branch inet_ntop(2<i32>, fp + -440<i32>, fp + -392<i32>, 47<i32>) == 0<64> l0000000000017074
l0000000000016ED4:
	Mem115[a2:word64] = __strdup(fp + -392<i32>)
	word32 dwLoc01B0_471 = (word32) fn0000000000016830(gp, s5_116)
	branch inet_ntop(2<i32>, fp + -432<i32>, fp + -392<i32>, 16<i32>) == 0<64> l0000000000017300
l0000000000017300:
	a0_138 = Mem136[gp + -1920<i32>:word64]
l0000000000016F24:
	Mem142[a2 + 48<i64>:word64] = __strdup(fp + -392<i32>)
	Mem144[a2 + 160<i64>:word32] = (word32) s5_116
	word32 dwLoc01A0_484 = (word32) (fn0000000000016830(gp, s5_116) ^ -1<i32> | (int64) dwLoc01B8)
	branch inet_ntop(2<i32>, fp + -416<i32>, fp + -392<i32>, 16<i32>) == 0<64> l00000000000172F4
l00000000000172F4:
	a0_138 = Mem163[gp + -1920<i32>:word64]
l0000000000016F84:
	Mem169[a2 + 40<i64>:word64] = __strdup(fp + -392<i32>)
	word64 s0_176 = fn0000000000016830(gp, s5_116) & (int64) dwLoc01B8
	Mem190[a2 + 24<i64>:word64] = fn0000000000017F04(gp, s0_176, s5_116, s0_176, (int64) dwLoc01A0_484)
	word32 dwLoc01A8_493 = (word32) s0_176
	branch inet_ntop(2<i32>, fp + -424<i32>, fp + -392<i32>, 16<i32>) == 0<64> l00000000000172DC
l00000000000172DC:
	a0_138 = Mem202[gp + -1920<i32>:word64]
l0000000000016FF4:
	word64 a5_227
	word64 a0_207 = __strdup(fp + -392<i32>)
	Mem209[a2 + 32<i64>:word64] = a0_207
	word64 s0_208 = (int64) dwLoc01A8_493
	Mem219[a2 + 184<i64>:word64] = fn0000000000016B68(s0_208)
	word64 a4_766
	word64 a3_765
	word64 a0_221 = fn00000000000182B4(s0_208, out a3_765, out a4_766)
	word64 a5_225 = (int64) (word32) (a0_221 >>u 24<i32>)
	branch a0_221 >= 0<64> l0000000000017098
l0000000000017098:
	a5_227 = 0x11758<64>
l0000000000017024:
	branch (int64) ((word32) a5_225 + -128<i32>) <=u 63<i32> l000000000001727C
l000000000001727C:
	a5_227 = 0x11760<64>
l0000000000017030:
	branch (int64) ((word32) a5_225 + -192<i32>) <=u 31<i32> l00000000000172A4
l00000000000172A4:
	a5_227 = 0x11768<64>
l000000000001703C:
	branch (int64) ((word32) a5_225 + -224<i32>) >u 14<i32> l00000000000172B0
l00000000000172B0:
	a5_227 = 0x11778<64>
l0000000000017048:
	a5_227 = 0x11770<64>
l00000000000170A0:
	word64 a5_252
	Mem244[a2 + 192<i64>:word64] = a5_227
	branch s5_116 == 32<i32> l0000000000017158
l0000000000017158:
	Mem249[a2 + 168<i64>:word64] = a0_207
	Mem250[a2 + 176<i64>:word64] = a0_207
	a5_252 = 0x11780<64>
l00000000000170AC:
	branch s5_116 == 31<i32> l0000000000017210
l0000000000017210:
	branch inet_ntop(2<i32>, fp + -408<i32>, fp + -392<i32>, 16<i32>) == 0<64> l00000000000172E8
l0000000000017228:
	Mem266[a2 + 168<i64>:word64] = __strdup(fp + -392<i32>)
	branch inet_ntop(2<i32>, fp + -400<i32>, fp + -392<i32>, 47<i32>) == 0<64> l0000000000017074
l0000000000017260:
	Mem278[a2 + 176<i64>:word64] = __strdup(fp + -392<i32>)
	a5_252 = 0x12660<64>
l000000000001716C:
	Mem285[a2 + 96<i32>:byte] = (byte) (int64) Mem282[a5_252:byte]
	Mem287[a2 + 97<i64>:byte] = (byte) (int64) Mem285[a5_252 + 1<i32>:byte]
	branch a3 << 0x11<u32> < 0<64> l0000000000017288
l0000000000017288:
	gp = fn0000000000017B40(ra, gp, (int64) dwLoc01B8, a2 + 64<i32>, a2 + 72<i32>, a2 + 80<i32>, a2 + 88<i32>, s5_116, a2, out s6_11)
l0000000000017184:
	branch (a3 & 1<i32>) != 0<64> l00000000000171C8
l00000000000171C8:
	word64 a0_338 = fn00000000000168E4(gp, 2<i32>, fp + -440<i32>)
	Mem350[s6_11 + 56<i64>:word64] = a0_338
	branch a0_338 != 0<64> l000000000001718C
l00000000000171DC:
	branch (int64) Mem350[gp + -2028<i32>:int32] != 0<64> l0000000000016E20
l00000000000171E4:
	__sprintf_chk(fp + -344<i32>, 1<i32>, 250<i32>, 0x11830<64>, 0<32>)
	herror(fp + -344<i32>)
	a0_366 = -1<i32>
l000000000001718C:
	a0_366 = 0<i32>
l00000000000170B8:
	branch inet_ntop(2<i32>, fp + -408<i32>, fp + -392<i32>, 16<i32>) == 0<64> l00000000000172E8
l00000000000172E8:
	a0_138 = Mem377[gp + -1920<i32>:word64]
l00000000000172C4:
	__fprintf_chk(a0_138, 1<i32>, 0x117B0<64>, 0<32>)
	abort()
l00000000000170DC:
	Mem388[a2 + 168<i64>:word64] = __strdup(fp + -392<i32>)
	word64 a3_769
	word64 a4_768
	word64 a3_767
	word64 a4_770
	fn00000000000182B4((int64) ((word32) fn00000000000182B4((int64) dwLoc01B0_471 ^ -1<i32> | (int64) dwLoc01A8_493, out a3_767, out a4_768) + -1<i32>), out a3_769, out a4_770)
	branch inet_ntop(2<i32>, fp + -400<i32>, fp + -392<i32>, 47<i32>) == 0<64> l0000000000017074
l0000000000017074:
	branch (int64) Mem408[gp + -2028<i32>:int32] != 0<64> l0000000000016E20
l000000000001707C:
	fwrite(0x117F8<64>, 1<i32>, 43<i32>, Mem408[gp + -1920<i32>:word64])
l0000000000017120:
	__strdup(fp + -392<i32>)
l0000000000016E18:
	branch (int64) Mem410[gp + -2028<i32>:int32] == 0<64> l0000000000017054
l0000000000017054:
	__fprintf_chk(Mem410[gp + -1920<i32>:word64], 1<i32>, 0x117D8<64>, 0<32>)
	a0_366 = -1<i32>
l0000000000016E20:
	a0_366 = -1<i32>
l0000000000016E24:
	branch a5_7 != Mem435[gp + -1936<i32>:word64] l00000000000172D8
l00000000000172D8:
	__stack_chk_fail()
l0000000000016E30:
	a4Out = a5_7
	return a0_366
fn0000000000016D74_exit:


word64 fn000000000001730C(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000175BC
// MayUse:  a0:[0..63] a1:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a5
// Preserved: a1 a2 a3 ra s0 s1 sp
fn000000000001730C_entry:
l000000000001730C:
	word64 a0_41
	word64 a4_7 = Mem5[gp + -1936<i32>:word64]
	branch a0 >u 128<i32> l00000000000173BC
l000000000001732C:
	word64 a5_20 = fp + -184<i32>
	word64 a3_22 = 7<i32>
	word64 a2_23 = -1<i32>
	branch a0 == 0<64> l000000000001736C
l0000000000017354:
	branch a3_22 >= a0 l00000000000173C4
l00000000000173C4:
l0000000000017358:
	Mem29[a5_20:byte] = (byte) a2_23
	a0 = (int64) ((word32) a0 + -8<i32>)
	a5_20 = a5_20 + 1<i32>
	branch a0 > 0<64> l0000000000017354
l000000000001736C:
	branch inet_ntop(10<i32>, fp + -184<i32>, fp + -168<i32>, 128<i32>) == 0<64> l00000000000173BC
l00000000000173BC:
	a0_41 = 0<i32>
l0000000000017384:
	memcpy(a1, fp + -184<i32>, 16<i32>)
	a0_41 = __strdup(fp + -168<i32>)
l000000000001739C:
	branch a4_7 != Mem52[gp + -1936<i32>:word64] l00000000000173D0
l00000000000173D0:
	__stack_chk_fail()
l00000000000173A8:
	return a0_41
fn000000000001730C_exit:


word64 fn00000000000173D4(word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000175BC
// MayUse:  a0:[0..63] a1:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 sp
fn00000000000173D4_entry:
l00000000000173D4:
	word64 a0_101
	word64 s2_17 = (int64) Mem13[a0:byte]
	word64 s3_18 = (int64) Mem13[a0 + 1<i32>:byte]
	branch a1 == 128<i32> l00000000000174DC
l00000000000174DC:
	branch (uint64) (uint32) memcmp(a0, 0x10880<64>, 16<i32>) == 0<64> l0000000000017538
l0000000000017538:
	return 0x11858<64>
l00000000000174F4:
	branch (uint64) (uint32) memcmp(a0, 0x10898<64>, 16<i32>) != 0<64> l000000000001747C
l0000000000017508:
	a0_101 = 0x11870<64>
l0000000000017400:
	branch a1 > 95<i32> l0000000000017474
l0000000000017474:
l000000000001747C:
	branch (uint64) (uint32) memcmp(a0, 0x108B0<64>, 12<i32>) == 0<64> l000000000001755C
l000000000001755C:
	return 0x11888<64>
l0000000000017490:
	branch (uint64) (uint32) memcmp(a0, 0x108C0<64>, 12<i32>) == 0<64> l0000000000017514
l0000000000017514:
	return 0x118A0<64>
l00000000000174A4:
	branch (uint64) (uint32) memcmp(a0, 0x108D0<64>, 12<i32>) != 0<64> l0000000000017408
l00000000000174B8:
	return 0x118B8<64>
l0000000000017408:
	word64 a5_87 = s2_17 << 8<u32> | s3_18
	branch (a5_87 & 0xFFFFE000<64>) == 0x2000<64> l0000000000017580
l0000000000017580:
	a0_101 = 0x118D8<64>
l0000000000017420:
	branch (s2_17 & 254<i32>) == 252<i32> l000000000001758C
l000000000001758C:
	a0_101 = 0x118E8<64>
l000000000001742C:
	branch (a5_87 & -64<i32>) == 65152<i64> l0000000000017598
l0000000000017598:
	a0_101 = 0x11900<64>
l000000000001743C:
	branch s2_17 == 255<i32> l00000000000175A4
l00000000000175A4:
	a0_101 = 0x11748<64>
l0000000000017444:
	a0_101 = 0x11710<64>
	branch (a5_87 & -2<i32>) == 8194<i64> l00000000000175B0
l00000000000175B0:
	a0_101 = 0x11918<64>
l0000000000017458:
	return a0_101
fn00000000000173D4_exit:


word64 fn00000000000175BC(word64 ra, word64 gp, word64 s1, word64 a0, word64 a1, word64 a2, word64 a3, ptr64 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
// MayUse:  a0:[0..31] a1:[0..63] a2:[0..63] a3:[0..63] gp:[0..63] ra:[0..63] s1:[0..63]
// LiveOut: a0 a4
// Trashed: a0 a1 a2 a4 a5
// Preserved: a3 a6 a7 fa3 fa4 fa5 gp ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp t1 t3 t4 t5
fn00000000000175BC_entry:
l00000000000175BC:
	word64 a0_100
	word64 a5_7 = Mem5[gp + -1936<i32>:word64]
	memset(a2, 0<i32>, 200<i32>)
	word64 s0_11 = a2
	word64 s2_20 = a1
	word64 s6_266 = a3
	branch (uint64) (uint32) inet_pton(10<i32>, a0, fp + -408<i32>) <= 0<64> l00000000000177B4
l00000000000177B4:
	branch (int64) Mem39[gp + -2028<i32>:int32] != 0<64> l0000000000017770
l00000000000177BC:
	__fprintf_chk(Mem39[gp + -1920<i32>:word64], 1<i32>, 0x11920<64>, 0<32>)
	a0_100 = -1<i32>
l0000000000017628:
	Mem61[a2 + 8<i64>:word64] = fn00000000000163B0(gp)
	word64 s3_263 = fp + -360<i32>
	branch inet_ntop(10<i32>, fp + -408<i32>, fp + -360<i32>, 250<i32>) == 0<64> l0000000000017768
l0000000000017650:
	Mem69[a2:word64] = __strdup(fp + -360<i32>)
	word64 s5_70 = 128<i32>
	branch s5_70 < a1 l00000000000177DC
l00000000000177DC:
	branch (int64) Mem69[gp + -2028<i32>:int32] != 0<64> l0000000000017770
l00000000000177E4:
	__fprintf_chk(Mem69[gp + -1920<i32>:word64], 1<i32>, 0x11940<64>, 0<32>)
	a0_100 = -1<i32>
l0000000000017664:
	branch a1 < 0<64> l0000000000017868
l0000000000017868:
	s2_20 = s5_70
l0000000000017668:
	s5_70 = a1
l000000000001766C:
	Mem85[a2 + 160<i64>:word32] = (word32) s5_70
	word64 a0_89 = fn000000000001730C(gp, s5_70, fp + -392<i32>)
	Mem91[a2 + 48<i64>:word64] = a0_89
	branch a0_89 == 0<64> l00000000000178F8
l00000000000178F8:
	branch (int64) Mem91[gp + -2028<i32>:int32] != 0<64> l0000000000017770
l0000000000017900:
	__fprintf_chk(Mem91[gp + -1920<i32>:word64], 1<i32>, 0x11960<64>, 0<32>)
	a0_100 = -1<i32>
l0000000000017688:
	word64 s8_101 = fp + -376<i32>
	word64 a5_102 = fp + -408<i32>
	word64 s9_103 = fp + -392<i32>
	word64 a2_104 = fp + -376<i32>
	word64 a3_105 = fp + -392<i32>
l000000000001769C:
	Mem115[a2_104:byte] = (byte) ((int64) Mem107[a5_102:byte] & (int64) Mem107[a3_105:byte])
	a5_102 = a5_102 + 1<i32>
	a3_105 = a3_105 + 1<i32>
	a2_104 = a2_104 + 1<i32>
	branch fp + -392<i32> != a5_102 l000000000001769C
l00000000000176BC:
	branch inet_ntop(10<i32>, fp + -376<i32>, fp + -360<i32>, 250<i32>) == 0<64> l0000000000017768
l00000000000176D4:
	Mem129[a2 + 32<i64>:word64] = __strdup(fp + -360<i32>)
	Mem138[a2 + 16<i64>:word64] = fn00000000000163B0(gp)
	Mem148[a2 + 184<i64>:word64] = fn00000000000173D4(fp + -376<i32>, s2_20)
	Mem156[a2 + 24<i64>:word64] = fn0000000000018118(gp, fp + -376<i32>, s5_70)
	branch s2_20 != 128<i32> l0000000000017870
l0000000000017870:
	Mem160[a2 + 168<i64>:word64] = __strdup(fp + -360<i32>)
l000000000001787C:
	s8_101 = s8_101 + 1<i32>
	Mem169[s8_101 + 4095<i64>:byte] = (byte) ((int64) Mem162[s9_103:byte] ^ -1<i32> | (int64) Mem162[s8_101:byte])
	s9_103 = s9_103 + 1<i32>
	branch fp + -360<i32> != s8_101 l000000000001787C
l000000000001789C:
	branch inet_ntop(10<i32>, fp + -376<i32>, fp + -360<i32>, 250<i32>) == 0<64> l0000000000017768
l0000000000017768:
	branch (int64) Mem180[gp + -2028<i32>:int32] == 0<64> l0000000000017804
l0000000000017804:
	fwrite(0x117F8<64>, 1<i32>, 43<i32>, Mem180[gp + -1920<i32>:word64])
	a0_100 = -1<i32>
l00000000000178B4:
	Mem193[a2 + 176<i64>:word64] = __strdup(fp + -360<i32>)
	word64 a5_191 = 128<i32>
	branch (int64) (word32) (a5_191 - s2_20) != a5_191 l0000000000017728
l00000000000178D0:
l0000000000017714:
	word64 a5_199 = Mem156[a2 + 32<i32>:word64]
	Mem202[a2 + 168<i64>:word64] = a5_199
	Mem203[a2 + 176<i64>:word64] = a5_199
l0000000000017728:
l0000000000017740:
	snprintf(a2 + 96<i32>, 64<i32>, 0x11990<64>, 0<32>)
	branch a3 << 0x11<u32> < 0<64> l00000000000178DC
l00000000000178DC:
	gp = fn0000000000017D10(ra, gp, s1, fp + -408<i32>, a2 + 64<i32>, a2 + 72<i32>, a2 + 80<i32>, a2 + 88<i32>, a3, fp + -392<i32>, out s0_11, out s3_263, out s6_266)
l0000000000017758:
	branch (s6_266 & 1<i32>) != 0<64> l0000000000017824
l0000000000017824:
	word64 a0_275 = fn00000000000168E4(gp, 10<i32>, fp + -408<i32>)
	Mem287[s0_11 + 56<i64>:word64] = a0_275
	branch a0_275 != 0<64> l0000000000017760
l0000000000017838:
	branch (int64) Mem287[gp + -2028<i32>:int32] != 0<64> l0000000000017770
l0000000000017840:
	__sprintf_chk(s3_263, 1<i32>, 250<i32>, 0x11830<64>, 0<32>)
	herror(s3_263)
l0000000000017770:
	a0_100 = -1<i32>
l0000000000017760:
	a0_100 = 0<i32>
l0000000000017774:
	branch a5_7 != Mem312[gp + -1936<i32>:word64] l0000000000017920
l0000000000017920:
	__stack_chk_fail()
l0000000000017780:
	a4Out = a5_7
	return a0_100
fn00000000000175BC_exit:


word64 fn0000000000017924(word64 gp, ptr64 & a1Out, ptr64 & a2Out, ptr64 & a3Out, ptr64 & a4Out, ptr64 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000015180
//      fn0000000000017B40
//      fn0000000000017D10
// MayUse:  gp:[0..63]
// LiveOut: a0 a1 a2 a3 a4 a6
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn0000000000017924_entry:
l0000000000017924:
	word64 s0_107
	branch Mem5[gp + -2016<i32>:word64] == 0<64> l00000000000179B8
l00000000000179B8:
	s0_107 = (int64) Mem27[gp + -2024<i32>:int32]
	branch s0_107 != 0<64> l000000000001795C
l00000000000179C0:
	word64 a0_32 = dlopen(0x12A38<64>, 1<i32>)
	Mem33[gp + 2080<i64>:word64] = a0_32
	branch a0_32 == 0<64> l0000000000017B14
l0000000000017B14:
	a3 = 256<i32>
	a2 = 1<i32>
	__snprintf_chk(gp + -800<i32>, a3, a2, a3, 0x12A58<64>, 0<32>)
	s0_107 = -1<i32>
	Mem44[gp + 2072<i64>:word32] = (word32) s0_107
	a4 = 0x12A58<64>
	a1 = a3
l00000000000179DC:
	Mem49[gp + 2152<i64>:word64] = dlsym(a0_32, 0x12A78<64>)
	word64 a0_52 = dlsym(a0_32, 0x12A90<64>)
	Mem57[gp + 2144<i64>:word64] = a0_52
	word64 a0_58 = dlsym(a0_32, 0x12AA0<64>)
	Mem63[gp + 2136<i64>:word64] = a0_58
	word64 a0_64 = dlsym(a0_32, 0x12AC0<64>)
	Mem69[gp + 2120<i64>:word64] = a0_64
	word64 a0_70 = dlsym(a0_32, 0x12AD0<64>)
	Mem75[gp + 2112<i64>:word64] = a0_70
	word64 a0_76 = dlsym(a0_32, 0x12AE8<64>)
	Mem81[gp + 2104<i64>:word64] = a0_76
	word64 a0_82 = dlsym(a0_32, 0x12B00<64>)
	Mem87[gp + 2096<i64>:word64] = a0_82
	word64 a0_88 = dlsym(a0_32, 0x12B18<64>)
	Mem93[gp + 2088<i64>:word64] = a0_88
	Mem95[gp + 2128<i64>:word64] = dlsym(a0_32, 0x12B38<64>)
	a1 = 0x12B38<64>
	branch a0_52 == 0<64> l0000000000017ACC
l0000000000017AAC:
	branch a0_58 == 0<64> l0000000000017ACC
l0000000000017AB0:
	branch a0_64 == 0<64> l0000000000017ACC
l0000000000017AB4:
	branch a0_70 == 0<64> l0000000000017ACC
l0000000000017AB8:
	branch a0_76 == 0<64> l0000000000017ACC
l0000000000017ABC:
	branch a0_82 == 0<64> l0000000000017ACC
l0000000000017AC0:
	branch a0_88 == 0<64> l0000000000017ACC
l0000000000017ACC:
	a6 = Mem95[0x12B50<64>:word64]
	word64 a0_100 = Mem95[0x12B58<64>:word64]
	a1 = Mem95[0x12B60<64>:word64]
	a2 = Mem95[0x12B68<64>:word64]
	a3 = Mem95[0x12B70<64>:word64]
	a4 = (int64) Mem95[0x12B78<64>:int32]
	Mem108[gp + -800<i32>:word64] = a6
	Mem109[gp + -792<i64>:word64] = a0_100
	Mem110[gp + -784<i64>:word64] = a1
	Mem111[gp + -776<i64>:word64] = a2
	Mem112[gp + -768<i64>:word64] = a3
	Mem113[gp + -760<i64>:word32] = (word32) a4
	s0_107 = -1<i32>
	Mem114[gp + 2072<i64>:word32] = (word32) s0_107
l0000000000017AC4:
	Mem115[gp + 2072<i64>:word32] = 0<32>
l000000000001795C:
	branch (int64) Mem27[gp + -2028<i32>:int32] != 0<64> l000000000001796C
l0000000000017964:
	branch (int64) Mem27[gp + -800<i32>:byte] != 0<64> l00000000000179A8
l00000000000179A8:
	a1 = Mem27[gp + -1920<i32>:word64]
	fputs(gp + -800<i32>, a1)
l000000000001796C:
	s0_107 = (int64) Mem27[gp + -2024<i32>:int32]
l0000000000017970:
	a1Out = a1
	a2Out = a2
	a3Out = a3
	a4Out = a4
	a6Out = a6
	return s0_107
fn0000000000017924_exit:


word64 fn0000000000017B40(word64 ra, word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4, word64 s5, word64 s6, ptr64 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000016D74
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] a3:[0..63] a4:[0..63] gp:[0..63] ra:[0..63] s5:[0..63] s6:[0..63]
// LiveOut: gp s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 gp ra s0 s1 s2 s3 s4 s5 s6 s7 t1
// Preserved: sp
fn0000000000017B40_entry:
l0000000000017B40:
	word64 a1_34
	word64 a2_35
	word64 a3_36
	word64 a4_37
	word64 a6_39
	branch fn0000000000017924(gp, out a1_34, out a2_35, out a3_36, out a4_37, out a6_39) == 0<64> l0000000000017BB0
l0000000000017BB0:
	word64 a3_42
	word64 a4_43
	word64 a0_41 = fn00000000000182B4(a0, out a3_42, out a4_43)
	word64 s0_48
	word64 s1_49
	word64 s2_50
	word64 s3_51
	word64 s4_52
	word64 ra_53
	word64 s5_54
	word64 s6_55
	word64 s7_56
	word64 a2_59
	word64 a3_60
	word64 a4_61
	word64 gp_63
	call Mem21[gp + -1944<i32>:word64] (retsize: 0;)
		uses: a0:a0_41,a1:a1_34,a2:a2_35,a3:a3_42,a4:a4_43,fa3:fa3_92,fa4:fa4_89,fa5:fa5_90,gp:gp,ra:ra,s0:a0,s1:a3,s2:a2,s3:a1,s4:a4,s5:s5,s6:s6,s7:a0_41,t1:t1_91
		defs: a2:a2_59,a3:a3_60,a4:a4_61,gp:gp_63,ra:ra_53,s0:s0_48,s1:s1_49,s2:s2_50,s3:s3_51,s4:s4_52,s5:s5_54,s6:s6_55,s7:s7_56
	word64 a0_82
	word64 fa4_89
	word64 fa5_90
	word64 t1_91
	word64 fa3_92
	word64 gp_226
	word64 s1_212
	word64 s2_213
	word64 s3_214
	word64 s4_215
	word64 ra_216
	word64 s5_217
	word64 s6_218
	word64 s7_219
	word64 a2_222
	word64 a3_223
	word64 a4_224
	call Mem21[gp_63 + -1952<i32>:word64] (retsize: 0;)
		uses: a0:1<i32>,a1:16<i32>,a2:a2_59,a3:a3_60,a4:a4_61,fa3:fa3_92,fa4:fa4_89,fa5:fa5_90,gp:gp_63,ra:ra_53,s0:s0_48,s1:s1_49,s2:s2_50,s3:s3_51,s4:s4_52,s5:s5_54,s6:s6_55,s7:s7_56,t1:t1_91
		defs: a0:a0_82,a2:a2_84,a3:a3_85,a4:a4_86,fa3:fa3_92,fa4:fa4_89,fa5:fa5_90,gp:gp_88,ra:ra_78,s1:s1_74,s2:s2_75,s3:s3_76,s4:s4_77,s5:s5_79,s6:s6_80,s7:s7_81,t1:t1_91
	word64 s0_211 = a0_82
	branch a0_82 == 0<64> l0000000000017C3C
l0000000000017BDC:
	word64 a5_95 = Mem21[gp_226 + -1992<i32>:word64]
	word64 a4_96 = 1<i32>
	Mem98[a0_82 + 76<i64>:word32] = (word32) a4_96
	word64 s0_101
	word64 s1_102
	word64 s2_103
	word64 s3_104
	word64 s4_105
	word64 ra_106
	word64 s5_107
	word64 s7_109
	word64 a0_110
	word64 a2_112
	word64 a3_113
	word64 a4_114
	word64 fa4_117
	word64 fa5_118
	word64 t1_119
	word64 fa3_120
	call a5_95 (retsize: 0;)
		uses: a0:a0_82,a1:s7_81 << 0<u32> >>u 0<u32>,a2:a2_84,a3:a3_85,a4:a4_96,fa3:fa3_120,fa4:fa4_117,fa5:fa5_118,gp:gp_88,ra:ra_78,s0:a0_82,s1:s1_74,s2:s2_75,s3:s3_76,s4:s4_77,s5:s5_79,s6:s6_80,s7:s7_81,t1:t1_119
		defs: a0:a0_110,a2:a2_112,a3:a3_113,a4:a4_114,fa3:fa3_120,fa4:fa4_117,fa5:fa5_118,gp:gp_116,ra:ra_106,s0:s0_101,s1:s1_102,s2:s2_103,s3:s3_104,s4:s4_105,s5:s5_107,s7:s7_109,t1:t1_119
	branch a0_110 < 0<64> l0000000000017B84
l0000000000017BFC:
	word64 s0_127
	word64 s1_128
	word64 s2_129
	word64 s3_130
	word64 s4_131
	word64 ra_132
	word64 s5_133
	word64 s6_134
	word64 s7_135
	word64 a0_136
	word64 a1_137
	word64 a2_138
	word64 a3_139
	word64 a4_140
	word64 gp_142
	word64 fa4_143
	word64 fa5_144
	word64 t1_145
	word64 fa3_146
	call Mem98[gp + -1960<i32>:word64] (retsize: 0;)
		uses: a0:s0_101,a1:a0_110,a2:a2_112,a3:a3_113,a4:a4_114,fa3:fa3_146,fa4:fa4_143,fa5:fa5_144,gp:gp_116,ra:ra_106,s0:s0_101,s1:s1_102,s2:s2_103,s3:s3_104,s4:s4_105,s5:s5_107,s6:a0_110,s7:s7_109,t1:t1_145
		defs: a0:a0_136,a1:a1_137,a2:a2_138,a3:a3_139,a4:a4_140,fa3:fa3_146,fa4:fa4_143,fa5:fa5_144,gp:gp_142,ra:ra_132,s0:s0_127,s1:s1_128,s2:s2_129,s3:s3_130,s4:s4_131,s5:s5_133,s6:s6_134,s7:s7_135,t1:t1_145
	branch a0_136 == 0<64> l0000000000017C18
l0000000000017C10:
	Mem149[s3_130:word64] = __strdup(a0_136)
l0000000000017C18:
	word64 s0_169
	word64 s1_170
	word64 s2_171
	word64 s3_172
	word64 s4_173
	word64 ra_174
	word64 s5_175
	word64 s6_176
	word64 s7_177
	word64 a0_178
	word64 a1_179
	word64 a2_180
	word64 a3_181
	word64 a4_182
	word64 gp_184
	word64 fa4_185
	word64 fa5_186
	word64 t1_187
	word64 fa3_188
	call Mem151[gp_142 + -1968<i32>:word64] (retsize: 0;)
		uses: a0:s6_134,a1:a1_137,a2:a2_138,a3:a3_139,a4:a4_140,fa3:fa3_188,fa4:fa4_185,fa5:fa5_186,gp:gp_142,ra:ra_132,s0:s0_127,s1:s1_128,s2:s2_129,s3:s3_130,s4:s4_131,s5:s5_133,s6:s6_134,s7:s7_135,t1:t1_187
		defs: a0:a0_178,a1:a1_179,a2:a2_180,a3:a3_181,a4:a4_182,fa3:fa3_188,fa4:fa4_185,fa5:fa5_186,gp:gp_184,ra:ra_174,s0:s0_169,s1:s1_170,s2:s2_171,s3:s3_172,s4:s4_173,s5:s5_175,s6:s6_176,s7:s7_177,t1:t1_187
	branch a0_178 == 0<64> l0000000000017C30
l0000000000017C28:
	Mem191[s2_171:word64] = __strdup(a0_178)
l0000000000017C30:
	word64 fa4_227
	word64 fa5_228
	word64 t1_229
	word64 fa3_230
	call Mem193[gp_184 + -1976<i32>:word64] (retsize: 0;)
		uses: a0:s0_169,a1:a1_179,a2:a2_180,a3:a3_181,a4:a4_182,fa3:fa3_230,fa4:fa4_227,fa5:fa5_228,gp:gp_184,ra:ra_174,s0:s0_169,s1:s1_170,s2:s2_171,s3:s3_172,s4:s4_173,s5:s5_175,s6:s6_176,s7:s7_177,t1:t1_229
		defs: a2:a2_222,a3:a3_223,a4:a4_224,fa3:fa3_230,fa4:fa4_227,fa5:fa5_228,gp:gp_226,ra:ra_216,s0:s0_211,s1:s1_212,s2:s2_213,s3:s3_214,s4:s4_215,s5:s5_217,s6:s6_218,s7:s7_219,t1:t1_229
l0000000000017C3C:
	word64 a4_264
	word64 fa4_267
	word64 fa5_268
	word64 t1_269
	word64 fa3_270
	word64 s7_259
	word64 s1_252
	word64 s2_253
	word64 s3_254
	word64 s4_255
	word64 ra_256
	word64 s5_257
	word64 s6_258
	word64 a0_260
	word64 a2_262
	word64 a3_263
	call Mem233[gp_226 + -1952<i32>:word64] (retsize: 0;)
		uses: a0:2<i32>,a1:16<i32>,a2:a2_246,a3:a3_247,a4:a4_248,fa3:fa3_270,fa4:fa4_267,fa5:fa5_268,gp:gp_232,ra:ra_242,s0:s0_237,s1:s1_238,s2:s2_239,s3:s3_240,s4:s4_241,s5:s5_243,s6:s6_244,s7:s7_245,t1:t1_269
		defs: a0:a0_260,a2:a2_262,a3:a3_263,a4:a4_264,fa3:fa3_270,fa4:fa4_267,fa5:fa5_268,gp:gp_266,ra:ra_256,s1:s1_252,s2:s2_253,s3:s3_254,s4:s4_255,s5:s5_257,s6:s6_258,s7:s7_259,t1:t1_269
	word64 s0_272 = a0_260
	branch a0_260 == 0<64> l0000000000017CF4
l0000000000017CF4:
	word64 fa4_293
	word64 fa5_294
	word64 t1_295
	word64 fa3_296
	call Mem233[gp + -1952<i32>:word64] (retsize: 0;)
		uses: a0:6<i32>,a1:16<i32>,a2:a2_262,a3:a3_263,a4:a4_264,fa3:fa3_296,fa4:fa4_293,fa5:fa5_294,gp:gp_266,ra:ra_256,s0:a0_260,s1:s1_252,s2:s2_253,s3:s3_254,s4:s4_255,s5:s5_257,s6:s6_258,s7:s7_259,t1:t1_295
		defs: a0:a0_286,a2:a2_288,a3:a3_289,fa3:fa3_296,fa4:fa4_293,fa5:fa5_294,gp:gp_292,ra:ra_282,s1:s1_278,s2:s2_279,s3:s3_280,s4:s4_281,s5:s5_283,s6:s6_284,s7:s7_285,t1:t1_295
	s0_272 = a0_260
	branch a0_260 != 0<64> l0000000000017C54
l0000000000017D0C:
l0000000000017C54:
	word64 a5_301 = Mem233[gp + -1984<i32>:word64]
	word64 a4_302 = 1<i32>
	Mem306[s0_272 + 76<i64>:word32] = (word32) a4_302
	word64 sp_319
	word64 s0_320
	word64 s1_321
	word64 s4_324
	word64 a0_329
	word64 a3_332
	word64 a4_333
	word64 gp_335
	word64 fa4_336
	word64 fa5_337
	word64 t1_338
	word64 fa3_339
	word64 a1_330
	word64 a2_331
	call a5_301 (retsize: 0;)
		uses: a0:a0_315,a1:s7_303 << 0<u32> >>u 0<u32>,a2:a2_316,a3:a3_317,a4:a4_302,fa3:fa3_339,fa4:fa4_336,fa5:fa5_337,gp:gp_299,ra:ra_312,s0:s0_305,s1:s1_308,s2:s2_309,s3:s3_310,s4:s4_311,s5:s5_313,s6:s6_314,s7:s7_303,t1:t1_338
		defs: a0:a0_329,a1:a1_330,a2:a2_331,a3:a3_332,a4:a4_333,fa3:fa3_339,fa4:fa4_336,fa5:fa5_337,gp:gp_335,s0:s0_320,s1:s1_321,s4:s4_324,sp:sp_319,t1:t1_338
	branch a0_329 == 0<64> l0000000000017C94
l0000000000017C74:
	word64 a0_342 = Mem306[a0_329 + 32<i32>:word64]
	branch a0_342 == 0<64> l0000000000017C84
l0000000000017C7C:
	Mem344[s1_321:word64] = __strdup(a0_342)
l0000000000017C84:
	branch (word64) ((real32) Mem346[a0_329 + 52<i64>:real32] == (real32) 0<64>) == 0<64> l0000000000017CC8
l0000000000017CC8:
	a1_330 = 1<i32>
	__asprintf_chk(s4_324, a1_330, 0x12B80<64>, 0<32>)
	a2_331 = 0x12B80<64>
l0000000000017C94:
	word64 s6_395
	word64 gp_403
	word64 fa4_404
	word64 fa5_405
	word64 t1_406
	word64 fa3_407
	call Mem366[gp_335 + -1976<i32>:word64] (retsize: 0;)
		uses: a0:s0_320,a1:a1_380,a2:a2_382,a3:a3_332,a4:a4_333,fa3:fa3_407,fa4:fa4_404,fa5:fa5_405,gp:gp_335,ra:Mem366[sp_319 + 72<i32>:word64],s0:Mem366[sp_319 + 64<i32>:word64],s1:Mem366[sp_319 + 56<i32>:word64],s2:Mem366[sp_319 + 48<i32>:word64],s3:Mem366[sp_319 + 40<i32>:word64],s4:Mem366[sp_319 + 32<i32>:word64],s5:Mem366[sp_319 + 24<i32>:word64],s6:Mem366[sp_319 + 16<i32>:word64],s7:Mem366[sp_319 + 8<i32>:word64],t1:t1_406
		defs: fa3:fa3_407,fa4:fa4_404,fa5:fa5_405,gp:gp_403,s6:s6_395,t1:t1_406
	s6Out = s6_395
	return gp_403
l0000000000017B84:
	s6Out = s6
	return gp
fn0000000000017B40_exit:


word64 fn0000000000017D10(word64 ra, word64 gp, word64 s1, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4, word64 s6, word64 s7, ptr64 & s0Out, ptr64 & s3Out, ptr64 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000175BC
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] a3:[0..63] a4:[0..63] gp:[0..63] ra:[0..63] s1:[0..63] s6:[0..63] s7:[0..63]
// LiveOut: gp s0 s3 s6
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 gp ra s0 s1 s2 s3 s4 s5 s6 s7 t1
// Preserved: sp
fn0000000000017D10_entry:
l0000000000017D10:
	word64 a1_34
	word64 a2_35
	word64 a3_36
	word64 a4_37
	word64 a6_39
	word64 a0_33 = fn0000000000017924(gp, out a1_34, out a2_35, out a3_36, out a4_37, out a6_39)
	branch a0_33 == 0<64> l0000000000017D80
l0000000000017D80:
	word64 s0_42
	word64 s2_43
	word64 s3_44
	word64 s4_45
	word64 s5_46
	word64 ra_47
	word64 s1_48
	word64 s6_49
	word64 s7_50
	word64 a2_53
	word64 a3_54
	word64 a4_55
	word64 gp_57
	call Mem21[gp + -1944<i32>:word64] (retsize: 0;)
		uses: a0:a0_33,a1:a1_34,a2:a2_35,a3:a3_36,a4:a4_37,fa3:fa3_87,fa4:fa4_84,fa5:fa5_85,gp:gp,ra:ra,s0:a0,s1:s1,s2:a3,s3:a2,s4:a1,s5:a4,s6:s6,s7:s7,t1:t1_86
		defs: a2:a2_53,a3:a3_54,a4:a4_55,gp:gp_57,ra:ra_47,s0:s0_42,s1:s1_48,s2:s2_43,s3:s3_44,s4:s4_45,s5:s5_46,s6:s6_49,s7:s7_50
	word64 a0_76
	word64 fa4_84
	word64 fa5_85
	word64 t1_86
	word64 fa3_87
	word64 gp_226
	word64 s0_211
	word64 s2_212
	word64 s3_213
	word64 s4_214
	word64 s5_215
	word64 ra_216
	word64 s6_218
	word64 s7_219
	word64 a2_222
	word64 a3_223
	word64 a4_224
	call Mem21[gp_57 + -1952<i32>:word64] (retsize: 0;)
		uses: a0:12<i32>,a1:16<i32>,a2:a2_53,a3:a3_54,a4:a4_55,fa3:fa3_87,fa4:fa4_84,fa5:fa5_85,gp:gp_57,ra:ra_47,s0:s0_42,s1:s1_48,s2:s2_43,s3:s3_44,s4:s4_45,s5:s5_46,s6:s6_49,s7:s7_50,t1:t1_86
		defs: a0:a0_76,a2:a2_78,a3:a3_79,a4:a4_80,fa3:fa3_87,fa4:fa4_84,fa5:fa5_85,gp:gp_82,ra:ra_72,s0:s0_67,s2:s2_68,s3:s3_69,s4:s4_70,s5:s5_71,s6:s6_74,s7:s7_75,t1:t1_86
	word64 s1_217 = a0_76
	branch a0_76 == 0<64> l0000000000017E18
l0000000000017DA0:
	word64 a4_89 = (int64) Mem21[s0_211 + 4<i32>:uint32]
	word64 a5_90 = (int64) Mem21[s0_211 + 12<i32>:uint32]
	word64 a1_91 = (int64) Mem21[s0_211:uint32]
	word64 a2_92 = (int64) Mem21[s0_211 + 8<i32>:uint32]
	word64 a3_93 = Mem21[gp_226 + -2000<i32>:word64]
	word64 a6_96 = 1<i32>
	Mem97[a0_76 + 76<i64>:word32] = (word32) a6_96
	word64 s0_101
	word64 s2_102
	word64 s3_103
	word64 s4_104
	word64 s5_105
	word64 ra_106
	word64 s1_107
	word64 s6_108
	word64 a0_110
	word64 a2_112
	word64 a3_113
	word64 a4_114
	word64 fa4_118
	word64 fa5_119
	word64 t1_120
	word64 fa3_121
	call a3_93 (retsize: 0;)
		uses: a0:a0_76,a1:a4_89 << 0<u32> | a1_91,a2:a5_90 << 0<u32> | a2_92,a3:a3_93,a4:a4_89 << 0<u32>,a5:a5_90 << 0<u32>,a6:a6_96,fa3:fa3_121,fa4:fa4_118,fa5:fa5_119,gp:gp_82,ra:ra_72,s0:s0_67,s1:a0_76,s2:s2_68,s3:s3_69,s4:s4_70,s5:s5_71,s6:s6_74,s7:s7_75,t1:t1_120
		defs: a0:a0_110,a2:a2_112,a3:a3_113,a4:a4_114,fa3:fa3_121,fa4:fa4_118,fa5:fa5_119,gp:gp_116,ra:ra_106,s0:s0_101,s1:s1_107,s2:s2_102,s3:s3_103,s4:s4_104,s5:s5_105,s6:s6_108,t1:t1_120
	branch a0_110 < 0<64> l0000000000017D54
l0000000000017DD8:
	word64 s0_127
	word64 s2_128
	word64 s3_129
	word64 s4_130
	word64 s5_131
	word64 ra_132
	word64 s1_133
	word64 s6_134
	word64 s7_135
	word64 a0_136
	word64 a1_137
	word64 a2_138
	word64 a3_139
	word64 a4_140
	word64 gp_142
	word64 fa4_144
	word64 fa5_145
	word64 t1_146
	word64 fa3_147
	call Mem97[gp + -1960<i32>:word64] (retsize: 0;)
		uses: a0:s1_107,a1:a0_110,a2:a2_112,a3:a3_113,a4:a4_114,fa3:fa3_147,fa4:fa4_144,fa5:fa5_145,gp:gp_116,ra:ra_106,s0:s0_101,s1:s1_107,s2:s2_102,s3:s3_103,s4:s4_104,s5:s5_105,s6:s6_108,s7:a0_110,t1:t1_146
		defs: a0:a0_136,a1:a1_137,a2:a2_138,a3:a3_139,a4:a4_140,fa3:fa3_147,fa4:fa4_144,fa5:fa5_145,gp:gp_142,ra:ra_132,s0:s0_127,s1:s1_133,s2:s2_128,s3:s3_129,s4:s4_130,s5:s5_131,s6:s6_134,s7:s7_135,t1:t1_146
	branch a0_136 == 0<64> l0000000000017DF4
l0000000000017DEC:
	Mem149[s4_130:word64] = __strdup(a0_136)
l0000000000017DF4:
	word64 s0_169
	word64 s2_170
	word64 s3_171
	word64 s4_172
	word64 s5_173
	word64 ra_174
	word64 s1_175
	word64 s6_176
	word64 s7_177
	word64 a0_178
	word64 a1_179
	word64 a2_180
	word64 a3_181
	word64 a4_182
	word64 gp_184
	word64 fa4_186
	word64 fa5_187
	word64 t1_188
	word64 fa3_189
	call Mem151[gp_142 + -1968<i32>:word64] (retsize: 0;)
		uses: a0:s7_135,a1:a1_137,a2:a2_138,a3:a3_139,a4:a4_140,fa3:fa3_189,fa4:fa4_186,fa5:fa5_187,gp:gp_142,ra:ra_132,s0:s0_127,s1:s1_133,s2:s2_128,s3:s3_129,s4:s4_130,s5:s5_131,s6:s6_134,s7:s7_135,t1:t1_188
		defs: a0:a0_178,a1:a1_179,a2:a2_180,a3:a3_181,a4:a4_182,fa3:fa3_189,fa4:fa4_186,fa5:fa5_187,gp:gp_184,ra:ra_174,s0:s0_169,s1:s1_175,s2:s2_170,s3:s3_171,s4:s4_172,s5:s5_173,s6:s6_176,s7:s7_177,t1:t1_188
	branch a0_178 == 0<64> l0000000000017E0C
l0000000000017E04:
	Mem191[s3_171:word64] = __strdup(a0_178)
l0000000000017E0C:
	word64 fa4_228
	word64 fa5_229
	word64 t1_230
	word64 fa3_231
	call Mem193[gp_184 + -1976<i32>:word64] (retsize: 0;)
		uses: a0:s1_175,a1:a1_179,a2:a2_180,a3:a3_181,a4:a4_182,fa3:fa3_231,fa4:fa4_228,fa5:fa5_229,gp:gp_184,ra:ra_174,s0:s0_169,s1:s1_175,s2:s2_170,s3:s3_171,s4:s4_172,s5:s5_173,s6:s6_176,s7:s7_177,t1:t1_230
		defs: a2:a2_222,a3:a3_223,a4:a4_224,fa3:fa3_231,fa4:fa4_228,fa5:fa5_229,gp:gp_226,ra:ra_216,s0:s0_211,s1:s1_217,s2:s2_212,s3:s3_213,s4:s4_214,s5:s5_215,s6:s6_218,s7:s7_219,t1:t1_230
l0000000000017E18:
	word64 a2_262
	word64 a3_263
	word64 a4_264
	word64 fa4_268
	word64 fa5_269
	word64 t1_270
	word64 fa3_271
	word64 s0_251
	word64 s2_252
	word64 s3_253
	word64 s4_254
	word64 s5_255
	word64 ra_256
	word64 s6_258
	word64 s7_259
	word64 a0_260
	call Mem233[gp_226 + -1952<i32>:word64] (retsize: 0;)
		uses: a0:30<i32>,a1:16<i32>,a2:a2_246,a3:a3_247,a4:a4_248,fa3:fa3_271,fa4:fa4_268,fa5:fa5_269,gp:gp_232,ra:ra_242,s0:s0_237,s1:s1_243,s2:s2_238,s3:s3_239,s4:s4_240,s5:s5_241,s6:s6_244,s7:s7_245,t1:t1_270
		defs: a0:a0_260,a2:a2_262,a3:a3_263,a4:a4_264,fa3:fa3_271,fa4:fa4_268,fa5:fa5_269,gp:gp_266,ra:ra_256,s0:s0_251,s2:s2_252,s3:s3_253,s4:s4_254,s5:s5_255,s6:s6_258,s7:s7_259,t1:t1_270
	word64 s1_272 = a0_260
	branch a0_260 == 0<64> l0000000000017EE8
l0000000000017EE8:
	word64 fa4_294
	word64 fa5_295
	word64 t1_296
	word64 fa3_297
	call Mem233[gp + -1952<i32>:word64] (retsize: 0;)
		uses: a0:31<i32>,a1:16<i32>,a2:a2_262,a3:a3_263,a4:a4_264,fa3:fa3_297,fa4:fa4_294,fa5:fa5_295,gp:gp_266,ra:ra_256,s0:s0_251,s1:a0_260,s2:s2_252,s3:s3_253,s4:s4_254,s5:s5_255,s6:s6_258,s7:s7_259,t1:t1_296
		defs: a0:a0_286,fa3:fa3_297,fa4:fa4_294,fa5:fa5_295,gp:gp_292,ra:ra_282,s0:s0_277,s2:s2_278,s3:s3_279,s4:s4_280,s5:s5_281,s6:s6_284,s7:s7_285,t1:t1_296
	s1_272 = a0_260
	branch a0_260 != 0<64> l0000000000017E30
l0000000000017F00:
l0000000000017E30:
	word64 a4_301 = (int64) Mem233[s0_251 + 4<i32>:uint32]
	word64 a5_302 = (int64) Mem233[s0_251 + 12<i32>:uint32]
	word64 a1_303 = (int64) Mem233[s0_251:uint32]
	word64 a2_304 = (int64) Mem233[s0_251 + 8<i32>:uint32]
	word64 a3_306 = Mem233[gp + -2008<i32>:word64]
	word64 a6_309 = 1<i32>
	Mem311[s1_272 + 76<i64>:word32] = (word32) a6_309
	word64 sp_323
	word64 s2_325
	word64 s5_328
	word64 s1_330
	word64 a0_333
	word64 a3_336
	word64 a4_337
	word64 gp_339
	word64 fa4_341
	word64 fa5_342
	word64 t1_343
	word64 fa3_344
	word64 a1_334
	word64 a2_335
	call a3_306 (retsize: 0;)
		uses: a0:a0_321,a1:a4_301 << 0<u32> | a1_303,a2:a5_302 << 0<u32> | a2_304,a3:a3_306,a4:a4_301 << 0<u32>,a5:a5_302 << 0<u32>,a6:a6_309,fa3:fa3_344,fa4:fa4_341,fa5:fa5_342,gp:gp_305,ra:ra_318,s0:s0_299,s1:s1_310,s2:s2_314,s3:s3_315,s4:s4_316,s5:s5_317,s6:s6_319,s7:s7_320,t1:t1_343
		defs: a0:a0_333,a1:a1_334,a2:a2_335,a3:a3_336,a4:a4_337,fa3:fa3_344,fa4:fa4_341,fa5:fa5_342,gp:gp_339,s1:s1_330,s2:s2_325,s5:s5_328,sp:sp_323,t1:t1_343
	branch a0_333 == 0<64> l0000000000017E88
l0000000000017E68:
	word64 a0_346 = Mem311[a0_333 + 32<i32>:word64]
	branch a0_346 == 0<64> l0000000000017E78
l0000000000017E70:
	Mem348[s2_325:word64] = __strdup(a0_346)
l0000000000017E78:
	branch (word64) ((real32) Mem350[a0_333 + 52<i64>:real32] == (real32) 0<64>) == 0<64> l0000000000017EBC
l0000000000017EBC:
	a1_334 = 1<i32>
	__asprintf_chk(s5_328, a1_334, 0x12B80<64>, 0<32>)
	a2_335 = 0x12B80<64>
l0000000000017E88:
	word64 s0_392
	word64 s3_394
	word64 s6_399
	word64 gp_407
	word64 fa4_409
	word64 fa5_410
	word64 t1_411
	word64 fa3_412
	call Mem370[gp_339 + -1976<i32>:word64] (retsize: 0;)
		uses: a0:s1_330,a1:a1_384,a2:a2_386,a3:a3_336,a4:a4_337,fa3:fa3_412,fa4:fa4_409,fa5:fa5_410,gp:gp_339,ra:Mem370[sp_323 + 72<i32>:word64],s0:Mem370[sp_323 + 64<i32>:word64],s1:Mem370[sp_323 + 56<i32>:word64],s2:Mem370[sp_323 + 48<i32>:word64],s3:Mem370[sp_323 + 40<i32>:word64],s4:Mem370[sp_323 + 32<i32>:word64],s5:Mem370[sp_323 + 24<i32>:word64],s6:Mem370[sp_323 + 16<i32>:word64],s7:Mem370[sp_323 + 8<i32>:word64],t1:t1_411
		defs: fa3:fa3_412,fa4:fa4_409,fa5:fa5_410,gp:gp_407,s0:s0_392,s3:s3_394,s6:s6_399,t1:t1_411
	s0Out = s0_392
	s3Out = s3_394
	s6Out = s6_399
	return gp_407
l0000000000017D54:
	s0Out = s0
	s3Out = s3
	s6Out = s6
	return gp
fn0000000000017D10_exit:


word64 fn0000000000017F04(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000016D74
// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] a3:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 t1 t3
// Preserved: a7 ra s0 s1 s2 s3 s4 s5 s6 sp
fn0000000000017F04_entry:
l0000000000017F04:
	word64 a0_142
	word64 a0_116
	word64 a5_7 = Mem5[gp + -1936<i32>:word64]
	word64 a3_32
	word64 a4_224
	fn00000000000182B4(a0, out a3_32, out a4_224)
	branch a1 == 32<i32> l0000000000018048
l0000000000018048:
	a0_116 = (uint64) (uint32) __asprintf_chk(fp + -80<i32>, 1<i32>, 0x12B88<64>, 0<32>)
l0000000000017F60:
	word64 a1_50 = 24<i32>
	branch a1 == a1_50 l0000000000018070
l0000000000018070:
	a0_116 = (uint64) (uint32) __asprintf_chk(fp + -80<i32>, 1<i32>, 0x12BA8<64>, 0<32>)
l0000000000017F68:
	word64 a0_59 = 16<i32>
	branch a1 == a0_59 l00000000000180D8
l00000000000180D8:
	a0_116 = (uint64) (uint32) __asprintf_chk(fp + -80<i32>, 1<i32>, 0x12BC0<64>, 0<32>)
l0000000000017F70:
	word64 a5_67 = 8<i32>
	branch a1 == a5_67 l00000000000180F8
l00000000000180F8:
	a0_116 = (uint64) (uint32) __asprintf_chk(fp + -80<i32>, 1<i32>, 0x12BD8<64>, 0<32>)
l0000000000017F78:
	branch a1_50 <u a1 l0000000000017FBC
l0000000000017FBC:
	word64 a3_225
	word64 a4_226
	fn00000000000182B4(a2, out a3_225, out a4_226)
	word64 a3_227
	word64 a4_228
	fn00000000000182B4(a3, out a3_227, out a4_228)
	a0_116 = (uint64) (uint32) __asprintf_chk(fp + -80<i32>, 1<i32>, 0x12BF0<64>, 0<32>)
l0000000000017F7C:
	branch a0_59 <u a1 l0000000000018094
l0000000000018094:
	word64 a4_230
	word64 a3_229
	fn00000000000182B4(a2, out a3_229, out a4_230)
	word64 a3_231
	word64 a4_232
	fn00000000000182B4(a3, out a3_231, out a4_232)
	a0_116 = (uint64) (uint32) __asprintf_chk(fp + -80<i32>, 1<i32>, 0x12C10<64>, 0<32>)
l0000000000017F80:
	branch a5_67 <u a1 l0000000000018008
l0000000000018008:
	word64 a3_233
	word64 a4_234
	fn00000000000182B4(a2, out a3_233, out a4_234)
	word64 a3_235
	word64 a4_236
	fn00000000000182B4(a3, out a3_235, out a4_236)
	a0_116 = (uint64) (uint32) __asprintf_chk(fp + -80<i32>, 1<i32>, 0x12C30<64>, 0<32>)
l0000000000017FF8:
	branch a0_116 == -1<i32> l0000000000017F84
l0000000000018000:
	a0_142 = 0<64>
l0000000000017F84:
	a0_142 = 0<i32>
l0000000000017F88:
	branch a5_7 != Mem29[gp + -1936<i32>:word64] l0000000000018114
l0000000000018114:
	__stack_chk_fail()
l0000000000017F94:
	return a0_142
fn0000000000017F04_exit:


word64 fn0000000000018118(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000175BC
// MayUse:  a0:[0..63] a1:[0..63] gp:[0..63]
// LiveOut: a0
// Trashed: a0 a4 a5 t4
// Preserved: ra s0 sp t5
fn0000000000018118_entry:
l0000000000018118:
	word64 a0_121
	word64 a5_7 = Mem5[gp + -1936<i32>:word64]
	branch (a1 & 3<i32>) != 0<64> l00000000000182A8
l00000000000182A8:
	a0_121 = 0<i32>
l0000000000018134:
	word64 t5_16 = (int64) (word32) (a1 >>u 3<i32>)
	branch (a1 & 7<i32>) == 4<i32> l0000000000018264
l0000000000018264:
l0000000000018144:
	branch t5_16 == 0<64> l00000000000181FC
l00000000000181FC:
	word64 t4_21 = fp + -280<i32> + (((a1 & 3<i32>) << 0<u32>) >>u 0<u32>)
	Mem24[t4_21 + 4<i64>:word16] = 0x7261<16>
	Mem27[t4_21:word16] = 0x7069<16>
	Mem30[t4_21 + 6<i64>:word16] = 0x6170<16>
	Mem33[t4_21 + 2<i64>:word16] = 0x2E36<16>
	Mem34[t4_21 + 8<i64>:word16] = 0x2E<16>
	a0_121 = __strdup(fp + -280<i32>)
l0000000000018248:
	branch a5_7 != Mem37[gp + -1936<i32>:word64] l00000000000182B0
l00000000000182B0:
	__stack_chk_fail()
l0000000000018254:
	return a0_121
fn0000000000018118_exit:
l0000000000018148:
	word64 a1_101 = (int64) ((word32) t5_16 + -1<i32>)
	word64 a4_103 = a1 & 3<i32>
	word64 t1_46 = 9<i32>
	word64 a7_47 = 46<i32>
	word64 t3_48 = -1<i32>
l0000000000018190:
	word64 a5_55 = (int64) Mem54[a0 + ((a1_101 << 0<u32>) >>u 0<u32>):byte]
	word64 a3_57 = (int64) ((word32) a4_103 + 1<i32>)
	word64 a6_59 = (a5_55 & 15<i32>) + 87<i32>
	branch t1_46 <u (a5_55 & 15<i32>) l00000000000181B4
l00000000000181B0:
	a6_59 = (a5_55 & 15<i32>) + 48<i32>
l00000000000181B4:
	Mem73[fp + -16<i32> + ((a4_103 << 0<u32>) >>u 0<u32>) + 3832<i64>:byte] = (byte) a6_59
	Mem79[fp + -16<i32> + ((a3_57 << 0<u32>) >>u 0<u32>) + 3832<i64>:byte] = (byte) a7_47
	word64 a2_80 = (int64) ((word32) a4_103 + 2<i32>)
	word64 a3_81 = (int64) ((word32) a4_103 + 3<i32>)
	word64 a6_82 = (a5_55 >>u 4<u32>) + 48<i32>
	branch t1_46 >=u a5_55 >>u 4<u32> l0000000000018160
l00000000000181EC:
	a6_82 = (a5_55 >>u 4<u32>) + 87<i32>
l0000000000018160:
	Mem95[fp + -16<i32> + ((a2_80 << 0<u32>) >>u 0<u32>) + 3832<i64>:byte] = (byte) a6_82
	Mem98[fp + -16<i32> + ((a3_81 << 0<u32>) >>u 0<u32>) + 3832<i64>:byte] = (byte) a7_47
	a1_101 = (int64) ((word32) a1_101 + -1<i32>)
	a4_103 = (int64) ((word32) a4_103 + 4<i32>)
	branch a1_101 == t3_48 l00000000000181F4
l00000000000181F4:


word64 fn00000000000182B4(word64 a0, ptr64 & a3Out, ptr64 & a4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000000166F4
//      fn0000000000016B68
//      fn0000000000016D74
//      fn0000000000017B40
//      fn0000000000017F04
// MayUse:  a0:[0..31]
// LiveOut: a0 a3 a4
// Trashed: a0 a3 a4 a5
// Preserved: sp
fn00000000000182B4_entry:
l00000000000182B4:
	word64 a3_6 = (int64) (word32) (a0 >>u 24<i32>) | (int64) ((word32) (a0 << 0x18<64>))
	a3Out = a3_6
	word64 a4_11 = (int64) (word32) ((a0 & 0xFF0000<64>) >> 8<u32>)
	a4Out = a4_11
	return a3_6 | a4_11 | (int64) ((word32) ((a0 & 65280<i64>) << 8<64>))
fn00000000000182B4_exit:


void fn00000000000182E8(word64 ra, word64 a0, word64 a1, word64 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..63] a1:[0..63] a2:[0..63] ra:[0..63]
// LiveOut:
// Trashed: a0 a1 a2 a5
// Preserved: ra s0 s1 s2 s3 s4 s5 sp
fn00000000000182E8_entry:
l00000000000182E8:
	word64 s2_12 = 0x0000000000019E20<p64> - 0x0000000000019E18<p64>
	word64 s0_31 = 0x0000000000019E18<p64>
	word64 s2_23 = s2_12 >> 3<u32>
	branch s2_12 >> 3<u32> == 0<64> l0000000000018354
l0000000000018324:
	word64 s5_25 = a0
	word64 s4_27 = a1
	word64 s3_29 = a2
	word64 s1_30 = 0<i32>
l0000000000018334:
	word64 s0_46
	word64 a5_56
	call Mem22[s0_31:word64] (retsize: 0;)
		uses: a0:s5_38,a1:s4_36,a2:s3_34,a5:a5_56,ra:ra_43,s0:s0_31,s1:s1_40 + 1<i32>,s2:s2_42,s3:s3_34,s4:s4_36,s5:s5_38
		defs: a5:a5_56,ra:ra_48,s0:s0_46,s1:s1_49,s2:s2_47,s3:s3_50,s4:s4_51,s5:s5_52
	s0_31 = s0_46 + 8<i32>
	branch s2_23 != s1_30 l0000000000018334
l0000000000018354:
	return
fn00000000000182E8_exit:


void fn0000000000018378()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000000000018378_entry:
l0000000000018378:
	return
fn0000000000018378_exit:


