void _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax Top
// Preserved: rsp
_init_entry:
l0000000000400428:
	branch __gmon_start__ == 0x0000000000000000 l000000000040043A
l0000000000400438:
	call __gmon_start__ (retsize: 8;)
l000000000040043A:
	return
_init_exit:


void _start(word64 rdx, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdx:[0..63] Stack +0000:[0..63]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_start_exit:
_start_entry:
l0000000000400480:
	__align(fp + 8)
	__libc_start_main(0x0000000000400660, qwArg00, fp + 8, 0x0000000000400710, 0x0000000000400780, rdx, fp)
	__hlt()


void deregister_tm_clones(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..63]
// LiveOut:
// Trashed: SCZO r8 rax rdi Top
// Preserved: rbp rsp
deregister_tm_clones_entry:
l00000000004004B0:
	branch r8 == 0x0000000000601040 l00000000004004D8
l00000000004004C1:
	branch 0x0000000000000000 == 0x0000000000000000 l00000000004004D8
l00000000004004D8:
	return
l00000000004004CB:
	call 0x0000000000000000 (retsize: 8;)
		uses: r8:r8,rdi:0x0000000000601040
	return
deregister_tm_clones_exit:


void register_tm_clones()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi rsi Top
// Preserved: rbp rsp
register_tm_clones_entry:
l00000000004004E0:
	branch 0 == 0x0000000000000000 l0000000000400518
l0000000000400503:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400518
l0000000000400518:
	return
l000000000040050D:
	call 0x0000000000000000 (retsize: 8;)
		uses: rdi:0x0000000000601040
	return
register_tm_clones_exit:


void __do_global_dtors_aux(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..63]
// LiveOut:
// Trashed: SCZO r8 rax rdi Top
// Preserved: rbp rsp
__do_global_dtors_aux_entry:
l0000000000400520:
	branch Mem0[0x0000000000601040:byte] != 0x00 l0000000000400540
l0000000000400540:
	return
l0000000000400529:
	deregister_tm_clones(r8)
	Mem19[0x0000000000601040:byte] = 0x01
	return
__do_global_dtors_aux_exit:


void frame_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi rsi Top
// Preserved: rbp rsp
frame_dummy_entry:
l0000000000400550:
l0000000000400555_thunk_register_tm_clones:
	register_tm_clones()
	return
frame_dummy_exit:


void my1(word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] esi:[0..31]
// LiveOut:
// Trashed: SCZO rdi rsi Top
// Preserved: rbp rsp
my1_entry:
l0000000000400560:
	calloc((int64) edi, (int64) esi)
	return
my1_exit:


void my2(byte sil, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] sil:[0..7]
// LiveOut:
// Trashed: rax rsi Top
// Preserved: rbp rdi rsp
my2_entry:
l0000000000400590:
	Mem16[rdi:byte] = sil
	return
my2_exit:


void branches(word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  esi:[0..31] rdi:[0..31]
// LiveOut:
// Trashed: SCZO edx rax rcx rdi rsi Top
// Preserved: rbp rsp
branches_entry:
	word32 edi = SLICE(rdi, word32, 0)
l00000000004005B0:
	branch SLICE((uint64) edi, word32, 0) >= esi l000000000040064F
l00000000004005CA:
	branch SLICE((uint64) (SLICE((uint64) edi, word32, 0) << 0x00000001), word32, 0) >= SLICE((uint64) (SLICE((uint64) esi, word32, 0) << 0x00000001), word32, 0) l000000000040064F
l00000000004005DE:
	branch SLICE((uint64) (edi *s 0x00000003), word32, 0) >= SLICE((uint64) (esi *s 0x00000003), word32, 0) l000000000040064F
l00000000004005EE:
	branch SLICE((uint64) (SLICE((uint64) edi, word32, 0) << 0x00000002), word32, 0) >= SLICE((uint64) (SLICE((uint64) esi, word32, 0) << 0x00000002), word32, 0) l000000000040064F
l0000000000400602:
	word64 rax_60 = (uint64) SLICE((uint64) esi, word32, 0)
	word32 eax_67 = (int32) ((int64) SLICE(rax_60, word32, 0) / 0x00000002)
	word64 rax_85 = SEQ(SLICE(rax_60, word32, 32), eax_67)
	branch SLICE((uint64) (int32) ((int64) SLICE((uint64) SLICE((uint64) edi, word32, 0), word32, 0) / 0x00000002), word32, 0) >= eax_67 l000000000040064F
l000000000040064F:
l000000000040062B:
	my1(SLICE((uint64) esi, word32, 0), SLICE((uint64) edi, word32, 0))
	free(rax_85)
l0000000000400656:
	return
branches_exit:


void main()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
main_exit:
main_entry:
l0000000000400660:
	__llvm_retpoline_r11()


void __llvm_retpoline_r11()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__llvm_retpoline_r11_exit:
__llvm_retpoline_r11_entry:
l00000000004006F0:
	fn0000000000400700()
l00000000004006F5:
	__pause()


void fn0000000000400700()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: rsp
fn0000000000400700_entry:
l0000000000400700:
	return
fn0000000000400700_exit:


void __libc_csu_init(word64 rdx, word64 rsi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..31] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
__libc_csu_init_entry:
	word32 edi = SLICE(rdi, word32, 0)
l0000000000400710:
	_init()
	word32 r15d_84 = SLICE((uint64) edi, word32, 0)
	word64 rbp_30 = 0x0000000000600E18 - 0x0000000000600E10
	branch rbp_30 >> 0x0000000000000003 == 0x0000000000000000 l0000000000400766
l0000000000400746:
	word64 rbx_42 = 0x0000000000000000
l0000000000400750:
	call Mem25[0x0000000000600E10 + rbx_42 * 0x0000000000000008:word64] (retsize: 8;)
		uses: rdi:(uint64) r15d_84,rdx:rdx,rsi:rsi
	rbx_42 = rbx_42 + 0x0000000000000001
	branch rbp_30 >> 0x0000000000000003 != rbx_42 l0000000000400750
l0000000000400766:
	return
__libc_csu_init_exit:


void __libc_csu_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: rsp
__libc_csu_fini_entry:
l0000000000400780:
	return
__libc_csu_fini_exit:


void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO Top
// Preserved: rsp
_fini_entry:
l0000000000400784:
	return
_fini_exit:


