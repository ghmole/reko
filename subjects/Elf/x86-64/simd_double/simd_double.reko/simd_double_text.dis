void _start(word64 rdx, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdx:[0..63] Stack +0000:[0..63]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_start_exit:
_start_entry:
l0000000000000620:
	__align(fp + 8<i64>)
	__libc_start_main(0x0000000000000898<p64>, qwArg00, fp + 8<i64>, 0x0000000000000A70<p64>, 0x0000000000000AE0<p64>, rdx, fp)
	__hlt()


void deregister_tm_clones()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __do_global_dtors_aux
// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi Top
// Preserved: rbp rsp
deregister_tm_clones_entry:
l0000000000000650:
	branch 0x0000000000201048<p64> == 0x0000000000201048<p64> l0000000000000680
l0000000000000667:
	branch _ITM_deregisterTMCloneTable == 0<64> l0000000000000680
l0000000000000680:
	return
l0000000000000673:
	call _ITM_deregisterTMCloneTable (retsize: 0;)
	return
deregister_tm_clones_exit:


void register_tm_clones()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      frame_dummy
// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi rsi Top
// Preserved: rbp rsp
register_tm_clones_entry:
l0000000000000690:
	word64 rsi_9 = 0x0000000000201048<p64> - 0x0000000000201048<p64>
	branch (rsi_9 >> 3<64>) + ((rsi_9 >> 3<64>) >>u 0x3F<64>) >> 1<64> == 0<64> l00000000000006D0
l00000000000006B8:
	branch _ITM_registerTMCloneTable == 0<64> l00000000000006D0
l00000000000006D0:
	return
l00000000000006C4:
	call _ITM_registerTMCloneTable (retsize: 0;)
	return
register_tm_clones_exit:


void __do_global_dtors_aux()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi Top
// Preserved: rbp rsp
__do_global_dtors_aux_entry:
l00000000000006E0:
	branch Mem0[0x0000000000201048<p64>:byte] != 0<8> l0000000000000718
l0000000000000718:
	return
l00000000000006E9:
	branch __cxa_finalize == 0<64> l0000000000000703
l00000000000006F7:
	word64 rax_27
	call __cxa_finalize (retsize: 8;)
		uses: rax:rax_27,rdi:Mem10[0x0000000000201040<p64>:word64]
		defs: rax:rax_27
l0000000000000703:
	deregister_tm_clones()
	Mem22[0x0000000000201048<p64>:byte] = 1<8>
	return
__do_global_dtors_aux_exit:


void frame_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi rsi Top
// Preserved: rbp rsp
frame_dummy_entry:
l0000000000000720:
l0000000000000725_thunk_register_tm_clones:
	register_tm_clones()
	return
frame_dummy_exit:


word64 _mm_malloc(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi Top
// Preserved: rbp rcx rdi rdx rsi rsp
_mm_malloc_entry:
l000000000000072A:
	word64 rax_42
	word64 qwLoc28_54 = rsi
	branch rsi != 1<64> l000000000000074F
l000000000000074F:
	branch rsi == 2<64> l000000000000075D
l0000000000000756:
	branch rsi != 4<64> l0000000000000765
l000000000000075D:
	qwLoc28_54 = 8<64>
l0000000000000765:
	word64 rax_34
	call posix_memalign (retsize: 8;)
		uses: rax:fp - 0x10<64>,rcx:qwLoc28_58,rdi:fp - 0x10<64>,rdx:rdi,rsi:qwLoc28_58,Stack +0020:qwLoc10
		defs: rax:rax_34
	branch SLICE(rax_34, word32, 0) != 0<32> l0000000000000786
l0000000000000786:
	rax_42 = 0<u64>
l0000000000000780:
	rax_42 = qwLoc10
l0000000000000741:
	rax_42 = malloc(rdi)
l000000000000078B:
	return rax_42
_mm_malloc_exit:


void _mm_free(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax Top
// Preserved: rbp rdi rsp
_mm_free_entry:
l000000000000078D:
	free(rdi)
	return
_mm_free_exit:


void vec_add(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO r10 rax rcx rdx Top
// Preserved: rbp rsp
vec_add_entry:
l00000000000007A8:
	__align(fp)
	word64 rax_30 = (uint64) ((uint128) (uint64) rdi /u Mem23[0x0000000000000B00<p64>:word64])
l0000000000000881:
	branch rax_30 >u 0<64> l0000000000000820
l0000000000000820:
l000000000000088B:
	return
vec_add_exit:


void main(word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  xmm0:[0..127]
// LiveOut:
// Trashed: SCZO r10 rax rcx rdi rdx rsi Top xmm0
// Preserved: rbp rsp
main_entry:
l0000000000000898:
	word64 rax_15 = _mm_malloc(0x20<u64>, 0x2000<64>)
	word64 rax_27 = _mm_malloc(0x20<u64>, 0x2000<64>)
	word64 rax_39 = _mm_malloc(0x20<u64>, 0x2000<64>)
	word64 qwLoc10_198 = 0<64>
l000000000000093F:
	branch qwLoc10_198 <u 0x400<64> l00000000000008FD
l00000000000008FD:
	word64 rcx_55 = qwLoc10_198 * 8<64> + rax_15
	word32 eax_62 = SLICE(qwLoc10_198, word32, 0)
	branch qwLoc10_198 < 0<64> l0000000000000921
l0000000000000921:
	xmm0 = (uint128) (uint64) ((real64) (qwLoc10_198 >>u 1<64> | (uint64) (eax_62 & 1<32>)) + (real64) (qwLoc10_198 >>u 1<64> | (uint64) (eax_62 & 1<32>)))
l000000000000091A:
	xmm0 = SEQ(SLICE(xmm0, word64, 64), (real64) qwLoc10_198)
l0000000000000936:
	Mem76[rcx_55:real64] = (real64) xmm0
	qwLoc10_198 = qwLoc10_198 + 1<64>
l0000000000000949:
	word64 qwLoc18_204 = 0<64>
l0000000000000998:
	branch qwLoc18_204 <u 0x400<64> l0000000000000953
l0000000000000953:
	word32 eax_98 = SLICE(qwLoc18_204 + 1<64>, word32, 0)
	word64 rcx_92 = qwLoc18_204 * 8<64> + rax_27
	branch qwLoc18_204 < 1<64> l000000000000097A
l000000000000097A:
	xmm0 = (uint128) (uint64) ((real64) (qwLoc18_204 + 1<64> >>u 1<64> | (uint64) (eax_98 & 1<32>)) + (real64) (qwLoc18_204 + 1<64> >>u 1<64> | (uint64) (eax_98 & 1<32>)))
l0000000000000973:
	xmm0 = SEQ(SLICE(xmm0, word64, 64), (real64) (qwLoc18_204 + 1<64>))
l000000000000098F:
	Mem112[rcx_92:real64] = (real64) xmm0
	qwLoc18_204 = qwLoc18_204 + 1<64>
l00000000000009A2:
	word64 qwLoc20_210 = 0<64>
l00000000000009CC:
	branch qwLoc20_210 <u 0x400<64> l00000000000009AC
l00000000000009AC:
	xmm0 = __xorpd(xmm0, xmm0)
	Mem131[rax_39 + qwLoc20_210 * 8<64>:real64] = (real64) xmm0
	qwLoc20_210 = qwLoc20_210 + 1<64>
l00000000000009D6:
	vec_add(0x400<64>)
	word64 qwLoc28_219 = 0<64>
l0000000000000A2D:
	branch qwLoc28_219 <u 0x400<64> l00000000000009F8
l00000000000009F8:
	printf(0x0000000000000AF8<p64>, 0<32>)
	qwLoc28_219 = qwLoc28_219 + 1<64>
l0000000000000A37:
	_mm_free(rax_15)
	_mm_free(rax_27)
	_mm_free(rax_39)
	return
main_exit:


void __libc_csu_init(word64 rdx, word64 rsi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..31] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
__libc_csu_init_entry:
	word32 edi = SLICE(rdi, word32, 0)
l0000000000000A70:
	_init()
	word32 r15d_84 = SLICE((uint64) edi, word32, 0)
	word64 rbp_30 = 0x0000000000200DF0<p64> - 0x0000000000200DE8<p64>
	branch rbp_30 >> 3<64> == 0<64> l0000000000000AC6
l0000000000000AA6:
	word64 rbx_42 = 0<u64>
l0000000000000AB0:
	call Mem25[0x0000000000200DE8<p64> + rbx_42 * 8<64>:word64] (retsize: 8;)
		uses: rdi:(uint64) r15d_84,rdx:rdx,rsi:rsi
	rbx_42 = rbx_42 + 1<64>
	branch rbp_30 >> 3<64> != rbx_42 l0000000000000AB0
l0000000000000AC6:
	return
__libc_csu_init_exit:


void __libc_csu_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: rsp
__libc_csu_fini_entry:
l0000000000000AE0:
	return
__libc_csu_fini_exit:


