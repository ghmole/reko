// signal_name
// Return size: 0
define signal_name
signal_name_entry:
	r11 = fp
	// succ:  l40000000000AD3C0
l40000000000AD3C0:
signal_name_exit:


// decode_signal
// Return size: 0
define decode_signal
decode_signal_entry:
	r11 = fp
	// succ:  l40000000000AD480
l40000000000AD480:
decode_signal_exit:


// set_sigint_handler
// Return size: 0
define set_sigint_handler
set_sigint_handler_entry:
	r11 = fp
	// succ:  l40000000000AD780
l40000000000AD780:
set_sigint_handler_exit:


// trap_to_sighandler
// Return size: 0
define trap_to_sighandler
trap_to_sighandler_entry:
	r11 = fp
	// succ:  l40000000000AD900
l40000000000AD900:
trap_to_sighandler_exit:


// set_signal
// Return size: 0
define set_signal
set_signal_entry:
	r11 = fp
	// succ:  l40000000000AD980
l40000000000AD980:
set_signal_exit:


// set_return_trap
// Return size: 0
define set_return_trap
set_return_trap_entry:
	r11 = fp
	// succ:  l40000000000ADDC0
l40000000000ADDC0:
set_return_trap_exit:


// set_error_trap
// Return size: 0
define set_error_trap
set_error_trap_entry:
	r11 = fp
	// succ:  l40000000000ADE00
l40000000000ADE00:
set_error_trap_exit:


// set_debug_trap
// Return size: 0
define set_debug_trap
set_debug_trap_entry:
	r11 = fp
	// succ:  l40000000000ADE40
l40000000000ADE40:
set_debug_trap_exit:


// maybe_set_sigchld_trap
// Return size: 0
define maybe_set_sigchld_trap
maybe_set_sigchld_trap_entry:
	r11 = fp
	// succ:  l40000000000ADE80
l40000000000ADE80:
maybe_set_sigchld_trap_exit:


// get_all_original_signals
// Return size: 0
define get_all_original_signals
get_all_original_signals_entry:
	r11 = fp
	// succ:  l40000000000ADF40
l40000000000ADF40:
get_all_original_signals_exit:


// set_original_signal
// Return size: 0
define set_original_signal
set_original_signal_entry:
	r11 = fp
	// succ:  l40000000000AE080
l40000000000AE080:
set_original_signal_exit:


// restore_default_signal
// Return size: 0
define restore_default_signal
restore_default_signal_entry:
	r11 = fp
	// succ:  l40000000000AE140
l40000000000AE140:
restore_default_signal_exit:


// set_impossible_sigchld_trap
// Return size: 0
define set_impossible_sigchld_trap
set_impossible_sigchld_trap_entry:
	r11 = fp
	// succ:  l40000000000AE4C0
l40000000000AE4C0:
set_impossible_sigchld_trap_exit:


// ignore_signal
// Return size: 0
define ignore_signal
ignore_signal_entry:
	r11 = fp
	// succ:  l40000000000AE580
l40000000000AE580:
ignore_signal_exit:


// run_exit_trap
// Return size: 0
define run_exit_trap
run_exit_trap_entry:
	r11 = fp
	// succ:  l40000000000AE800
l40000000000AE800:
run_exit_trap_exit:


// run_trap_cleanup
// Return size: 0
define run_trap_cleanup
run_trap_cleanup_entry:
	r11 = fp
	// succ:  l40000000000AEC80
l40000000000AEC80:
run_trap_cleanup_exit:


// run_debug_trap
// Return size: 0
define run_debug_trap
run_debug_trap_entry:
	r11 = fp
	// succ:  l40000000000AECC0
l40000000000AECC0:
run_debug_trap_exit:


// run_error_trap
// Return size: 0
define run_error_trap
run_error_trap_entry:
	r11 = fp
	// succ:  l40000000000AEF00
l40000000000AEF00:
run_error_trap_exit:


// run_return_trap
// Return size: 0
define run_return_trap
run_return_trap_entry:
	r11 = fp
	// succ:  l40000000000AEF80
l40000000000AEF80:
run_return_trap_exit:


// run_interrupt_trap
// Return size: 0
define run_interrupt_trap
run_interrupt_trap_entry:
	r11 = fp
	// succ:  l40000000000AF040
l40000000000AF040:
run_interrupt_trap_exit:


// run_pending_traps
// Return size: 0
define run_pending_traps
run_pending_traps_entry:
	r11 = fp
	// succ:  l40000000000AF080
l40000000000AF080:
run_pending_traps_exit:


// trap_handler
// Return size: 0
define trap_handler
trap_handler_entry:
	r11 = fp
	// succ:  l40000000000AF640
l40000000000AF640:
trap_handler_exit:


// free_trap_strings
// Return size: 0
define free_trap_strings
free_trap_strings_entry:
	r11 = fp
	// succ:  l40000000000AF8C0
l40000000000AF8C0:
free_trap_strings_exit:


// reset_signal_handlers
// Return size: 0
define reset_signal_handlers
reset_signal_handlers_entry:
	r11 = fp
	// succ:  l40000000000AF9C0
l40000000000AF9C0:
reset_signal_handlers_exit:


// restore_original_signals
// Return size: 0
define restore_original_signals
restore_original_signals_entry:
	r11 = fp
	// succ:  l40000000000AFA00
l40000000000AFA00:
restore_original_signals_exit:


// maybe_call_trap_handler
// Return size: 0
define maybe_call_trap_handler
maybe_call_trap_handler_entry:
	r11 = fp
	// succ:  l40000000000AFA40
l40000000000AFA40:
maybe_call_trap_handler_exit:


// signal_is_trapped
// Return size: 0
define signal_is_trapped
signal_is_trapped_entry:
	r11 = fp
	// succ:  l40000000000AFC00
l40000000000AFC00:
signal_is_trapped_exit:


// signal_is_special
// Return size: 0
define signal_is_special
signal_is_special_entry:
	r11 = fp
	// succ:  l40000000000AFC40
l40000000000AFC40:
signal_is_special_exit:


// signal_is_ignored
// Return size: 0
define signal_is_ignored
signal_is_ignored_entry:
	r11 = fp
	// succ:  l40000000000AFC80
l40000000000AFC80:
signal_is_ignored_exit:


// signal_is_hard_ignored
// Return size: 0
define signal_is_hard_ignored
signal_is_hard_ignored_entry:
	r11 = fp
	// succ:  l40000000000AFCC0
l40000000000AFCC0:
signal_is_hard_ignored_exit:


// set_signal_ignored
// Return size: 0
define set_signal_ignored
set_signal_ignored_entry:
	r11 = fp
	// succ:  l40000000000AFD00
l40000000000AFD00:
set_signal_ignored_exit:


// signal_in_progress
// Return size: 0
define signal_in_progress
signal_in_progress_entry:
	r11 = fp
	// succ:  l40000000000AFD80
l40000000000AFD80:
signal_in_progress_exit:


// buffered_ungetchar
// Return size: 0
define buffered_ungetchar
buffered_ungetchar_entry:
	r11 = fp
	// succ:  l40000000000AFDC0
l40000000000AFDC0:
buffered_ungetchar_exit:


// buffered_getchar
// Return size: 0
define buffered_getchar
buffered_getchar_entry:
	r11 = fp
	// succ:  l40000000000AFE80
l40000000000AFE80:
buffered_getchar_exit:


// getc_with_restart
// Return size: 0
define getc_with_restart
getc_with_restart_entry:
	r11 = fp
	// succ:  l40000000000B0380
l40000000000B0380:
getc_with_restart_exit:


// ungetc_with_restart
// Return size: 0
define ungetc_with_restart
ungetc_with_restart_entry:
	r11 = fp
	// succ:  l40000000000B0700
l40000000000B0700:
ungetc_with_restart_exit:


// set_bash_input_fd
// Return size: 0
define set_bash_input_fd
set_bash_input_fd_entry:
	r11 = fp
	// succ:  l40000000000B0780
l40000000000B0780:
set_bash_input_fd_exit:


// fd_is_bash_input
// Return size: 0
define fd_is_bash_input
fd_is_bash_input_entry:
	r11 = fp
	// succ:  l40000000000B0840
l40000000000B0840:
fd_is_bash_input_exit:


// fd_to_buffered_stream
// Return size: 0
define fd_to_buffered_stream
fd_to_buffered_stream_entry:
	r11 = fp
	// succ:  l40000000000B0940
l40000000000B0940:
fd_to_buffered_stream_exit:


// open_buffered_stream
// Return size: 0
define open_buffered_stream
open_buffered_stream_entry:
	r11 = fp
	// succ:  l40000000000B0C00
l40000000000B0C00:
open_buffered_stream_exit:


// free_buffered_stream
// Return size: 0
define free_buffered_stream
free_buffered_stream_entry:
	r11 = fp
	// succ:  l40000000000B0CC0
l40000000000B0CC0:
free_buffered_stream_exit:


// duplicate_buffered_stream
// Return size: 0
define duplicate_buffered_stream
duplicate_buffered_stream_entry:
	r11 = fp
	// succ:  l40000000000B0D80
l40000000000B0D80:
duplicate_buffered_stream_exit:


// close_buffered_stream
// Return size: 0
define close_buffered_stream
close_buffered_stream_entry:
	r11 = fp
	// succ:  l40000000000B1100
l40000000000B1100:
close_buffered_stream_exit:


// close_buffered_fd
// Return size: 0
define close_buffered_fd
close_buffered_fd_entry:
	r11 = fp
	// succ:  l40000000000B11C0
l40000000000B11C0:
close_buffered_fd_exit:


// set_buffered_stream
// Return size: 0
define set_buffered_stream
set_buffered_stream_entry:
	r11 = fp
	// succ:  l40000000000B1300
l40000000000B1300:
set_buffered_stream_exit:


// sync_buffered_stream
// Return size: 0
define sync_buffered_stream
sync_buffered_stream_entry:
	r11 = fp
	// succ:  l40000000000B1340
l40000000000B1340:
sync_buffered_stream_exit:


// save_bash_input
// Return size: 0
define save_bash_input
save_bash_input_entry:
	r11 = fp
	// succ:  l40000000000B1480
l40000000000B1480:
save_bash_input_exit:


// check_bash_input
// Return size: 0
define check_bash_input
check_bash_input_entry:
	r11 = fp
	// succ:  l40000000000B1800
l40000000000B1800:
check_bash_input_exit:


// with_input_from_buffered_stream
// Return size: 0
define with_input_from_buffered_stream
with_input_from_buffered_stream_entry:
	r11 = fp
	// succ:  l40000000000B19C0
l40000000000B19C0:
with_input_from_buffered_stream_exit:


// discard_unwind_frame
// Return size: 0
define discard_unwind_frame
discard_unwind_frame_entry:
	r11 = fp
	// succ:  l40000000000B1D80
l40000000000B1D80:
discard_unwind_frame_exit:


// run_unwind_frame
// Return size: 0
define run_unwind_frame
run_unwind_frame_entry:
	r11 = fp
	// succ:  l40000000000B1F40
l40000000000B1F40:
run_unwind_frame_exit:


// add_unwind_protect
// Return size: 0
define add_unwind_protect
add_unwind_protect_entry:
	r11 = fp
	// succ:  l40000000000B2000
l40000000000B2000:
add_unwind_protect_exit:


// begin_unwind_frame
// Return size: 0
define begin_unwind_frame
begin_unwind_frame_entry:
	r11 = fp
	// succ:  l40000000000B20C0
l40000000000B20C0:
begin_unwind_frame_exit:


// remove_unwind_protect
// Return size: 0
define remove_unwind_protect
remove_unwind_protect_entry:
	r11 = fp
	// succ:  l40000000000B2100
l40000000000B2100:
remove_unwind_protect_exit:


// run_unwind_protects
// Return size: 0
define run_unwind_protects
run_unwind_protects_entry:
	r11 = fp
	// succ:  l40000000000B21C0
l40000000000B21C0:
run_unwind_protects_exit:


// clear_unwind_protect_list
// Return size: 0
define clear_unwind_protect_list
clear_unwind_protect_list_entry:
	r11 = fp
	// succ:  l40000000000B2280
l40000000000B2280:
clear_unwind_protect_list_exit:


// have_unwind_protects
// Return size: 0
define have_unwind_protects
have_unwind_protects_entry:
	r11 = fp
	// succ:  l40000000000B2380
l40000000000B2380:
have_unwind_protects_exit:


// unwind_protect_mem
// Return size: 0
define unwind_protect_mem
unwind_protect_mem_entry:
	r11 = fp
	// succ:  l40000000000B23C0
l40000000000B23C0:
unwind_protect_mem_exit:


// unquoted_glob_pattern_p
// Return size: 0
define unquoted_glob_pattern_p
unquoted_glob_pattern_p_entry:
	r11 = fp
	// succ:  l40000000000B26C0
l40000000000B26C0:
unquoted_glob_pattern_p_exit:


// glob_char_p
// Return size: 0
define glob_char_p
glob_char_p_entry:
	r11 = fp
	// succ:  l40000000000B2A40
l40000000000B2A40:
glob_char_p_exit:


// quote_string_for_globbing
// Return size: 0
define quote_string_for_globbing
quote_string_for_globbing_entry:
	r11 = fp
	// succ:  l40000000000B2B40
l40000000000B2B40:
quote_string_for_globbing_exit:


// quote_globbing_chars
// Return size: 0
define quote_globbing_chars
quote_globbing_chars_entry:
	r11 = fp
	// succ:  l40000000000B2F00
l40000000000B2F00:
quote_globbing_chars_exit:


// should_ignore_glob_matches
// Return size: 0
define should_ignore_glob_matches
should_ignore_glob_matches_entry:
	r11 = fp
	// succ:  l40000000000B32C0
l40000000000B32C0:
should_ignore_glob_matches_exit:


// ignore_glob_matches
// Return size: 0
define ignore_glob_matches
ignore_glob_matches_entry:
	r11 = fp
	// succ:  l40000000000B3300
l40000000000B3300:
ignore_glob_matches_exit:


// shell_glob_filename
// Return size: 0
define shell_glob_filename
shell_glob_filename_entry:
	r11 = fp
	// succ:  l40000000000B3600
l40000000000B3600:
shell_glob_filename_exit:


// setup_ignore_patterns
// Return size: 0
define setup_ignore_patterns
setup_ignore_patterns_entry:
	r11 = fp
	// succ:  l40000000000B3840
l40000000000B3840:
setup_ignore_patterns_exit:


// setup_glob_ignore
// Return size: 0
define setup_glob_ignore
setup_glob_ignore_entry:
	r11 = fp
	// succ:  l40000000000B3D80
l40000000000B3D80:
setup_glob_ignore_exit:


// sigwinch_sighandler
// Return size: 0
define sigwinch_sighandler
sigwinch_sighandler_entry:
	r11 = fp
	// succ:  l40000000000B3E80
l40000000000B3E80:
sigwinch_sighandler_exit:


// initialize_terminating_signals
// Return size: 0
define initialize_terminating_signals
initialize_terminating_signals_entry:
	r11 = fp
	// succ:  l40000000000B3EC0
l40000000000B3EC0:
initialize_terminating_signals_exit:


// reset_terminating_signals
// Return size: 0
define reset_terminating_signals
reset_terminating_signals_entry:
	r11 = fp
	// succ:  l40000000000B41C0
l40000000000B41C0:
reset_terminating_signals_exit:


// top_level_cleanup
// Return size: 0
define top_level_cleanup
top_level_cleanup_entry:
	r11 = fp
	// succ:  l40000000000B4380
l40000000000B4380:
top_level_cleanup_exit:


// jump_to_top_level
// Return size: 0
define jump_to_top_level
jump_to_top_level_entry:
	r11 = fp
	// succ:  l40000000000B44C0
l40000000000B44C0:
jump_to_top_level_exit:


// throw_to_top_level
// Return size: 0
define throw_to_top_level
throw_to_top_level_entry:
	r11 = fp
	// succ:  l40000000000B4500
l40000000000B4500:
throw_to_top_level_exit:


// sigint_sighandler
// Return size: 0
define sigint_sighandler
sigint_sighandler_entry:
	r11 = fp
	// succ:  l40000000000B4A40
l40000000000B4A40:
sigint_sighandler_exit:


// set_signal_handler
// Return size: 0
define set_signal_handler
set_signal_handler_entry:
	r11 = fp
	// succ:  l40000000000B4B00
l40000000000B4B00:
set_signal_handler_exit:


// unset_sigwinch_handler
// Return size: 0
define unset_sigwinch_handler
unset_sigwinch_handler_entry:
	r11 = fp
	// succ:  l40000000000B4BC0
l40000000000B4BC0:
unset_sigwinch_handler_exit:


// set_sigwinch_handler
// Return size: 0
define set_sigwinch_handler
set_sigwinch_handler_entry:
	r11 = fp
	// succ:  l40000000000B4C00
l40000000000B4C00:
set_sigwinch_handler_exit:


// termsig_handler
// Return size: 0
define termsig_handler
termsig_handler_entry:
	r11 = fp
	// succ:  l40000000000B4C80
l40000000000B4C80:
termsig_handler_exit:


// termsig_sighandler
// Return size: 0
define termsig_sighandler
termsig_sighandler_entry:
	r11 = fp
	// succ:  l40000000000B5080
l40000000000B5080:
termsig_sighandler_exit:


// initialize_signals
// Return size: 0
define initialize_signals
initialize_signals_entry:
	r11 = fp
	// succ:  l40000000000B52C0
l40000000000B52C0:
initialize_signals_exit:


// binary_test
// Return size: 0
define binary_test
binary_test_entry:
	r11 = fp
	// succ:  l40000000000B5C00
l40000000000B5C00:
binary_test_exit:


// unary_test
// Return size: 0
define unary_test
unary_test_entry:
	r11 = fp
	// succ:  l40000000000B6400
l40000000000B6400:
unary_test_exit:


// test_binop
// Return size: 0
define test_binop
test_binop_entry:
	r11 = fp
	// succ:  l40000000000B6D00
l40000000000B6D00:
test_binop_exit:


// test_unop
// Return size: 0
define test_unop
test_unop_entry:
	r11 = fp
	// succ:  l40000000000B7300
l40000000000B7300:
test_unop_exit:


// test_command
// Return size: 0
define test_command
test_command_entry:
	r11 = fp
	// succ:  l40000000000B8540
l40000000000B8540:
test_command_exit:


// shell_version_string
// Return size: 0
define shell_version_string
shell_version_string_entry:
	r11 = fp
	// succ:  l40000000000B8C00
l40000000000B8C00:
shell_version_string_exit:


// show_shell_version
// Return size: 0
define show_shell_version
show_shell_version_entry:
	r11 = fp
	// succ:  l40000000000B8D00
l40000000000B8D00:
show_shell_version_exit:


// initialize_aliases
// Return size: 0
define initialize_aliases
initialize_aliases_entry:
	r11 = fp
	// succ:  l40000000000B91C0
l40000000000B91C0:
initialize_aliases_exit:


// find_alias
// Return size: 0
define find_alias
find_alias_entry:
	r11 = fp
	// succ:  l40000000000B9240
l40000000000B9240:
find_alias_exit:


// get_alias_value
// Return size: 0
define get_alias_value
get_alias_value_entry:
	r11 = fp
	// succ:  l40000000000B9300
l40000000000B9300:
get_alias_value_exit:


// add_alias
// Return size: 0
define add_alias
add_alias_entry:
	r11 = fp
	// succ:  l40000000000B93C0
l40000000000B93C0:
add_alias_exit:


// remove_alias
// Return size: 0
define remove_alias
remove_alias_entry:
	r11 = fp
	// succ:  l40000000000B9700
l40000000000B9700:
remove_alias_exit:


// delete_all_aliases
// Return size: 0
define delete_all_aliases
delete_all_aliases_entry:
	r11 = fp
	// succ:  l40000000000B9840
l40000000000B9840:
delete_all_aliases_exit:


// all_aliases
// Return size: 0
define all_aliases
all_aliases_entry:
	r11 = fp
	// succ:  l40000000000B9940
l40000000000B9940:
all_aliases_exit:


// alias_expand_word
// Return size: 0
define alias_expand_word
alias_expand_word_entry:
	r11 = fp
	// succ:  l40000000000B9B40
l40000000000B9B40:
alias_expand_word_exit:


// alias_expand
// Return size: 0
define alias_expand
alias_expand_entry:
	r11 = fp
	// succ:  l40000000000B9C00
l40000000000B9C00:
alias_expand_exit:


// array_walk
// Return size: 0
define array_walk
array_walk_entry:
	r11 = fp
	// succ:  l40000000000BA880
l40000000000BA880:
array_walk_exit:


// array_quote
// Return size: 0
define array_quote
array_quote_entry:
	r11 = fp
	// succ:  l40000000000BA980
l40000000000BA980:
array_quote_exit:


// array_quote_escapes
// Return size: 0
define array_quote_escapes
array_quote_escapes_entry:
	r11 = fp
	// succ:  l40000000000BAB00
l40000000000BAB00:
array_quote_escapes_exit:


// array_dequote
// Return size: 0
define array_dequote
array_dequote_entry:
	r11 = fp
	// succ:  l40000000000BAC80
l40000000000BAC80:
array_dequote_exit:


// array_dequote_escapes
// Return size: 0
define array_dequote_escapes
array_dequote_escapes_entry:
	r11 = fp
	// succ:  l40000000000BAE00
l40000000000BAE00:
array_dequote_escapes_exit:


// array_remove_quoted_nulls
// Return size: 0
define array_remove_quoted_nulls
array_remove_quoted_nulls_entry:
	r11 = fp
	// succ:  l40000000000BAF80
l40000000000BAF80:
array_remove_quoted_nulls_exit:


// array_create_element
// Return size: 0
define array_create_element
array_create_element_entry:
	r11 = fp
	// succ:  l40000000000BB0C0
l40000000000BB0C0:
array_create_element_exit:


// array_rshift
// Return size: 0
define array_rshift
array_rshift_entry:
	r11 = fp
	// succ:  l40000000000BB1C0
l40000000000BB1C0:
array_rshift_exit:


// array_shift_element
// Return size: 0
define array_shift_element
array_shift_element_entry:
	r11 = fp
	// succ:  l40000000000BB400
l40000000000BB400:
array_shift_element_exit:


// array_create
// Return size: 0
define array_create
array_create_entry:
	r11 = fp
	// succ:  l40000000000BB440
l40000000000BB440:
array_create_exit:


// array_slice
// Return size: 0
define array_slice
array_slice_entry:
	r11 = fp
	// succ:  l40000000000BB500
l40000000000BB500:
array_slice_exit:


// array_copy
// Return size: 0
define array_copy
array_copy_entry:
	r11 = fp
	// succ:  l40000000000BB680
l40000000000BB680:
array_copy_exit:


// array_dispose_element
// Return size: 0
define array_dispose_element
array_dispose_element_entry:
	r11 = fp
	// succ:  l40000000000BB800
l40000000000BB800:
array_dispose_element_exit:


// array_flush
// Return size: 0
define array_flush
array_flush_entry:
	r11 = fp
	// succ:  l40000000000BB8C0
l40000000000BB8C0:
array_flush_exit:


// array_shift
// Return size: 0
define array_shift
array_shift_entry:
	r11 = fp
	// succ:  l40000000000BBA00
l40000000000BBA00:
array_shift_exit:


// array_unshift_element
// Return size: 0
define array_unshift_element
array_unshift_element_entry:
	r11 = fp
	// succ:  l40000000000BBD00
l40000000000BBD00:
array_unshift_element_exit:


// array_dispose
// Return size: 0
define array_dispose
array_dispose_entry:
	r11 = fp
	// succ:  l40000000000BBD40
l40000000000BBD40:
array_dispose_exit:


// array_insert
// Return size: 0
define array_insert
array_insert_entry:
	r11 = fp
	// succ:  l40000000000BBE00
l40000000000BBE00:
array_insert_exit:


// array_remove
// Return size: 0
define array_remove
array_remove_entry:
	r11 = fp
	// succ:  l40000000000BC1C0
l40000000000BC1C0:
array_remove_exit:


// array_reference
// Return size: 0
define array_reference
array_reference_entry:
	r11 = fp
	// succ:  l40000000000BC380
l40000000000BC380:
array_reference_exit:


