// complete_builtin
// Return size: 0
define complete_builtin
complete_builtin_entry:
	r11 = fp
	// succ:  l400000000011CF40
l400000000011CF40:
complete_builtin_exit:


// compgen_builtin
// Return size: 0
define compgen_builtin
compgen_builtin_entry:
	r11 = fp
	// succ:  l400000000011D940
l400000000011D940:
compgen_builtin_exit:


// compopt_builtin
// Return size: 0
define compopt_builtin
compopt_builtin_entry:
	r11 = fp
	// succ:  l400000000011E280
l400000000011E280:
compopt_builtin_exit:


// glob_pattern_p
// Return size: 0
define glob_pattern_p
glob_pattern_p_entry:
	r11 = fp
	// succ:  l400000000011F840
l400000000011F840:
glob_pattern_p_exit:


// glob_vector
// Return size: 0
define glob_vector
glob_vector_entry:
	r11 = fp
	// succ:  l400000000011FA80
l400000000011FA80:
glob_vector_exit:


// glob_filename
// Return size: 0
define glob_filename
glob_filename_entry:
	r11 = fp
	// succ:  l4000000000120D80
l4000000000120D80:
glob_filename_exit:


// strmatch
// Return size: 0
define strmatch
strmatch_entry:
	r11 = fp
	// succ:  l4000000000121C40
l4000000000121C40:
strmatch_exit:


// wcsmatch
// Return size: 0
define wcsmatch
wcsmatch_entry:
	r11 = fp
	// succ:  l4000000000121D00
l4000000000121D00:
wcsmatch_exit:


// internal_strmatch
// Return size: 0
define internal_strmatch
internal_strmatch_entry:
	r11 = fp
	// succ:  l4000000000127100
l4000000000127100:
internal_strmatch_exit:


// internal_wstrmatch
// Return size: 0
define internal_wstrmatch
internal_wstrmatch_entry:
	r11 = fp
	// succ:  l40000000001271C0
l40000000001271C0:
internal_wstrmatch_exit:


// xstrmatch
// Return size: 0
define xstrmatch
xstrmatch_entry:
	r11 = fp
	// succ:  l40000000001272C0
l40000000001272C0:
xstrmatch_exit:


// xmbsrtowcs
// Return size: 0
define xmbsrtowcs
xmbsrtowcs_entry:
	r11 = fp
	// succ:  l4000000000127500
l4000000000127500:
xmbsrtowcs_exit:


// xdupmbstowcs
// Return size: 0
define xdupmbstowcs
xdupmbstowcs_entry:
	r11 = fp
	// succ:  l40000000001278C0
l40000000001278C0:
xdupmbstowcs_exit:


// match_pattern_wchar
// Return size: 0
define match_pattern_wchar
match_pattern_wchar_entry:
	r11 = fp
	// succ:  l4000000000128180
l4000000000128180:
match_pattern_wchar_exit:


// wmatchlen
// Return size: 0
define wmatchlen
wmatchlen_entry:
	r11 = fp
	// succ:  l4000000000128300
l4000000000128300:
wmatchlen_exit:


// match_pattern_char
// Return size: 0
define match_pattern_char
match_pattern_char_entry:
	r11 = fp
	// succ:  l4000000000128800
l4000000000128800:
match_pattern_char_exit:


// umatchlen
// Return size: 0
define umatchlen
umatchlen_entry:
	r11 = fp
	// succ:  l40000000001289C0
l40000000001289C0:
umatchlen_exit:


// getenv
// Return size: 0
define getenv
getenv_entry:
	r11 = fp
	// succ:  l4000000000129000
l4000000000129000:
getenv_exit:


// _getenv
// Return size: 0
define _getenv
_getenv_entry:
	r11 = fp
	// succ:  l4000000000129380
l4000000000129380:
_getenv_exit:


// putenv
// Return size: 0
define putenv
putenv_entry:
	r11 = fp
	// succ:  l40000000001293C0
l40000000001293C0:
putenv_exit:


// setenv
// Return size: 0
define setenv
setenv_entry:
	r11 = fp
	// succ:  l4000000000129580
l4000000000129580:
setenv_exit:


// unsetenv
// Return size: 0
define unsetenv
unsetenv_entry:
	r11 = fp
	// succ:  l4000000000129780
l4000000000129780:
unsetenv_exit:


// getmaxgroups
// Return size: 0
define getmaxgroups
getmaxgroups_entry:
	r11 = fp
	// succ:  l4000000000129880
l4000000000129880:
getmaxgroups_exit:


// getmaxchild
// Return size: 0
define getmaxchild
getmaxchild_entry:
	r11 = fp
	// succ:  l4000000000129940
l4000000000129940:
getmaxchild_exit:


// sh_setlinebuf
// Return size: 0
define sh_setlinebuf
sh_setlinebuf_entry:
	r11 = fp
	// succ:  l40000000001299C0
l40000000001299C0:
sh_setlinebuf_exit:


// inttostr
// Return size: 0
define inttostr
inttostr_entry:
	r11 = fp
	// succ:  l4000000000129A40
l4000000000129A40:
inttostr_exit:


// itos
// Return size: 0
define itos
itos_entry:
	r11 = fp
	// succ:  l4000000000129AC0
l4000000000129AC0:
itos_exit:


// uinttostr
// Return size: 0
define uinttostr
uinttostr_entry:
	r11 = fp
	// succ:  l4000000000129B80
l4000000000129B80:
uinttostr_exit:


// uitos
// Return size: 0
define uitos
uitos_entry:
	r11 = fp
	// succ:  l4000000000129C00
l4000000000129C00:
uitos_exit:


// zread
// Return size: 0
define zread
zread_entry:
	r11 = fp
	// succ:  l4000000000129CC0
l4000000000129CC0:
zread_exit:


// zreadretry
// Return size: 0
define zreadretry
zreadretry_entry:
	r11 = fp
	// succ:  l4000000000129D80
l4000000000129D80:
zreadretry_exit:


// zreadintr
// Return size: 0
define zreadintr
zreadintr_entry:
	r11 = fp
	// succ:  l4000000000129E40
l4000000000129E40:
zreadintr_exit:


// zreadcn
// Return size: 0
define zreadcn
zreadcn_entry:
	r11 = fp
	// succ:  l4000000000129EC0
l4000000000129EC0:
zreadcn_exit:


// zreadc
// Return size: 0
define zreadc
zreadc_entry:
	r11 = fp
	// succ:  l400000000012A040
l400000000012A040:
zreadc_exit:


// zreadcintr
// Return size: 0
define zreadcintr
zreadcintr_entry:
	r11 = fp
	// succ:  l400000000012A080
l400000000012A080:
zreadcintr_exit:


// zreset
// Return size: 0
define zreset
zreset_entry:
	r11 = fp
	// succ:  l400000000012A1C0
l400000000012A1C0:
zreset_exit:


// zsyncfd
// Return size: 0
define zsyncfd
zsyncfd_entry:
	r11 = fp
	// succ:  l400000000012A200
l400000000012A200:
zsyncfd_exit:


// ttgetattr
// Return size: 0
define ttgetattr
ttgetattr_entry:
	r11 = fp
	// succ:  l400000000012A2C0
l400000000012A2C0:
ttgetattr_exit:


// ttsetattr
// Return size: 0
define ttsetattr
ttsetattr_entry:
	r11 = fp
	// succ:  l400000000012A340
l400000000012A340:
ttsetattr_exit:


// ttsave
// Return size: 0
define ttsave
ttsave_entry:
	r11 = fp
	// succ:  l400000000012A3C0
l400000000012A3C0:
ttsave_exit:


// ttrestore
// Return size: 0
define ttrestore
ttrestore_entry:
	r11 = fp
	// succ:  l400000000012A480
l400000000012A480:
ttrestore_exit:


// ttattr
// Return size: 0
define ttattr
ttattr_entry:
	r11 = fp
	// succ:  l400000000012A540
l400000000012A540:
ttattr_exit:


// tt_setonechar
// Return size: 0
define tt_setonechar
tt_setonechar_entry:
	r11 = fp
	// succ:  l400000000012A5C0
l400000000012A5C0:
tt_setonechar_exit:


// ttfd_onechar
// Return size: 0
define ttfd_onechar
ttfd_onechar_entry:
	r11 = fp
	// succ:  l400000000012A680
l400000000012A680:
ttfd_onechar_exit:


// ttonechar
// Return size: 0
define ttonechar
ttonechar_entry:
	r11 = fp
	// succ:  l400000000012A740
l400000000012A740:
ttonechar_exit:


// tt_setnoecho
// Return size: 0
define tt_setnoecho
tt_setnoecho_entry:
	r11 = fp
	// succ:  l400000000012A800
l400000000012A800:
tt_setnoecho_exit:


// ttfd_noecho
// Return size: 0
define ttfd_noecho
ttfd_noecho_entry:
	r11 = fp
	// succ:  l400000000012A840
l400000000012A840:
ttfd_noecho_exit:


// ttnoecho
// Return size: 0
define ttnoecho
ttnoecho_entry:
	r11 = fp
	// succ:  l400000000012A880
l400000000012A880:
ttnoecho_exit:


// tt_seteightbit
// Return size: 0
define tt_seteightbit
tt_seteightbit_entry:
	r11 = fp
	// succ:  l400000000012A940
l400000000012A940:
tt_seteightbit_exit:


// ttfd_eightbit
// Return size: 0
define ttfd_eightbit
ttfd_eightbit_entry:
	r11 = fp
	// succ:  l400000000012A9C0
l400000000012A9C0:
ttfd_eightbit_exit:


// tteightbit
// Return size: 0
define tteightbit
tteightbit_entry:
	r11 = fp
	// succ:  l400000000012AA40
l400000000012AA40:
tteightbit_exit:


// tt_setnocanon
// Return size: 0
define tt_setnocanon
tt_setnocanon_entry:
	r11 = fp
	// succ:  l400000000012AB00
l400000000012AB00:
tt_setnocanon_exit:


// ttfd_nocanon
// Return size: 0
define ttfd_nocanon
ttfd_nocanon_entry:
	r11 = fp
	// succ:  l400000000012AB40
l400000000012AB40:
ttfd_nocanon_exit:


// ttnocanon
// Return size: 0
define ttnocanon
ttnocanon_entry:
	r11 = fp
	// succ:  l400000000012AB80
l400000000012AB80:
ttnocanon_exit:


// tt_setcbreak
// Return size: 0
define tt_setcbreak
tt_setcbreak_entry:
	r11 = fp
	// succ:  l400000000012AC40
l400000000012AC40:
tt_setcbreak_exit:


// ttfd_cbreak
// Return size: 0
define ttfd_cbreak
ttfd_cbreak_entry:
	r11 = fp
	// succ:  l400000000012ACC0
l400000000012ACC0:
ttfd_cbreak_exit:


// ttcbreak
// Return size: 0
define ttcbreak
ttcbreak_entry:
	r11 = fp
	// succ:  l400000000012AD80
l400000000012AD80:
ttcbreak_exit:


// sh_regmatch
// Return size: 0
define sh_regmatch
sh_regmatch_entry:
	r11 = fp
	// succ:  l400000000012AE40
l400000000012AE40:
sh_regmatch_exit:


// sh_stat
// Return size: 0
define sh_stat
sh_stat_entry:
	r11 = fp
	// succ:  l400000000012B200
l400000000012B200:
sh_stat_exit:


// sh_eaccess
// Return size: 0
define sh_eaccess
sh_eaccess_entry:
	r11 = fp
	// succ:  l400000000012B440
l400000000012B440:
sh_eaccess_exit:


// isnetconn
// Return size: 0
define isnetconn
isnetconn_entry:
	r11 = fp
	// succ:  l400000000012B8C0
l400000000012B8C0:
isnetconn_exit:


// netopen
// Return size: 0
define netopen
netopen_entry:
	r11 = fp
	// succ:  l400000000012B9C0
l400000000012B9C0:
netopen_exit:


// difftimeval
// Return size: 0
define difftimeval
difftimeval_entry:
	r11 = fp
	// succ:  l400000000012BF80
l400000000012BF80:
difftimeval_exit:


// addtimeval
// Return size: 0
define addtimeval
addtimeval_entry:
	r11 = fp
	// succ:  l400000000012C000
l400000000012C000:
addtimeval_exit:


// timeval_to_cpu
// Return size: 0
define timeval_to_cpu
timeval_to_cpu_entry:
	r11 = fp
	// succ:  l400000000012C080
l400000000012C080:
timeval_to_cpu_exit:


