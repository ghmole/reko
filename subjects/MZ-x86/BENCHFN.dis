void __exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_0121_exit:
fn0800_0121_entry:
l0800_0121:
	selector ds_5 = Mem0[0x0800:0x01F8:selector]
	__restorezero(ds_5)
	word16 sp_9
	call SEQ(0x0800, Mem0[ds_5:0x05DC:word16]) (retsize: 2;)
		defs: sp:sp_9
	byte al_21 = 0x00
	byte ah_27 = 0x00
	word16 si_18 = 0x0000
	word16 cx_19 = 0x002F
l0800_0137:
	al_21 = al_21 + Mem0[ds_5:si_18:byte]
	ah_27 = ah_27 + (al_21 <u 0x00)
	si_18 = si_18 + 0x0001
	cx_19 = cx_19 - 0x0001
	word16 ax_35 = SEQ(ah_27, al_21)
	branch cx_19 != 0x0000 l0800_0137
l0800_013F:
	branch ax_35 == 0x0D37 l0800_014F
l0800_0145:
	fn0800_01DA(SEQ(ds_5, 0x002F), 0x0019)
l0800_014F:
	msdos_terminate(Mem0[ss:sp_9 + 0x0002:byte])


void fn0800_0162(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15]
// LiveOut:
// Trashed: ax bx dx es Top
// Preserved: ds sp
fn0800_0162_entry:
l0800_0162:
	word32 es_bx_10 = msdos_get_interrupt_vector(0x00)
	Mem12[ds:0x0074:word16] = SLICE(es_bx_10, word16, 0)
	Mem14[ds:0x0076:word16] = SLICE(es_bx_10, selector, 16)
	word32 es_bx_17 = msdos_get_interrupt_vector(0x04)
	Mem19[ds:0x0078:word16] = SLICE(es_bx_17, word16, 0)
	Mem21[ds:0x007A:word16] = SLICE(es_bx_17, selector, 16)
	word32 es_bx_24 = msdos_get_interrupt_vector(0x05)
	Mem26[ds:0x007C:word16] = SLICE(es_bx_24, word16, 0)
	Mem28[ds:0x007E:word16] = SLICE(es_bx_24, selector, 16)
	word32 es_bx_31 = msdos_get_interrupt_vector(0x06)
	Mem33[ds:0x0080:word16] = SLICE(es_bx_31, word16, 0)
	Mem35[ds:0x0082:word16] = SLICE(es_bx_31, selector, 16)
	msdos_set_interrupt_vector(0x00, SEQ(cs, 0x0158))
	return
fn0800_0162_exit:


void __restorezero(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: ax dx Top
// Preserved: ds sp
fn0800_01A5_entry:
l0800_01A5:
	msdos_set_interrupt_vector(0x00, Mem7[ds:0x0074:segptr32])
	msdos_set_interrupt_vector(0x04, Mem16[ds:0x0078:segptr32])
	msdos_set_interrupt_vector(0x05, Mem25[ds:0x007C:segptr32])
	msdos_set_interrupt_vector(0x06, Mem34[ds:0x0080:segptr32])
	return
fn0800_01A5_exit:


void fn0800_01DA(char * ds_dx, word16 cx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] Sequence ds:dx:[0..31]
// LiveOut:
// Trashed: C ax bx Top
// Preserved: sp
fn0800_01DA_entry:
l0800_01DA:
	word16 ax_10
	msdos_write_file(0x0002, cx, ds_dx, out ax_10)
	return
fn0800_01DA_exit:


void _abort()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_01E2_exit:
fn0800_01E2_entry:
l0800_01E2:
	fn0800_01DA(SEQ(Mem0[0x0800:0x01F8:selector], 0x0056), 0x001E)
	__exit()


void fn0800_01E9(word16 cx, word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cx:[0..15] dx:[0..15] ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_01E9_exit:
fn0800_01E9_entry:
l0800_01E9:
	fn0800_01DA(SEQ(Mem0[0x0800:0x01F8:selector], dx), cx)
	__exit()


void _f3()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f3_entry:
l0800_01FA:
	return
_f3_exit:


void _f2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f2_entry:
l0800_01FF:
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	_f3()
	return
_f2_exit:


void fn0800_0222()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
fn0800_0222_entry:
l0800_0222:
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	_f2()
	return
fn0800_0222_exit:


void _f0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: bp sp
_f0_entry:
l0800_0245:
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	return
_f0_exit:


void _main(word16 cx, word16 dx, word16 bx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] es:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved:
_main_entry:
l0800_0265:
	word16 bp_36
	word16 bx_37
	word16 dx_40 = _scanf(_printf(cx, dx, bx, ds, 0x0194), es, ds, 0x01B0, out bx_37, out bp_36)
	word16 sp_43 = <invalid>
	word16 cx_52 = Mem33[ss:sp_43 + 2:word16]
	Mem56[ss:sp_43 + 2:word16] = Mem33[ss:bp_36 - 0x0002:word16]
	Mem59[ss:sp_43:word16] = Mem56[ss:bp_36 - 0x0004:word16]
	Mem62[ss:sp_43 - 2:word16] = 0x01B4
	_printf(cx_52, dx_40, bx_37, ds, Mem62[ss:sp_43 - 2:word16])
	Mem73[ss:bp_36 - 0x0006:word16] = 0x0000
	Mem74[ss:bp_36 - 0x0008:word16] = 0x0001
l0800_02A7:
	word16 dx_78 = Mem77[ss:bp_36 - 0x0006:word16]
	word16 ax_79 = Mem77[ss:bp_36 - 0x0008:word16]
	branch dx_78 < Mem77[ss:bp_36 - 0x0002:word16] l0800_029C
l0800_02B2:
	branch dx_78 > Mem77[ss:bp_36 - 0x0002:word16] l0800_02B9
l0800_02B4:
	branch ax_79 <=u Mem77[ss:bp_36 - 0x0004:word16] l0800_029C
l0800_029C:
	_f0()
	word16 v14_88 = Mem77[ss:bp_36 - 0x0008:word16] + 0x0001
	Mem89[ss:bp_36 - 0x0008:word16] = v14_88
	Mem93[ss:bp_36 - 0x0006:word16] = Mem89[ss:bp_36 - 0x0006:word16] + (v14_88 <u 0x0000)
l0800_02B9:
	Mem101[ss:sp_43 + 0x0002:word16] = 0x01CE
	_printf(cx_52, dx_78, bx_37, ds, Mem101[ss:sp_43 + 0x0002:word16])
	return
_main_exit:


word16 __IOERROR(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: bp si sp
fn0800_02C5_entry:
l0800_02C5:
	word16 si_17
	word16 si_13 = wArg02
	branch wArg02 < 0x0000 l0800_02E4
l0800_02E4:
	si_17 = -wArg02
	branch si_17 >u 0x0023 l0800_02D5
l0800_02EB:
	Mem21[ds:0x01D8:word16] = 0xFFFF
l0800_02D0:
	branch wArg02 <=u 0x0058 l0800_02D8
l0800_02D5:
	si_13 = 0x0057
l0800_02D8:
	Mem28[ds:0x01D8:word16] = si_13
	si_17 = (int16) Mem28[ds:si_13 + 0x01DA:byte]
l0800_02F1:
	Mem37[ds:0x0094:word16] = si_17
l0800_02FB:
	return 0xFFFF
fn0800_02C5_exit:


void _exit(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0800_0301_exit:
fn0800_0301_entry:
l0800_0301:
l0800_0310:
	word16 ax_11 = Mem10[ds:0x023E:word16]
	Mem13[ds:0x023E:word16] = Mem10[ds:0x023E:word16] - 0x0001
	branch ax_11 != 0x0000 l0800_0306
l0800_0306:
	word16 bx_18 = Mem13[ds:0x023E:word16]
	call SEQ(0x0800, Mem13[ds:(bx_18 << 0x0001) + 0x05E8:word16]) (retsize: 2;)
		uses: bx:bx_18 << 0x0001,Stack +0004:wArg02
l0800_031B:
	call SEQ(0x0800, Mem13[ds:0x0234:word16]) (retsize: 2;)
		uses: Stack +0004:wArg02
	call SEQ(0x0800, Mem13[ds:0x0236:word16]) (retsize: 2;)
		uses: Stack +0004:wArg02
	word16 sp_43
	call SEQ(0x0800, Mem13[ds:0x0238:word16]) (retsize: 2;)
		uses: Stack +0004:wArg02
		defs: sp:sp_43
	Mem51[ss:sp_43 - 2:word16] = wArg02
	__exit()


void __setargv(selector ds, word16 wArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0000:[0..15]
// LiveOut:
// Trashed: SCZDO ax bp bx cx di ds dx es si Top
// Preserved: sp
fn0800_0336_entry:
l0800_0336:
	selector es_30
	Mem6[0x0800:0x0330:word16] = wArg00
	Mem9[0x0800:0x0332:word16] = ds
	word16 si_25 = Mem9[ds:0x008A:word16]
	selector es_11 = Mem9[ds:0x0090:selector]
	word16 ax_16 = (uint16) (uint8) Mem9[ds:0x0080:byte]
	word16 si_213 = si_25 + 0x0002
	word16 cx_27 = 0x0001
	es_30 = es_11
	branch Mem9[ds:0x0092:byte] <u 0x03 l0800_0374
l0800_0363:
	es_30 = Mem9[ds:0x008C:selector]
	word16 di_31 = si_25 + 0x0002
	word16 cx_221 = 0x007F
l0800_036D:
	branch cx_221 == 0x0000 l0800_036F
l0800_036D_1:
	di_31 = di_297 + 0x0001
	cx_221 = cx_221 - 0x0001
	di_297 = di_31
	branch Mem9[es_30:di_297:byte] == 0x00 l0800_036D
l0800_036F:
	byte cl_46 = SLICE(cx_221, byte, 0)
	byte ch_60 = SLICE(cx_221, byte, 8)
	branch cx_221 == 0x0000 l0800_03E7
l0800_0371:
	cx_27 = SEQ(ch_60, cl_46 ^ 0x7F) (alias)
l0800_0374:
	word16 di_65 = fp - ((ax_16 + 0x0002) + cx_27 & 0xFFFE)
	branch di_65 <u 0x0000 l0800_03E7
l0800_0387:
	Mem79[ss:di_65 - 2:word16] = cx_27
	word16 cx_219 = cx_27 - 0x0001
	di_218 = di_65
l0800_0393:
	word16 di_218
	branch cx_219 == 0x0000 l0800_0395
l0800_0395:
	Mem87[ss:di_218:byte] = 0x00
	word16 di_88 = di_218 + 0x0001
	word16 si_103 = 0x0081
	word16 cx_109 = ax_16 + 0x0001
	word16 ax_108 = cx_219
	word16 bx_100 = cx_219 + 0x0001
l0800_03A3:
	word16 ax_110
	fn0800_03BF(SEQ(es_11, si_103), SEQ(ss, di_88), ax_108, cx_109, out ax_110, out cx_109, out si_103)
	bool Z_115 = <invalid>
	bool C_114 = <invalid>
	branch Z_115 | C_114 l0800_03AF
l0800_03A8:
	branch C_114 l0800_03EA
l0800_03EA:
	word16 cx_125 = Mem87[ss:di_65 - 2:word16] + cx_219
	selector ds_126 = Mem87[0x0800:0x0332:selector]
	Mem128[ds_126:0x0084:word16] = bx_100
	word16 bx_130 = (bx_100 + 0x0001) * 0x0002
	word16 si_131 = di_65
	word16 bp_133 = di_65 - bx_130
	branch bp_133 <u 0x0000 l0800_03E7
l0800_03E7:
l0800_03E7_thunk__abort:
	_abort()
l0800_0401:
	Mem138[ds_126:0x0086:word16] = bp_133
l0800_0407:
	branch cx_125 == 0x0000 l0800_0417
l0800_0409:
	Mem143[ss:bp_133:word16] = si_131
	bp_133 = bp_133 + 0x0002
l0800_040F:
	byte al_149 = Mem143[ds_126:si_131:byte]
	si_131 = si_131 + 0x0001
	cx_125 = cx_125 - 0x0001
	branch al_149 != 0x00 && cx_125 != 0x0000 l0800_040F
l0800_0415:
	branch al_149 == 0x00 l0800_0407
l0800_0417:
	Mem164[ss:bp_133:word16] = 0x0000
	call Mem164[0x0800:0x0330:word16] (retsize: 2;)
		uses: ax:0x0000,bx:bx_130,Stack +0002:wArg00
	return
fn0800_0336_exit:
l0800_03AA:
	fn0800_03BF(SEQ(es_11, si_103), SEQ(ss, di_88), ax_110, cx_109, out ax_110, out cx_109, out si_103)
	bool Z_197 = <invalid>
	C_114 = <invalid>
	branch Z_197 | C_114 l0800_03A8
l0800_03AF:
	byte ah_236 = SLICE(ax_110, byte, 8)
	byte al_200 = SLICE(ax_110, byte, 0)
	branch al_200 == 0x20 l0800_03BB
l0800_03B3:
	branch al_200 == 0x0D l0800_03BB
l0800_03B7:
	ax_108 = ax_110 (alias)
	branch al_200 != 0x09 l0800_03A3
l0800_03BB:
	ax_108 = SEQ(ah_236, 0x00) (alias)
l0800_0393_1:
	Mem216[ss:di_218:byte] = Mem214[es_30:si_213:byte]
	si_213 = si_213 + 0x0001
	di_218 = di_218 + 0x0001
	cx_219 = cx_219 - 0x0001


byte fn0800_03BF(word32 ds_si, word32 es_di, word16 ax, word16 cx, ptr16 & axOut, ptr16 & cxOut, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] cx:[0..15] Sequence ds:si:[0..31] Sequence es:di:[0..31]
// LiveOut: CZ ax cx si
// Trashed: SCZO ax cx si Top
// Preserved: bx di dx sp
fn0800_03BF_entry:
	word16 si = SLICE(ds_si, word16, 0)
l0800_03BF:
	byte al_11 = SLICE(ax, byte, 0)
	branch ax == 0x0000 l0800_03CA
l0800_03C3:
	Mem14[es_di:byte] = al_11
	branch al_11 != 0x00 l0800_03CA
l0800_03C9:
l0800_03CA:
	word16 ax_59 = SEQ(al_11, 0x00)
	branch cx == 0x0000 l0800_03E6
l0800_03D1:
	byte al_40 = Mem38[ds_si:byte]
	si = si + 0x0001
	cx = cx - 0x0001
	ax_59 = SEQ(al_11, al_40 - 0x22) (alias)
	branch al_40 == 0x22 l0800_03E6
l0800_03D7:
	ax_59 = SEQ(al_11, al_40) (alias)
	branch al_40 != 0x5C l0800_03E4
l0800_03DD:
	branch Mem38[ds_si + 0x0001:byte] != 0x22 l0800_03E4
l0800_03E2:
	si = si + 0x0002
	cx = cx - 0x0002
	ax_59 = SEQ(al_11, Mem38[ds_si + 0x0001:byte]) (alias)
l0800_03E4:
l0800_03E6:
	axOut = ax_59
	cxOut = cx
	siOut = si
	return <invalid>
fn0800_03BF_exit:


void __setenvp(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDO ax bx cx di dx es si Top
// Preserved: ds sp
fn0800_0421_entry:
l0800_0421:
	word16 cx_6 = Mem0[ds:0x008A:word16]
	word16 ax_10 = _malloc(ds, cx_6)
	word16 cx_110 = cx_6
	word16 di_106 = ax_10
	branch ax_10 == 0x0000 l0800_0454
l0800_0430:
	selector ds_31 = Mem28[ds:0x008C:selector]
	word16 si_104 = 0x0000
l0800_043A:
	branch cx_110 == 0x0000 l0800_043C
l0800_043C:
	word16 ax_50 = _malloc(ds, Mem46[ds:0x008E:word16])
	Mem62[ds:0x0088:word16] = ax_50
	word16 di_142 = ax_10
	word16 bx_59 = ax_50
	branch ax_50 != 0x0000 l0800_0457
l0800_0457:
	word16 cx_111 = 0xFFFF
l0800_045C:
	Mem74[ds:bx_59:word16] = di_142
	bx_59 = bx_59 + 0x0002
l0800_0461:
	branch cx_111 == 0x0000 l0800_0463
l0800_0461_1:
	di_142 = di_142 + 0x0001
	cx_111 = cx_111 - 0x0001
	branch Mem74[ds:di_142:byte] == 0x00 l0800_0461
l0800_0463:
	branch Mem74[ds:di_142:byte] != 0x00 l0800_045C
l0800_0468:
	Mem101[ds:bx_59:word16] = 0x0000
	return
fn0800_0421_exit:
l0800_0454:
l0800_0454_thunk__abort:
	_abort()
l0800_043A_1:
	Mem107[ds:di_106:byte] = Mem39[ds_31:si_104:byte]
	si_104 = si_104 + 0x0001
	di_106 = di_106 + 0x0001
	cx_110 = cx_110 - 0x0001


void ___pull_free_block(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
fn0800_0491_entry:
l0800_0491:
	word16 ax_17 = Mem14[ds:wArg02 + 0x0006:word16]
	Mem18[ds:0x062A:word16] = ax_17
	branch ax_17 != wArg02 l0800_04AB
l0800_04AB:
	word16 si_21 = Mem18[ds:wArg02 + 0x0004:word16]
	Mem23[ds:Mem18[ds:0x062A:word16] + 0x0004:word16] = si_21
	Mem25[ds:si_21 + 0x0006:word16] = Mem23[ds:0x062A:word16]
l0800_04A3:
	Mem26[ds:0x062A:word16] = 0x0000
l0800_04BB:
	return
fn0800_0491_exit:


word16 fn0800_04BF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: bp di si sp
fn0800_04BF_entry:
l0800_04BF:
	Mem19[ds:wArg02:word16] = Mem14[ds:wArg02:word16] - wArg04
	word16 si_21 = Mem19[ds:wArg02:word16] + wArg02
	Mem24[ds:si_21:word16] = wArg04 + 0x0001
	Mem25[ds:si_21 + 0x0002:word16] = wArg02
	branch Mem25[ds:0x0628:word16] != wArg02 l0800_04E6
l0800_04E6:
	Mem32[ds:si_21 + wArg04 + 0x0002:word16] = si_21
l0800_04E0:
	Mem33[ds:0x0628:word16] = si_21
l0800_04EE:
l0800_04F5:
	return si_21 + 0x0004
fn0800_04BF_exit:


word16 fn0800_04F9(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx dx Top
// Preserved: bp si sp
fn0800_04F9_entry:
l0800_04F9:
	word16 ax_43
	word16 ax_23 = ___sbrk(ds, wArg02 & 0xFFFF, 0x0000)
	branch ax_23 != 0xFFFF l0800_051B
l0800_051B:
	Mem37[ds:ax_23 + 0x0002:word16] = Mem21[ds:0x0628:word16]
	Mem40[ds:ax_23:word16] = wArg02 + 0x0001
	Mem41[ds:0x0628:word16] = ax_23
	ax_43 = Mem41[ds:0x0628:word16] + 0x0004
l0800_0517:
	ax_43 = 0x0000
l0800_0533:
	return ax_43
fn0800_04F9_exit:


word16 fn0800_0536(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx dx Top
// Preserved: bp si sp
fn0800_0536_entry:
l0800_0536:
	word16 ax_42
	word16 ax_23 = ___sbrk(ds, wArg02 & 0xFFFF, 0x0000)
	branch ax_23 != 0xFFFF l0800_0558
l0800_0558:
	Mem36[ds:0x062C:word16] = ax_23
	Mem37[ds:0x0628:word16] = ax_23
	Mem40[ds:ax_23:word16] = wArg02 + 0x0001
	ax_42 = ax_23 + 0x0004
l0800_0554:
	ax_42 = 0x0000
l0800_056D:
	return ax_42
fn0800_0536_exit:


word16 _malloc(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0570_entry:
l0800_0570:
	word16 ax_106
	branch wArg02 == 0x0000 l0800_0581
l0800_057C:
	branch wArg02 <=u 0xFFF4 l0800_0585
l0800_0585:
	word16 ax_24 = wArg02 + 0x000B & 0xFFF8
	branch Mem14[ds:0x062C:word16] != 0x0000 l0800_059D
l0800_059D:
	word16 si_29 = Mem14[ds:0x062A:word16]
	branch si_29 == 0x0000 l0800_05D8
l0800_05A7:
	branch Mem14[ds:si_29:word16] <u ax_24 + 0x0028 l0800_05BB
l0800_05BB:
	branch Mem14[ds:si_29:word16] <u ax_24 l0800_05CF
l0800_05CF:
	si_29 = Mem14[ds:si_29 + 0x0006:word16]
	branch si_29 != Mem14[ds:0x062A:word16] l0800_05A7
l0800_05D8:
	ax_106 = fn0800_04F9(ds, ax_24)
l0800_05C1:
	___pull_free_block(ds, si_29)
	Mem78[ds:si_29:word16] = Mem68[ds:si_29:word16] + 0x0001
	ax_106 = si_29 + 0x0004
l0800_05B2:
	ax_106 = fn0800_04BF(ds, si_29, ax_24)
l0800_0596:
	ax_106 = fn0800_0536(ds, ax_24)
l0800_0581:
	ax_106 = 0x0000
l0800_05DF:
	return ax_106
fn0800_0570_exit:


void ___brk(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax dx Top
// Preserved: bp sp
fn0800_05E3_entry:
l0800_05E3:
	branch wArg02 >=u fp - 0x0102 l0800_05FA
l0800_05FA:
	Mem15[ds:0x0094:word16] = 0x0008
l0800_05F3:
	Mem17[ds:0x009E:word16] = wArg02
l0800_0605:
	return
fn0800_05E3_exit:


word16 ___sbrk(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: ax
// Trashed: SCZO ax cx Top
// Preserved: bp sp
fn0800_0607_entry:
l0800_0607:
	word16 ax_29
	word16 ax_12 = wArg02 + Mem7[ds:0x009E:word16]
	branch wArg04 + (ax_12 <u 0x0000) + (ax_12 <u 0x0100) != 0x0000 l0800_062E
l0800_0624:
	branch ax_12 + 0x0100 >=u fp - 2 l0800_062E
l0800_062E:
	Mem28[ds:0x0094:word16] = 0x0008
	ax_29 = 0xFFFF
l0800_0628:
	word16 v13_30 = Mem7[ds:0x009E:word16]
	Mem31[ds:0x009E:word16] = ax_12
	ax_29 = v13_30
l0800_0639:
	return ax_29
fn0800_0607_exit:


void _brk(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: bp sp
fn0800_063B_entry:
l0800_063B:
	___brk(ds, wArg02)
l0800_0647:
	return
fn0800_063B_exit:


word16 fn0800_065B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
fn0800_065B_entry:
l0800_065B:
	word16 ax_46
	word16 si_18 = Mem15[ds:wArg02:word16]
	word16 wLoc04_63 = si_18
	branch (Mem20[ds:wArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_067B
l0800_067B:
	word16 di_26 = Mem20[ds:wArg02 + 0x000A:word16]
l0800_068E:
	si_18 = si_18 - 0x0001
	branch si_18 != 0x0000 l0800_0683
l0800_0683:
	di_26 = di_85 + 0x0001
	di_85 = di_26
	branch Mem38[ds:di_85:byte] != 0x0A l0800_068E
l0800_068B:
	wLoc04_63 = wLoc04_63 + 0x0001
l0800_0695:
	ax_46 = wLoc04_63
l0800_0677:
	ax_46 = si_18
l0800_069A:
	return ax_46
fn0800_065B_exit:


void _fseek(selector ds, word16 wArg02, ui32 dwArg04, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_06A2_entry:
l0800_06A2:
	branch _fflush(ds, wArg02) == 0x0000 l0800_06B7
l0800_06B7:
	branch wArg08 != 0x0001 l0800_06CD
l0800_06BD:
	branch Mem14[ds:wArg02:word16] <= 0x0000 l0800_06CD
l0800_06C2:
	dwArg04 = dwArg04 - (int32) fn0800_065B(ds, wArg02) (alias)
l0800_06CD:
	Mem57[ds:wArg02 + 0x0002:word16] = Mem55[ds:wArg02 + 0x0002:word16] & 0xFE5F
	Mem60[ds:wArg02:word16] = 0x0000
	Mem62[ds:wArg02 + 0x000A:word16] = Mem60[ds:wArg02 + 0x0008:word16]
	word16 dx_82
	word16 ax_79 = _lseek(ds, (int16) Mem74[ds:wArg02 + 0x0004:byte], dwArg04, SLICE(wArg08, byte, 0), out dx_82)
	branch dx_82 != 0xFFFF l0800_06FF
l0800_06F5:
	branch ax_79 != 0xFFFF l0800_06FF
l0800_06FF:
l0800_06FA:
l0800_0701:
l0800_06B2:
l0800_0703:
	return
fn0800_06A2_exit:


void fn0800_075B(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: di si sp
fn0800_075B_entry:
l0800_075B:
	word16 di_11 = 0x0014
	word16 si_12 = 0x0342
l0800_0778:
	di_11 = di_11 - 0x0001
	branch di_11 != 0x0000 l0800_0765
l0800_0765:
	branch (Mem22[ds:si_12 + 0x0002:word16] & 0x0300) != 0x0300 l0800_0775
l0800_0770:
	_fflush(ds, si_12)
l0800_0775:
	si_12 = si_12 + 0x0010
l0800_077F:
	return
fn0800_075B_exit:


word16 fn0800_0782(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp si sp
fn0800_0782_entry:
l0800_0782:
	branch (Mem11[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_0793
l0800_0790:
	fn0800_075B(ds)
l0800_0793:
	word16 ax_69
	word16 v10_28 = Mem11[ds:wArg02 + 0x0006:word16]
	word16 ax_33 = Mem32[ds:wArg02 + 0x0008:word16]
	Mem34[ds:wArg02 + 0x000A:word16] = ax_33
	word16 ax_41 = _read(ds, (int16) Mem36[ds:wArg02 + 0x0004:byte], ax_33, v10_28)
	Mem52[ds:wArg02:word16] = ax_41
	branch ax_41 <= 0x0000 l0800_07B9
l0800_07B9:
	branch Mem52[ds:wArg02:word16] != 0x0000 l0800_07CC
l0800_07CC:
	Mem58[ds:wArg02:word16] = 0x0000
	Mem60[ds:wArg02 + 0x0002:word16] = Mem58[ds:wArg02 + 0x0002:word16] | 0x0010
l0800_07BE:
	Mem68[ds:wArg02 + 0x0002:word16] = Mem52[ds:wArg02 + 0x0002:word16] & 0xFE7F | 0x0020
l0800_07D5:
	ax_69 = 0xFFFF
l0800_07AE:
	Mem71[ds:wArg02 + 0x0002:word16] = Mem52[ds:wArg02 + 0x0002:word16] & 0xFFDF
	ax_69 = 0x0000
l0800_07DA:
	return ax_69
fn0800_0782_exit:


void _fgetc(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx es Top
// Preserved: D bp si sp
fn0800_07F2_entry:
l0800_07F2:
l0800_07FC:
	word16 v8_18 = Mem17[ds:wArg02:word16] - 0x0001
	Mem19[ds:wArg02:word16] = v8_18
	branch v8_18 < 0x0000 l0800_080E
l0800_080E:
	word16 v15_22 = Mem19[ds:wArg02:word16] + 0x0001
	Mem23[ds:wArg02:word16] = v15_22
	branch v15_22 < 0x0000 l0800_0819
l0800_0812:
	branch (Mem23[ds:wArg02 + 0x0002:word16] & 0x0110) == 0x0000 l0800_0824
l0800_0824:
	Mem33[ds:wArg02 + 0x0002:word16] = Mem31[ds:wArg02 + 0x0002:word16] | 0x0080
	branch Mem33[ds:wArg02 + 0x0006:word16] == 0x0000 l0800_0842
l0800_0842:
	branch Mem33[ds:0x04AA:word16] != 0x0000 l0800_0881
l0800_0849:
	branch wArg02 != 0x0342 l0800_0881
l0800_0881:
	branch (Mem44[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_088B
l0800_0888:
	fn0800_075B(ds)
l0800_088B:
	branch __read(ds, (int16) Mem67[ds:wArg02 + 0x0004:byte], fp - 0x0003, 0x0001) == 0x0001 l0800_08C9
l0800_08C9:
	branch bLoc03 != 0x0D l0800_08D6
l0800_08CF:
	branch (Mem73[ds:wArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_0881
l0800_08D6:
	Mem91[ds:wArg02 + 0x0002:word16] = Mem73[ds:wArg02 + 0x0002:word16] & 0xFFDF
l0800_08A3:
	branch _eof(ds, (int16) Mem73[ds:wArg02 + 0x0004:byte]) == 0x0001 l0800_08B8
l0800_08B8:
	Mem119[ds:wArg02 + 0x0002:word16] = Mem101[ds:wArg02 + 0x0002:word16] & 0xFE7F | 0x0020
l0800_08B1:
	Mem121[ds:wArg02 + 0x0002:word16] = Mem101[ds:wArg02 + 0x0002:word16] | 0x0010
l0800_08C4:
l0800_0850:
	branch _isatty((int16) Mem33[ds:wArg02 + 0x0004:byte]) != 0x0000 l0800_0862
l0800_085D:
	Mem145[ds:wArg02 + 0x0002:word16] = Mem130[ds:wArg02 + 0x0002:word16] & 0xFDFF
l0800_0862:
	word16 ax_158
	branch (Mem152[ds:wArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_0872
l0800_0872:
	ax_158 = 0x0000
l0800_086D:
	ax_158 = 0x0001
l0800_0874:
	_setvbuf(ds, wArg02, 0x0000, ax_158, 0x0200)
l0800_082F:
	branch fn0800_0782(ds, wArg02) == 0x0000 l0800_083D
l0800_083D:
l0800_0837:
l0800_0819:
	Mem208[ds:wArg02 + 0x0002:word16] = Mem23[ds:wArg02 + 0x0002:word16] | 0x0010
l0800_0800:
	Mem213[ds:wArg02 + 0x000A:word16] = Mem19[ds:wArg02 + 0x000A:word16] + 0x0001
l0800_08E2:
	return
fn0800_07F2_exit:


word16 _isatty(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx dx Top
// Preserved: bp sp
fn0800_08F2_entry:
l0800_08F2:
	word16 dx_10
	msdos_ioctl_get_device_info(wArg02, out dx_10)
	return dx_10 & 0x0080
fn0800_08F2_exit:


void _setvbuf(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0904_entry:
l0800_0904:
	branch Mem14[ds:wArg02 + 0x000E:word16] != wArg02 l0800_0922
l0800_0916:
	branch wArg06 > 0x0002 l0800_0922
l0800_091C:
	branch wArg08 <=u 0x7FFF l0800_0928
l0800_0928:
	branch Mem14[ds:0x04AC:word16] != 0x0000 l0800_093E
l0800_092F:
	branch wArg02 != 0x0352 l0800_093E
l0800_093E:
	branch Mem14[ds:0x04AA:word16] != 0x0000 l0800_0952
l0800_0945:
	branch wArg02 != 0x0342 l0800_0952
l0800_094C:
	Mem38[ds:0x04AA:word16] = 0x0001
l0800_0936:
	Mem39[ds:0x04AC:word16] = 0x0001
l0800_0952:
	branch Mem42[ds:wArg02:word16] == 0x0000 l0800_0966
l0800_0957:
	_fseek(ds, wArg02, 0x00000000, 0x0001)
l0800_0966:
	branch (Mem73[ds:wArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_0974
l0800_096D:
	_free(ds, Mem73[ds:wArg02 + 0x0008:word16])
l0800_0974:
	Mem96[ds:wArg02 + 0x0002:word16] = Mem94[ds:wArg02 + 0x0002:word16] & 0xFFF3
	Mem98[ds:wArg02 + 0x0006:word16] = 0x0000
	Mem101[ds:wArg02 + 0x0008:word16] = wArg02 + 0x0005
	Mem102[ds:wArg02 + 0x000A:word16] = wArg02 + 0x0005
	branch wArg06 == 0x0002 l0800_09CE
l0800_098F:
	branch wArg08 <=u 0x0000 l0800_09CE
l0800_0993:
	Mem119[ds:0x0234:word16] = 0x09D6
	branch wArg04 != 0x0000 l0800_09B7
l0800_099F:
	word16 ax_125 = _malloc(ds, wArg08)
	wArg04 = ax_125
	branch ax_125 == 0x0000 l0800_09B2
l0800_09B2:
l0800_09AB:
	Mem142[ds:wArg02 + 0x0002:word16] = Mem135[ds:wArg02 + 0x0002:word16] | 0x0004
l0800_09B7:
	Mem151[ds:wArg02 + 0x000A:word16] = wArg04
	Mem152[ds:wArg02 + 0x0008:word16] = wArg04
	Mem154[ds:wArg02 + 0x0006:word16] = wArg08
	branch wArg06 != 0x0001 l0800_09CE
l0800_09C9:
	Mem158[ds:wArg02 + 0x0002:word16] = Mem154[ds:wArg02 + 0x0002:word16] | 0x0008
l0800_09CE:
l0800_0922:
l0800_09D2:
	return
fn0800_0904_exit:


word16 _read(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZDO ax bx cx dx es Top
// Preserved: bp di si sp
fn0800_09F7_entry:
l0800_09F7:
	word16 ax_153
	branch wArg06 <u 0x0001 l0800_0A15
l0800_0A08:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0200) == 0x0000 l0800_0A1A
l0800_0A1A:
	word16 ax_40 = __read(ds, wArg02, wArg04, wArg06)
	branch ax_40 <u 0x0001 l0800_0A42
l0800_0A35:
	branch (Mem46[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x8000) == 0x0000 l0800_0A48
l0800_0A48:
	word16 cx_112 = ax_40
	word16 si_57 = wArg04
	word16 di_140 = wArg04
l0800_0A55:
	byte al_68 = Mem67[ds:si_57:byte]
	si_57 = si_57 + 0x0001
	branch al_68 == 0x1A l0800_0A87
l0800_0A87:
	word16 cx_81 = -cx_112
	word16 dx_96
	_lseek(ds, wArg02, SEQ(0x0000 - (cx_81 == 0x0000), cx_81), 0x02, out dx_96)
	Mem105[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem92[ds:(wArg02 << 0x0001) + 0x0482:word16] | 0x0200
l0800_0A5A:
	branch al_68 == 0x0D l0800_0A63
l0800_0A63:
	cx_112 = cx_112 - 0x0001
	branch cx_112 != 0x0000 l0800_0A55
l0800_0A65:
	__read(ds, wArg02, fp - 0x0003, 0x0001)
	Mem141[ds:di_140:byte] = bLoc03
	di_140 = di_140 + 0x0001
l0800_0A5E:
	Mem143[ds:di_140:byte] = al_68
	di_140 = di_140 + 0x0001
	cx_112 = cx_112 - 0x0001
	branch cx_112 != 0x0000 l0800_0A55
l0800_0A61:
l0800_0A7F:
	branch di_140 != wArg04 l0800_0A85
l0800_0A85:
l0800_0AA7:
	ax_153 = di_140 - wArg04
l0800_0A83:
l0800_0A42:
	ax_153 = ax_40
l0800_0A15:
	ax_153 = 0x0000
l0800_0AAD:
	return ax_153
fn0800_09F7_exit:


word16 __read(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: C ax bx cx dx Top
// Preserved: SZO bp sp
fn0800_0AB3_entry:
l0800_0AB3:
	word16 ax_15
	branch msdos_read_file(wArg02, wArg06, SEQ(ds, wArg04), out ax_15) l0800_0AC7
l0800_0AC7:
	ax_15 = __IOERROR(ds, ax_15)
l0800_0AC5:
l0800_0ACD:
	return ax_15
fn0800_0AB3_exit:


word16 _write(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0ACF_entry:
l0800_0ACF:
	word16 ax_141
	branch wArg06 >=u 0x0001 l0800_0AE6
l0800_0AE6:
	branch (Mem15[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x8000) == 0x0000 l0800_0B05
l0800_0B05:
	Mem29[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem15[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0xFDFF
	word16 wLoc86_191 = wArg04
	word16 wLoc8A_192 = wArg06
	word16 si_102 = fp - 0x0084
l0800_0B91:
	branch wLoc8A_192 == 0x0000 l0800_0B9B
l0800_0B9B:
	word16 di_45 = si_102 - (fp - 0x0084)
	branch di_45 <=u 0x0000 l0800_0BD7
l0800_0BA9:
	word16 ax_62 = __write(ds, wArg02, fp - 0x0084, di_45)
	branch ax_62 == di_45 l0800_0BD7
l0800_0BD7:
	ax_141 = wArg06
l0800_0BC0:
	branch ax_62 >=u 0x0000 l0800_0BCC
l0800_0BCC:
	ax_141 = wArg06 + ax_62 - di_45
l0800_0BC7:
	ax_141 = 0xFFFF
l0800_0BD5:
l0800_0B98:
l0800_0B24:
	word16 v20_85 = wLoc8A_192 - 0x0001
	wLoc8A_192 = v20_85
	wLoc86_191 = wLoc86_191 + 0x0001
	byte al_90 = Mem89[ds:wLoc86_191:byte]
	branch al_90 != 0x0A l0800_0B3E
l0800_0B3A:
	Mem94[ds:si_102:byte] = 0x0D
	si_102 = si_102 + 0x0001
l0800_0B3E:
	Mem103[ds:si_102:byte] = al_90
	si_102 = si_102 + 0x0001
	branch si_102 - (fp - 0x0084) < 0x0080 l0800_0B91
l0800_0B53:
	word16 di_112 = si_102 - (fp - 0x0084)
	word16 ax_123 = __write(ds, wArg02, fp - 0x0084, di_112)
	branch ax_123 == di_112 l0800_0B8D
l0800_0B8D:
	si_102 = fp - 0x0084
l0800_0B72:
	branch ax_123 >=u 0x0000 l0800_0B7E
l0800_0B7E:
	ax_141 = wArg06 - v20_85 + ax_123 - di_112
l0800_0B79:
	ax_141 = 0xFFFF
l0800_0B8B:
l0800_0AF3:
	ax_141 = __write(ds, wArg02, wArg04, wArg06)
l0800_0AE1:
	ax_141 = 0x0000
l0800_0BDC:
	return ax_141
fn0800_0ACF_exit:


word16 __write(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0BE2_entry:
l0800_0BE2:
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0800) == 0x0000 l0800_0C02
l0800_0BF2:
	word16 dx_103
	_lseek(ds, wArg02, 0x00000000, 0x02, out dx_103)
l0800_0C02:
	word16 ax_51
	word16 ax_46
	branch msdos_write_file(wArg02, wArg06, SEQ(ds, wArg04), out ax_46) l0800_0C20
l0800_0C20:
	ax_51 = __IOERROR(ds, ax_46)
l0800_0C11:
	Mem62[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem58[ds:(wArg02 << 0x0001) + 0x0482:word16] | 0x1000
	ax_51 = ax_46
l0800_0C26:
	return ax_51
fn0800_0BE2_exit:


word16 _lseek(selector ds, word16 wArg02, word32 dwArg04, byte bArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..31] Stack +0008:[0..7]
// LiveOut: ax dx
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0C28_entry:
	word16 wArg04 = SLICE(dwArg04, word16, 0)
l0800_0C28:
	Mem13[ds:(wArg02 << 0x0001) + 0x0482:word16] = Mem7[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0xFDFF
	word16 ax_21 = SEQ(0x42, bArg08)
	word16 dx_19 = wArg04
	branch msdos_set_file_position(wArg02, dwArg04, bArg08, SEQ(wArg04, ax_21)) l0800_0C4A
l0800_0C4A:
	word32 dx_ax_32 = (word32) __IOERROR(ds, ax_21)
	ax_21 = SLICE(dx_ax_32, word16, 0) (alias)
	dx_19 = SLICE(dx_ax_32, word16, 16) (alias)
l0800_0C48:
l0800_0C51:
	dxOut = dx_19
	return ax_21
fn0800_0C28_exit:


void __LONGTOA(selector ds, byte bArg02, byte bArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..7] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: D bp cx di ds dx es si sp ss
fn0800_0C53_entry:
l0800_0C53:
	word16 di_127 = wArg08
	byte bl_28 = SLICE(wArg06, byte, 0)
	branch wArg06 >u 0x0024 l0800_0CC1
l0800_0C69:
	branch bl_28 <u 0x02 l0800_0CC1
l0800_0C6E:
	word16 ax_31 = wArg0A
	word16 cx_33 = wArg0C
	branch wArg0C >= 0x0000 l0800_0C89
l0800_0C78:
	branch bArg04 == 0x00 l0800_0C89
l0800_0C7E:
	Mem39[ds:wArg08:byte] = 0x2D
	ax_31 = -wArg0A
	di_127 = wArg08 + 0x0001
	cx_33 = -wArg0C - (ax_31 == 0x0000)
l0800_0C89:
	word16 si_109 = fp - 0x0024
	branch cx_33 == 0x0000 l0800_0C9D
l0800_0C8E:
	word32 dx_ax_55 = (uint32) (uint16) cx_33
	word32 dx_ax_63 = SEQ((uint16) (dx_ax_55 % wArg06), ax_31)
	Mem71[ds:si_109:byte] = SLICE((uint16) (dx_ax_63 % wArg06), byte, 0)
	word16 ax_59 = (uint16) (dx_ax_55 /u wArg06)
	cx_33 = ax_59
	ax_31 = (uint16) (dx_ax_63 /u wArg06)
	si_109 = si_109 + 0x0001
	branch ax_59 == 0x0000 l0800_0CA4
l0800_0CA4:
	branch ax_31 != 0x0000 l0800_0C9D
l0800_0C9D:
	word32 dx_ax_82 = (uint32) (uint16) ax_31
	Mem98[ds:si_109:byte] = SLICE((uint16) (dx_ax_82 % wArg06), byte, 0)
	ax_31 = (uint16) (dx_ax_82 /u wArg06)
	si_109 = si_109 + 0x0001
l0800_0CA8:
	word16 cx_106 = 0x0024 - fp + si_109
l0800_0CB0:
	byte al_119
	si_109 = si_109 - 0x0001
	byte al_113 = Mem112[ds:si_109:byte]
	branch al_113 >=u 0x0A l0800_0CBB
l0800_0CBB:
	al_119 = al_113 - 0x0A + bArg02
l0800_0CB7:
	al_119 = al_113 + 0x30
l0800_0CBE:
	Mem128[ds:di_127:byte] = al_119
	di_127 = di_127 + 0x0001
	cx_106 = cx_106 - 0x0001
	branch cx_106 != 0x0000 l0800_0CB0
l0800_0CC1:
	Mem136[ds:di_127:byte] = 0x00
l0800_0CCA:
	return
fn0800_0C53_exit:
l0800_0C9B:


word16 _eof(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0D5F_entry:
l0800_0D5F:
	word16 ax_101
	branch (Mem7[ds:(wArg02 << 0x0001) + 0x0482:word16] & 0x0200) == 0x0000 l0800_0D78
l0800_0D78:
	word16 ax_16 = 0x4400
	byte dl_20 = SLICE(dx_18, byte, 0)
	word16 dx_18
	branch msdos_ioctl_get_device_info(wArg02, out dx_18) l0800_0DC3
l0800_0D82:
	branch (dl_20 & 0x80) != 0x00 l0800_0DBF
l0800_0D87:
	ax_16 = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_0DC3
l0800_0D92:
	ax_16 = 0x4202
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_0DC3
l0800_0DA7:
	ax_16 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_0DC3
l0800_0DC3:
	ax_101 = __IOERROR(ds, ax_16)
l0800_0DAE:
	branch false l0800_0DBF
l0800_0DB3:
	branch false l0800_0DBA
l0800_0DB5:
	branch false l0800_0DBF
l0800_0DBF:
	ax_101 = 0x0000
l0800_0DBA:
	ax_101 = 0x0001
l0800_0D72:
	ax_101 = 0x0001
l0800_0DC9:
	return ax_101
fn0800_0D5F_exit:


word16 _fflush(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut: ax
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp di si sp
fn0800_0DCD_entry:
l0800_0DCD:
	word16 ax_118
	branch Mem14[ds:wArg02 + 0x000E:word16] == wArg02 l0800_0DE1
l0800_0DE1:
	branch Mem14[ds:wArg02:word16] < 0x0000 l0800_0E13
l0800_0E13:
	word16 di_23 = Mem14[ds:wArg02 + 0x0006:word16] + Mem14[ds:wArg02:word16]
	Mem26[ds:wArg02:word16] = Mem14[ds:wArg02:word16] - (di_23 + 0x0001)
	word16 ax_30 = Mem29[ds:wArg02 + 0x0008:word16]
	Mem31[ds:wArg02 + 0x000A:word16] = ax_30
	branch _write(ds, (int16) Mem33[ds:wArg02 + 0x0004:byte], ax_30, di_23 + 0x0001) == di_23 + 0x0001 l0800_0E43
l0800_0E32:
	branch (Mem37[ds:wArg02 + 0x0002:word16] & 0x0200) != 0x0000 l0800_0E43
l0800_0E43:
	ax_118 = 0x0000
l0800_0E39:
	Mem56[ds:wArg02 + 0x0002:word16] = Mem37[ds:wArg02 + 0x0002:word16] | 0x0010
	ax_118 = 0xFFFF
l0800_0DE6:
	branch (Mem14[ds:wArg02 + 0x0002:word16] & 0x0008) != 0x0000 l0800_0DF9
l0800_0DED:
	branch Mem14[ds:wArg02 + 0x000A:word16] != wArg02 + 0x0005 l0800_0E0F
l0800_0DF9:
	Mem70[ds:wArg02:word16] = 0x0000
	branch Mem70[ds:wArg02 + 0x000A:word16] != wArg02 + 0x0005 l0800_0E0F
l0800_0E09:
	Mem77[ds:wArg02 + 0x000A:word16] = Mem70[ds:wArg02 + 0x0008:word16]
l0800_0E0F:
	ax_118 = 0x0000
l0800_0DDC:
	ax_118 = 0xFFFF
l0800_0E47:
	return ax_118
fn0800_0DCD_exit:


word16 _printf(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: di
// Trashed: SCZDO ax di si Top
// Preserved: bp sp
_printf_entry:
l0800_0E4B:
	word16 di_26 = __VPRINTER(cx, dx, bx, ds, fp + 0x0004, wArg02)
l0800_0E62:
	return di_26
_printf_exit:


void __fputc(selector ds, byte bArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_0E64_entry:
l0800_0E64:
	Mem12[ds:wArg04:word16] = Mem7[ds:wArg04:word16] - 0x0001
	_fputc(ds, SLICE((int16) bArg02, byte, 0), wArg04)
l0800_0E7B:
	return
fn0800_0E64_exit:


void _fputc(selector ds, byte bArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..7] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_0E7D_entry:
l0800_0E7D:
l0800_0E8D:
	word16 v9_20 = Mem19[ds:wArg04:word16] + 0x0001
	Mem21[ds:wArg04:word16] = v9_20
	branch v9_20 >= 0x0000 l0800_0EC7
l0800_0EC7:
	Mem25[ds:wArg04:word16] = Mem21[ds:wArg04:word16] - 0x0001
	branch (Mem25[ds:wArg04 + 0x0002:word16] & 0x0090) != 0x0000 l0800_0ED7
l0800_0ED0:
	branch (Mem25[ds:wArg04 + 0x0002:word16] & 0x0002) != 0x0000 l0800_0EE2
l0800_0EE2:
	Mem33[ds:wArg04 + 0x0002:word16] = Mem25[ds:wArg04 + 0x0002:word16] | 0x0100
	branch Mem33[ds:wArg04 + 0x0006:word16] == 0x0000 l0800_0F11
l0800_0F11:
	branch bArg02 != 0x0A l0800_0F36
l0800_0F17:
	branch (Mem33[ds:wArg04 + 0x0002:word16] & 0x0040) != 0x0000 l0800_0F36
l0800_0F1E:
	branch __write(ds, (int16) Mem50[ds:wArg04 + 0x0004:byte], 0x04E0, 0x0001) != 0x0001 l0800_0F4E
l0800_0F36:
	branch __write(ds, (int16) Mem74[ds:wArg04 + 0x0004:byte], fp + 0x0002, 0x0001) == 0x0001 l0800_0F5F
l0800_0F4E:
	branch (Mem94[ds:wArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_0F5F
l0800_0F5F:
l0800_0F55:
	Mem106[ds:wArg04 + 0x0002:word16] = Mem94[ds:wArg04 + 0x0002:word16] | 0x0010
l0800_0EED:
	branch Mem33[ds:wArg04:word16] == 0x0000 l0800_0F02
l0800_0F02:
	Mem116[ds:wArg04:word16] = 0xFFFF - Mem33[ds:wArg04 + 0x0006:word16]
l0800_0EF2:
	branch _fflush(ds, wArg04) == 0x0000 l0800_0F00
l0800_0F00:
l0800_0F0C:
l0800_0EFB:
l0800_0ED7:
	Mem138[ds:wArg04 + 0x0002:word16] = Mem25[ds:wArg04 + 0x0002:word16] | 0x0010
l0800_0E91:
	Mem144[ds:wArg04 + 0x000A:word16] = Mem21[ds:wArg04 + 0x000A:word16] + 0x0001
	Mem146[ds:Mem144[ds:wArg04 + 0x000A:word16] - 0x0001:byte] = bArg02
	branch (Mem146[ds:wArg04 + 0x0002:word16] & 0x0008) == 0x0000 l0800_0EBF
l0800_0EA4:
	branch bArg02 == 0x0A l0800_0EB0
l0800_0EAA:
	branch bArg02 != 0x0D l0800_0EBF
l0800_0EB0:
	branch _fflush(ds, wArg04) == 0x0000 l0800_0EBF
l0800_0EBF:
l0800_0EB9:
l0800_0F66:
	return
fn0800_0E7D_exit:


void __REALCVT(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_1044_entry:
l0800_1044:
	call Mem0[ds:0x05E0:word16] (retsize: 2;)
	return
fn0800_1044_exit:


word16 fn0800_1048(word32 es_di, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence es:di:[0..31] Stack +0002:[0..15]
// LiveOut: di
// Trashed: SCZDO al bx cx di dx Top
// Preserved: bp sp
fn0800_1048_entry:
	word16 di = SLICE(es_di, word16, 0)
l0800_1048:
	byte dh_13 = SLICE(wArg02, byte, 8)
	Mem21[es_di:byte] = Mem7[ds:(uint16) (dh_13 >>u 0x04) + 0x04E9:byte]
	Mem27[es_di + 0x0001:byte] = Mem21[ds:(uint16) (dh_13 & 0x0F) + 0x04E9:byte]
	byte dl_29 = SLICE(wArg02, byte, 0)
	Mem33[es_di + 0x0002:byte] = Mem27[ds:(uint16) (dl_29 >>u 0x04) + 0x04E9:byte]
	Mem40[es_di + 0x0003:byte] = Mem33[ds:(uint16) (dl_29 & 0x0F) + 0x04E9:byte]
l0800_106F:
	return di + 0x0004
fn0800_1048_exit:


word16 __VPRINTER(word16 cx, word16 dx, word16 bx, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] ds:[0..15] dx:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut: di
// Trashed: SCZDO ax di si Top
// Preserved: bp bx cx dx es sp
fn0800_1073_entry:
l0800_1073:
	byte bLoc57_1233 = 0x50
l0800_10CD:
	word16 sp_1024 = fp - 0x00A0
	word16 wLoc98_1236 = fp - 0x0056
l0800_10D6:
	word16 di_1007 = wLoc98_1236
l0800_10DA:
	word16 si_1130 = wArg04
l0800_10DD:
	byte al_37 = Mem36[ds:si_1130:byte]
	si_1130 = si_1130 + 0x0001
	byte al_1075 = al_37
	branch al_37 == 0x00 l0800_10F3
l0800_10F3:
l0800_10E2:
	branch al_37 == 0x25 l0800_10F6
l0800_10F6:
	al_1075 = Mem47[ds:si_1130:byte]
	si_1130 = si_1130 + 0x0001
	branch al_1075 == 0x25 l0800_10E6
l0800_10FF:
	wLoc98_1236 = di_1007
	byte ch_1165 = 0x00
	word16 wLoc8E_1241 = 0x0000
	word16 wLoc9A_1242 = 0x0000
	byte bLoc8F_1243 = 0x00
	word16 wLoc94_1244 = 0xFFFF
	word16 wLoc92_1245 = 0xFFFF
l0800_1120:
	word16 ax_65 = (uint16) (uint8) al_1075
	byte bl_68 = SLICE(ax_65, byte, 0)
	byte bh_73 = SLICE(ax_65, byte, 8)
	byte dl_132 = SLICE(ax_65, byte, 0)
	bx = SEQ(bh_73, bl_68 - 0x20) (alias)
	cx = SEQ(ch_1165, 0x00) (alias)
	branch bl_68 >=u 0x80 l0800_1175
l0800_112E:
	bx = SEQ(bh_73, Mem75[ds:bx + 0x04F9:byte]) (alias)
	cx = SEQ(ch_1165, 0x00) (alias)
	dx = ax_65 (alias)
	branch bx <=u 0x0017 l0800_113C
l0800_113C:
	word16 bx_1914
	ptr32 es_di_1910
	ptr32 es_di_1901
	word16 bx_1894
	ptr32 es_di_1897
	word16 bx_1904
	byte bLoc95_1287
	word16 dx_226
	word16 cx_173
	word16 di_486
	selector es_489
	word16 dx_356
	word16 ax_355
	bx = bx << 0x0001
	byte bl_451 = SLICE(bx << 0x0001, byte, 0)
	dx = ax_65 (alias)
	cx = SEQ(ch_1165, 0x00) (alias)
	switch (bx) { l0800_1190 l0800_1178 l0800_11D1 l0800_1184 l0800_11F6 l0800_1200 l0800_1242 l0800_124C l0800_125C l0800_11B7 l0800_1291 l0800_126C l0800_1270 l0800_1274 l0800_1316 l0800_13C8 l0800_1369 l0800_1389 l0800_1533 l0800_1560 l0800_1560 l0800_1560 l0800_11A3 l0800_11AD }
l0800_11AD:
	wLoc9A_1242 = wLoc9A_1242 | 0x0020
	ch_1165 = 0x05
l0800_11A3:
	wLoc9A_1242 = wLoc9A_1242 & 0xFFDF
	ch_1165 = 0x05
l0800_1533:
	ptr32 es_di_103
	wArg04 = si_1130
	branch (wLoc9A_1242 & 0x0020) != 0x0000 l0800_154B
l0800_154B:
	es_di_103 = Mem98[ds:wArg02:segptr32]
	wArg02 = wArg02 + 0x0004
l0800_1541:
	word16 di_107 = Mem98[ds:wArg02:word16]
	word16 sp_112 = sp_1024 - 2
	Mem113[ss:sp_112:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_di_103 = SEQ(Mem113[ss:sp_112:selector], di_107) (alias)
l0800_1551:
	Mem130[es_di_103:word16] = (uint16) (uint8) (0x50 - bLoc57_1233)
l0800_1389:
	ptr32 es_di_138
	bool Z_157
	dx_226 = ax_65 (alias)
	branch (wLoc9A_1242 & 0x0020) != 0x0000 l0800_13A7
l0800_13A7:
	es_di_138 = Mem133[ds:wArg02:segptr32]
	wArg02 = wArg02 + 0x0004
	Z_157 = SLICE(cond(SLICE(es_di_138, selector, 16) | SLICE(es_di_138, word16, 0)), bool, 2) (alias)
l0800_139B:
	word16 di_147 = Mem133[ds:wArg02:word16]
	word16 sp_150 = sp_1024 - 2
	Mem151[ss:sp_150:word16] = ds
	wArg02 = wArg02 + 0x0002
	Z_157 = SLICE(cond(di_147), bool, 2) (alias)
	es_di_138 = SEQ(Mem151[ss:sp_150:selector], di_147) (alias)
l0800_13B1:
	ptr32 es_di_1907 = es_di_138
	branch Z_157 l0800_13B8
l0800_13B3:
	word16 sp_161 = sp_1024 - 2
	Mem164[ss:sp_161:word16] = ds
	es_di_1907 = SEQ(Mem164[ss:sp_161:selector], 0x04E2) (alias)
l0800_13B8:
	cx_173 = fn0800_108C(SLICE(es_di_1907, word16, 0), SLICE(es_di_1907, selector, 16))
	branch cx_173 <=u wLoc92_1245 l0800_13C5
l0800_13C1:
	cx_173 = wLoc92_1245
l0800_13C5:
	es_di_1897 = es_di_1907 (alias)
l0800_1369:
	word16 sp_192 = sp_1024 - 2
	Mem193[ss:sp_192:word16] = ss
	wArg02 = wArg02 + 0x0002
	sp_1024 = sp_192 + 2
	cx_173 = 0x0001
	dx_226 = ax_65 (alias)
	es_di_1897 = SEQ(Mem193[ss:sp_192:selector], fp - 0x0089) (alias)
l0800_13C8:
	word16 cx_206 = wLoc92_1245
	dx_226 = ax_65 (alias)
	branch wLoc92_1245 >= 0x0000 l0800_13DD
l0800_13DA:
	cx_206 = 0x0006
l0800_13DD:
	word16 wLoc06_1271
	word16 ax_240
	word16 sp_212 = sp_1024 - 2
	Mem215[ss:sp_212:word16] = wArg02
	Mem218[ss:sp_212 - 2:word16] = cx_206
	Mem222[ss:sp_212 - 4:word16] = fp - 0x0089
	Mem227[ss:sp_212 - 6:word16] = ax_65
	Mem231[ss:sp_212 - 8:word16] = wLoc9A_1242 & 0x0001
	branch (wLoc9A_1242 & 0x0080) == 0x0000 l0800_1400
l0800_1400:
	branch (wLoc9A_1242 & 0x0100) == 0x0000 l0800_140F
l0800_140F:
	wLoc06_1271 = 0x0008
	ax_240 = 0x0006
l0800_1405:
	ax_240 = 0x0008
	wLoc06_1271 = 0x000A
l0800_13F6:
	ax_240 = 0x0002
	wLoc06_1271 = 0x0004
l0800_1417:
	Mem249[ss:sp_212 - 10:word16] = ax_240
	__REALCVT(ds)
	Mem259[ss:sp_212 - 12:word16] = ss
	wArg02 = wArg02 + wLoc06_1271
	sp_1024 = sp_212 - 10
	es_di_1910 = SEQ(Mem259[ss:sp_212 - 12:selector], fp - 0x0089) (alias)
l0800_1316:
	word16 sp_268 = sp_1024 - 2
	Mem269[ss:sp_268:word16] = Mem264[ds:wArg02:word16]
	word16 di_265 = fp - 0x008A
	wArg02 = wArg02 + 0x0002
	branch (wLoc9A_1242 & 0x0020) == 0x0000 l0800_1342
l0800_1333:
	Mem278[ss:sp_268 - 2:word16] = Mem272[ds:wArg02 + 0x0002:word16]
	Mem284[ss:sp_268 - 4:word16] = ss
	selector es_285 = Mem284[ss:sp_268 - 4:selector]
	word16 di_291 = fn0800_1048(SEQ(es_285, fp - 0x008A), ds, Mem284[ss:sp_268 - 2:word16])
	Mem300[es_285:di_291:byte] = 0x3A
	wArg02 = wArg02 + 0x0004
	di_265 = di_291 + 0x0001
l0800_1342:
	Mem305[ss:sp_268 - 2:word16] = ss
	selector es_306 = Mem305[ss:sp_268 - 2:selector]
	word16 di_314 = fn0800_1048(SEQ(es_306, di_265), ds, Mem305[ss:sp_268:word16])
	Mem322[ds:di_314:byte] = 0x00
	sp_1024 = sp_268 + 0x0002
	wLoc9A_1242 = wLoc9A_1242 & 0xFFFB
	word16 di_329 = di_314 - (fp - 0x008A)
	dx_226 = wLoc92_1245
	branch wLoc92_1245 > di_329 l0800_1366
l0800_1364:
	dx_226 = di_329
l0800_1366:
	es_di_1910 = SEQ(es_306, fp - 0x008A) (alias)
l0800_1274:
	bx_1914 = SEQ(0x10, dl_132 + 0xE9) (alias)
l0800_1270:
	bx_1904 = SEQ(0x0A, bl_451) (alias)
l0800_126C:
	bx_1914 = SEQ(0x08, bl_451) (alias)
l0800_127A:
	bLoc8F_1243 = 0x00
	bx_1904 = bx_1914 (alias)
l0800_127F:
	bLoc95_1287 = 0x00
	ax_355 = Mem351[ds:wArg02:word16]
	dx_356 = 0x0000
	bx_1894 = bx_1904 (alias)
l0800_1291:
	int32 dx_ax_364 = (int32) Mem361[ds:wArg02:word16]
	bLoc95_1287 = 0x01
	ax_355 = SLICE(dx_ax_364, word16, 0) (alias)
	dx_356 = SLICE(dx_ax_364, word16, 16) (alias)
	bx_1894 = SEQ(0x0A, bl_451) (alias)
l0800_12A2:
	word16 di_366 = wArg02 + 0x0001
	byte bh_431 = SLICE(bx_1894, byte, 8)
	word16 di_367 = di_366 + 0x0001
	wArg04 = si_1130
	branch (wLoc9A_1242 & 0x0010) == 0x0000 l0800_12B3
l0800_12AF:
	dx_356 = Mem373[ds:di_366 + 0x0001:word16]
	di_367 = di_366 + 0x0003
l0800_12B3:
	wArg02 = di_367
	branch ax_355 != 0x0000 l0800_12F1
l0800_12BE:
	byte dh_1164 = SLICE(dx_356, byte, 8)
	branch dx_356 != 0x0000 l0800_12F1
l0800_12F1:
	wLoc9A_1242 = wLoc9A_1242 | 0x0004
l0800_12C2:
	bx = bx_1894 (alias)
	branch wLoc92_1245 != 0x0000 l0800_12F6
l0800_12F6:
	word16 sp_416 = sp_1024 - 2
	Mem420[ss:sp_416:word16] = dx_356
	Mem424[ss:sp_416 - 2:word16] = ax_355
	Mem428[ss:sp_416 - 4:word16] = fp - 0x0089
	word16 ax_436 = (int16) bh_431
	Mem438[ss:sp_416 - 6:word16] = ax_436
	Mem444[ss:sp_416 - 8:word16] = SEQ(SLICE(ax_436, byte, 8), bLoc95_1287)
	Mem454[ss:sp_416 - 10:word16] = bx_1894
	__LONGTOA(ds, Mem454[ss:sp_416 - 10:byte], Mem454[ss:sp_416 - 8:byte], Mem454[ss:sp_416 - 6:word16], Mem454[ss:sp_416 - 4:word16], Mem454[ss:sp_416 - 2:word16], Mem454[ss:sp_416:word16])
	Mem466[ss:sp_416:word16] = ss
	selector es_467 = Mem466[ss:sp_416:selector]
	sp_1024 = sp_416 + 2
	dx_226 = wLoc92_1245
	branch wLoc92_1245 > 0x0000 l0800_1313
l0800_1313:
	es_di_1901 = SEQ(es_467, fp - 0x0089) (alias)
l0800_1310:
	es_di_1910 = SEQ(es_467, fp - 0x0089) (alias)
l0800_1427:
	es_489 = SLICE(es_di_1910, selector, 16) (alias)
	di_486 = SLICE(es_di_1910, word16, 0) (alias)
	branch (wLoc9A_1242 & 0x0008) == 0x0000 l0800_1449
l0800_142F:
	dx_226 = wLoc94_1244
	es_di_1901 = es_di_1910 (alias)
	branch wLoc94_1244 <= 0x0000 l0800_1449
l0800_1437:
	es_489 = SLICE(es_di_1901, selector, 16) (alias)
	di_486 = SLICE(es_di_1901, word16, 0) (alias)
	word16 cx_493 = fn0800_108C(di_486, es_489)
	branch Mem498[es_di_1901:byte] != 0x2D l0800_1441
l0800_1440:
	cx_493 = cx_493 - 0x0001
l0800_1441:
	dx_226 = dx_226 - cx_493
	branch dx_226 <= 0x0000 l0800_1449
l0800_1445:
	wLoc8E_1241 = dx_226
l0800_1449:
	branch bLoc8F_1243 == 0x00 l0800_1465
l0800_1451:
	branch Mem516[es_489:di_486:byte] == 0x2D l0800_1465
l0800_1457:
	di_486 = di_486 - 0x0001
	Mem538[es_489:di_486:byte] = bLoc8F_1243
	word16 v40_529 = wLoc8E_1241 - 0x0001
	wLoc8E_1241 = v40_529 + (v40_529 <u 0x0000)
l0800_1465:
	cx_173 = fn0800_108C(di_486, es_489)
	es_di_1897 = SEQ(es_489, di_486) (alias)
l0800_1468:
	word16 di_547 = SLICE(es_di_1897, word16, 0)
	wArg04 = si_1130
	word16 si_1150 = di_547
	word16 bx_560 = wLoc94_1244
	branch (wLoc9A_1242 & 0x0005) != 0x0005 l0800_1494
l0800_147E:
	branch dl_132 != 0x6F l0800_1497
l0800_1497:
	branch dl_132 == 0x78 l0800_14A1
l0800_149C:
	branch dl_132 != 0x58 l0800_14B5
l0800_14A1:
	word16 v37_581 = wLoc8E_1241 - 0x0002
	wLoc9A_1242 = wLoc9A_1242 | 0x0040
	bx_560 = wLoc94_1244 - 0x0002
	wLoc8E_1241 = v37_581
	branch v37_581 >= 0x0000 l0800_14B5
l0800_14AF:
	wLoc8E_1241 = 0x0000
l0800_1487:
	branch wLoc8E_1241 > 0x0000 l0800_1494
l0800_148E:
	wLoc8E_1241 = 0x0001
l0800_1494:
l0800_14B5:
	cx = cx_173 + wLoc8E_1241
	branch (wLoc9A_1242 & 0x0002) != 0x0000 l0800_14CD
l0800_14C1:
l0800_14C9:
	branch bx_560 > cx l0800_14C3
l0800_14C3:
	di_1007 = fn0800_1099(SEQ(ds, di_1007), SEQ(ss, fp - 2), 0x20, cx, dx_226, bx_560)
	sp_1024 = sp_1024 + 0xFFFE
	bx_560 = bx_560 - 0x0001
l0800_14CD:
	branch (wLoc9A_1242 & 0x0040) == 0x0000 l0800_14E1
l0800_14D5:
	di_1007 = fn0800_1099(SEQ(ds, fn0800_1099(SEQ(ds, di_1007), SEQ(ss, fp - 2), 0x30, cx, dx_226, bx_560)), SEQ(ss, fp - 2), dl_132, cx, dx_226, bx_560)
	sp_1024 = sp_1024 + 0xFFFC
l0800_14E1:
	dx = wLoc8E_1241
	branch wLoc8E_1241 <= 0x0000 l0800_1510
l0800_14E9:
	word16 cx_707 = cx - wLoc8E_1241
	bx_560 = bx_560 - wLoc8E_1241
	byte al_724 = Mem598[es_di_1897:byte]
	branch al_724 == 0x2D l0800_14FC
l0800_14F4:
	branch al_724 == 0x20 l0800_14FC
l0800_14F8:
	branch al_724 != 0x2B l0800_1503
l0800_14FC:
	si_1150 = di_547 + 0x0001
	di_1007 = fn0800_1099(SEQ(ds, di_1007), SEQ(ss, fp - 2), Mem598[ds:di_547:byte], cx_707, wLoc8E_1241, bx_560)
	sp_1024 = sp_1024 + 0xFFFE
	cx_707 = cx_707 - 0x0001
	bx_560 = bx_560 - 0x0001
l0800_1503:
	word16 cx_761 = wLoc8E_1241
	branch wLoc8E_1241 == 0x0000 l0800_150E
l0800_1507:
	di_1007 = fn0800_1099(SEQ(ds, di_1007), SEQ(ss, fp - 2), 0x30, cx_761, cx_707, bx_560)
	sp_1024 = sp_1024 + 0xFFFE
	cx_761 = cx_761 - 0x0001
	branch cx_761 != 0x0000 l0800_1507
l0800_150E:
	dx = cx_761
	cx = cx_707
l0800_1510:
	branch cx == 0x0000 l0800_1523
l0800_1512:
	bx_560 = bx_560 - cx
l0800_1514:
	Mem797[ds:di_1007:byte] = Mem793[ds:si_1150:byte]
	byte v42_801 = bLoc57_1233 - 0x01
	si_1150 = si_1150 + 0x0001
	di_1007 = di_1007 + 0x0001
	bLoc57_1233 = v42_801
	branch v42_801 > 0x00 l0800_1521
l0800_151E:
	di_1007 = fn0800_10A1(SEQ(ss, fp - 2), cx, dx, bx_560, di_1007)
l0800_1521:
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_1514
l0800_1523:
	bx = bx_560
	branch bx_560 <= 0x0000 l0800_1530
l0800_1527:
	cx = bx_560
l0800_1529:
	di_1007 = fn0800_1099(SEQ(ds, di_1007), SEQ(ss, fp - 2), 0x20, cx, dx, bx_560)
	sp_1024 = sp_1024 + 0xFFFE
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_1529
l0800_1530:
l0800_12C9:
	cx = wLoc94_1244
	dx = dx_356 (alias)
	branch wLoc94_1244 == 0x0000 l0800_12EE
l0800_12D3:
	dx = dx_356 (alias)
	branch wLoc94_1244 == 0xFFFF l0800_12EE
l0800_12D8:
	byte dl_849
	branch (wLoc9A_1242 & 0x0008) == 0x0000 l0800_12E5
l0800_12E5:
	dl_849 = 0x20
l0800_12E1:
	dl_849 = 0x30
l0800_12E7:
	dx = SEQ(dh_1164, dl_849) (alias)
	di_1007 = fn0800_1099(SEQ(ds, di_1007), SEQ(ss, fp - 2), dl_849, cx, dx, bx_1894)
	sp_1024 = sp_1024 + 0xFFFE
	cx = cx - 0x0001
	branch cx != 0x0000 l0800_12E7
l0800_12EE:
l0800_11B7:
	branch ch_1165 >u 0x00 l0800_1200
l0800_11BC:
	branch (wLoc9A_1242 & 0x0002) != 0x0000 l0800_11E5
l0800_11C4:
	wLoc9A_1242 = wLoc9A_1242 | 0x0008
	ch_1165 = 0x01
l0800_125C:
	wLoc9A_1242 = wLoc9A_1242 & 0xFFEF | 0x0080
	ch_1165 = 0x05
l0800_124C:
	wLoc9A_1242 = (wLoc9A_1242 | 0x0100) & 0xFFEF
	ch_1165 = 0x05
l0800_1242:
	wLoc9A_1242 = wLoc9A_1242 | 0x0010
	ch_1165 = 0x05
l0800_1200:
	dx = bx
	word16 ax_911 = (int16) (SLICE(ax_65, byte, 0) - 0x30)
	branch ch_1165 >u 0x02 l0800_1224
l0800_1224:
	cx = SEQ(ch_1165, 0x00) (alias)
	branch ch_1165 != 0x04 l0800_11CE
l0800_1229:
	wLoc92_1245 = ax_911
	branch wLoc92_1245 < 0x0000 l0800_11E5
l0800_1231:
	wLoc92_1245 = ax_911 + ((wLoc92_1245 << 0x0003) + (wLoc92_1245 << 0x0001))
l0800_1209:
	ch_1165 = 0x02
	wLoc94_1244 = ax_911
	branch wLoc94_1244 < 0x0000 l0800_11E5
l0800_1213:
	wLoc94_1244 = ax_911 + ((wLoc94_1244 << 0x0003) + (wLoc94_1244 << 0x0001))
l0800_11F6:
	cx = SEQ(ch_1165, 0x00) (alias)
	branch ch_1165 >=u 0x04 l0800_11CE
l0800_11FB:
	ch_1165 = 0x04
l0800_1184:
	cx = SEQ(ch_1165, 0x00) (alias)
	branch ch_1165 >u 0x00 l0800_1175
l0800_1189:
	wLoc9A_1242 = wLoc9A_1242 | 0x0002
l0800_11D1:
	word16 ax_961 = Mem75[ds:wArg02:word16]
	wArg02 = wArg02 + 0x0002
	branch ch_1165 >=u 0x02 l0800_11E8
l0800_11E8:
	cx = SEQ(ch_1165, 0x00) (alias)
	branch ch_1165 != 0x04 l0800_11CE
l0800_11CE:
l0800_11ED:
	wLoc92_1245 = ax_961
	ch_1165 = ch_1165 + 0x01
l0800_11DF:
	wLoc94_1244 = ax_961
	ch_1165 = 0x03
l0800_11E5:
l0800_1178:
	cx = SEQ(ch_1165, 0x00) (alias)
	branch ch_1165 >u 0x00 l0800_1175
l0800_117D:
	wLoc9A_1242 = wLoc9A_1242 | 0x0001
l0800_1190:
	cx = SEQ(ch_1165, 0x00) (alias)
	branch ch_1165 >u 0x00 l0800_1175
l0800_1175:
	dx = ax_65
l0800_1195:
	branch bLoc8F_1243 == 0x2B l0800_11A0
l0800_119C:
	bLoc8F_1243 = dl_132
l0800_11A0:
l0800_111F:
	al_1075 = Mem992[ds:si_1130:byte]
	si_1130 = si_1130 + 0x0001
l0800_1139:
l0800_1560:
	word16 si_1006 = si_1130
	byte al_1008 = 0x25
l0800_156A:
	di_1007 = fn0800_1099(SEQ(ds, di_1007), SEQ(ss, fp - 2), al_1008, cx, dx, bx)
	byte al_1028 = Mem1003[ds:si_1006:byte]
	sp_1024 = sp_1024 + 0xFFFE
	si_1006 = si_1006 + 0x0001
	al_1008 = al_1028
	branch al_1028 != 0x00 l0800_156A
l0800_1572:
	branch bLoc57_1233 >= 0x50 l0800_157B
l0800_1578:
	fn0800_10A1(SEQ(ss, fp - 2), cx, dx, bx, di_1007)
l0800_157B:
	word16 sp_1059 = sp_1024 + 2
	branch 0x0000 == 0x0000 l0800_1589
l0800_1589:
l0800_1582:
l0800_158E:
	return Mem1036[ss:sp_1059:word16]
fn0800_1073_exit:
l0800_10E6:
	Mem1078[ds:di_1007:byte] = al_1075
	byte v15_1082 = bLoc57_1233 - 0x01
	di_1007 = di_1007 + 0x0001
	bLoc57_1233 = v15_1082
	branch v15_1082 > 0x00 l0800_10DD
l0800_10EE:
	di_1007 = fn0800_10A1(SEQ(ss, fp - 2), cx, dx, bx, di_1007)


word16 fn0800_108C(word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] es:[0..15]
// LiveOut: cx
// Trashed: SCZO al cx Top
// Preserved: di sp
fn0800_108C_entry:
l0800_108C:
	word16 cx_12 = 0xFFFF
l0800_1092:
	branch cx_12 == 0x0000 l0800_1094
l0800_1092_1:
	di = di_45 + 0x0001
	cx_12 = cx_12 - 0x0001
	di_45 = di
	branch Mem7[es:di_45:byte] == 0x00 l0800_1092
l0800_1094:
	return ~cx_12 - 0x0001
fn0800_108C_exit:


word16 fn0800_1099(word32 ds_di, word32 ss_bp, byte al, word16 cx, word16 dx, word16 bx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bx:[0..15] cx:[0..15] dx:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31]
// LiveOut: di
// Trashed: SZO di Top
// Preserved: C sp
fn0800_1099_entry:
	word16 di = SLICE(ds_di, word16, 0)
l0800_1099:
	Mem7[ds_di:byte] = al
	byte v9_11 = Mem7[ss_bp - 0x0055:byte] - 0x01
	Mem12[ss_bp - 0x0055:byte] = v9_11
	branch v9_11 <= 0x00 l0800_10CC_in_fn0800_1099
l0800_10CC_in_fn0800_1099:
	return di + 0x0001
l0800_109F_thunk_fn0800_10A1:
	return fn0800_10A1(ss_bp, cx, dx, bx, di + 0x0001)
fn0800_1099_exit:


word16 fn0800_10A1(word32 ss_bp, word16 cx, word16 dx, word16 bx, word16 di)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..15] cx:[0..15] di:[0..15] dx:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di
// Trashed: SCZO di Top
// Preserved: bx cx dx es sp
fn0800_10A1_entry:
	word16 bp = SLICE(ss_bp, word16, 0)
l0800_10A1:
	word16 di_20 = di - (bp - 0x0054)
	word16 ax_34
	call SEQ(0x0800, Mem29[ss_bp + 0x000A:word16]) (retsize: 2;)
		uses: ax:bp - 0x0054,bx:bx,cx:cx,dx:dx,Stack +0002:Mem26[ss_bp + 0x0008:word16],Stack +0004:di_20,Stack +0006:bp - 0x0054,Stack +000A:dx,Stack +000C:cx,Stack +000E:bx
		defs: ax:ax_34
	branch ax_34 != 0x0000 l0800_10BE
l0800_10B9:
	Mem41[ss_bp - 0x0002:word16] = 0x0001
l0800_10BE:
	Mem44[ss_bp - 0x0055:byte] = 0x50
	Mem47[ss_bp - 0x0058:word16] = Mem44[ss_bp - 0x0058:word16] + di_20
l0800_10CC:
	return bp - 0x0054
fn0800_10A1_exit:


void fn0800_1596(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx Top
// Preserved: bp di si sp
fn0800_1596_entry:
l0800_1596:
	branch Mem14[ds:0x062A:word16] == 0x0000 l0800_15C1
l0800_15C1:
	Mem19[ds:0x062A:word16] = wArg02
	Mem20[ds:wArg02 + 0x0004:word16] = wArg02
	Mem21[ds:wArg02 + 0x0006:word16] = wArg02
l0800_15A5:
	word16 di_23 = Mem14[ds:Mem14[ds:0x062A:word16] + 0x0006:word16]
	Mem25[ds:Mem14[ds:0x062A:word16] + 0x0006:word16] = wArg02
	Mem26[ds:di_23 + 0x0004:word16] = wArg02
	Mem27[ds:wArg02 + 0x0006:word16] = di_23
	Mem29[ds:wArg02 + 0x0004:word16] = Mem27[ds:0x062A:word16]
l0800_15CB:
	return
fn0800_1596_exit:


void fn0800_15CF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx Top
// Preserved: bp di si sp
fn0800_15CF_entry:
l0800_15CF:
	Mem21[ds:wArg02:word16] = Mem15[ds:wArg02:word16] + Mem15[ds:wArg04:word16]
	branch Mem21[ds:0x0628:word16] != wArg04 l0800_15EE
l0800_15EE:
	Mem30[ds:Mem21[ds:wArg04:word16] + wArg04 + 0x0002:word16] = wArg02
l0800_15E8:
	Mem31[ds:0x0628:word16] = wArg02
l0800_15FB:
	___pull_free_block(ds, wArg04)
	return
fn0800_15CF_exit:


void fn0800_1606(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: si sp
fn0800_1606_entry:
l0800_1606:
	branch Mem7[ds:0x062C:word16] != Mem7[ds:0x0628:word16] l0800_1622
l0800_1622:
	word16 si_13 = Mem7[ds:Mem7[ds:0x0628:word16] + 0x0002:word16]
	branch (Mem7[ds:si_13:word16] & 0x0001) != 0x0000 l0800_1651
l0800_1651:
	_brk(ds, Mem7[ds:0x0628:word16])
	Mem29[ds:0x0628:word16] = si_13
l0800_162F:
	___pull_free_block(ds, si_13)
	branch si_13 != Mem31[ds:0x062C:word16] l0800_1644
l0800_1644:
	Mem43[ds:0x0628:word16] = Mem31[ds:si_13 + 0x0002:word16]
l0800_163A:
	Mem47[ds:0x0628:word16] = 0x0000
	Mem48[ds:0x062C:word16] = 0x0000
l0800_164A:
	_brk(ds, si_13)
l0800_1610:
	_brk(ds, Mem7[ds:0x062C:word16])
	Mem79[ds:0x0628:word16] = 0x0000
	Mem80[ds:0x062C:word16] = 0x0000
l0800_165D:
	return
fn0800_1606_exit:


void fn0800_165F(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx Top
// Preserved: bp di si sp
fn0800_165F_entry:
l0800_165F:
	Mem19[ds:wArg02:word16] = Mem15[ds:wArg02:word16] - 0x0001
	word16 si_16 = wArg02
	word16 ax_21 = Mem19[ds:wArg02:word16] + wArg02
	word16 di_23 = Mem22[ds:wArg02 + 0x0002:word16]
	branch (Mem22[ds:di_23:word16] & 0x0001) != 0x0000 l0800_1690
l0800_167C:
	branch wArg02 == Mem22[ds:0x062C:word16] l0800_1690
l0800_1690:
	fn0800_1596(ds, wArg02)
l0800_1682:
	Mem45[ds:di_23:word16] = Mem22[ds:di_23:word16] + Mem22[ds:wArg02:word16]
	Mem48[ds:ax_21 + 0x0002:word16] = di_23
	si_16 = di_23
l0800_1695:
	branch (Mem53[ds:ax_21:word16] & 0x0001) != 0x0000 l0800_16A7
l0800_169E:
	fn0800_15CF(ds, si_16, ax_21)
l0800_16A7:
	return
fn0800_165F_exit:


void _free(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp si sp
fn0800_16AD_entry:
l0800_16AD:
	branch wArg02 != 0x0000 l0800_16BA
l0800_16BA:
	branch wArg02 + 0xFFFC != Mem11[ds:0x0628:word16] l0800_16CC
l0800_16CC:
	fn0800_165F(ds, wArg02 + 0xFFFC)
l0800_16C7:
	fn0800_1606(ds)
l0800_16B8:
l0800_16D1:
	return
fn0800_16AD_exit:


word16 _scanf(word16 di, selector es, selector ds, word16 wArg02, ptr16 & bxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] es:[0..15] ss:[0..15] Stack +0002:[0..15]
// LiveOut: bp bx dx sp
// Trashed: SCZDO ax bp bx cx di dx es si sp Top
// Preserved:
_scanf_entry:
l0800_16D4:
	word16 bp_28
	word16 bx_34
	word16 dx_35 = __scanner(di, es, ds, 0x07F2, 0x1D65, 0x0342, wArg02, out bx_34, out bp_28)
l0800_16F1:
	word16 bp_42 = Mem23[ss:bp_28:word16]
	bxOut = bx_34
	bpOut = bp_42
	return dx_35
_scanf_exit:


word16 __scanner(word16 di, selector es, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & bxOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di:[0..15] ds:[0..15] es:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15]
// LiveOut: bp bx dx
// Trashed: SCZDO ax bp bx cx di dx es si Top
// Preserved: sp
fn0800_16F3_entry:
l0800_16F3:
	word16 wLoc28_1058 = 0x0000
l0800_1721:
l0800_1723:
	word16 si_26 = wArg08
l0800_1726:
	word16 bx_1327
	word16 dx_1417
	word16 dx_911
	word16 bx_910
	byte al_30 = Mem29[ds:si_26:byte]
	si_26 = si_26 + 0x0001
	byte al_32 = al_30
	branch al_30 == 0x00 l0800_1788
l0800_1788:
l0800_1788_thunk_fn0800_1AEB:
	word16 bp_40 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx
	bpOut = bp_40
	return dx
l0800_172B:
	branch al_30 == 0x25 l0800_178B
l0800_178B:
	word16 wLoc24_1061 = 0xFFFF
	byte bLoc2B_1062 = 0x00
l0800_1794:
	si_26 = si_26 + 0x0001
	word16 ax_59 = (int16) Mem56[ds:si_26:byte]
	byte dh_1437 = SLICE(dx, byte, 8)
	wArg08 = si_26
	di = ax_59
	branch ax_59 < 0x0000 l0800_17E6
l0800_179E:
	word16 bx_73 = (uint16) (uint8) Mem62[ds:ax_59 + 0x055A:byte]
	al_32 = SLICE(bx_73, byte, 0) (alias)
	branch bx_73 <=u 0x0015 l0800_17AE
l0800_17AE:
	word16 ax_115
	word16 si_114
	bx = bx_73 << 0x0001
	switch (bx_73) { l0800_17E6 l0800_17E6 l0800_17E6 l0800_17E3 l0800_17E9 l0800_17EF l0800_19C8 l0800_1837 l0800_1837 l0800_1841 l0800_1908 l0800_1803 l0800_180F l0800_1809 l0800_1832 l0800_196C l0800_1A06 l0800_1824 l0800_183C l0800_1895 l0800_1816 l0800_181D }
l0800_181D:
	bLoc2B_1062 = bLoc2B_1062 | 0x20
l0800_1816:
	bLoc2B_1062 = bLoc2B_1062 & 0xDF
l0800_1895:
	word16 bp_90
	fn0800_1898(SEQ(ss, fp - 2), ds, out bp_90)
l0800_1895_thunk_fn0800_1898:
	word16 bp_103
	bxOut = fn0800_1898(SEQ(ss, bp_90), ds, out bp_103)
	bpOut = bp_103
	return dx
l0800_183C:
	si_114 = 0x0010
l0800_1824:
	ax_115 = wLoc28_1058
	dx = 0x0000
	branch (bLoc2B_1062 & 0x01) == 0x00 l0800_187E
l0800_182F:
l0800_1A06:
	selector es_126 = ss
	word16 di_128 = fp - 0x0022
	word16 cx_129 = 0x0010
l0800_1A11:
	branch cx_129 == 0x0000 l0800_1A13
l0800_1A13:
	byte v42_138 = bLoc2B_1062 & 0xEF
	byte al_134 = Mem133[ds:si_26:byte]
	word16 si_135 = si_26 + 0x0001
	byte bLoc2B_1069 = v42_138
	branch al_134 != 0x5E l0800_1A21
l0800_1A1C:
	bLoc2B_1069 = v42_138 | 0x10
	al_134 = Mem144[ds:si_26 + 0x0001:byte]
	si_135 = si_26 + 0x0002
l0800_1A21:
l0800_1A23:
	word16 ax_153 = (uint16) (uint8) al_134
	byte ch_1013 = 0x01 << (al_134 & 0x07)
	Mem166[ss:fp - 0x0022 + (ax_153 >>u 0x03):byte] = Mem164[ss:fp - 0x0022 + (ax_153 >>u 0x03):byte] | ch_1013
	byte dl_151 = al_134
	di = ax_153 >>u 0x03
l0800_1A35:
	al_134 = Mem171[ds:si_135:byte]
	si_135 = si_135 + 0x0001
	word16 dx_1444 = SEQ(dh_1437, dl_151)
	branch al_134 == 0x00 l0800_1A60
l0800_1A60:
l0800_1A60_thunk_fn0800_1AFF:
	word16 bp_180 = fn0800_1AFF(SEQ(ss, fp - 2))
	bxOut = bx_73 << 0x0001
	bpOut = bp_180
	return dx_1444
l0800_1A3A:
	dx = SEQ(dh_1437, dl_151) (alias)
	branch al_134 == 0x5D l0800_1A63
l0800_1A63:
	word16 v61_188 = wLoc24_1526 & 0x7FFF
	wArg08 = si_135
	word16 si_191 = v61_188
	branch (bLoc2B_1069 & 0x01) != 0x00 l0800_1A77
l0800_1A74:
	di = fn0800_1708(SEQ(ss, fp - 2), ds, out es_126)
l0800_1A77:
	word16 dx_345
	word16 bx_344
	word16 dx_225
	word16 si_203 = si_191 - 0x0001
	branch si_203 < 0x0000 l0800_1ACA
l0800_1A7A:
	word16 v66_209 = wLoc28_1058 + 0x0001
	word16 ax_222
	word16 bx_224
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: bx:bx_224,cx:wArg06,dx:dx_225,Stack +0002:wArg06,Stack +0004:es_214,Stack +0008:wArg02,Stack +000A:wArg04,Stack +000C:wArg06,Stack +000E:si_173,Stack +FFFFFFDA:v66_209,Stack +FFFFFFDE:v66_209,Stack +FFFFFFE0:wLoc26
		defs: ax:ax_222,bx:bx_224,dx:dx_225
	wLoc28_1058 = v66_209
	es_126 = es
	branch ax_222 < 0x0000 l0800_1AD9
l0800_1AD9:
	branch si_203 + 0x0001 >= v61_188 l0800_1ADD_thunk_fn0800_1AEB
l0800_1ADD_thunk_fn0800_1AEB:
	word16 bp_241 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx_224
	bpOut = bp_241
	return dx_225
l0800_1ADF:
	branch (bLoc2B_1069 & 0x01) != 0x00 l0800_1AE3_thunk_fn0800_1AEB
l0800_1AE3_thunk_fn0800_1AEB:
	word16 bp_256 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx_224
	bpOut = bp_256
	return dx_225
l0800_1AE5:
	Mem267[es:di:byte] = 0x00
l0800_1AE8_thunk_fn0800_1AEB:
	word16 bp_274 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx_224
	bpOut = bp_274
	return dx_225
l0800_1A8A:
	si_191 = si_203
	byte al_318 = SLICE(ax_222, byte, 0)
	bx = ax_222 >>u 0x03
	branch (Mem218[ss:fp - 0x0022 + (ax_222 >>u 0x03):byte] & 0x01 << (SLICE(ax_222, byte, 0) & 0x07)) == 0x00 l0800_1AA7
l0800_1AA7:
	branch (bLoc2B_1069 & 0x10) == 0x00 l0800_1AB6
l0800_1A9F:
	branch (bLoc2B_1069 & 0x10) == 0x00 l0800_1AAD
l0800_1AAD:
	es = es_126
	dx = dx_225
	branch (bLoc2B_1069 & 0x01) != 0x00 l0800_1A77
l0800_1AB3:
	Mem321[es:di:byte] = al_318
	di = di + 0x0001
	dx = dx_225
l0800_1AA5:
l0800_1AB6:
	word16 sp_341
	word16 ax_342
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: ax:ax_342,bx:bx_344,cx:cx_350,dx:dx_345,Stack +0002:ax_222,Stack +0004:wArg06,Stack +0006:es_214,Stack +000A:wArg02,Stack +000C:wArg04,Stack +000E:wArg06,Stack +0010:si_173,Stack +FFFFFFE2:wLoc26
		defs: ax:ax_342,bx:bx_344,dx:dx_345,sp:sp_341
	word16 cx_350 = Mem337[ss:sp_341 + 2:word16]
	es = Mem337[ss:sp_341 + 4:selector]
	dx = dx_345
	dx = dx_345
	bx = bx_344
	bx = bx_344
	branch si_203 + 0x0001 >= v61_188 l0800_1AD3
l0800_1ACA:
	branch (bLoc2B_1069 & 0x01) != 0x00 l0800_1AD6
l0800_1AD0:
l0800_1AD3:
	Mem373[es:di:byte] = 0x00
	di = di + 0x0001
l0800_1AD6:
l0800_1A3E:
	branch al_134 != 0x2D l0800_1A23
l0800_1A42:
	branch dl_151 >u Mem171[ds:si_135:byte] l0800_1A23
l0800_1A46:
	branch Mem171[ds:si_135:byte] == 0x5D l0800_1A23
l0800_1A4B:
	si_135 = si_135 + 0x0001
	byte al_384 = Mem171[ds:si_135:byte] - dl_151
	branch al_384 == 0x00 l0800_1A35
l0800_1A50:
	dl_151 = dl_151 + al_384
l0800_1A52:
	ch_1013 = __rol(ch_1013, 0x01)
	di = di + ((ch_1013 & 0x80) != 0x00)
	Mem399[ss:fp - 0x0022 + di:byte] = Mem397[ss:fp - 0x0022 + di:byte] | ch_1013
	al_384 = al_384 - 0x01
	branch al_384 != 0x00 l0800_1A52
l0800_1A5E:
l0800_1A11_1:
	Mem409[ss:di_128:word16] = 0x0000
	di_128 = di_128 + 0x0002
	cx_129 = cx_129 - 0x0001
l0800_196C:
	word16 bp_414
	fn0800_196F(SEQ(ss, fp - 2), ds, out bp_414)
l0800_196C_thunk_fn0800_196F:
	word16 bp_427
	bxOut = fn0800_196F(SEQ(ss, bp_414), ds, out bp_427)
	bpOut = bp_427
	return dx
l0800_1832:
	si_114 = 0x0008
l0800_1809:
	bLoc2B_1062 = bLoc2B_1062 | 0x04
l0800_180F:
	bLoc2B_1062 = bLoc2B_1062 | 0x02
l0800_1803:
	bLoc2B_1062 = bLoc2B_1062 | 0x08
l0800_1908:
	__scantod(ds)
	branch wLoc26 <= 0x0000 l0800_1964
l0800_1964:
	__scanpop(ds)
	branch wLoc26 < 0x0000 l0800_1905
l0800_1905:
l0800_1905_thunk_fn0800_1AEB:
	word16 bp_480 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx_73 << 0x0001
	bpOut = bp_480
	return dx
l0800_1969:
l0800_1969_thunk_fn0800_1AFF:
	word16 bp_492 = fn0800_1AFF(SEQ(ss, fp - 2))
	bxOut = bx_73 << 0x0001
	bpOut = bp_492
	return dx
l0800_192C:
	branch (bLoc2B_1062 & 0x01) == 0x00 l0800_1935
l0800_1935:
	di = fn0800_1708(SEQ(ss, fp - 2), ds, out es)
	branch (bLoc2B_1062 & 0x04) == 0x00 l0800_1946
l0800_1946:
	branch (bLoc2B_1062 & 0x08) == 0x00 l0800_1951
l0800_1951:
l0800_194C:
l0800_1941:
l0800_1953:
	__scanrslt(ds)
l0800_1932:
l0800_195E:
	__scanpop(ds)
l0800_1841:
	si_114 = 0x0000
l0800_1837:
	si_114 = 0x000A
l0800_1844:
	branch (ax_59 & 0x0020) != 0x0000 l0800_184E
l0800_184A:
	bLoc2B_1062 = bLoc2B_1062 | 0x04
l0800_184E:
	ax_115 = __scantol(ds, wArg02, wArg04, wArg06, si_114, wLoc24_1526 & 0x7FFF, fp - 0x0028, fp - 0x0026, out dx, out bx, out di, out es)
	branch wLoc26 <= 0x0000 l0800_188D
l0800_188D:
	branch wLoc26 < 0x0000 l0800_1892
l0800_1892:
l0800_1892_thunk_fn0800_1AEB:
	word16 bp_602 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx
	bpOut = bp_602
	return dx
l0800_188F:
l0800_188F_thunk_fn0800_1AFF:
	word16 bp_614 = fn0800_1AFF(SEQ(ss, fp - 2))
	bxOut = bx
	bpOut = bp_614
	return dx
l0800_1875:
	branch (bLoc2B_1062 & 0x01) != 0x00 l0800_188A
l0800_187B:
l0800_187E:
	selector es_1524
	fn0800_1708(SEQ(ss, fp - 2), ds, out es_1524)
	word32 es_di_1521 = <invalid>
	Mem636[es_di_1521:word16] = ax_115
	word16 di_629 = SLICE(es_di_1521, word16, 0)
	es = SLICE(es_di_1521, selector, 16) (alias)
	di = di_629 + 0x0002
	branch (bLoc2B_1062 & 0x04) == 0x00 l0800_188A
l0800_1888:
	Mem645[es_di_1521 + 0x0002:word16] = dx
	dx = ax_115
	di = di_629 + 0x0004
l0800_188A:
l0800_19C8:
	branch (bLoc2B_1062 & 0x01) != 0x00 l0800_19D1
l0800_19CE:
	di = fn0800_1708(SEQ(ss, fp - 2), ds, out es)
l0800_19D1:
	word16 si_1020 = wLoc24_1526
	branch wLoc24_1526 >= 0x0000 l0800_19DB
l0800_19D8:
	si_1020 = 0x0001
l0800_19DB:
	word16 dx_688
	word16 bx_687
	branch wLoc24_1526 == 0x0000 l0800_19F7
l0800_19DD:
	word16 v49_671 = wLoc28_1058 + 0x0001
	word16 ax_685
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: bx:bx_687,cx:wArg06,dx:dx_688,Stack +0002:wArg06,Stack +0004:es_1018,Stack +0008:wArg02,Stack +000A:wArg04,Stack +000C:wArg06,Stack +000E:si_58,Stack +FFFFFFDA:v49_671,Stack +FFFFFFDE:v49_671,Stack +FFFFFFE0:wLoc26
		defs: ax:ax_685,bx:bx_687,dx:dx_688
	wLoc28_1058 = v49_671
	byte al_698 = SLICE(ax_685, byte, 0)
	branch (bLoc2B_1062 & 0x01) != 0x00 l0800_19F0
l0800_19EF:
	Mem699[es:di:byte] = al_698
	di = di + 0x0001
l0800_19F0:
	branch ax_685 < 0x0000 l0800_1A03
l0800_1A03:
l0800_1A03_thunk_fn0800_1AEB:
	word16 bp_712 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx_687
	bpOut = bp_712
	return dx_688
l0800_19F4:
	si_1020 = si_1020 - 0x0001
	dx = dx_688
	bx = bx_687
	branch si_1020 > 0x0000 l0800_19DD
l0800_19F7:
	branch (bLoc2B_1062 & 0x01) != 0x00 l0800_1A00
l0800_19FD:
l0800_1A00:
l0800_17EF:
	wLoc24_1061 = ax_59 - 0x0030
	wLoc24_1526 = wLoc24_1061
	branch wLoc24_1526 < 0x0000 l0800_1794
l0800_17F9:
	dx = SLICE(wLoc24_1526 *u 0x000A, word16, 16) (alias)
	wLoc24_1061 = ax_59 - 0x0030 + SLICE(wLoc24_1526 *u 0x000A, word16, 0)
l0800_17E9:
	bLoc2B_1062 = bLoc2B_1062 | 0x01
l0800_17E3:
l0800_17E6:
l0800_17E6_thunk_fn0800_1AEB:
	word16 bp_760 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx
	bpOut = bp_760
	return dx
l0800_17AB:
l0800_17AB_thunk_fn0800_1AEB:
	word16 bp_772 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx_73
	bpOut = bp_772
	return dx
l0800_172F:
	word16 v17_793 = wLoc28_1058 + 0x0001
	word16 sp_808
	word16 ax_809
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: ax:di_786,bx:bx_811,cx:cx_815,dx:dx_812,Stack +0002:wArg06,Stack +0006:wArg02,Stack +0008:wArg04,Stack +000A:wArg06,Stack +000C:wArg08_1489,Stack +FFFFFFDA:v17_793,Stack +FFFFFFDC:v17_793,Stack +FFFFFFDE:wLoc26
		defs: ax:ax_809,bx:bx_811,dx:dx_812,sp:sp_808
	word16 ax_784 = (int16) al_32
	wLoc28_1058 = v17_793
	word16 cx_815 = Mem800[ss:sp_808:word16]
	word16 sp_816 = sp_808 + 2
	word16 ax_817 = ax_809
	branch ax_809 < 0x0000 l0800_1764
l0800_173F:
	di = ax_784
	branch ax_784 < 0x0000 l0800_1775
l0800_1743:
	branch Mem800[ds:ax_784 + 0x055A:byte] != 0x01 l0800_1775
l0800_1775:
	bx = bx_1327
	dx = dx_1417
	branch ax_809 == ax_784 l0800_1726
l0800_1779:
	Mem838[ss:sp_808:word16] = wArg06
	Mem840[ss:sp_808 - 2:word16] = ax_809
	word16 bx_847
	word16 dx_848
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: bx:bx_847,cx:wArg06,dx:dx_848,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1489,Stack +FFFFFFDC:wLoc26
		defs: bx:bx_847,dx:dx_848
l0800_1785_thunk_fn0800_1AEB:
	word16 bp_860 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx_847
	bpOut = bp_860
	return dx_848
l0800_174A:
	branch SLICE(ax_817, byte, 0) < 0x00 l0800_1767
l0800_174F:
	branch Mem883[ds:ax_817 + 0x055A:byte] != 0x01 l0800_1767
l0800_1767:
	word16 sp_894 = sp_816 - 2
	Mem895[ss:sp_894:word16] = wArg06
	Mem898[ss:sp_894 - 2:word16] = ax_817
	word16 sp_907
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: bx:bx_910,cx:cx_916,dx:dx_911,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1489,Stack +FFFFFFDC:wLoc26
		defs: bx:bx_910,dx:dx_911,sp:sp_907
	word16 cx_916 = Mem898[ss:sp_907 + 2:word16]
	wLoc28_1058 = wLoc28_1058 - 0x0001
	bx = bx_910
	dx = dx_911
l0800_1756:
	Mem926[ss:sp_816 - 2:word16] = wArg06
	word16 v25_921 = wLoc28_1058 + 0x0001
	word16 sp_927
	word16 ax_928
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: bx:bx_930,cx:cx_934,dx:dx_931,Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_1489,Stack +FFFFFFDA:v25_921,Stack +FFFFFFDC:wLoc26
		defs: ax:ax_928,bx:bx_930,dx:dx_931,sp:sp_927
	wLoc28_1058 = v25_921
	word16 cx_934 = Mem926[ss:sp_927:word16]
	sp_816 = sp_927 + 2
	ax_817 = ax_928
	branch ax_928 > 0x0000 l0800_174A
l0800_1764:
l0800_1764_thunk_fn0800_1AEB:
	word16 bp_943 = fn0800_1AEB(SEQ(ss, fp - 2))
	bxOut = bx_1327
	bpOut = bp_943
	return dx_1417
fn0800_16F3_exit:


word16 fn0800_1708(word32 ss_bp, selector ds, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: di es
// Trashed: SCZO di es Top
// Preserved: sp
fn0800_1708_entry:
l0800_1708:
	word16 di_7 = Mem0[ss_bp + 0x000C:word16]
	branch (Mem0[ss_bp - 0x0029:byte] & 0x20) == 0x00 l0800_1718
l0800_1718:
	word16 di_12 = Mem0[ds:di_7:word16]
	Mem18[ss_bp + 0x000C:word16] = Mem14[ss_bp + 0x000C:word16] + 0x0002
	esOut = ds
	return di_12
l0800_1711:
	ptr32 es_di_20 = Mem0[ds:di_7:segptr32]
	Mem22[ss_bp + 0x000C:word16] = Mem0[ss_bp + 0x000C:word16] + 0x0004
	esOut = SLICE(es_di_20, selector, 16)
	return SLICE(es_di_20, word16, 0)
fn0800_1708_exit:


word16 fn0800_1898(word32 ss_bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: bp bx
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_1898_entry:
l0800_1898:
l0800_1898_thunk_fn0800_1B06:
	word16 bp_12
	word16 bx_9 = fn0800_1B06(ss_bp, ds, out bp_12)
	bpOut = bp_12
	return bx_9
fn0800_1898_exit:


void fn0800_18AF(word32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_18AF_entry:
l0800_18AF:
l0800_18AF_thunk_fn0800_1B2C:
	fn0800_1B2C(ss_bp)
	return
fn0800_18AF_exit:


void fn0800_18CF(word32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_18CF_entry:
l0800_18CF:
l0800_18CF_thunk_fn0800_1B2C:
	fn0800_1B2C(ss_bp)
	return
fn0800_18CF_exit:


word16 fn0800_196F(word32 ss_bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: bp bx
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_196F_entry:
l0800_196F:
l0800_196F_thunk_fn0800_1B06:
	word16 bp_12
	word16 bx_9 = fn0800_1B06(ss_bp, ds, out bp_12)
	bpOut = bp_12
	return bx_9
fn0800_196F_exit:


word16 fn0800_1AEB(word32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: bp
// Trashed: SCZO ax bp cx di es si Top
// Preserved: sp
fn0800_1AEB_entry:
l0800_1AEB:
	call SEQ(0x0800, Mem12[ss_bp + 0x0006:word16]) (retsize: 2;)
		uses: ax:0xFFFF,Stack +0002:0xFFFF,Stack +0004:Mem0[ss_bp + 0x0008:word16]
	Mem25[ss_bp - 0x0028:word16] = Mem12[ss_bp - 0x0028:word16] - (Mem12[ss_bp - 0x0028:word16] <u 0x0001)
l0800_1AFB_thunk_fn0800_1AFF:
	return fn0800_1AFF(ss_bp)
fn0800_1AEB_exit:


word16 fn0800_1AFF(word32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut: bp
// Trashed: ax bp di es si sp Top
// Preserved:
fn0800_1AFF_entry:
l0800_1AFF:
l0800_1B8C:
	return Mem0[ss_bp:word16]
fn0800_1AFF_exit:


word16 fn0800_1B06(word32 ss_bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Sequence ss:bp:[0..31]
// LiveOut: bp bx
// Trashed: SCZO ax bp bx cx di es si Top
// Preserved: sp
fn0800_1B06_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 bp = SLICE(ss_bp, word16, 0)
	word16 sp_11 = fp
l0800_1B06:
	Mem8[ss_bp - 0x0026:word16] = Mem6[ss_bp - 0x0026:word16] + 0x0001
	Mem13[ss:sp_11 - 2:word16] = Mem8[ss_bp + 0x0008:word16]
	word16 ax_18
	word16 bx_19
	call SEQ(0x0800, Mem13[ss_bp + 0x0004:word16]) (retsize: 2;)
		defs: ax:ax_18,bx:bx_19
	sp_11 = fp - 2
	byte al_41 = SLICE(ax_18, byte, 0)
	branch ax_18 <= 0x0000 l0800_1B27
l0800_1B27:
	branch ax_18 == 0x0000 l0800_1B21
l0800_1B29:
l0800_1B2A_thunk_fn0800_1AEB:
	bpOut = fn0800_1AEB(ss_bp)
	return bx_19
l0800_1B14:
	branch al_41 < 0x00 l0800_1B21
l0800_1B18:
	branch Mem13[ds:ax_18 + 0x055A:byte] == 0x01 l0800_1B06
l0800_1B21:
	word16 bx_69
	call wLoc02 + 0x0003 (retsize: 2;)
		uses: cx:wLoc02 + 0x0003
		defs: bx:bx_69
	bpOut = bp
	return bx_69
fn0800_1B06_exit:


void fn0800_1B2C(word32 ss_bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence ss:bp:[0..31]
// LiveOut:
// Trashed: SCZO ax bp cx di dx es si Top
// Preserved: sp
fn0800_1B2C_entry:
	selector ss = SLICE(ss_bp, selector, 16)
	word16 sp_16 = fp
l0800_1B2C:
	word16 dx_124 = 0x0000
	word16 cx_127 = 0x0004
l0800_1B31:
	word16 v8_10 = Mem9[ss_bp - 0x0022:word16] - 0x0001
	Mem11[ss_bp - 0x0022:word16] = v8_10
	byte cl_45 = SLICE(cx_127, byte, 0)
	branch v8_10 < 0x0000 l0800_1B7B
l0800_1B7B:
l0800_1B36:
	word16 sp_17 = sp_16 - 2
	Mem19[ss:sp_17:word16] = dx_124
	Mem22[ss:sp_17 - 2:word16] = cx_127
	Mem24[ss_bp - 0x0026:word16] = Mem22[ss_bp - 0x0026:word16] + 0x0001
	Mem28[ss:sp_17 - 4:word16] = Mem24[ss_bp + 0x0008:word16]
	word16 sp_30
	word16 ax_33
	call SEQ(0x0800, Mem28[ss_bp + 0x0004:word16]) (retsize: 2;)
		defs: ax:ax_33,sp:sp_30
	cl_45 = Mem28[ss:sp_30 + 0x0002:byte] (alias)
	word16 dx_40 = Mem28[ss:sp_30 + 4:word16]
	sp_16 = sp_30 + 6
	byte al_49 = SLICE(ax_33, byte, 0)
	branch ax_33 <= 0x0000 l0800_1B7D
l0800_1B48:
	cl_45 = cl_45 - 0x01
	branch cl_45 < 0x01 l0800_1B7D
l0800_1B4C:
	byte ch_100 = al_49 - 0x30
	branch al_49 <u 0x30 l0800_1B7D
l0800_1B53:
	branch al_49 <u 0x3A l0800_1B6F
l0800_1B58:
	byte ch_56 = al_49 - 0x41
	branch al_49 <u 0x41 l0800_1B7D
l0800_1B5D:
	branch al_49 <u 0x47 l0800_1B6C
l0800_1B62:
	ch_56 = al_49 - 0x61
	branch al_49 <u 0x61 l0800_1B7D
l0800_1B67:
	branch al_49 >=u 0x67 l0800_1B7D
l0800_1B7D:
	branch cl_45 == 0x04 l0800_1B88
l0800_1B88:
l0800_1B89_thunk_fn0800_1AEB:
	fn0800_1AEB(ss_bp)
	return
l0800_1B82:
	call wLoc02 + 0x0003 (retsize: 2;)
		uses: cx:wLoc02 + 0x0003
	return
fn0800_1B2C_exit:
l0800_1B6C:
	ch_100 = ch_56 + 0x0A
l0800_1B6F:
	dx_124 = SEQ(SLICE(dx_40 << 0x0004, byte, 8), SLICE(dx_40 << 0x0004, byte, 0) + ch_100) (alias)
	cx_127 = SEQ(ch_100, cl_45 - 0x01) (alias)


void __scantod(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_1B92_entry:
l0800_1B92:
	call Mem0[ds:0x05E2:word16] (retsize: 2;)
	return
fn0800_1B92_exit:


void __scanrslt(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_1B96_entry:
l0800_1B96:
	call Mem0[ds:0x05E4:word16] (retsize: 2;)
	return
fn0800_1B96_exit:


void __scanpop(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15]
// LiveOut:
// Trashed: Top
// Preserved: sp
fn0800_1B9A_entry:
l0800_1B9A:
	call Mem0[ds:0x05E6:word16] (retsize: 2;)
	return
fn0800_1B9A_exit:


bool fn0800_1B9E(byte cl, byte bl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx:[0..7] cl:[0..7]
// LiveOut: C
// Trashed: SCZO Top
// Preserved: bx sp
fn0800_1B9E_entry:
	byte bl_8 = SLICE(bx, byte, 0)
l0800_1B9E:
	bool C_40
	byte bl_16 = bl_8 - 0x30
	branch bl_8 <u 0x30 l0800_1BC7
l0800_1BA4:
	branch bl_8 <=u 0x39 l0800_1BBB
l0800_1BA9:
	branch bl_8 >u 0x5A l0800_1BB3
l0800_1BB3:
	bl_16 = bl_8 - 0x57
l0800_1BAE:
	bl_16 = bl_8 - 0x37
l0800_1BB6:
	branch bl_16 <=u 0x09 l0800_1BC7
l0800_1BBB:
	branch bl_16 >=u cl l0800_1BC7
l0800_1BC7:
	C_40 = true
l0800_1BBF:
	C_40 = false
l0800_1BC5:
l0800_1BCB:
	return C_40
fn0800_1B9E_exit:


word16 __scantol(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] ss:[0..15] Stack +0002:[0..15] Stack +0004:[0..15] Stack +0006:[0..15] Stack +0008:[0..15] Stack +000A:[0..15] Stack +000C:[0..15] Stack +000E:[0..15]
// LiveOut: ax bx di dx es
// Trashed: SCZO ax bx cx di dx es si Top
// Preserved: bp ds sp ss
fn0800_1BCC_entry:
l0800_1BCC:
	byte bLoc07_541 = 0x00
	word16 wLoc06_542 = 0x0000
	word16 sp_115 = fp - 0x000E
l0800_1BE6:
	word16 dx_388
	word16 wLoc04_565
	word16 ax_478
	Mem33[ss:sp_115 - 2:word16] = wArg06
	word16 v9_27 = wLoc06_542 + 0x0001
	word16 sp_38
	word16 ax_40
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFFC:v9_27
		defs: ax:ax_40,sp:sp_38
	wLoc06_542 = v9_27
	sp_115 = sp_38 + 2
	word16 ax_116 = ax_40
	byte al_51 = SLICE(ax_40, byte, 0)
	branch ax_40 < 0x0000 l0800_1C5A
l0800_1BF4:
	word16 ax_109 = (int16) al_51
	branch (SLICE(ax_109, byte, 0) & 0x80) != 0x00 l0800_1C00
l0800_1BFB:
	branch (Mem33[ds:ax_109 + 0x0241:byte] & 0x01) != 0x00 l0800_1BE6
l0800_1C00:
	ax_116 = ax_109
	byte al_76 = SLICE(ax_109, byte, 0)
	wArg0A = wArg0A - 0x0001
	branch wArg0A < 0x0001 l0800_1C61
l0800_1C06:
	branch al_76 == 0x2B l0800_1C11
l0800_1C0A:
	branch al_76 != 0x2D l0800_1C24
l0800_1C0E:
	bLoc07_541 = 0x01
l0800_1C11:
	ax_116 = ax_109
	wArg0A = wArg0A - 0x0002
	branch wArg0A < 0x0002 l0800_1C61
l0800_1C16:
	Mem98[ss:sp_38:word16] = wArg06
	word16 sp_107
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:wArg0A - 0x0002,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFFC:v9_27 + 0x0001
		defs: ax:ax_109,sp:sp_107
	wLoc06_542 = v9_27 + 0x0001
	sp_115 = sp_107 + 2
	ax_116 = ax_109
	branch ax_109 < 0x0000 l0800_1C5A
l0800_1C5A:
	wLoc04_565 = 0xFFFF
l0800_1C24:
	ui32 di_ax_760
	byte al_130 = SLICE(ax_109, byte, 0)
	word16 si_123 = 0x0000
	word16 di_125 = 0x0000
	byte cl_168 = SLICE(wArg08, byte, 0)
	branch wArg08 == 0x0000 l0800_1C7B
l0800_1C7B:
	wArg08 = 0x000A
	branch al_130 != 0x30 l0800_1CA7
l0800_1C84:
	word16 v62_135 = wArg0A - 0x0001
	wArg0A = v62_135
	branch v62_135 < 0x0000 l0800_1C78
l0800_1C89:
	Mem145[ss:sp_115 - 2:word16] = wArg06
	word16 v63_139 = wLoc06_542 + 0x0001
	word16 sp_148
	word16 ax_150
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:0x000A,Stack +000C:v62_135,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFFC:v63_139
		defs: ax:ax_150,sp:sp_148
	wLoc06_542 = v63_139
	byte al_158 = SLICE(ax_150, byte, 0)
	sp_115 = sp_148 + 2
	wArg08 = 0x0008
	branch al_158 == 0x78 l0800_1CA0
l0800_1C9C:
	di_ax_760 = (uint32) (uint16) ax_150 (alias)
	branch al_158 != 0x58 l0800_1CCD
l0800_1CA0:
	wArg08 = 0x0010
l0800_1C2D:
	ax_116 = ax_109 (alias)
	branch wArg08 >u 0x0024 l0800_1C61
l0800_1C32:
	ax_116 = ax_109 (alias)
	branch cl_168 <u 0x02 l0800_1C61
l0800_1C37:
	branch al_130 != 0x30 l0800_1CA7
l0800_1CA7:
	ax_116 = ax_109
	branch fn0800_1B9E(SLICE(wArg08, byte, 0), ax_109) l0800_1C61
l0800_1C61:
	wLoc04_565 = 0x0000
l0800_1C66:
	word16 sp_207 = sp_115 - 2
	Mem208[ss:sp_207:word16] = wArg06
	Mem218[ss:sp_207 - 2:word16] = ax_116
	word16 sp_235
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_599,Stack +000C:wArg0A_595,Stack +000E:wArg0C,Stack +0010:wArg0E
		defs: sp:sp_235
	sp_115 = sp_235 + 4
	wLoc06_542 = wLoc06_542 - 0x0001
	ax_478 = 0x0000 (alias)
	dx_388 = 0x0000 (alias)
l0800_1CB1:
	si_123 = ax_109
l0800_1C3B:
	branch cl_168 != 0x10 l0800_1CA5
l0800_1C40:
	word16 v30_256 = wArg0A - 0x0001
	wArg0A = v30_256
	branch v30_256 < 0x0000 l0800_1C78
l0800_1C78:
l0800_1C45:
	Mem265[ss:sp_115 - 2:word16] = wArg06
	word16 v31_260 = wLoc06_542 + 0x0001
	word16 sp_266
	word16 ax_268
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08,Stack +000C:v30_256,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFFC:v31_260
		defs: ax:ax_268,sp:sp_266
	wLoc06_542 = v31_260
	byte al_275 = SLICE(ax_268, byte, 0)
	sp_115 = sp_266 + 2
	branch al_275 == 0x78 l0800_1CA5
l0800_1C53:
	branch al_275 == 0x58 l0800_1CA5
l0800_1CA5:
l0800_1C57:
	di_ax_760 = (uint32) (uint16) ax_268 (alias)
l0800_1CCD:
	word16 ax_284 = SLICE(di_ax_760, word16, 0)
	di_125 = SLICE(di_ax_760, word16, 16) (alias)
	word16 ax_295 = ax_284
	branch fn0800_1B9E(SLICE(wArg08, byte, 0), ax_284) l0800_1CB4
l0800_1CB4:
	ui32 di_si_534 = di_ax_760 + wArg08 *u si_123
	si_123 = SLICE(di_si_534, word16, 0) (alias)
	di_125 = SLICE(di_si_534, word16, 16) (alias)
	branch di_125 != 0x0000 l0800_1CEA
l0800_1CEA:
	word16 v47_314 = wArg0A - 0x0001
	wArg0A = v47_314
	branch v47_314 < 0x0000 l0800_1D0F
l0800_1CEF:
	Mem324[ss:sp_115 - 2:word16] = wArg06
	word16 v48_318 = wLoc06_542 + 0x0001
	word16 sp_329
	word16 ax_331
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_609,Stack +000C:v47_314,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFFC:v48_318
		defs: ax:ax_331,sp:sp_329
	wLoc06_542 = v48_318
	sp_115 = sp_329 + 2
	ax_295 = ax_331
	branch fn0800_1B9E(SLICE(wArg08, byte, 0), ax_331) l0800_1CD9
l0800_1CD9:
	int32 dx_ax_362 = wArg08 *u di_125
	ui32 ax_si_537 = SEQ(SLICE(dx_ax_362, word16, 0), ax_331) + wArg08 *u si_123
	word16 ax_367 = SLICE(ax_si_537, word16, 16)
	si_123 = SLICE(ax_si_537, word16, 0) (alias)
	di_125 = ax_367
	branch SLICE(dx_ax_362, byte, 16) + SLICE(dx_ax_362, byte, 24) + (ax_367 <u 0x0000) != 0x00 l0800_1D32
l0800_1D32:
	byte al_381 = bLoc07_541 + 0xFF
	bool C_384 = SLICE(cond(al_381), bool, 1)
	dx_388 = SLICE(cond(C_384 + 0xFF), bool, 1) + 0x7FFF
	wLoc04_565 = 0x0002
	ax_478 = SEQ(C_384 + 0xFF, al_381) (alias)
l0800_1CBE:
	word16 v39_397 = wArg0A - 0x0001
	wArg0A = v39_397
	branch v39_397 < 0x0000 l0800_1D0F
l0800_1CC3:
	Mem410[ss:sp_115 - 2:word16] = wArg06
	word16 v40_401 = wLoc06_542 + 0x0001
	word16 sp_425
	word16 ax_427
	call SEQ(0x0800, wArg02) (retsize: 2;)
		uses: Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_640,Stack +000C:v39_397,Stack +000E:wArg0C,Stack +0010:wArg0E,Stack +FFFFFFFC:v40_401
		defs: ax:ax_427,sp:sp_425
	wLoc06_542 = v40_401
	sp_115 = sp_425 + 2
	di_ax_760 = SEQ(di_125, ax_427) (alias)
l0800_1CD7:
l0800_1D03:
	word16 sp_439 = sp_115 - 2
	Mem440[ss:sp_439:word16] = wArg06
	Mem443[ss:sp_439 - 2:word16] = ax_295
	word16 sp_448
	call SEQ(0x0800, wArg04) (retsize: 2;)
		uses: Stack +0004:wArg02,Stack +0006:wArg04,Stack +0008:wArg06,Stack +000A:wArg08_609,Stack +000C:wArg0A_648,Stack +000E:wArg0C,Stack +0010:wArg0E
		defs: sp:sp_448
	sp_115 = sp_448 + 4
	wLoc06_542 = wLoc06_542 - 0x0001
l0800_1D0F:
	wLoc04_565 = 0x0001
	dx_388 = di_125
	ax_478 = si_123
	branch bLoc07_541 == 0x00 l0800_1D1F
l0800_1D18:
	ax_478 = -si_123
	dx_388 = -di_125 - (ax_478 == 0x0000)
l0800_1D1F:
	Mem515[ds:wArg0C:word16] = Mem495[ds:wArg0C:word16] + wLoc06_542
	Mem519[ds:wArg0E:word16] = wLoc04_565
	selector es_523 = Mem519[ss:sp_115:selector]
	word16 sp_524 = sp_115 + 2
l0800_1D48:
	word16 di_525 = Mem519[ss:sp_524:word16]
	dxOut = dx_388
	bxOut = wLoc04_565
	diOut = di_525
	esOut = es_523
	return ax_478
fn0800_1BCC_exit:


void _tell(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: SCZO ax bx cx dx Top
// Preserved: bp sp
fn0800_1D4E_entry:
l0800_1D4E:
	word16 dx_42
	_lseek(ds, wArg02, 0x00000000, 0x01, out dx_42)
l0800_1D63:
	return
fn0800_1D4E_exit:


