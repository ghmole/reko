version: 0.9.4.{build}

init: 
  - git config --global core.autocrlf true 
 # The commented out line below displays RDP details for debugging on an AppVeyor VM
 # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

image: Visual Studio 2019
platform: x64

configuration: Release

# If you want more build spew, change the verbosity below
build:
  project: src/Reko-decompiler.sln
  verbosity: minimal

environment:
  artifacts_dir: bin

build_script:
  - cmd: dotnet msbuild -p:Platform=%PLATFORM% -p:Configuration=%CONFIGURATION% -v:m -t:build_solution -m ./src/BuildTargets/BuildTargets.csproj

after_build:
  - cmd: dotnet msbuild -p:Platform=%PLATFORM% -p:Configuration=%CONFIGURATION% -v:m -t:create_runtime_nupkg -m ./src/BuildTargets/BuildTargets.csproj
  - cmd: dotnet msbuild -p:Platform=%PLATFORM% -p:Configuration=%CONFIGURATION% -v:m -t:create_msi_wix -m ./src/BuildTargets/BuildTargets.csproj
  - cmd: dotnet msbuild -p:Platform=%PLATFORM% -p:Configuration=%CONFIGURATION% -v:m -t:create_release -m ./src/BuildTargets/BuildTargets.csproj

test_script:
  - cmd: dotnet msbuild -p:Platform=%PLATFORM% -p:Configuration=%CONFIGURATION% -v:m -t:run_unit_tests -m ./src/BuildTargets/BuildTargets.csproj
  - cmd: dotnet msbuild -p:Platform=%PLATFORM% -p:Configuration=%CONFIGURATION% -v:m -t:run_regressions -m ./src/BuildTargets/BuildTargets.csproj

artifacts:
  - path: bin/*.msi
    name: Reko installer
  - path: bin/WindowsDecompiler-*.zip
    name: Reko WinForms driver
  - path: bin/CmdLine-*.zip
    name: Reko CmdLine driver
  - path: bin/*.nupkg
    name: Reko Runtime (nuget package)

#on_finish:
# The commented out line below displays will keep the AppVeyor VM alive long enough for a RDP diagnostic
# session
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
